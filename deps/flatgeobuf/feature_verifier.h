#ifndef FEATURE_VERIFIER_H
#define FEATURE_VERIFIER_H

/* Generated by flatcc 0.6.1-dev FlatBuffers schema compiler for C by dvide.com */

#ifndef FEATURE_READER_H
#include "feature_reader.h"
#endif
#include "flatcc/flatcc_verifier.h"
#ifndef HEADER_VERIFIER_H
#include "header_verifier.h"
#endif
#include "flatcc/flatcc_prologue.h"

static int FlatGeobuf_Geometry_verify_table(flatcc_table_verifier_descriptor_t *td);
static int FlatGeobuf_Feature_verify_table(flatcc_table_verifier_descriptor_t *td);

static int FlatGeobuf_Geometry_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_vector_field(td, 0, 0, 4, 4, INT64_C(1073741823)) /* ends */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 1, 0, 8, 8, INT64_C(536870911)) /* xy */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 2, 0, 8, 8, INT64_C(536870911)) /* z */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 3, 0, 8, 8, INT64_C(536870911)) /* m */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 4, 0, 8, 8, INT64_C(536870911)) /* t */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 5, 0, 8, 8, INT64_C(536870911)) /* tm */)) return ret;
    if ((ret = flatcc_verify_field(td, 6, 1, 1) /* type */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 7, 0, &FlatGeobuf_Geometry_verify_table) /* parts */)) return ret;
    return flatcc_verify_ok;
}

static inline int FlatGeobuf_Geometry_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, FlatGeobuf_Geometry_identifier, &FlatGeobuf_Geometry_verify_table);
}

static inline int FlatGeobuf_Geometry_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, FlatGeobuf_Geometry_type_identifier, &FlatGeobuf_Geometry_verify_table);
}

static inline int FlatGeobuf_Geometry_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &FlatGeobuf_Geometry_verify_table);
}

static inline int FlatGeobuf_Geometry_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &FlatGeobuf_Geometry_verify_table);
}

static int FlatGeobuf_Feature_verify_table(flatcc_table_verifier_descriptor_t *td)
{
    int ret;
    if ((ret = flatcc_verify_table_field(td, 0, 0, &FlatGeobuf_Geometry_verify_table) /* geometry */)) return ret;
    if ((ret = flatcc_verify_vector_field(td, 1, 0, 1, 1, INT64_C(4294967295)) /* properties */)) return ret;
    if ((ret = flatcc_verify_table_vector_field(td, 2, 0, &FlatGeobuf_Column_verify_table) /* columns */)) return ret;
    return flatcc_verify_ok;
}

static inline int FlatGeobuf_Feature_verify_as_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, FlatGeobuf_Feature_identifier, &FlatGeobuf_Feature_verify_table);
}

static inline int FlatGeobuf_Feature_verify_as_typed_root(const void *buf, size_t bufsiz)
{
    return flatcc_verify_table_as_root(buf, bufsiz, FlatGeobuf_Feature_type_identifier, &FlatGeobuf_Feature_verify_table);
}

static inline int FlatGeobuf_Feature_verify_as_root_with_identifier(const void *buf, size_t bufsiz, const char *fid)
{
    return flatcc_verify_table_as_root(buf, bufsiz, fid, &FlatGeobuf_Feature_verify_table);
}

static inline int FlatGeobuf_Feature_verify_as_root_with_type_hash(const void *buf, size_t bufsiz, flatbuffers_thash_t thash)
{
    return flatcc_verify_table_as_typed_root(buf, bufsiz, thash, &FlatGeobuf_Feature_verify_table);
}

#include "flatcc/flatcc_epilogue.h"
#endif /* FEATURE_VERIFIER_H */
