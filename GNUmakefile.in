#-----------------------------------------------------
#
# Configuration directives are in postgis_config.h
#
#-----------------------------------------------------

SUBDIRS = liblwgeom
ifeq (@LIBLWGEOM_ONLY@,no)
SUBDIRS += libpgcommon postgis regress @RASTER@ @TOPOLOGY@ @SFCGAL@ loader utils doc @EXTENSIONS@ @DEPS_SUBDIR@
endif

HAVE_SFCGAL=@HAVE_SFCGAL@

POSTGIS_MAJOR_VERSION=@POSTGIS_MAJOR_VERSION@
POSTGIS_MINOR_VERSION=@POSTGIS_MINOR_VERSION@
POSTGIS_MICRO_VERSION=@POSTGIS_MICRO_VERSION@

PERL = @PERL@

# todo: add more rules here, like uninstall, clean...
all install uninstall noop clean distclean check-unit:
	for s in $(SUBDIRS); do \
		echo "---- Making $@ in $${s}"; \
		$(MAKE) -C $${s} $@ || exit 1; \
	done;
	@if test x"$@" = xall; then \
		echo "PostGIS was built successfully. Ready to install."; \
	fi

all: postgis_revision.h

ifeq (@LIBLWGEOM_ONLY@,no)
install: all comments-install
uninstall: docs-uninstall comments-uninstall
endif

clean: docs-clean clean-local

clean-local:

# TODO: drop 'test' target..
test: check

check: check-no-trailing-blanks check-unit check-regress docs-check check-news

staged-install: all
	$(MAKE) -C regress staged-install

check-news:
	utils/check_news.sh

check-unit check-regress docs-check: all

check-no-trailing-blanks:
	! find . -name '*.c' -o -name '*.h' -o -name '*.proto' | \
		grep -v lwin_wkt_lex.c | \
		grep -v lwin_wkt_parse | \
		grep -v lookup3 | \
		grep -v vector_tile.pb-c | \
		grep -v postgis/sqldefines.h | \
		grep -v deps/ | \
		xargs grep -n '[[:space:]]$$'

installcheck: installcheck-base installcheck-upgrade

installcheck-base:
	RUNTESTFLAGS="$(RUNTESTFLAGS) --extension" $(MAKE) check-regress

# only run upgrade test if RUNTESTFLAGS was not already doing that
installcheck-upgrade: installcheck-upgrade-byfunc
	if test -z `echo "$(RUNTESTFLAGS)" | grep -- --upgrade`; then \
		RUNTESTFLAGS="$(RUNTESTFLAGS) --extension \
			--upgrade-path unpackaged--$(POSTGIS_MAJOR_VERSION).$(POSTGIS_MINOR_VERSION).$(POSTGIS_MICRO_VERSION)" \
			$(MAKE) check-regress; \
	fi

# only run upgrade test if RUNTESTFLAGS was not already doing that
installcheck-upgrade-byfunc:
	if test -z `echo "$(RUNTESTFLAGS)" | grep -- --upgrade`; then \
		RUNTESTFLAGS="$(RUNTESTFLAGS) --extension \
			--upgrade-path unpackaged--$(POSTGIS_MAJOR_VERSION).$(POSTGIS_MINOR_VERSION).$(POSTGIS_MICRO_VERSION)!" \
			$(MAKE) check-regress; \
	fi

distclean: distclean-local

distclean-local: clean-local
	rm -Rf autom4te.cache
	rm -f GNUmakefile
	rm -f config.log config.cache config.status
	rm -f postgis_config.h

maintainer-clean-local: distclean-local
	rm -f configure
	rm -Rf build-aux

maintainer-clean:
	@echo '------------------------------------------------------'
	@echo 'This command is intended for maintainers to use; it'
	@echo 'deletes files that may need special tools to rebuild.'
	@echo '------------------------------------------------------'
	$(MAKE) -C doc maintainer-clean
	$(MAKE) -C postgis maintainer-clean
	$(MAKE) -C liblwgeom maintainer-clean
	$(MAKE) maintainer-clean-local

garden:
	@echo '------------------------------------------------------'
	@echo 'Generating SQL file from Documentation'
	@echo '------------------------------------------------------'
	$(MAKE) -C doc garden
	@echo '------------------------------------------------------'
	@echo 'Launch regression Test'
	@echo '------------------------------------------------------'
	$(MAKE) -C regress garden

templategis:
	$(MAKE) -C extras/template_gis

templategis-clean:
	$(MAKE) -C extras/template_gis clean

templategis-install:
	$(MAKE) -C extras/template_gis install

templategis-uninstall:
	$(MAKE) -C extras/template_gis uninstall

docs:
	$(MAKE) -C doc html

docs-clean:
	$(MAKE) -C doc clean

docs-check:
	$(MAKE) -C doc check

comments:
	$(MAKE) -C doc comments

cheatsheets:
	$(MAKE) -C doc cheatsheets

comments-install:
	$(MAKE) -C doc comments-install

comments-uninstall:
	$(MAKE) -C doc comments-uninstall

docs-install:
	$(MAKE) -C doc install

docs-uninstall:
	$(MAKE) -C doc uninstall

#utils:
#	$(MAKE) -C utils

configure: configure.in
	./autogen.sh

config.status: configure
	./configure

ChangeLog:
	git log --pretty --numstat --summary | git2cl > ChangeLog

raster-post-install-check:
	$(MAKE) -C raster post-install-check

raster-sql:
	$(MAKE) -C raster rtpostgis.sql

.PHONY: fmt
fmt:
	./astyle.sh

commit:
	$(MAKE) fmt && $(MAKE) clean && $(MAKE) check && svn commit


ifeq (@PHONY_REVISION@,yes)
.PHONY: postgis_revision.h
endif

postgis_revision.h:
	$(PERL) utils/repo_revision.pl

.PHONY: utils liblwgeom ChangeLog raster

topsrcdir = $(realpath ./)
include regress/core/tests.mk
include regress/loader/tests.mk
include regress/dumper/tests.mk
ifeq ($(HAVE_SFCGAL),yes)
	override RUNTESTFLAGS := $(RUNTESTFLAGS) --sfcgal
	include sfcgal/regress/tests.mk
endif
ifeq (@TOPOLOGY@,topology)
	include topology/test/tests.mk
endif
ifeq (@RASTER@,raster)
	include raster/test/regress/tests.mk
endif

include regress/runtest.mk

check-regress: staged-install check-regress-deps

check-tests-enabled:
	utils/check_tests_enabled.sh

check-regress-deps:
ifeq (@TOPOLOGY@,topology)
	$(MAKE) -C topology/test $@
endif

