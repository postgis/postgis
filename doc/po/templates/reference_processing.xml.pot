# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://bugs.kde.org\n"
"POT-Creation-Date: 2020-12-19 17:06+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <kde-i18n-doc@kde.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: para
#: reference_processing.xml:5
#, no-c-format
msgid ""
"These functions compute geometric constructions, or alter geometry size or "
"shape."
msgstr ""

#. Tag: title
#: reference_processing.xml:11
#, no-c-format
msgid "Geometry Processing"
msgstr ""

#. Tag: refname
#: reference_processing.xml:15
#, no-c-format
msgid "ST_Buffer"
msgstr ""

#. Tag: refpurpose
#: reference_processing.xml:17
#, no-c-format
msgid ""
"Returns a geometry covering all points within a given distance from a "
"geometry."
msgstr ""

#. Tag: funcsynopsis
#: reference_processing.xml:23
#, no-c-format
msgid ""
"<funcprototype> <funcdef>geometry <function>ST_Buffer</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>float </type> <parameter>radius_of_buffer</parameter></"
"paramdef> <paramdef choice=\"opt\"><type>text </type> "
"<parameter>buffer_style_parameters = ''</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>geometry <function>ST_Buffer</"
"function></funcdef> <paramdef><type>geometry </type> <parameter>g1</"
"parameter></paramdef> <paramdef><type>float </type> "
"<parameter>radius_of_buffer</parameter></paramdef> <paramdef><type>integer </"
"type> <parameter>num_seg_quarter_circle</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>geography <function>ST_Buffer</"
"function></funcdef> <paramdef><type>geography </type> <parameter>g1</"
"parameter></paramdef> <paramdef><type>float </type> "
"<parameter>radius_of_buffer</parameter></paramdef> <paramdef choice=\"opt"
"\"><type>text </type> <parameter>buffer_style_parameters</parameter></"
"paramdef> </funcprototype> <funcprototype> <funcdef>geography "
"<function>ST_Buffer</function></funcdef> <paramdef><type>geography </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>float </type> "
"<parameter>radius_of_buffer</parameter></paramdef> <paramdef><type>integer </"
"type> <parameter>num_seg_quarter_circle</parameter></paramdef> </"
"funcprototype>"
msgstr ""

#. Tag: title
#: reference_processing.xml:57 reference_processing.xml:291
#: reference_processing.xml:373 reference_processing.xml:488
#: reference_processing.xml:641 reference_processing.xml:715
#: reference_processing.xml:814 reference_processing.xml:873
#: reference_processing.xml:948 reference_processing.xml:1021
#: reference_processing.xml:1082 reference_processing.xml:1136
#: reference_processing.xml:1173 reference_processing.xml:1232
#: reference_processing.xml:1389 reference_processing.xml:1436
#: reference_processing.xml:1494 reference_processing.xml:1532
#: reference_processing.xml:1608 reference_processing.xml:1658
#: reference_processing.xml:1699 reference_processing.xml:1740
#: reference_processing.xml:1787 reference_processing.xml:1855
#: reference_processing.xml:1943
#, no-c-format
msgid "Description"
msgstr ""

#. Tag: para
#: reference_processing.xml:59
#, no-c-format
msgid ""
"Returns a geometry/geography that represents all points whose distance from "
"this Geometry/geography is less than or equal to distance."
msgstr ""

#. Tag: para
#: reference_processing.xml:61
#, no-c-format
msgid ""
"Geometry: Calculations are in the Spatial Reference System of the geometry. "
"Introduced in 1.5 support for different end cap and mitre settings to "
"control shape."
msgstr ""

#. Tag: para
#: reference_processing.xml:64
#, no-c-format
msgid ""
"Negative radii: For polygons, a negative radius can be used, which will "
"shrink the polygon rather than expanding it."
msgstr ""

#. Tag: para
#: reference_processing.xml:65
#, no-c-format
msgid ""
"Geography: For geography this is really a thin wrapper around the geometry "
"implementation. It first determines the best SRID that fits the bounding box "
"of the geography object (favoring UTM, Lambert Azimuthal Equal Area (LAEA) "
"north/south pole, and falling back on mercator in worst case scenario) and "
"then buffers in that planar spatial ref and retransforms back to WGS84 "
"geography."
msgstr ""

#. Tag: para
#: reference_processing.xml:67
#, no-c-format
msgid ""
"For geography this may not behave as expected if object is sufficiently "
"large that it falls between two UTM zones or crosses the dateline"
msgstr ""

#. Tag: para
#: reference_processing.xml:69
#, no-c-format
msgid ""
"Enhanced: 2.5.0 - ST_Buffer geometry support was enhanced to allow for side "
"buffering specification <code>side=both|left|right</code>."
msgstr ""

#. Tag: para
#: reference_processing.xml:70
#, no-c-format
msgid ""
"Availability: 1.5 - ST_Buffer was enhanced to support different endcaps and "
"join types. These are useful for example to convert road linestrings into "
"polygon roads with flat or square edges instead of rounded edges. Thin "
"wrapper for geography was added."
msgstr ""

#. Tag: para
#: reference_processing.xml:73
#, no-c-format
msgid ""
"The optional third parameter (currently only applies to geometry) can either "
"specify number of segments used to approximate a quarter circle (integer "
"case, defaults to 8) or a list of blank-separated key=value pairs (string "
"case) to tweak operations as follows:"
msgstr ""

#. Tag: para
#: reference_processing.xml:77 reference_processing.xml:1259
#, no-c-format
msgid ""
"'quad_segs=#' : number of segments used to approximate a quarter circle "
"(defaults to 8)."
msgstr ""

#. Tag: para
#: reference_processing.xml:80
#, no-c-format
msgid ""
"'endcap=round|flat|square' : endcap style (defaults to \"round\"). 'butt' is "
"also accepted as a synonym for 'flat'."
msgstr ""

#. Tag: para
#: reference_processing.xml:83 reference_processing.xml:1262
#, no-c-format
msgid ""
"'join=round|mitre|bevel' : join style (defaults to \"round\"). 'miter' is "
"also accepted as a synonym for 'mitre'."
msgstr ""

#. Tag: para
#: reference_processing.xml:86
#, no-c-format
msgid ""
"'mitre_limit=#.#' : mitre ratio limit (only affects mitered join style). "
"'miter_limit' is also accepted as a synonym for 'mitre_limit'."
msgstr ""

#. Tag: para
#: reference_processing.xml:89
#, no-c-format
msgid ""
"'side=both|left|right' : 'left' or 'right' performs a single-sided buffer on "
"the geometry, with the buffered side relative to the direction of the line. "
"This is only really relevant to LINESTRING geometry and does not affect "
"POINT or POLYGON geometries. By default end caps are square."
msgstr ""

#. Tag: para
#: reference_processing.xml:95
#, no-c-format
msgid "Units of radius are measured in units of the spatial reference system."
msgstr ""

#. Tag: para
#: reference_processing.xml:96
#, no-c-format
msgid ""
"The inputs can be POINTS, MULTIPOINTS, LINESTRINGS, MULTILINESTRINGS, "
"POLYGONS, MULTIPOLYGONS, and GeometryCollections."
msgstr ""

#. Tag: para
#: reference_processing.xml:97
#, no-c-format
msgid ""
"This function ignores the third dimension (z) and will always give a 2-d "
"buffer even when presented with a 3d-geometry."
msgstr ""

#. Tag: para
#: reference_processing.xml:99 reference_processing.xml:725
#: reference_processing.xml:1092 reference_processing.xml:1250
#: reference_processing.xml:1274 reference_processing.xml:1454
#: reference_processing.xml:1537 reference_processing.xml:1667
#: reference_processing.xml:1873 reference_processing.xml:1964
#, no-c-format
msgid "Performed by the GEOS module."
msgstr ""

#. Tag: para
#: reference_processing.xml:100 reference_processing.xml:663
#, no-c-format
msgid "&sfs_compliant; s2.1.1.3"
msgstr ""

#. Tag: para
#: reference_processing.xml:101
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.17"
msgstr ""

#. Tag: para
#: reference_processing.xml:103
#, no-c-format
msgid ""
"People often make the mistake of using this function to try to do radius "
"searches. Creating a buffer to a radius search is slow and pointless. Use "
"<xref linkend=\"ST_DWithin\"/> instead."
msgstr ""

#. Tag: title
#: reference_processing.xml:108 reference_processing.xml:309
#: reference_processing.xml:401 reference_processing.xml:531
#: reference_processing.xml:669 reference_processing.xml:832
#: reference_processing.xml:887 reference_processing.xml:977
#: reference_processing.xml:1038 reference_processing.xml:1102
#: reference_processing.xml:1148 reference_processing.xml:1193
#: reference_processing.xml:1283 reference_processing.xml:1401
#: reference_processing.xml:1503 reference_processing.xml:1630
#: reference_processing.xml:1672 reference_processing.xml:1712
#: reference_processing.xml:1757 reference_processing.xml:1814
#: reference_processing.xml:1879 reference_processing.xml:1970
#, no-c-format
msgid "Examples"
msgstr ""

#. Tag: para
#: reference_processing.xml:119
#, no-c-format
msgid "quad_segs=8 (default)"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:122
#, no-c-format
msgid ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText('POINT(100 90)'),\n"
" 50, 'quad_segs=8');"
msgstr ""

#. Tag: para
#: reference_processing.xml:130
#, no-c-format
msgid "quad_segs=2 (lame)"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:133
#, no-c-format
msgid ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText('POINT(100 90)'),\n"
" 50, 'quad_segs=2');"
msgstr ""

#. Tag: para
#: reference_processing.xml:142
#, no-c-format
msgid "endcap=round join=round (default)"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:145
#, no-c-format
msgid ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'endcap=round join=round');"
msgstr ""

#. Tag: para
#: reference_processing.xml:153
#, no-c-format
msgid "endcap=square"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:156
#, no-c-format
msgid ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'endcap=square join=round');"
msgstr ""

#. Tag: para
#: reference_processing.xml:164
#, no-c-format
msgid "endcap=flat"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:167
#, no-c-format
msgid ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'endcap=flat join=round');"
msgstr ""

#. Tag: para
#: reference_processing.xml:176
#, no-c-format
msgid "join=bevel"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:179
#, no-c-format
msgid ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'join=bevel');"
msgstr ""

#. Tag: para
#: reference_processing.xml:187
#, no-c-format
msgid "join=mitre mitre_limit=5.0 (default mitre limit)"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:190
#, no-c-format
msgid ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'join=mitre mitre_limit=5.0');"
msgstr ""

#. Tag: para
#: reference_processing.xml:198
#, no-c-format
msgid "join=mitre mitre_limit=1"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:201
#, no-c-format
msgid ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'join=mitre mitre_limit=1.0');"
msgstr ""

#. Tag: para
#: reference_processing.xml:210
#, no-c-format
msgid "side=left"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:213
#, no-c-format
msgid ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'side=left');"
msgstr ""

#. Tag: para
#: reference_processing.xml:221
#, no-c-format
msgid "side=right"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:224
#, no-c-format
msgid ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'side=right');"
msgstr ""

#. Tag: para
#: reference_processing.xml:232
#, no-c-format
msgid "side=left join=mitre"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:235
#, no-c-format
msgid ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'side=left join=mitre');"
msgstr ""

#. Tag: para
#: reference_processing.xml:244
#, no-c-format
msgid "right-hand-winding, polygon boundary side=left"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:247
#, no-c-format
msgid ""
"SELECT ST_Buffer(\n"
"ST_ForceRHR(\n"
"ST_Boundary(\n"
" ST_GeomFromText(\n"
"'POLYGON ((50 50, 50 150, 150 150, 150 50, 50 50))'))),\n"
" ), 20, 'side=left');"
msgstr ""

#. Tag: para
#: reference_processing.xml:254
#, no-c-format
msgid "right-hand-winding, polygon boundary side=right"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:257
#, no-c-format
msgid ""
"SELECT ST_Buffer(\n"
"ST_ForceRHR(\n"
"ST_Boundary(\n"
" ST_GeomFromText(\n"
"'POLYGON ((50 50, 50 150, 150 150, 150 50, 50 50))'))\n"
"), 20,'side=right')"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:264
#, no-c-format
msgid ""
"--A buffered point approximates a circle\n"
"-- A buffered point forcing approximation of (see diagram)\n"
"-- 2 points per quarter circle is poly with 8 sides (see diagram)\n"
"SELECT ST_NPoints(ST_Buffer(ST_GeomFromText('POINT(100 90)'), 50)) As "
"promisingcircle_pcount,\n"
"ST_NPoints(ST_Buffer(ST_GeomFromText('POINT(100 90)'), 50, 2)) As "
"lamecircle_pcount;\n"
"\n"
"promisingcircle_pcount | lamecircle_pcount\n"
"------------------------+-------------------\n"
"             33 |                9\n"
"\n"
"--A lighter but lamer circle\n"
"-- only 2 points per quarter circle is an octagon\n"
"--Below is a 100 meter octagon\n"
"-- Note coordinates are in NAD 83 long lat which we transform\n"
"to Mass state plane meter and then buffer to get measurements in meters;\n"
"SELECT ST_AsText(ST_Buffer(\n"
"ST_Transform(\n"
"ST_SetSRID(ST_MakePoint(-71.063526, 42.35785),4269), 26986)\n"
",100,2)) As octagon;\n"
"----------------------\n"
"POLYGON((236057.59057465 900908.759918696,236028.301252769 "
"900838.049240578,235\n"
"957.59057465 900808.759918696,235886.879896532 "
"900838.049240578,235857.59057465\n"
"900908.759918696,235886.879896532 900979.470596815,235957.59057465 "
"901008.759918\n"
"696,236028.301252769 900979.470596815,236057.59057465 900908.759918696))"
msgstr ""

#. Tag: title
#: reference_processing.xml:268 reference_processing.xml:333
#: reference_processing.xml:464 reference_processing.xml:620
#: reference_processing.xml:689 reference_processing.xml:789
#: reference_processing.xml:837 reference_processing.xml:998
#: reference_processing.xml:1033 reference_processing.xml:1060
#: reference_processing.xml:1097 reference_processing.xml:1115
#: reference_processing.xml:1143 reference_processing.xml:1185
#: reference_processing.xml:1365 reference_processing.xml:1407
#: reference_processing.xml:1465 reference_processing.xml:1509
#: reference_processing.xml:1580 reference_processing.xml:1635
#: reference_processing.xml:1677 reference_processing.xml:1717
#: reference_processing.xml:1762 reference_processing.xml:1821
#: reference_processing.xml:1904 reference_processing.xml:2023
#, no-c-format
msgid "See Also"
msgstr ""

#. Tag: para
#: reference_processing.xml:270
#, no-c-format
msgid ""
", <xref linkend=\"ST_DWithin\"/>, <xref linkend=\"ST_SetSRID\"/>, <xref "
"linkend=\"ST_Transform\"/>, <xref linkend=\"ST_Union\"/>"
msgstr ""

#. Tag: refname
#: reference_processing.xml:276
#, no-c-format
msgid "ST_BuildArea"
msgstr ""

#. Tag: refpurpose
#: reference_processing.xml:278
#, no-c-format
msgid "Creates a polygonal geometry formed by the linework of a geometry."
msgstr ""

#. Tag: funcprototype
#: reference_processing.xml:283
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_BuildArea</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geom</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_processing.xml:293
#, no-c-format
msgid ""
"Creates an areal geometry formed by the constituent linework of the input "
"geometry. The input can be LINESTRINGS, MULTILINESTRINGS, POLYGONS, "
"MULTIPOLYGONS, and GeometryCollections. The result is a Polygon or "
"MultiPolygon, depending on input. If the input linework does not form "
"polygons, NULL is returned."
msgstr ""

#. Tag: para
#: reference_processing.xml:299
#, no-c-format
msgid "This function assumes all inner geometries represent holes"
msgstr ""

#. Tag: para
#: reference_processing.xml:302
#, no-c-format
msgid ""
"Input linework must be correctly noded for this function to work properly"
msgstr ""

#. Tag: para
#: reference_processing.xml:305
#, no-c-format
msgid "Availability: 1.1.0"
msgstr ""

#. Tag: para
#: reference_processing.xml:319
#, no-c-format
msgid "These will create a donut"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:322
#, no-c-format
msgid ""
"--using polygons\n"
"SELECT ST_BuildArea(ST_Collect(smallc,bigc))\n"
"FROM (SELECT\n"
"    ST_Buffer(\n"
"      ST_GeomFromText('POINT(100 90)'), 25) As smallc,\n"
"    ST_Buffer(ST_GeomFromText('POINT(100 90)'), 50) As bigc) As foo;"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:324
#, no-c-format
msgid ""
"--using linestrings\n"
"SELECT ST_BuildArea(ST_Collect(smallc,bigc))\n"
"FROM (SELECT\n"
"    ST_ExteriorRing(ST_Buffer(\n"
"      ST_GeomFromText('POINT(100 90)'), 25)) As smallc,\n"
"    ST_ExteriorRing(ST_Buffer(ST_GeomFromText('POINT(100 90)'), 50)) As "
"bigc) As foo;"
msgstr ""

#. Tag: para
#: reference_processing.xml:335
#, no-c-format
msgid ""
", <xref linkend=\"ST_MakePolygon\"/>, <xref linkend=\"ST_MakeValid\"/>, "
"<xref linkend=\"ST_BdPolyFromText\"/>, <xref linkend=\"ST_BdMPolyFromText\"/"
"> (wrappers to this function with standard OGC interface)"
msgstr ""

#. Tag: refname
#: reference_processing.xml:347
#, no-c-format
msgid "ST_Centroid"
msgstr ""

#. Tag: refpurpose
#: reference_processing.xml:349
#, no-c-format
msgid "Returns the geometric center of a geometry."
msgstr ""

#. Tag: funcsynopsis
#: reference_processing.xml:353
#, no-c-format
msgid ""
"<funcprototype> <funcdef>geometry <function>ST_Centroid</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>geography <function>ST_Centroid</"
"function></funcdef> <paramdef><type>geography </type> <parameter>g1</"
"parameter></paramdef> <paramdef choice=\"opt\"><type>boolean </type> "
"<parameter>use_spheroid=true</parameter></paramdef> </funcprototype>"
msgstr ""

#. Tag: para
#: reference_processing.xml:375
#, no-c-format
msgid ""
"Computes a point which is the geometric center of mass of a geometry. For "
"[<varname>MULTI</varname>]<varname>POINT</varname>s, the centroid is the "
"arithmetic mean of the input coordinates. For [<varname>MULTI</"
"varname>]<varname>LINESTRING</varname>s, the centroid is computed using the "
"weighted length of each line segment. For [<varname>MULTI</"
"varname>]<varname>POLYGON</varname>s, the centroid is computed in terms of "
"area. If an empty geometry is supplied, an empty "
"<varname>GEOMETRYCOLLECTION</varname> is returned. If <varname>NULL</"
"varname> is supplied, <varname>NULL</varname> is returned. If "
"<varname>CIRCULARSTRING</varname> or <varname>COMPOUNDCURVE</varname> are "
"supplied, they are converted to linestring wtih CurveToLine first, then same "
"than for <varname>LINESTRING</varname>"
msgstr ""

#. Tag: para
#: reference_processing.xml:388
#, no-c-format
msgid ""
"For mixed-dimension input, the result is equal to the centroid of the "
"component Geometries of highest dimension (since the lower-dimension "
"geometries contribute zero \"weight\" to the centroid)."
msgstr ""

#. Tag: para
#: reference_processing.xml:392
#, no-c-format
msgid ""
"New in 2.3.0 : support <varname>CIRCULARSTRING</varname> and "
"<varname>COMPOUNDCURVE</varname> (using CurveToLine)"
msgstr ""

#. Tag: para
#: reference_processing.xml:394
#, no-c-format
msgid "Availability: 2.4.0 support for geography was introduced."
msgstr ""

#. Tag: para
#: reference_processing.xml:396
#, no-c-format
msgid "&sfs_compliant;"
msgstr ""

#. Tag: para
#: reference_processing.xml:397
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 8.1.4, 9.5.5"
msgstr ""

#. Tag: para
#: reference_processing.xml:403
#, no-c-format
msgid ""
"In the following illustrations the green dot is the centroid of the source "
"geometry."
msgstr ""

#. Tag: para
#: reference_processing.xml:416
#, no-c-format
msgid "Centroid of a <varname>MULTIPOINT</varname>"
msgstr ""

#. Tag: para
#: reference_processing.xml:427
#, no-c-format
msgid "Centroid of a <varname>LINESTRING</varname>"
msgstr ""

#. Tag: para
#: reference_processing.xml:440
#, no-c-format
msgid "Centroid of a <varname>POLYGON</varname>"
msgstr ""

#. Tag: para
#: reference_processing.xml:451
#, no-c-format
msgid "Centroid of a <varname>GEOMETRYCOLLECTION</varname>"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:460
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_Centroid('MULTIPOINT ( -1 0, -1 2, -1 3, -1 4, -1 7, 0 "
"1, 0 3, 1 1, 2 0, 6 0, 7 8, 9 8, 10 6 )'));\n"
"                st_astext\n"
"------------------------------------------\n"
" POINT(2.30769230769231 3.30769230769231)\n"
"(1 row)\n"
"\n"
"SELECT ST_AsText(ST_centroid(g))\n"
"FROM  ST_GeomFromText('CIRCULARSTRING(0 2, -1 1,0 0, 0.5 0, 1 0, 2 1, 1 2, "
"0.5 2, 0 2)')  AS g ;\n"
"------------------------------------------\n"
"POINT(0.5 1)\n"
"\n"
"\n"
"SELECT ST_AsText(ST_centroid(g))\n"
"FROM  ST_GeomFromText('COMPOUNDCURVE(CIRCULARSTRING(0 2, -1 1,0 0),(0 0, 0.5 "
"0, 1 0),CIRCULARSTRING( 1 0, 2 1, 1 2),(1 2, 0.5 2, 0 2))' ) AS g;\n"
"------------------------------------------\n"
"POINT(0.5 1)"
msgstr ""

#. Tag: para
#: reference_processing.xml:466
#, no-c-format
msgid ", <xref linkend=\"ST_GeometricMedian\"/>"
msgstr ""

#. Tag: refname
#: reference_processing.xml:472
#, no-c-format
msgid "ST_ConcaveHull"
msgstr ""

#. Tag: refpurpose
#: reference_processing.xml:473
#, no-c-format
msgid ""
"Computes a possibly concave geometry that encloses all input geometry "
"vertices"
msgstr ""

#. Tag: funcprototype
#: reference_processing.xml:478
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_ConcaveHull</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geom</parameter></paramdef> "
"<paramdef><type>float </type> <parameter>target_percent</parameter></"
"paramdef> <paramdef choice=\"opt\"><type>boolean </type> "
"<parameter>allow_holes = false</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_processing.xml:489
#, no-c-format
msgid ""
"The concave hull of a geometry represents a possibly concave geometry that "
"encloses the input geometry. The result is a single polygon, line or point. "
"It will not contain holes unless the optional <varname>allow_holes</varname> "
"argument is specified as true."
msgstr ""

#. Tag: para
#: reference_processing.xml:495
#, no-c-format
msgid ""
"The <varname>target_percent</varname> is the target percent of area of "
"convex hull the PostGIS solution will try to approach before giving up or "
"exiting. One can think of the concave hull as the geometry you get by vacuum "
"sealing a set of geometries. The target_percent of 1 will give you the same "
"answer as the convex hull. A target_percent between 0 and 0.99 will give you "
"something that should have a smaller area than the convex hull. This is "
"different from a convex hull which is more like wrapping a rubber band "
"around the set of geometries."
msgstr ""

#. Tag: para
#: reference_processing.xml:501
#, no-c-format
msgid ""
"It is usually used with MULTI and Geometry Collections. It is not an "
"aggregate function, but can be used with <xref linkend=\"ST_Collect\"/> or "
"<xref linkend=\"ST_Union\"/> to get the concave hull of a set of points/"
"linestring/polygons (e.g. <code>ST_ConcaveHull(ST_Collect(somepointfield), "
"0.80)</code>."
msgstr ""

#. Tag: para
#: reference_processing.xml:506
#, no-c-format
msgid ""
"It is slower to compute than the convex hull but generally has a smaller "
"result area and represents a more natural bounds of the input geometry."
msgstr ""

#. Tag: para
#: reference_processing.xml:510
#, no-c-format
msgid ""
"Note - If you are using with points, linestrings, or geometry collections "
"use ST_Collect. If you are using with polygons, use ST_Union since it may "
"fail with invalid geometries."
msgstr ""

#. Tag: para
#: reference_processing.xml:513
#, no-c-format
msgid ""
"Note - The smaller you make the target percent, the longer it takes to "
"process the concave hull and more likely to run into topological exceptions. "
"Also the more floating points and number of points you accrue. First try a "
"0.99 which does a first hop, is usually very fast, sometimes as fast as "
"computing the convex hull, and usually gives much better than 99% of shrink "
"since it almost always overshoots. Second hope of 0.98 it slower, others get "
"slower usually quadratically. To reduce precision and float points, use "
"<xref linkend=\"ST_SimplifyPreserveTopology\"/> or <xref linkend="
"\"ST_SnapToGrid\"/> after ST_ConcaveHull. ST_SnapToGrid is a bit faster, but "
"could result in invalid geometries where as ST_SimplifyPreserveTopology "
"almost always preserves the validity of the geometry."
msgstr ""

#. Tag: para
#: reference_processing.xml:518
#, no-c-format
msgid ""
"More real world examples and brief explanation of the technique are shown "
"<ulink url=\"http://www.bostongis.com/postgis_concavehull.snippet\">http://"
"www.bostongis.com/postgis_concavehull.snippet</ulink>"
msgstr ""

#. Tag: para
#: reference_processing.xml:521
#, no-c-format
msgid ""
"Also check out Simon Greener's article on demonstrating ConcaveHull "
"introduced in Oracle 11G R2. <ulink url=\"http://www.spatialdbadvisor.com/"
"oracle_spatial_tips_tricks/172/concave-hull-geometries-in-"
"oracle-11gr2\">http://www.spatialdbadvisor.com/"
"oracle_spatial_tips_tricks/172/concave-hull-geometries-in-oracle-11gr2</"
"ulink>. The solution we get at 0.75 target percent of convex hull is similar "
"to the shape Simon gets with Oracle SDO_CONCAVEHULL_BOUNDARY."
msgstr ""

#. Tag: para
#: reference_processing.xml:525 reference_processing.xml:661
#, no-c-format
msgid "Performed by the GEOS module"
msgstr ""

#. Tag: para
#: reference_processing.xml:527 reference_processing.xml:1538
#, no-c-format
msgid "Availability: 2.0.0"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:532
#, no-c-format
msgid ""
"--Get estimate of infected area based on point observations\n"
"SELECT d.disease_type,\n"
"    ST_ConcaveHull(ST_Collect(d.pnt_geom), 0.99) As geom\n"
"    FROM disease_obs As d\n"
"    GROUP BY d.disease_type;"
msgstr ""

#. Tag: para
#: reference_processing.xml:542
#, no-c-format
msgid "ST_ConcaveHull of 2 polygons encased in target 100% shrink concave hull"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:545
#, no-c-format
msgid ""
"-- geometries overlaid with concavehull\n"
"-- at target 100% shrink (this is the same as convex hull - since no "
"shrink)\n"
"SELECT\n"
"    ST_ConcaveHull(\n"
"        ST_Union(ST_GeomFromText('POLYGON((175 150, 20 40,\n"
"            50 60, 125 100, 175 150))'),\n"
"        ST_Buffer(ST_GeomFromText('POINT(110 170)'), 20)\n"
"        ), 1)\n"
"     As convexhull;"
msgstr ""

#. Tag: para
#: reference_processing.xml:552
#, no-c-format
msgid ""
"-- geometries overlaid with concavehull at target 90% of convex hull area"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:556
#, no-c-format
msgid ""
"-- geometries overlaid with concavehull at target 90% shrink\n"
"SELECT\n"
"    ST_ConcaveHull(\n"
"        ST_Union(ST_GeomFromText('POLYGON((175 150, 20 40,\n"
"            50 60, 125 100, 175 150))'),\n"
"        ST_Buffer(ST_GeomFromText('POINT(110 170)'), 20)\n"
"        ), 0.9)\n"
"     As target_90;"
msgstr ""

#. Tag: para
#: reference_processing.xml:565
#, no-c-format
msgid "L Shape points overlaid with convex hull"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:568
#, no-c-format
msgid ""
"-- this produces a table of 42 points that form an L shape\n"
"SELECT (ST_DumpPoints(ST_GeomFromText(\n"
"'MULTIPOINT(14 14,34 14,54 14,74 14,94 14,114 14,134 14,\n"
"150 14,154 14,154 6,134 6,114 6,94 6,74 6,54 6,34 6,\n"
"14 6,10 6,8 6,7 7,6 8,6 10,6 30,6 50,6 70,6 90,6 110,6 130,\n"
"6 150,6 170,6 190,6 194,14 194,14 174,14 154,14 134,14 114,\n"
"14 94,14 74,14 54,14 34,14 14)'))).geom\n"
"    INTO TABLE l_shape;\n"
"\n"
"SELECT ST_ConvexHull(ST_Collect(geom))\n"
"FROM l_shape;"
msgstr ""

#. Tag: para
#: reference_processing.xml:575
#, no-c-format
msgid "ST_ConcaveHull of L points at target 99% of convex hull"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:578
#, no-c-format
msgid ""
"SELECT ST_ConcaveHull(ST_Collect(geom), 0.99)\n"
"    FROM l_shape;"
msgstr ""

#. Tag: para
#: reference_processing.xml:587
#, no-c-format
msgid "Concave Hull of L points at target 80% convex hull area"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:590
#, no-c-format
msgid ""
"-- Concave Hull L shape points\n"
"    -- at target 80% of convexhull\n"
"    SELECT ST_ConcaveHull(ST_Collect(geom), 0.80)\n"
"    FROM l_shape;"
msgstr ""

#. Tag: para
#: reference_processing.xml:599
#, no-c-format
msgid "multilinestring overlaid with Convex hull"
msgstr ""

#. Tag: para
#: reference_processing.xml:607
#, no-c-format
msgid ""
"multilinestring with overlaid with Concave hull of linestrings at 99% target "
"-- first hop"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:611
#, no-c-format
msgid ""
"SELECT ST_ConcaveHull(ST_GeomFromText('MULTILINESTRING((106 164,30 112,74 "
"70,82 112,130 94,\n"
"    130 62,122 40,156 32,162 76,172 88),\n"
"(132 178,134 148,128 136,96 128,132 108,150 130,\n"
"170 142,174 110,156 96,158 90,158 88),\n"
"(22 64,66 28,94 38,94 68,114 76,112 30,\n"
"132 10,168 18,178 34,186 52,184 74,190 100,\n"
"190 122,182 148,178 170,176 184,156 164,146 178,\n"
"132 186,92 182,56 158,36 150,62 150,76 128,88 118))'),0.99)"
msgstr ""

#. Tag: para
#: reference_processing.xml:621
#, no-c-format
msgid ""
", <xref linkend=\"ST_ConvexHull\"/>, <xref linkend="
"\"ST_SimplifyPreserveTopology\"/>, <xref linkend=\"ST_SnapToGrid\"/>"
msgstr ""

#. Tag: refname
#: reference_processing.xml:627
#, no-c-format
msgid "ST_ConvexHull"
msgstr ""

#. Tag: refpurpose
#: reference_processing.xml:628
#, no-c-format
msgid "Computes the convex hull of a geometry."
msgstr ""

#. Tag: funcprototype
#: reference_processing.xml:633
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_ConvexHull</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_processing.xml:642
#, no-c-format
msgid ""
"Computes the convex hull of a geometry. The convex hull is the smallest "
"convex geometry that encloses all geometries in the input."
msgstr ""

#. Tag: para
#: reference_processing.xml:646
#, no-c-format
msgid ""
"In the general case the convex hull is a Polygon. The convex hull of two or "
"more collinear points is a two-point LineString. The convex hull of one or "
"more identical points is a Point."
msgstr ""

#. Tag: para
#: reference_processing.xml:650
#, no-c-format
msgid ""
"It is usually used with Multi* and GeometryCollections. It is not an "
"aggregate function. To compute the convex hull of a set of geometries, use "
"<xref linkend=\"ST_Collect\"/> to aggregate them."
msgstr ""

#. Tag: para
#: reference_processing.xml:655
#, no-c-format
msgid ""
"One can think of the convex hull as the geometry obtained by wrapping an "
"elastic band around a set of geometries. This is different from a concave "
"hull which is analogous to \"shrink-wrapping\" the geometries. A convex hull "
"is often used to determine an affected area based on a set of point "
"observations."
msgstr ""

#. Tag: para
#: reference_processing.xml:664
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.16"
msgstr ""

#. Tag: para
#: reference_processing.xml:665 reference_processing.xml:727
#: reference_processing.xml:973 reference_processing.xml:1397
#, no-c-format
msgid "&Z_support;"
msgstr ""

#. Tag: para
#: reference_processing.xml:677
#, no-c-format
msgid "Convex Hull of a MultiLinestring and a MultiPoint"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:680
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_ConvexHull(\n"
"    ST_Collect(\n"
"        ST_GeomFromText('MULTILINESTRING((100 190,10 8),(150 10, 20 30))'),\n"
"            ST_GeomFromText('MULTIPOINT(50 5, 150 30, 50 10, 10 10)')\n"
"            )) );\n"
"---st_astext--\n"
"POLYGON((50 5,10 8,10 10,100 190,150 30,150 10,50 5))"
msgstr ""

#. Tag: para
#: reference_processing.xml:683
#, no-c-format
msgid "Using with ST_Collect to compute the convex hulls of geometry sets."
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:685
#, no-c-format
msgid ""
"--Get estimate of infected area based on point observations\n"
"SELECT d.disease_type,\n"
"    ST_ConvexHull(ST_Collect(d.the_geom)) As the_geom\n"
"    FROM disease_obs As d\n"
"    GROUP BY d.disease_type;"
msgstr ""

#. Tag: para
#: reference_processing.xml:690
#, no-c-format
msgid ""
", <xref linkend=\"ST_ConcaveHull\"/>, <xref linkend="
"\"ST_MinimumBoundingCircle\"/>"
msgstr ""

#. Tag: refname
#: reference_processing.xml:696
#, no-c-format
msgid "ST_DelaunayTriangles"
msgstr ""

#. Tag: refpurpose
#: reference_processing.xml:698
#, no-c-format
msgid "Returns the Delaunay triangulation of the vertices of a geometry."
msgstr ""

#. Tag: funcprototype
#: reference_processing.xml:705
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_DelaunayTriangles</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>float </type> <parameter>tolerance</parameter></paramdef> "
"<paramdef><type>int4 </type> <parameter>flags</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_processing.xml:717
#, no-c-format
msgid ""
"Return the <ulink url=\"http://en.wikipedia.org/wiki/Delaunay_triangulation"
"\">Delaunay triangulation</ulink> of the vertices of the input geometry. "
"Output is a COLLECTION of polygons (for flags=0) or a MULTILINESTRING (for "
"flags=1) or TIN (for flags=2). The tolerance, if any, is used to snap input "
"vertices together."
msgstr ""

#. Tag: para
#: reference_processing.xml:726
#, no-c-format
msgid "Availability: 2.1.0"
msgstr ""

#. Tag: para
#: reference_processing.xml:728
#, no-c-format
msgid "&T_support;"
msgstr ""

#. Tag: title
#: reference_processing.xml:732
#, no-c-format
msgid "2D Examples"
msgstr ""

#. Tag: para
#: reference_processing.xml:741
#, no-c-format
msgid "Original polygons"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:744
#, no-c-format
msgid ""
"-- our original geometry --\n"
"    ST_Union(ST_GeomFromText('POLYGON((175 150, 20 40,\n"
"            50 60, 125 100, 175 150))'),\n"
"        ST_Buffer(ST_GeomFromText('POINT(110 170)'), 20)\n"
"        )"
msgstr ""

#. Tag: para
#: reference_processing.xml:752
#, no-c-format
msgid ""
"ST_DelaunayTriangles of 2 polygons: delaunay triangle polygons each triangle "
"themed in different color"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:755
#, no-c-format
msgid ""
"-- geometries overlaid multilinestring triangles\n"
"SELECT\n"
"    ST_DelaunayTriangles(\n"
"        ST_Union(ST_GeomFromText('POLYGON((175 150, 20 40,\n"
"            50 60, 125 100, 175 150))'),\n"
"        ST_Buffer(ST_GeomFromText('POINT(110 170)'), 20)\n"
"        ))\n"
"     As  dtriag;"
msgstr ""

#. Tag: para
#: reference_processing.xml:762
#, no-c-format
msgid "-- delaunay triangles as multilinestring"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:765
#, no-c-format
msgid ""
"SELECT\n"
"    ST_DelaunayTriangles(\n"
"        ST_Union(ST_GeomFromText('POLYGON((175 150, 20 40,\n"
"            50 60, 125 100, 175 150))'),\n"
"        ST_Buffer(ST_GeomFromText('POINT(110 170)'), 20)\n"
"        ),0.001,1)\n"
"     As  dtriag;"
msgstr ""

#. Tag: para
#: reference_processing.xml:773
#, no-c-format
msgid "-- delaunay triangles of 45 points as 55 triangle polygons"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:776
#, no-c-format
msgid ""
"-- this produces a table of 42 points that form an L shape\n"
"SELECT (ST_DumpPoints(ST_GeomFromText(\n"
"'MULTIPOINT(14 14,34 14,54 14,74 14,94 14,114 14,134 14,\n"
"150 14,154 14,154 6,134 6,114 6,94 6,74 6,54 6,34 6,\n"
"14 6,10 6,8 6,7 7,6 8,6 10,6 30,6 50,6 70,6 90,6 110,6 130,\n"
"6 150,6 170,6 190,6 194,14 194,14 174,14 154,14 134,14 114,\n"
"14 94,14 74,14 54,14 34,14 14)'))).geom\n"
"    INTO TABLE l_shape;\n"
"-- output as individual polygon triangles\n"
"SELECT ST_AsText((ST_Dump(geom)).geom) As wkt\n"
"FROM ( SELECT ST_DelaunayTriangles(ST_Collect(geom)) As geom\n"
"FROM l_shape) As foo;\n"
"\n"
"---wkt ---\n"
"POLYGON((6 194,6 190,14 194,6 194))\n"
"POLYGON((14 194,6 190,14 174,14 194))\n"
"POLYGON((14 194,14 174,154 14,14 194))\n"
"POLYGON((154 14,14 174,14 154,154 14))\n"
"POLYGON((154 14,14 154,150 14,154 14))\n"
"POLYGON((154 14,150 14,154 6,154 14))\n"
":\n"
":"
msgstr ""

#. Tag: title
#: reference_processing.xml:785
#, no-c-format
msgid "3D Examples"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:786
#, no-c-format
msgid ""
"-- 3D multipoint --\n"
"SELECT ST_AsText(ST_DelaunayTriangles(ST_GeomFromText(\n"
"'MULTIPOINT Z(14 14 10,\n"
"150 14 100,34 6 25, 20 10 150)'))) As wkt;\n"
"\n"
"-----wkt----\n"
"GEOMETRYCOLLECTION Z (POLYGON Z ((14 14 10,20 10 150,34 6 25,14 14 10))\n"
" ,POLYGON Z ((14 14 10,34 6 25,150 14 100,14 14 10)))"
msgstr ""

#. Tag: para
#: reference_processing.xml:790
#, no-c-format
msgid ""
", <xref linkend=\"ST_ConcaveHull\"/>, <xref linkend=\"ST_Dump\"/>, <xref "
"linkend=\"ST_Tesselate\"/>"
msgstr ""

#. Tag: refname
#: reference_processing.xml:797
#, no-c-format
msgid "ST_FilterByM"
msgstr ""

#. Tag: refpurpose
#: reference_processing.xml:798
#, no-c-format
msgid "Removes vertices based on their M value"
msgstr ""

#. Tag: funcprototype
#: reference_processing.xml:803
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_FilterByM</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>geom</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>min</parameter></"
"paramdef> <paramdef><type>double precision</type> <parameter>max = null</"
"parameter></paramdef> <paramdef><type>boolean</type> <parameter>returnM = "
"false</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_processing.xml:815
#, no-c-format
msgid ""
"Filters out vertex points based on their M-value. Returns a geometry with "
"only vertex points that have a M-value larger or equal to the min value and "
"smaller or equal to the max value. If max-value argument is left out only "
"min value is considered. If fourth argument is left out the m-value will not "
"be in the resulting geometry. If resulting geometry have too few vertex "
"points left for its geometry type an empty geometry will be returned. In a "
"geometry collection geometries without enough points will just be left out "
"silently."
msgstr ""

#. Tag: para
#: reference_processing.xml:821
#, no-c-format
msgid ""
"This function is mainly intended to be used in conjunction with "
"ST_SetEffectiveArea. ST_EffectiveArea sets the effective area of a vertex in "
"its m-value. With ST_FilterByM it then is possible to get a simplified "
"version of the geometry without any calculations, just by filtering"
msgstr ""

#. Tag: para
#: reference_processing.xml:824
#, no-c-format
msgid ""
"There is a difference in what ST_SimplifyVW returns when not enough points "
"meet the criteria compared to ST_FilterByM. ST_SimplifyVW returns the "
"geometry with enough points while ST_FilterByM returns an empty geometry"
msgstr ""

#. Tag: para
#: reference_processing.xml:826
#, no-c-format
msgid "Note that the returned geometry might be invalid"
msgstr ""

#. Tag: para
#: reference_processing.xml:827
#, no-c-format
msgid "This function returns all dimensions, including the Z and M values"
msgstr ""

#. Tag: para
#: reference_processing.xml:828 reference_processing.xml:1179
#: reference_processing.xml:1753
#, no-c-format
msgid "Availability: 2.5.0"
msgstr ""

#. Tag: para
#: reference_processing.xml:833
#, no-c-format
msgid "A linestring is filtered"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:834
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_FilterByM(geom,30)) simplified\n"
"FROM (SELECT  ST_SetEffectiveArea('LINESTRING(5 2, 3 8, 6 20, 7 25, 10 10)'::"
"geometry) geom) As foo;\n"
"-result\n"
"         simplified\n"
"----------------------------\n"
" LINESTRING(5 2,7 25,10 10)"
msgstr ""

#. Tag: para
#: reference_processing.xml:838 reference_processing.xml:1763
#, no-c-format
msgid ", <xref linkend=\"ST_SimplifyVW\"/>"
msgstr ""

#. Tag: refname
#: reference_processing.xml:844
#, no-c-format
msgid "ST_GeneratePoints"
msgstr ""

#. Tag: refpurpose
#: reference_processing.xml:846
#, no-c-format
msgid "Generates random points contained in a Polygon or MultiPolygon."
msgstr ""

#. Tag: funcsynopsis
#: reference_processing.xml:850
#, no-c-format
msgid ""
"<funcprototype> <funcdef>geometry <function>ST_GeneratePoints</function></"
"funcdef> <paramdef> <parameter>g</parameter> <type>geometry</type> </"
"paramdef> <paramdef> <parameter>npoints</parameter> <type>integer</type> </"
"paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
"<function>ST_GeneratePoints</function></funcdef> <paramdef> <type>geometry</"
"type> <parameter>g</parameter> </paramdef> <paramdef> <type>integer</type> "
"<parameter>npoints</parameter> </paramdef> <paramdef> <type>integer</type> "
"<parameter>seed</parameter> </paramdef> </funcprototype>"
msgstr ""

#. Tag: para
#: reference_processing.xml:875
#, no-c-format
msgid ""
"ST_GeneratePoints generates a given number of pseudo-random points which lie "
"within the input area. The optional <code>seed</code> is used to regenerate "
"a deterministic sequence of points, and must be greater than zero."
msgstr ""

#. Tag: para
#: reference_processing.xml:882 reference_processing.xml:971
#: reference_processing.xml:1874 reference_processing.xml:1965
#, no-c-format
msgid "Availability: 2.3.0"
msgstr ""

#. Tag: para
#: reference_processing.xml:883
#, no-c-format
msgid "Enhanced: 3.0.0, added seed parameter"
msgstr ""

#. Tag: para
#: reference_processing.xml:899
#, no-c-format
msgid "Original Polygon"
msgstr ""

#. Tag: para
#: reference_processing.xml:910
#, no-c-format
msgid ""
"Generated 12 Points overlaid on top of original polygon using a random seed "
"value 1996"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:913
#, no-c-format
msgid ""
"SELECT ST_GeneratePoints(geom, 12, 1996)\n"
"FROM (\n"
"    SELECT ST_Buffer(\n"
"        ST_GeomFromText(\n"
"        'LINESTRING(50 50,150 150,150 50)'),\n"
"        10, 'endcap=round join=round') AS geom\n"
") AS s;"
msgstr ""

#. Tag: refname
#: reference_processing.xml:924
#, no-c-format
msgid "ST_GeometricMedian"
msgstr ""

#. Tag: refpurpose
#: reference_processing.xml:928
#, no-c-format
msgid "Returns the geometric median of a MultiPoint."
msgstr ""

#. Tag: funcprototype
#: reference_processing.xml:935
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_GeometricMedian</function> </funcdef> "
"<paramdef> <type>geometry</type> <parameter>geom</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>float8</type> <parameter>tolerance = NULL</"
"parameter></paramdef> <paramdef choice=\"opt\"><type>int</type> "
"<parameter>max_iter = 10000</parameter></paramdef> <paramdef choice=\"opt"
"\"><type>boolean</type> <parameter>fail_if_not_converged = false</"
"parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_processing.xml:950
#, no-c-format
msgid ""
"Computes the approximate geometric median of a MultiPoint geometry using the "
"Weiszfeld algorithm. The geometric median is the point minimizing the sum of "
"distances to the input points. It provides a centrality measure that is less "
"sensitive to outlier points than the centroid (center of mass)."
msgstr ""

#. Tag: para
#: reference_processing.xml:957
#, no-c-format
msgid ""
"The algorithm iterates until the distance change between successive "
"iterations is less than the supplied <varname>tolerance</varname> parameter. "
"If this condition has not been met after <varname>max_iterations</varname> "
"iterations, the function produces an error and exits, unless "
"<varname>fail_if_not_converged</varname> is set to <code>false</code> (the "
"default)."
msgstr ""

#. Tag: para
#: reference_processing.xml:964
#, no-c-format
msgid ""
"If a <varname>tolerance</varname> argument is not provided, the tolerance "
"value is calculated based on the extent of the input geometry."
msgstr ""

#. Tag: para
#: reference_processing.xml:968
#, no-c-format
msgid ""
"If present, the input point M values are interpreted as their relative "
"weights."
msgstr ""

#. Tag: para
#: reference_processing.xml:972
#, no-c-format
msgid "Enhanced: 2.5.0 Added support for M as weight of points."
msgstr ""

#. Tag: para
#: reference_processing.xml:974
#, no-c-format
msgid "&M_support;"
msgstr ""

#. Tag: para
#: reference_processing.xml:986
#, no-c-format
msgid ""
"Comparison of the centroid (turquoise point) and geometric median (red "
"point) of a four-point MultiPoint (yellow points)."
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:994
#, no-c-format
msgid ""
"WITH test AS (\n"
"SELECT 'MULTIPOINT((0 0), (1 1), (2 2), (200 200))'::geometry geom)\n"
"SELECT\n"
"  ST_AsText(ST_Centroid(geom)) centroid,\n"
"  ST_AsText(ST_GeometricMedian(geom)) median\n"
"FROM test;\n"
"      centroid      |                 median\n"
"--------------------+----------------------------------------\n"
" POINT(50.75 50.75) | POINT(1.9761550281255 1.9761550281255)\n"
"(1 row)"
msgstr ""

#. Tag: refname
#: reference_processing.xml:1007
#, no-c-format
msgid "ST_MaximumInscribedCircle"
msgstr ""

#. Tag: refpurpose
#: reference_processing.xml:1008
#, no-c-format
msgid "Computes the largest circle that is fully contained within a geometry."
msgstr ""

#. Tag: funcprototype
#: reference_processing.xml:1013
#, no-c-format
msgid ""
"<funcdef>(geometry, geometry, double precision) "
"<function>ST_MaximumInscribedCircle</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geom</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_processing.xml:1022
#, no-c-format
msgid ""
"Finds the largest circle that is fully contained within a geometry. Returns "
"a record with the center point of the circle, a point on the geometry that "
"is nearest to the center, and the radius of the circle."
msgstr ""

#. Tag: para
#: reference_processing.xml:1026
#, no-c-format
msgid ""
"For polygonal inputs, the circle is inscribed within the external ring, "
"using the internal rings as boundaries. For linear and point inputs, the "
"circle is inscribed within the convex hull of the input, using the input as "
"further boundaries."
msgstr ""

#. Tag: para
#: reference_processing.xml:1029
#, no-c-format
msgid "Availability: 3.1.0 - requires GEOS &gt;= 3.9.0."
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:1039
#, no-c-format
msgid ""
"SELECT radius, ST_AsText(center) AS center, ST_AsText(nearest) AS nearest\n"
"    FROM ST_MaximumInscribedCircle('POLYGON ((50 50, 150 50, 150 150, 50 "
"150, 50 50))')\n"
"\n"
" radius |     center     |    nearest\n"
"--------+----------------+---------------\n"
"     50 | POINT(100 100) | POINT(100 50)"
msgstr ""

#. Tag: para
#: reference_processing.xml:1045
#, no-c-format
msgid ""
"Maximum inscribed circle of a triangle polygon. Center, nearest point, and "
"radius are returned."
msgstr ""

#. Tag: para
#: reference_processing.xml:1054
#, no-c-format
msgid ""
"Maximum inscribed circle of a multi-linestring. Center, nearest point, and "
"radius are returned."
msgstr ""

#. Tag: para
#: reference_processing.xml:1061 reference_processing.xml:1098
#: reference_processing.xml:1116
#, no-c-format
msgid ", <xref linkend=\"ST_MinimumBoundingRadius\"/>"
msgstr ""

#. Tag: refname
#: reference_processing.xml:1067
#, no-c-format
msgid "ST_MinimumBoundingCircle"
msgstr ""

#. Tag: refpurpose
#: reference_processing.xml:1068
#, no-c-format
msgid ""
"<refpurpose>Returns the smallest circle polygon that contains a geometry.</"
"refpurpose>"
msgstr ""

#. Tag: funcprototype
#: reference_processing.xml:1073
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_MinimumBoundingCircle</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>integer </type> "
"<parameter>num_segs_per_qt_circ=48</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_processing.xml:1083
#, no-c-format
msgid ""
"<para>Returns the smallest circle polygon that contains a geometry.</para>"
msgstr ""

#. Tag: para
#: reference_processing.xml:1084
#, no-c-format
msgid ""
"The circle is approximated by a polygon with a default of 48 segments per "
"quarter circle. Because the polygon is an approximation of the minimum "
"bounding circle, some points in the input geometry may not be contained "
"within the polygon. The approximation can be improved by increasing the "
"number of segments, with little performance penalty. For applications where "
"a polygonal approximation is not suitable, ST_MinimumBoundingRadius may be "
"used."
msgstr ""

#. Tag: para
#: reference_processing.xml:1086
#, no-c-format
msgid ""
"It is often used with MULTI and Geometry Collections. Although it is not an "
"aggregate - you can use it in conjunction with ST_Collect to get the minimum "
"bounding circle of a set of geometries. "
"ST_MinimumBoundingCircle(ST_Collect(somepointfield))."
msgstr ""

#. Tag: para
#: reference_processing.xml:1091
#, no-c-format
msgid ""
"The ratio of the area of a polygon divided by the area of its Minimum "
"Bounding Circle is often referred to as the Roeck test."
msgstr ""

#. Tag: para
#: reference_processing.xml:1093
#, no-c-format
msgid "Availability: 1.4.0"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:1103
#, no-c-format
msgid ""
"SELECT d.disease_type,\n"
"    ST_MinimumBoundingCircle(ST_Collect(d.the_geom)) As the_geom\n"
"    FROM disease_obs As d\n"
"    GROUP BY d.disease_type;"
msgstr ""

#. Tag: para
#: reference_processing.xml:1109
#, no-c-format
msgid ""
"Minimum bounding circle of a point and linestring. Using 8 segs to "
"approximate a quarter circle"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:1112
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_MinimumBoundingCircle(\n"
"        ST_Collect(\n"
"            ST_GeomFromText('LINESTRING(55 75,125 150)'),\n"
"                ST_Point(20, 80)), 8\n"
"                )) As wktmbc;\n"
"wktmbc\n"
"-----------\n"
"POLYGON((135.59714732062 115,134.384753327498 "
"102.690357210921,130.79416296937 90.8537670908995,124.963360620072 "
"79.9451031602111,117.116420743937 70.3835792560632,107.554896839789 "
"62.5366393799277,96.6462329091006 56.70583703063,84.8096427890789 "
"53.115246672502,72.5000000000001 51.9028526793802,60.1903572109213 "
"53.1152466725019,48.3537670908996 56.7058370306299,37.4451031602112 "
"62.5366393799276,27.8835792560632 70.383579256063,20.0366393799278 "
"79.9451031602109,14.20583703063 90.8537670908993,10.615246672502 "
"102.690357210921,9.40285267938019 115,10.6152466725019 "
"127.309642789079,14.2058370306299 139.1462329091,20.0366393799275 "
"150.054896839789,27.883579256063 159.616420743937,\n"
"37.4451031602108 167.463360620072,48.3537670908992 "
"173.29416296937,60.190357210921 176.884753327498,\n"
"72.4999999999998 178.09714732062,84.8096427890786 "
"176.884753327498,96.6462329091003 173.29416296937,107.554896839789 "
"167.463360620072,\n"
"117.116420743937 159.616420743937,124.963360620072 "
"150.054896839789,130.79416296937 139.146232909101,134.384753327498 "
"127.309642789079,135.59714732062 115))"
msgstr ""

#. Tag: refname
#: reference_processing.xml:1122
#, no-c-format
msgid "ST_MinimumBoundingRadius"
msgstr ""

#. Tag: refpurpose
#: reference_processing.xml:1123
#, no-c-format
msgid ""
"Returns the center point and radius of the smallest circle that contains a "
"geometry."
msgstr ""

#. Tag: funcprototype
#: reference_processing.xml:1128
#, no-c-format
msgid ""
"<funcdef>(geometry, double precision) <function>ST_MinimumBoundingRadius</"
"function></funcdef> <paramdef><type>geometry</type> <parameter>geom</"
"parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_processing.xml:1137
#, no-c-format
msgid ""
"Returns a record containing the center point and radius of the smallest "
"circle that contains a geometry."
msgstr ""

#. Tag: para
#: reference_processing.xml:1138
#, no-c-format
msgid ""
"Use in conjunction with <xref linkend=\"ST_Collect\"/> to get the minimum "
"bounding circle of a set of geometries."
msgstr ""

#. Tag: para
#: reference_processing.xml:1139
#, no-c-format
msgid "Availability - 2.3.0"
msgstr ""

#. Tag: para
#: reference_processing.xml:1144
#, no-c-format
msgid ", <xref linkend=\"ST_MinimumBoundingCircle\"/>"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:1149
#, no-c-format
msgid ""
"SELECT ST_AsText(center), radius FROM "
"ST_MinimumBoundingRadius('POLYGON((26426 65078,26531 65242,26075 65136,26096 "
"65427,26426 65078))');\n"
"\n"
"                st_astext                 |      radius\n"
"------------------------------------------+------------------\n"
" POINT(26284.8418027133 65267.1145090825) | 247.436045591407"
msgstr ""

#. Tag: refname
#: reference_processing.xml:1156
#, no-c-format
msgid "ST_OrientedEnvelope"
msgstr ""

#. Tag: refpurpose
#: reference_processing.xml:1157
#, no-c-format
msgid "Returns a minimum-area rectangle containing a geometry."
msgstr ""

#. Tag: funcprototype
#: reference_processing.xml:1162
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_OrientedEnvelope</function></funcdef> "
"<paramdef> <type>geometry</type> <parameter>geom</parameter> </paramdef>"
msgstr ""

#. Tag: para
#: reference_processing.xml:1174
#, no-c-format
msgid ""
"Returns the mimimum-area rotated rectangle enclosing a geometry. Note that "
"more than one such rectangle may exist. May return a Point or LineString in "
"the case of degenerate inputs."
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:1194
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_OrientedEnvelope('MULTIPOINT ((0 0), (-1 -1), (3 "
"2))'));\n"
"\n"
"                st_astext\n"
"                ------------------------------------------------\n"
"                POLYGON((3 2,2.88 2.16,-1.12 -0.84,-1 -1,3 2))"
msgstr ""

#. Tag: para
#: reference_processing.xml:1201
#, no-c-format
msgid "Oriented envelope of a point and linestring."
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:1204
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_OrientedEnvelope(\n"
"        ST_Collect(\n"
"            ST_GeomFromText('LINESTRING(55 75,125 150)'),\n"
"                ST_Point(20, 80))\n"
"                )) As wktenv;\n"
"wktenv\n"
"-----------\n"
"POLYGON((19.9999999999997 79.9999999999999,33.0769230769229 "
"60.3846153846152,138.076923076924 130.384615384616,125.000000000001 "
"150.000000000001,19.9999999999997 79.9999999999999))"
msgstr ""

#. Tag: refname
#: reference_processing.xml:1211
#, no-c-format
msgid "ST_OffsetCurve"
msgstr ""

#. Tag: refpurpose
#: reference_processing.xml:1213
#, no-c-format
msgid "Returns an offset line at a given distance and side from an input line."
msgstr ""

#. Tag: funcprototype
#: reference_processing.xml:1221
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_OffsetCurve</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>line</parameter></paramdef> "
"<paramdef><type>float </type> <parameter>signed_distance</parameter></"
"paramdef> <paramdef choice=\"opt\"><type>text </type> "
"<parameter>style_parameters=''</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_processing.xml:1234
#, no-c-format
msgid ""
"Return an offset line at a given distance and side from an input line. All "
"points of the returned geometries are not further than the given distance "
"from the input geometry. Useful for computing parallel lines about a center "
"line."
msgstr ""

#. Tag: para
#: reference_processing.xml:1241
#, no-c-format
msgid ""
"For positive distance the offset is on the left side of the input line and "
"retains the same direction. For a negative distance it is on the right side "
"and in the opposite direction."
msgstr ""

#. Tag: para
#: reference_processing.xml:1246
#, no-c-format
msgid ""
"Note that output may be a MULTILINESTRING or EMPTY for some jigsaw-shaped "
"input geometries."
msgstr ""

#. Tag: para
#: reference_processing.xml:1251
#, no-c-format
msgid "Availability: 2.0"
msgstr ""

#. Tag: para
#: reference_processing.xml:1252
#, no-c-format
msgid ""
"Enhanced: 2.5 - added support for GEOMETRYCOLLECTION and MULTILINESTRING"
msgstr ""

#. Tag: para
#: reference_processing.xml:1254
#, no-c-format
msgid ""
"The optional third parameter allows specifying a list of blank-separated "
"key=value pairs to tweak operations as follows:"
msgstr ""

#. Tag: para
#: reference_processing.xml:1265
#, no-c-format
msgid ""
"'mitre_limit=#.#' : mitre ratio limit (only affects mitred join style). "
"'miter_limit' is also accepted as a synonym for 'mitre_limit'."
msgstr ""

#. Tag: para
#: reference_processing.xml:1270
#, no-c-format
msgid ""
"Units of distance are measured in units of the spatial reference system."
msgstr ""

#. Tag: para
#: reference_processing.xml:1276
#, no-c-format
msgid ""
"This function ignores the third dimension (z) and will always give a 2-d "
"result even when presented with a 3d-geometry."
msgstr ""

#. Tag: para
#: reference_processing.xml:1284
#, no-c-format
msgid "Compute an open buffer around roads"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:1285
#, no-c-format
msgid ""
"SELECT ST_Union(\n"
" ST_OffsetCurve(f.the_geom,  f.width/2, 'quad_segs=4 join=round'),\n"
" ST_OffsetCurve(f.the_geom, -f.width/2, 'quad_segs=4 join=round')\n"
") as track\n"
"FROM someroadstable;"
msgstr ""

#. Tag: para
#: reference_processing.xml:1295
#, no-c-format
msgid "15, 'quad_segs=4 join=round' original line and its offset 15 units."
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:1299
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_OffsetCurve(ST_GeomFromText(\n"
"'LINESTRING(164 16,144 16,124 16,104 16,84 16,64 16,\n"
"    44 16,24 16,20 16,18 16,17 17,\n"
"    16 18,16 20,16 40,16 60,16 80,16 100,\n"
"    16 120,16 140,16 160,16 180,16 195)'),\n"
"    15, 'quad_segs=4 join=round'));\n"
"--output --\n"
"LINESTRING(164 1,18 1,12.2597485145237 2.1418070123307,\n"
"    7.39339828220179 5.39339828220179,\n"
"    5.39339828220179 7.39339828220179,\n"
"    2.14180701233067 12.2597485145237,1 18,1 195)"
msgstr ""

#. Tag: para
#: reference_processing.xml:1306
#, no-c-format
msgid "-15, 'quad_segs=4 join=round' original line and its offset -15 units"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:1310
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_OffsetCurve(geom,\n"
"    -15, 'quad_segs=4 join=round')) As notsocurvy\n"
"    FROM ST_GeomFromText(\n"
"'LINESTRING(164 16,144 16,124 16,104 16,84 16,64 16,\n"
"    44 16,24 16,20 16,18 16,17 17,\n"
"    16 18,16 20,16 40,16 60,16 80,16 100,\n"
"    16 120,16 140,16 160,16 180,16 195)') As geom;\n"
"-- notsocurvy --\n"
"LINESTRING(31 195,31 31,164 31)"
msgstr ""

#. Tag: para
#: reference_processing.xml:1319
#, no-c-format
msgid ""
"double-offset to get more curvy, note the first reverses direction, so -30 + "
"15 = -15"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:1322
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_OffsetCurve(ST_OffsetCurve(geom,\n"
"    -30, 'quad_segs=4 join=round'), -15, 'quad_segs=4 join=round')) As "
"morecurvy\n"
"    FROM ST_GeomFromText(\n"
"'LINESTRING(164 16,144 16,124 16,104 16,84 16,64 16,\n"
"    44 16,24 16,20 16,18 16,17 17,\n"
"    16 18,16 20,16 40,16 60,16 80,16 100,\n"
"    16 120,16 140,16 160,16 180,16 195)') As geom;\n"
"-- morecurvy --\n"
"LINESTRING(164 31,46 31,40.2597485145236 32.1418070123307,\n"
"35.3933982822018 35.3933982822018,\n"
"32.1418070123307 40.2597485145237,31 46,31 195)"
msgstr ""

#. Tag: para
#: reference_processing.xml:1329
#, no-c-format
msgid ""
"double-offset to get more curvy,combined with regular offset 15 to get "
"parallel lines. Overlaid with original."
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:1332
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_Collect(\n"
"    ST_OffsetCurve(geom, 15, 'quad_segs=4 join=round'),\n"
"    ST_OffsetCurve(ST_OffsetCurve(geom,\n"
"    -30, 'quad_segs=4 join=round'), -15, 'quad_segs=4 join=round')\n"
"    )\n"
") As parallel_curves\n"
"    FROM ST_GeomFromText(\n"
"'LINESTRING(164 16,144 16,124 16,104 16,84 16,64 16,\n"
"    44 16,24 16,20 16,18 16,17 17,\n"
"    16 18,16 20,16 40,16 60,16 80,16 100,\n"
"    16 120,16 140,16 160,16 180,16 195)') As geom;\n"
"-- parallel curves  --\n"
"MULTILINESTRING((164 1,18 1,12.2597485145237 2.1418070123307,\n"
"7.39339828220179 5.39339828220179,5.39339828220179 7.39339828220179,\n"
"2.14180701233067 12.2597485145237,1 18,1 195),\n"
"(164 31,46 31,40.2597485145236 32.1418070123307,35.3933982822018 "
"35.3933982822018,\n"
"32.1418070123307 40.2597485145237,31 46,31 195))"
msgstr ""

#. Tag: para
#: reference_processing.xml:1341
#, no-c-format
msgid "15, 'quad_segs=4 join=bevel' shown with original line"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:1344
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_OffsetCurve(ST_GeomFromText(\n"
"'LINESTRING(164 16,144 16,124 16,104 16,84 16,64 16,\n"
"    44 16,24 16,20 16,18 16,17 17,\n"
"    16 18,16 20,16 40,16 60,16 80,16 100,\n"
"    16 120,16 140,16 160,16 180,16 195)'),\n"
"        15, 'quad_segs=4 join=bevel'));\n"
"-- output --\n"
"LINESTRING(164 1,18 1,7.39339828220179 5.39339828220179,\n"
"    5.39339828220179 7.39339828220179,1 18,1 195)"
msgstr ""

#. Tag: para
#: reference_processing.xml:1352
#, no-c-format
msgid "15,-15 collected, join=mitre mitre_limit=2.1"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:1355
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_Collect(\n"
"    ST_OffsetCurve(geom, 15, 'quad_segs=4 join=mitre mitre_limit=2.2'),\n"
"    ST_OffsetCurve(geom, -15, 'quad_segs=4 join=mitre mitre_limit=2.2')\n"
"    ) )\n"
"    FROM ST_GeomFromText(\n"
"'LINESTRING(164 16,144 16,124 16,104 16,84 16,64 16,\n"
"    44 16,24 16,20 16,18 16,17 17,\n"
"    16 18,16 20,16 40,16 60,16 80,16 100,\n"
"    16 120,16 140,16 160,16 180,16 195)') As geom;\n"
"-- output --\n"
"MULTILINESTRING((164 1,11.7867965644036 1,1 11.7867965644036,1 195),\n"
"    (31 195,31 31,164 31))"
msgstr ""

#. Tag: refname
#: reference_processing.xml:1372
#, no-c-format
msgid "ST_PointOnSurface"
msgstr ""

#. Tag: refpurpose
#: reference_processing.xml:1374
#, no-c-format
msgid "Returns a point guaranteed to lie in a polygon or on a geometry."
msgstr ""

#. Tag: funcprototype
#: reference_processing.xml:1379
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_PointOnSurface</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_processing.xml:1391
#, no-c-format
msgid "Returns a <varname>POINT</varname> guaranteed to intersect a surface."
msgstr ""

#. Tag: para
#: reference_processing.xml:1393
#, no-c-format
msgid "&sfs_compliant; s3.2.14.2 // s3.2.18.2"
msgstr ""

#. Tag: para
#: reference_processing.xml:1394
#, no-c-format
msgid ""
"&sqlmm_compliant; SQL-MM 3: 8.1.5, 9.5.6. According to the specs, "
"ST_PointOnSurface works for surface geometries (POLYGONs, MULTIPOLYGONS, "
"CURVED POLYGONS). So PostGIS seems to be extending what the spec allows "
"here. Most databases Oracle,DB II, ESRI SDE seem to only support this "
"function for surfaces. SQL Server 2008 like PostGIS supports for all common "
"geometries."
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:1403
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_PointOnSurface('POINT(0 5)'::geometry));\n"
" st_astext\n"
"------------\n"
" POINT(0 5)\n"
"(1 row)\n"
"\n"
"SELECT ST_AsText(ST_PointOnSurface('LINESTRING(0 5, 0 10)'::geometry));\n"
" st_astext\n"
"------------\n"
" POINT(0 5)\n"
"(1 row)\n"
"\n"
"SELECT ST_AsText(ST_PointOnSurface('POLYGON((0 0, 0 5, 5 5, 5 0, 0 0))'::"
"geometry));\n"
"   st_astext\n"
"----------------\n"
" POINT(2.5 2.5)\n"
"(1 row)\n"
"\n"
"SELECT ST_AsEWKT(ST_PointOnSurface(ST_GeomFromEWKT('LINESTRING(0 5 1, 0 0 1, "
"0 10 2)')));\n"
"   st_asewkt\n"
"----------------\n"
" POINT(0 0 1)\n"
"(1 row)"
msgstr ""

#. Tag: para
#: reference_processing.xml:1409
#, no-c-format
msgid ", <xref linkend=\"ST_PointInsideCircle\"/>"
msgstr ""

#. Tag: refname
#: reference_processing.xml:1415
#, no-c-format
msgid "ST_Polygonize"
msgstr ""

#. Tag: refpurpose
#: reference_processing.xml:1417
#, no-c-format
msgid ""
"Computes a collection of polygons formed from the linework of a set of "
"geometries."
msgstr ""

#. Tag: funcsynopsis
#: reference_processing.xml:1422
#, no-c-format
msgid ""
"<funcprototype> <funcdef>geometry <function>ST_Polygonize</function></"
"funcdef> <paramdef><type>geometry set</type> <parameter>geomfield</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
"<function>ST_Polygonize</function></funcdef> <paramdef><type>geometry[]</"
"type> <parameter>geom_array</parameter></paramdef> </funcprototype>"
msgstr ""

#. Tag: para
#: reference_processing.xml:1438
#, no-c-format
msgid ""
"Creates a GeometryCollection containing the polygons formed by the "
"constituent linework of a set of geometries. Input linework must be "
"correctly noded for this function to work properly."
msgstr ""

#. Tag: para
#: reference_processing.xml:1443
#, no-c-format
msgid ""
"To ensure input is fully noded use <xref linkend=\"ST_Node\"/> on the input "
"geometry before polygonizing."
msgstr ""

#. Tag: para
#: reference_processing.xml:1450
#, no-c-format
msgid ""
"GeometryCollections are often difficult to deal with with third party tools. "
"Use <xref linkend=\"ST_Dump\"/> to convert the polygonize result into "
"separate polygons."
msgstr ""

#. Tag: para
#: reference_processing.xml:1456
#, no-c-format
msgid "Availability: 1.0.0RC1"
msgstr ""

#. Tag: title
#: reference_processing.xml:1460
#, no-c-format
msgid "Examples: Polygonizing single linestrings"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:1461
#, no-c-format
msgid ""
"SELECT ST_AsEWKT(ST_Polygonize(the_geom_4269)) As geomtextrep\n"
"FROM (SELECT the_geom_4269 FROM ma.suffolk_edges ORDER BY tlid LIMIT 45) As "
"foo;\n"
"\n"
"geomtextrep\n"
"-------------------------------------\n"
" SRID=4269;GEOMETRYCOLLECTION(POLYGON((-71.040878 42.285678,-71.040943 "
"42.2856,-71.04096 42.285752,-71.040878 42.285678)),\n"
" POLYGON((-71.17166 42.353675,-71.172026 42.354044,-71.17239 "
"42.354358,-71.171794 42.354971,-71.170511 42.354855,\n"
" -71.17112 42.354238,-71.17166 42.353675)))\n"
"(1 row)\n"
"\n"
"--Use ST_Dump to dump out the polygonize geoms into individual polygons\n"
"SELECT ST_AsEWKT((ST_Dump(foofoo.polycoll)).geom) As geomtextrep\n"
"FROM (SELECT ST_Polygonize(the_geom_4269) As polycoll\n"
"    FROM (SELECT the_geom_4269 FROM ma.suffolk_edges\n"
"        ORDER BY tlid LIMIT 45) As foo) As foofoo;\n"
"\n"
"geomtextrep\n"
"------------------------\n"
" SRID=4269;POLYGON((-71.040878 42.285678,-71.040943 42.2856,-71.04096 "
"42.285752,\n"
"-71.040878 42.285678))\n"
" SRID=4269;POLYGON((-71.17166 42.353675,-71.172026 42.354044,-71.17239 "
"42.354358\n"
",-71.171794 42.354971,-71.170511 42.354855,-71.17112 42.354238,-71.17166 "
"42.353675))\n"
"(2 rows)"
msgstr ""

#. Tag: para
#: reference_processing.xml:1466
#, no-c-format
msgid ", <xref linkend=\"ST_Dump\"/>"
msgstr ""

#. Tag: refname
#: reference_processing.xml:1475
#, no-c-format
msgid "ST_ReducePrecision"
msgstr ""

#. Tag: refpurpose
#: reference_processing.xml:1477
#, no-c-format
msgid ""
"Returns a valid geometry with all points rounded to the provided grid "
"tolerance."
msgstr ""

#. Tag: funcprototype
#: reference_processing.xml:1482
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_ReducePrecision</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g</parameter></paramdef> "
"<paramdef><type>float8 </type> <parameter>gridsize</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_processing.xml:1496
#, no-c-format
msgid ""
"Returns a valid geometry with all points rounded to the provided grid "
"tolerance, and features below the tolerance removed."
msgstr ""

#. Tag: para
#: reference_processing.xml:1498
#, no-c-format
msgid ""
"Unlike <xref linkend=\"ST_SnapToGrid\"/> the returned geometry will be "
"valid, with no ring self-intersections or collapsed components."
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:1505
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_ReducePrecision('POINT(1.412 19.323)', 0.1));\n"
"    st_astext\n"
"-----------------\n"
" POINT(1.4 19.3)\n"
"\n"
"SELECT ST_AsText(ST_ReducePrecision('POINT(1.412 19.323)', 1.0));\n"
"  st_astext\n"
"-------------\n"
" POINT(1 19)\n"
"\n"
" SELECT ST_AsText(ST_ReducePrecision('POINT(1.412 19.323)', 10));\n"
"  st_astext\n"
"-------------\n"
" POINT(0 20)"
msgstr ""

#. Tag: para
#: reference_processing.xml:1511
#, no-c-format
msgid ", <xref linkend=\"ST_Simplify\"/>, <xref linkend=\"ST_SimplifyVW\"/>"
msgstr ""

#. Tag: refname
#: reference_processing.xml:1517
#, no-c-format
msgid "ST_SharedPaths"
msgstr ""

#. Tag: refpurpose
#: reference_processing.xml:1518
#, no-c-format
msgid ""
"Returns a collection containing paths shared by the two input linestrings/"
"multilinestrings."
msgstr ""

#. Tag: funcprototype
#: reference_processing.xml:1523
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_SharedPaths</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>lineal1</parameter></paramdef> "
"<paramdef><type>geometry</type> <parameter>lineal2</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_processing.xml:1533
#, no-c-format
msgid ""
"Returns a collection containing paths shared by the two input geometries. "
"Those going in the same direction are in the first element of the "
"collection, those going in the opposite direction are in the second element. "
"The paths themselves are given in the direction of the first geometry."
msgstr ""

#. Tag: title
#: reference_processing.xml:1541
#, no-c-format
msgid "Examples: Finding shared paths"
msgstr ""

#. Tag: para
#: reference_processing.xml:1551
#, no-c-format
msgid "A multilinestring and a linestring"
msgstr ""

#. Tag: para
#: reference_processing.xml:1562
#, no-c-format
msgid ""
"The shared path of multilinestring and linestring overlaid with original "
"geometries."
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:1565
#, no-c-format
msgid ""
"SELECT ST_AsText(\n"
"  ST_SharedPaths(\n"
"    ST_GeomFromText('MULTILINESTRING((26 125,26 200,126 200,126 125,26 "
"125),\n"
"       (51 150,101 150,76 175,51 150))'),\n"
"    ST_GeomFromText('LINESTRING(151 100,126 156.25,126 125,90 161, 76 "
"175)')\n"
"    )\n"
"  ) As wkt\n"
"\n"
"                                wkt\n"
"-------------------------------------------------------------\n"
"GEOMETRYCOLLECTION(MULTILINESTRING((126 156.25,126 125),\n"
" (101 150,90 161),(90 161,76 175)),MULTILINESTRING EMPTY)"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:1571
#, no-c-format
msgid ""
"-- same example but linestring orientation flipped\n"
"SELECT ST_AsText(\n"
"  ST_SharedPaths(\n"
"   ST_GeomFromText('LINESTRING(76 175,90 161,126 125,126 156.25,151 100)'),\n"
"   ST_GeomFromText('MULTILINESTRING((26 125,26 200,126 200,126 125,26 125),\n"
"       (51 150,101 150,76 175,51 150))')\n"
"    )\n"
"  ) As wkt\n"
"\n"
"                                wkt\n"
"-------------------------------------------------------------\n"
"GEOMETRYCOLLECTION(MULTILINESTRING EMPTY,\n"
"MULTILINESTRING((76 175,90 161),(90 161,101 150),(126 125,126 156.25)))"
msgstr ""

#. Tag: para
#: reference_processing.xml:1581
#, no-c-format
msgid ""
", <xref linkend=\"ST_GeometryN\"/>, <xref linkend=\"ST_NumGeometries\"/>"
msgstr ""

#. Tag: refname
#: reference_processing.xml:1591
#, no-c-format
msgid "ST_Simplify"
msgstr ""

#. Tag: refpurpose
#: reference_processing.xml:1592
#, no-c-format
msgid ""
"Returns a simplified version of a geometry, using the Douglas-Peucker "
"algorithm."
msgstr ""

#. Tag: funcprototype
#: reference_processing.xml:1598
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_Simplify</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>geomA</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>tolerance</parameter></paramdef> "
"<paramdef><type>boolean</type> <parameter>preserveCollapsed</parameter></"
"paramdef>"
msgstr ""

#. Tag: para
#: reference_processing.xml:1609
#, no-c-format
msgid ""
"Returns a \"simplified\" version of the given geometry using the Douglas-"
"Peucker algorithm. Will actually do something only with (multi)lines and "
"(multi)polygons but you can safely call it with any kind of geometry. Since "
"simplification occurs on a object-by-object basis you can also feed a "
"GeometryCollection to this function."
msgstr ""

#. Tag: para
#: reference_processing.xml:1616
#, no-c-format
msgid ""
"The \"preserve collapsed\" flag will retain objects that would otherwise be "
"too small given the tolerance. For example, a 1m long line simplified with a "
"10m tolerance. If the preserve flag is given, the line will not disappear. "
"This flag is useful for rendering engines, to avoid having large numbers of "
"very small objects disappear from a map leaving surprising gaps."
msgstr ""

#. Tag: para
#: reference_processing.xml:1622 reference_processing.xml:1704
#: reference_processing.xml:1805
#, no-c-format
msgid ""
"Note that returned geometry might lose its simplicity (see <xref linkend="
"\"ST_IsSimple\"/>)"
msgstr ""

#. Tag: para
#: reference_processing.xml:1624 reference_processing.xml:1706
#: reference_processing.xml:1807
#, no-c-format
msgid ""
"Note topology may not be preserved and may result in invalid geometries. Use "
"(see <xref linkend=\"ST_SimplifyPreserveTopology\"/>) to preserve topology."
msgstr ""

#. Tag: para
#: reference_processing.xml:1626
#, no-c-format
msgid "Availability: 1.2.2"
msgstr ""

#. Tag: para
#: reference_processing.xml:1631
#, no-c-format
msgid "A circle simplified too much becomes a triangle, medium an octagon,"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:1632
#, no-c-format
msgid ""
"SELECT ST_Npoints(the_geom) AS np_before,\n"
"       ST_NPoints(ST_Simplify(the_geom,0.1)) AS np01_notbadcircle,\n"
"       ST_NPoints(ST_Simplify(the_geom,0.5)) AS np05_notquitecircle,\n"
"       ST_NPoints(ST_Simplify(the_geom,1)) AS np1_octagon,\n"
"       ST_NPoints(ST_Simplify(the_geom,10)) AS np10_triangle,\n"
"       (ST_Simplify(the_geom,100) is null) AS  np100_geometrygoesaway\n"
"  FROM\n"
"    (SELECT ST_Buffer('POINT(1 3)', 10,12) As the_geom) AS foo;\n"
"\n"
" np_before | np01_notbadcircle | np05_notquitecircle | np1_octagon | "
"np10_triangle | np100_geometrygoesaway\n"
"-----------+-------------------+---------------------+-------------"
"+---------------+------------------------\n"
"        49 |                33 |                  17 |           9 "
"|             4 | t"
msgstr ""

#. Tag: para
#: reference_processing.xml:1636
#, no-c-format
msgid ""
", <xref linkend=\"ST_SimplifyPreserveTopology\"/>, Topology <xref linkend="
"\"TP_ST_Simplify\"/>"
msgstr ""

#. Tag: refname
#: reference_processing.xml:1642
#, no-c-format
msgid "ST_SimplifyPreserveTopology"
msgstr ""

#. Tag: refpurpose
#: reference_processing.xml:1643
#, no-c-format
msgid ""
"Returns a simplified and valid version of a geometry, using the Douglas-"
"Peucker algorithm."
msgstr ""

#. Tag: funcprototype
#: reference_processing.xml:1649
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_SimplifyPreserveTopology</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>geomA</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>tolerance</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_processing.xml:1659
#, no-c-format
msgid ""
"Returns a \"simplified\" version of the given geometry using the Douglas-"
"Peucker algorithm. Will avoid creating derived geometries (polygons in "
"particular) that are invalid. Will actually do something only with "
"(multi)lines and (multi)polygons but you can safely call it with any kind of "
"geometry. Since simplification occurs on a object-by-object basis you can "
"also feed a GeometryCollection to this function."
msgstr ""

#. Tag: para
#: reference_processing.xml:1668
#, no-c-format
msgid "Availability: 1.3.3"
msgstr ""

#. Tag: para
#: reference_processing.xml:1673
#, no-c-format
msgid ""
"Same example as Simplify, but we see Preserve Topology prevents "
"oversimplification. The circle can at most become a square."
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:1674
#, no-c-format
msgid ""
"SELECT ST_Npoints(the_geom) As np_before, "
"ST_NPoints(ST_SimplifyPreserveTopology(the_geom,0.1)) As np01_notbadcircle, "
"ST_NPoints(ST_SimplifyPreserveTopology(the_geom,0.5)) As "
"np05_notquitecircle,\n"
"ST_NPoints(ST_SimplifyPreserveTopology(the_geom,1)) As np1_octagon, "
"ST_NPoints(ST_SimplifyPreserveTopology(the_geom,10)) As np10_square,\n"
"ST_NPoints(ST_SimplifyPreserveTopology(the_geom,100)) As  np100_stillsquare\n"
"FROM (SELECT ST_Buffer('POINT(1 3)', 10,12) As the_geom) As foo;\n"
"\n"
"--result--\n"
" np_before | np01_notbadcircle | np05_notquitecircle | np1_octagon | "
"np10_square | np100_stillsquare\n"
"-----------+-------------------+---------------------+-------------"
"+---------------+-------------------\n"
"        49 |                33 |                  17 |           9 "
"|             5 |                 5"
msgstr ""

#. Tag: refname
#: reference_processing.xml:1684
#, no-c-format
msgid "ST_SimplifyVW"
msgstr ""

#. Tag: refpurpose
#: reference_processing.xml:1685
#, no-c-format
msgid ""
"Returns a simplified version of a geometry, using the Visvalingam-Whyatt "
"algorithm"
msgstr ""

#. Tag: funcprototype
#: reference_processing.xml:1690
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_SimplifyVW</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>geomA</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>tolerance</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_processing.xml:1700
#, no-c-format
msgid ""
"Returns a \"simplified\" version of the given geometry using the Visvalingam-"
"Whyatt algorithm. Will actually do something only with (multi)lines and "
"(multi)polygons but you can safely call it with any kind of geometry. Since "
"simplification occurs on a object-by-object basis you can also feed a "
"GeometryCollection to this function."
msgstr ""

#. Tag: para
#: reference_processing.xml:1707 reference_processing.xml:1749
#, no-c-format
msgid ""
"This function handles 3D and the third dimension will affect the result."
msgstr ""

#. Tag: para
#: reference_processing.xml:1708 reference_processing.xml:1810
#, no-c-format
msgid "Availability: 2.2.0"
msgstr ""

#. Tag: para
#: reference_processing.xml:1713
#, no-c-format
msgid "A LineString is simplified with a minimum area threshold of 30."
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:1714
#, no-c-format
msgid ""
"select ST_AsText(ST_SimplifyVW(geom,30)) simplified\n"
"FROM (SELECT  'LINESTRING(5 2, 3 8, 6 20, 7 25, 10 10)'::geometry geom) As "
"foo;\n"
"-result\n"
" simplified\n"
"------------------------------\n"
"LINESTRING(5 2,7 25,10 10)"
msgstr ""

#. Tag: para
#: reference_processing.xml:1718
#, no-c-format
msgid ""
", <xref linkend=\"ST_Simplify\"/>, <xref linkend="
"\"ST_SimplifyPreserveTopology\"/>, Topology <xref linkend=\"TP_ST_Simplify\"/"
">"
msgstr ""

#. Tag: refname
#: reference_processing.xml:1724
#, no-c-format
msgid "ST_ChaikinSmoothing"
msgstr ""

#. Tag: refpurpose
#: reference_processing.xml:1725
#, no-c-format
msgid "Returns a smoothed version of a geometry, using the Chaikin algorithm"
msgstr ""

#. Tag: funcprototype
#: reference_processing.xml:1730
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_ChaikinSmoothing</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>geom</parameter></paramdef> "
"<paramdef><type>integer</type> <parameter>nIterations = 1</parameter></"
"paramdef> <paramdef><type>boolean</type> <parameter>preserveEndPoints = "
"false</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_processing.xml:1741
#, no-c-format
msgid ""
"Returns a \"smoothed\" version of the given geometry using the Chaikin "
"algorithm. See <ulink url=\"http://www.idav.ucdavis.edu/education/CAGDNotes/"
"Chaikins-Algorithm/Chaikins-Algorithm.html\">Chaikins-Algorithm</ulink> for "
"an explanation of the process. For each iteration the number of vertex "
"points will double. The function puts new vertex points at 1/4 of the line "
"before and after each point and removes the original point. To reduce the "
"number of points use one of the simplification functions on the result. The "
"new points gets interpolated values for all included dimensions, also z and "
"m."
msgstr ""

#. Tag: para
#: reference_processing.xml:1747
#, no-c-format
msgid "Second argument, number of iterations is limited to max 5 iterations"
msgstr ""

#. Tag: para
#: reference_processing.xml:1748
#, no-c-format
msgid ""
"Note third argument is only valid for polygons, and will be ignored for "
"linestrings"
msgstr ""

#. Tag: para
#: reference_processing.xml:1750
#, no-c-format
msgid ""
"Note that returned geometry will get more points than the original. To "
"reduce the number of points again use one of the simplification functions on "
"the result. (see <xref linkend=\"ST_Simplify\"/> and <xref linkend="
"\"ST_SimplifyVW\"/>)"
msgstr ""

#. Tag: para
#: reference_processing.xml:1758
#, no-c-format
msgid "A triangle is smoothed"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:1759
#, no-c-format
msgid ""
"select ST_AsText(ST_ChaikinSmoothing(geom)) smoothed\n"
"FROM (SELECT  'POLYGON((0 0, 8 8, 0 16, 0 0))'::geometry geom) As foo;\n"
"┌───────────────────────────────────────────┐\n"
"│                 smoothed                  │\n"
"├───────────────────────────────────────────┤\n"
"│ POLYGON((2 2,6 6,6 10,2 14,0 12,0 4,2 2)) │\n"
"└───────────────────────────────────────────┘"
msgstr ""

#. Tag: refname
#: reference_processing.xml:1769
#, no-c-format
msgid "ST_SetEffectiveArea"
msgstr ""

#. Tag: refpurpose
#: reference_processing.xml:1770
#, no-c-format
msgid ""
"Sets the effective area for each vertex, using the Visvalingam-Whyatt "
"algorithm."
msgstr ""

#. Tag: funcprototype
#: reference_processing.xml:1777
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_SetEffectiveArea</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>geomA</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>threshold = 0</parameter></paramdef> "
"<paramdef><type>integer</type> <parameter>set_area = 1</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_processing.xml:1788
#, no-c-format
msgid ""
"Sets the effective area for each vertex, using the Visvalingam-Whyatt "
"algorithm. The effective area is stored as the M-value of the vertex. If the "
"optional \"theshold\" parameter is used, a simplified geometry will be "
"returned, containing only vertices with an effective area greater than or "
"equal to the threshold value."
msgstr ""

#. Tag: para
#: reference_processing.xml:1793
#, no-c-format
msgid ""
"This function can be used for server-side simplification when a threshold is "
"specified. Another option is to use a threshold value of zero. In this case, "
"the full geometry will be returned with effective areas as M-values, which "
"can be used by the client to simplify very quickly."
msgstr ""

#. Tag: para
#: reference_processing.xml:1796
#, no-c-format
msgid ""
"Will actually do something only with (multi)lines and (multi)polygons but "
"you can safely call it with any kind of geometry. Since simplification "
"occurs on a object-by-object basis you can also feed a GeometryCollection to "
"this function."
msgstr ""

#. Tag: para
#: reference_processing.xml:1808
#, no-c-format
msgid "The output geometry will lose all previous information in the M-values"
msgstr ""

#. Tag: para
#: reference_processing.xml:1809
#, no-c-format
msgid ""
"This function handles 3D and the third dimension will affect the effective "
"area"
msgstr ""

#. Tag: para
#: reference_processing.xml:1815
#, no-c-format
msgid ""
"Calculating the effective area of a LineString. Because we use a threshold "
"value of zero, all vertices in the input geometry are returned."
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:1818
#, no-c-format
msgid ""
"select ST_AsText(ST_SetEffectiveArea(geom)) all_pts, "
"ST_AsText(ST_SetEffectiveArea(geom,30) ) thrshld_30\n"
"FROM (SELECT  'LINESTRING(5 2, 3 8, 6 20, 7 25, 10 10)'::geometry geom) As "
"foo;\n"
"-result\n"
" all_pts | thrshld_30\n"
"-----------+-------------------+\n"
"LINESTRING M (5 2 3.40282346638529e+38,3 8 29,6 20 1.5,7 25 49.5,10 10 "
"3.40282346638529e+38) | LINESTRING M (5 2 3.40282346638529e+38,7 25 49.5,10 "
"10 3.40282346638529e+38)"
msgstr ""

#. Tag: refname
#: reference_processing.xml:1828
#, no-c-format
msgid "ST_VoronoiLines"
msgstr ""

#. Tag: refpurpose
#: reference_processing.xml:1830
#, no-c-format
msgid ""
"Returns the boundaries of the Voronoi diagram of the vertices of a geometry."
msgstr ""

#. Tag: funcprototype
#: reference_processing.xml:1835
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_VoronoiLines</function></funcdef> <paramdef> "
"<parameter>g1</parameter> <type>geometry</type> </paramdef> <paramdef choice="
"\"opt\"> <parameter>tolerance</parameter> <type>float8</type> </paramdef> "
"<paramdef choice=\"opt\"> <parameter>extend_to</parameter> <type>geometry</"
"type> </paramdef>"
msgstr ""

#. Tag: para
#: reference_processing.xml:1856
#, no-c-format
msgid ""
"ST_VoronoiLines computes a two-dimensional <ulink url=\"https://en.wikipedia."
"org/wiki/Voronoi_diagram\">Voronoi diagram</ulink> from the vertices of the "
"supplied geometry and returns the boundaries between cells in that diagram "
"as a MultiLineString. Returns null if input geometry is null. Returns an "
"empty geometry collection if the input geometry contains only one vertex. "
"Returns an empty geometry collection if the extend_to envelope has zero area."
msgstr ""

#. Tag: para
#: reference_processing.xml:1861 reference_processing.xml:1951
#, no-c-format
msgid "Optional parameters:"
msgstr ""

#. Tag: para
#: reference_processing.xml:1865 reference_processing.xml:1955
#, no-c-format
msgid ""
"'tolerance' : The distance within which vertices will be considered "
"equivalent. Robustness of the algorithm can be improved by supplying a "
"nonzero tolerance distance. (default = 0.0)"
msgstr ""

#. Tag: para
#: reference_processing.xml:1868 reference_processing.xml:1958
#, no-c-format
msgid ""
"'extend_to' : If a geometry is supplied as the \"extend_to\" parameter, the "
"diagram will be extended to cover the envelope of the \"extend_to\" "
"geometry, unless that envelope is smaller than the default envelope (default "
"= NULL, default envelope is boundingbox of input geometry extended by about "
"50% in each direction)."
msgstr ""

#. Tag: para
#: reference_processing.xml:1889
#, no-c-format
msgid "Voronoi lines with tolerance of 30 units"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:1892 reference_processing.xml:2011
#, no-c-format
msgid ""
"SELECT ST_VoronoiLines(geom, 30) As geom\n"
"FROM (SELECT 'MULTIPOINT (50 30, 60 30, 100 100,10 150, 110 120)'::geometry "
"As geom ) As g"
msgstr ""

#. Tag: screen
#: reference_processing.xml:1893 reference_processing.xml:2012
#, no-c-format
msgid ""
"-- ST_AsText output\n"
"MULTILINESTRING((135.555555555556 270,36.8181818181818 92.2727272727273),"
"(36.8181818181818 92.2727272727273,-110 43.3333333333333),(230 "
"-45.7142857142858,36.8181818181818 92.2727272727273))"
msgstr ""

#. Tag: para
#: reference_processing.xml:1906
#, no-c-format
msgid ""
", <xref linkend=\"ST_VoronoiPolygons\"/>, <xref linkend=\"ST_Collect\"/>"
msgstr ""

#. Tag: refname
#: reference_processing.xml:1916
#, no-c-format
msgid "ST_VoronoiPolygons"
msgstr ""

#. Tag: refpurpose
#: reference_processing.xml:1918
#, no-c-format
msgid "Returns the cells of the Voronoi diagram of the vertices of a geometry."
msgstr ""

#. Tag: funcprototype
#: reference_processing.xml:1923
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_VoronoiPolygons</function></funcdef> "
"<paramdef> <parameter>g1</parameter> <type>geometry</type> </paramdef> "
"<paramdef choice=\"opt\"> <parameter>tolerance</parameter> <type>float8</"
"type> </paramdef> <paramdef choice=\"opt\"> <parameter>extend_to</parameter> "
"<type>geometry</type> </paramdef>"
msgstr ""

#. Tag: para
#: reference_processing.xml:1945
#, no-c-format
msgid ""
"ST_VoronoiPolygons computes a two-dimensional <ulink url=\"https://en."
"wikipedia.org/wiki/Voronoi_diagram\">Voronoi diagram</ulink> from the "
"vertices of the supplied geometry. The result is a GeometryCollection of "
"Polygons that covers an envelope larger than the extent of the input "
"vertices. Returns null if input geometry is null. Returns an empty geometry "
"collection if the input geometry contains only one vertex. Returns an empty "
"geometry collection if the extend_to envelope has zero area."
msgstr ""

#. Tag: para
#: reference_processing.xml:1981
#, no-c-format
msgid "Points overlaid on top of Voronoi diagram"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:1984
#, no-c-format
msgid ""
"SELECT\n"
"    ST_VoronoiPolygons(geom) As geom\n"
"FROM (SELECT 'MULTIPOINT (50 30, 60 30, 100 100,10 150, 110 120)'::geometry "
"As geom ) As g;"
msgstr ""

#. Tag: screen
#: reference_processing.xml:1985
#, no-c-format
msgid ""
"-- ST_AsText output\n"
"GEOMETRYCOLLECTION(POLYGON((-110 43.3333333333333,-110 270,100.5 "
"270,59.3478260869565 132.826086956522,36.8181818181818 92.2727272727273,-110 "
"43.3333333333333)),\n"
"POLYGON((55 -90,-110 -90,-110 43.3333333333333,36.8181818181818 "
"92.2727272727273,55 79.2857142857143,55 -90)),\n"
"POLYGON((230 47.5,230 -20.7142857142857,55 79.2857142857143,36.8181818181818 "
"92.2727272727273,59.3478260869565 132.826086956522,230 47.5)),POLYGON((230 "
"-20.7142857142857,230 -90,55 -90,55 79.2857142857143,230 "
"-20.7142857142857)),\n"
"POLYGON((100.5 270,230 270,230 47.5,59.3478260869565 132.826086956522,100.5 "
"270)))"
msgstr ""

#. Tag: para
#: reference_processing.xml:1995
#, no-c-format
msgid "Voronoi with tolerance of 30 units"
msgstr ""

#. Tag: programlisting
#: reference_processing.xml:1998
#, no-c-format
msgid ""
"SELECT ST_VoronoiPolygons(geom, 30) As geom\n"
"FROM (SELECT 'MULTIPOINT (50 30, 60 30, 100 100,10 150, 110 120)'::geometry "
"As geom ) As g;"
msgstr ""

#. Tag: screen
#: reference_processing.xml:1999
#, no-c-format
msgid ""
"-- ST_AsText output\n"
"GEOMETRYCOLLECTION(POLYGON((-110 43.3333333333333,-110 270,100.5 "
"270,59.3478260869565 132.826086956522,36.8181818181818 92.2727272727273,-110 "
"43.3333333333333)),\n"
"POLYGON((230 47.5,230 -45.7142857142858,36.8181818181818 "
"92.2727272727273,59.3478260869565 132.826086956522,230 47.5)),POLYGON((230 "
"-45.7142857142858,230 -90,-110 -90,-110 43.3333333333333,36.8181818181818 "
"92.2727272727273,230 -45.7142857142858)),\n"
"POLYGON((100.5 270,230 270,230 47.5,59.3478260869565 132.826086956522,100.5 "
"270)))"
msgstr ""

#. Tag: para
#: reference_processing.xml:2008
#, no-c-format
msgid "Voronoi with tolerance of 30 units as MultiLineString"
msgstr ""

#. Tag: para
#: reference_processing.xml:2025
#, no-c-format
msgid ", <xref linkend=\"ST_VoronoiLines\"/>, <xref linkend=\"ST_Collect\"/>"
msgstr ""
