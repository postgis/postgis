# SOME DESCRIPTIVE TITLE.
# 
# Translators:
# Andreas Schild <andreas.schild@bfw.gv.at>, 2017
msgid ""
msgstr ""
"Project-Id-Version: PostGIS\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2017-08-24 19:57+0000\n"
"PO-Revision-Date: 2017-08-25 15:02+0000\n"
"Last-Translator: georgersilva <georger.silva@gmail.com>\n"
"Language-Team: German (http://www.transifex.com/postgis/postgis/language/de/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: de\n"
"Plural-Forms: nplurals=2; plural=(n != 1);\n"

#. Tag: para
#: extras_tigergeocoder.xml:6
#, no-c-format
msgid ""
"A plpgsql based geocoder written to work with the <ulink "
"url=\"http://www.census.gov/geo/www/tiger/\">TIGER (Topologically Integrated"
" Geographic Encoding and Referencing system ) / Line and Master Address "
"database export</ulink> released by the US Census Bureau."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:7
#, no-c-format
msgid ""
"There are four components to the geocoder: the data loader functions, the "
"address normalizer, the address geocoder, and the reverse geocoder."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:8
#, no-c-format
msgid ""
"Although it is designed specifically for the US, a lot of the concepts and "
"functions are applicable and can be adapted to work with other country "
"address and road networks."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:9
#, no-c-format
msgid ""
"The script builds a schema called <varname>tiger</varname> to house all the "
"tiger related functions, reusable lookup data such as road type prefixes, "
"suffixes, states, various control tables for managing data load, and "
"skeleton base tables from which all the tiger loaded tables inherit from."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:10
#, no-c-format
msgid ""
"Another schema called <varname>tiger_data</varname> is also created which "
"houses all the census data for each state that the loader downloads from "
"Census site and loads into the database. In the current model, each set of "
"state tables is prefixed with the state code e.g <varname>ma_addr</varname>,"
" <varname>ma_edges</varname> etc with constraints to enforce only that state"
" data. Each of these tables inherits from the tables "
"<varname>addr</varname>, <varname>faces</varname>, <varname>edges</varname>,"
" etc located in the <varname>tiger schema</varname>."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:12
#, no-c-format
msgid ""
"All the geocode functions only reference the base tables, so there is no "
"requirement that the data schema be called <varname>tiger_data</varname> or "
"that data can't be further partitioned into other schemas -- e.g a different"
" schema for each state, as long as all the tables inherit from the tables in"
" the <varname>tiger</varname> schema."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:16
#, no-c-format
msgid ""
"For instructions on how to enable the extension in your database and also to"
" load data using it, refer to <xref "
"linkend=\"install_tiger_geocoder_extension\"/>."
msgstr "Anweisungen wie Sie die EXTENSION in Ihrer Datenbank aktivieren und mit ihr Daten laden   können, finden Sie unter <xref linkend=\"install_tiger_geocoder_extension\"/>."

#. Tag: para
#: extras_tigergeocoder.xml:19
#, no-c-format
msgid ""
"If you are using tiger geocoder (tiger_2010), you can upgrade the scripts "
"using the accompanying upgrade_geocoder.bat / .sh scripts in extras/tiger. "
"One major change between <varname>tiger_2010</varname> and "
"<varname>tiger_2011+</varname> is that the <varname>county</varname> and "
"<varname>state</varname> tables are no longer broken out by state. If you "
"have data from tiger_2010 and want to replace with tiger_2015, refer to "
"<xref linkend=\"upgrade_tiger_geocoder\"/>"
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:26
#, no-c-format
msgid ""
"New in PostGIS 2.2.0 release is support for Tiger 2015 data and inclusion of"
" Address Standardizer as part of PostGIS."
msgstr "Neu in der PostGIS 2.2.0 Release ist die Unterstützung von Tiger 2015 Daten und die Einbindung des Adressennormierers als Teil von PostGIS."

#. Tag: para
#: extras_tigergeocoder.xml:27
#, no-c-format
msgid ""
"New in PostGIS 2.1.0 release is ability to install tiger geocoder with "
"PostgreSQL extension model if you are running PostgreSQL 9.1+. Refer to "
"<xref linkend=\"install_tiger_geocoder_extension\"/> for details."
msgstr "Falls Sie mit PostgreSQL 9.1+ arbeiten, haben Sie mit der PostGIS 2.1.0 Release die neue Möglichkeit, den Tiger Geokodierer mittels dem PostgreSQL Extension Modell zu installieren. Siehe <xref linkend=\"install_tiger_geocoder_extension\"/> für Details."

#. Tag: para
#: extras_tigergeocoder.xml:30
#, no-c-format
msgid ""
"The <xref linkend=\"Pagc_Normalize_Address\"/> function as a drop in "
"replacement for in-built <xref linkend=\"Normalize_Address\"/>. Refer to "
"<xref linkend=\"installing_pagc_address_standardizer\"/> for compile and "
"installation instructions."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:34
#, no-c-format
msgid "Design:"
msgstr "Entwurf:"

#. Tag: para
#: extras_tigergeocoder.xml:35
#, no-c-format
msgid ""
"The goal of this project is to build a fully functional geocoder that can "
"process an arbitrary United States address string and using normalized TIGER"
" census data, produce a point geometry and rating reflecting the location of"
" the given address and likeliness of the location. The higher the rating "
"number the worse the result."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:37
#, no-c-format
msgid ""
"The <varname>reverse_geocode</varname> function, introduced in PostGIS 2.0.0"
" is useful for deriving the street address and cross streets of a GPS "
"location."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:38
#, no-c-format
msgid ""
"The geocoder should be simple for anyone familiar with PostGIS to install "
"and use, and should be easily installable and usable on all platforms "
"supported by PostGIS."
msgstr "Der Geokodierer sollte von jedem, der mit PostGIS vertraut ist, leicht zu installieren und zu benutzen sein. Er sollte auch auf allen von PostGIS unterstützten Plattformen installierbar und benutzbar sein."

#. Tag: para
#: extras_tigergeocoder.xml:39
#, no-c-format
msgid ""
"It should be robust enough to function properly despite formatting and "
"spelling errors."
msgstr "Abgesehen von Formatierungs- und Rechtschreibfehlern, sollte der Geokodierer stabil genug sein um einwandfrei zu funktionieren."

#. Tag: para
#: extras_tigergeocoder.xml:40
#, no-c-format
msgid ""
"It should be extensible enough to be used with future data updates, or "
"alternate data sources with a minimum of coding changes."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:42
#, no-c-format
msgid ""
"The <varname>tiger</varname> schema must be added to the database search "
"path for the functions to work properly."
msgstr "Damit die Funktionen ordnugsgemäß arbeiten, muss das <varname>tiger</varname> Schema zum Suchpfad der Datenbank hinzugefügt werden."

#. Tag: title
#: extras_tigergeocoder.xml:46
#, no-c-format
msgid "Tiger Geocoder"
msgstr "Tiger Geokoder"

#. Tag: para
#: extras_tigergeocoder.xml:48
#, no-c-format
msgid ""
"There are a couple other open source geocoders for PostGIS, that unlike "
"tiger geocoder have the advantage of multi-country geocoding support"
msgstr "Es existieren eine Reihe weiterer Open Source Geokodierer füf PostGIS, welche im Gegensatz zu dem Tiger Geokodierer den Vorteil haben, dass sie mehrere Länder unterstützen "

#. Tag: para
#: extras_tigergeocoder.xml:50
#, no-c-format
msgid ""
"<ulink "
"url=\"http://wiki.openstreetmap.org/wiki/Nominatim\">Nominatim</ulink> uses "
"OpenStreetMap gazeteer formatted data. It requires osm2pgsql for loading the"
" data, PostgreSQL 8.4+ and PostGIS 1.5+ to function. It is packaged as a "
"webservice interface and seems designed to be called as a webservice. Just "
"like the tiger geocoder, it has both a geocoder and a reverse geocoder "
"component. From the documentation, it is unclear if it has a pure SQL "
"interface like the tiger geocoder, or if a good deal of the logic is "
"implemented in the web interface."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:53
#, no-c-format
msgid ""
"<ulink url=\"http://www.gisgraphy.com/\">GIS Graphy</ulink> also utilizes "
"PostGIS and like Nominatim works with OpenStreetMap (OSM) data. It comes "
"with a loader to load OSM data and similar to Nominatim is capable of "
"geocoding not just US. Much like Nominatim, it runs as a webservice and "
"relies on Java 1.5, Servlet apps, Solr. GisGraphy is cross-platform and also"
" has a reverse geocoder among some other neat features."
msgstr ""

#. Tag: refname
#: extras_tigergeocoder.xml:58
#, no-c-format
msgid "Drop_Indexes_Generate_Script"
msgstr "Drop_Indexes_Generate_Script"

#. Tag: refpurpose
#: extras_tigergeocoder.xml:60
#, no-c-format
msgid ""
"<refpurpose>Generates a script that drops all non-primary key and non-unique"
" indexes on tiger schema and user specified schema. Defaults schema to "
"<varname>tiger_data</varname> if no schema is specified.</refpurpose>"
msgstr "<refpurpose>Erzeugt ein Skript, welches alle Indizes aus dem Datenbankschema \"Tiger\" oder aus einem vom Anwender angegebenen Schema löscht, wenn die Indizes nicht auf den Primärschlüssel gelegt und nicht \"unique\" sind. Wenn kein Schema angegeben ist wird standardmäßig auf das <varname>tiger_data</varname> Schema zugegriffen.</refpurpose>"

#. Tag: funcprototype
#: extras_tigergeocoder.xml:65
#, no-c-format
msgid ""
"<funcdef>text <function>Drop_Indexes_Generate_Script</function></funcdef> "
"<paramdef choice=\"opt\"><type>text </type> "
"<parameter>param_schema=tiger_data</parameter></paramdef>"
msgstr "<funcdef>text <function>Drop_Indexes_Generate_Script</function></funcdef> <paramdef choice=\"opt\"><type>text </type> <parameter>param_schema=tiger_data</parameter></paramdef>"

#. Tag: title
#: extras_tigergeocoder.xml:73 extras_tigergeocoder.xml:115
#: extras_tigergeocoder.xml:157 extras_tigergeocoder.xml:213
#: extras_tigergeocoder.xml:274 extras_tigergeocoder.xml:319
#: extras_tigergeocoder.xml:360 extras_tigergeocoder.xml:405
#: extras_tigergeocoder.xml:450 extras_tigergeocoder.xml:508
#: extras_tigergeocoder.xml:569 extras_tigergeocoder.xml:624
#: extras_tigergeocoder.xml:669 extras_tigergeocoder.xml:755
#: extras_tigergeocoder.xml:847 extras_tigergeocoder.xml:894
#: extras_tigergeocoder.xml:966 extras_tigergeocoder.xml:1031
#, no-c-format
msgid "Description"
msgstr "Beschreibung"

#. Tag: para
#: extras_tigergeocoder.xml:75
#, no-c-format
msgid ""
"<para>Generates a script that drops all non-primary key and non-unique "
"indexes on tiger schema and user specified schema. Defaults schema to "
"<varname>tiger_data</varname> if no schema is specified.</para>"
msgstr "<para>Erzeugt ein Skript, welches alle Indizes aus dem Datenbankschema \"Tiger\" oder aus einem vom Anwender angegebenen Schema löscht, wenn die Indizes nicht auf den Primärschlüssel gelegt und nicht \"unique\" sind. Wenn kein Schema angegeben ist wird standardmäßig auf das <varname>tiger_data</varname> Schema zugegriffen.</para>"

#. Tag: para
#: extras_tigergeocoder.xml:76
#, no-c-format
msgid ""
"This is useful for minimizing index bloat that may confuse the query planner"
" or take up unnecessary space. Use in combination with <xref "
"linkend=\"Install_Missing_Indexes\"/> to add just the indexes used by the "
"geocoder."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:79 extras_tigergeocoder.xml:163
#: extras_tigergeocoder.xml:281 extras_tigergeocoder.xml:370
#: extras_tigergeocoder.xml:413 extras_tigergeocoder.xml:468
#: extras_tigergeocoder.xml:632 extras_tigergeocoder.xml:920
#: extras_tigergeocoder.xml:992
#, no-c-format
msgid "Availability: 2.0.0"
msgstr "Verfügbarkeit: 2.0.0"

#. Tag: title
#: extras_tigergeocoder.xml:86 extras_tigergeocoder.xml:127
#: extras_tigergeocoder.xml:170 extras_tigergeocoder.xml:420
#: extras_tigergeocoder.xml:475 extras_tigergeocoder.xml:535
#: extras_tigergeocoder.xml:592 extras_tigergeocoder.xml:639
#: extras_tigergeocoder.xml:722 extras_tigergeocoder.xml:813
#: extras_tigergeocoder.xml:857 extras_tigergeocoder.xml:925
#, no-c-format
msgid "Examples"
msgstr "Beispiele"

#. Tag: programlisting
#: extras_tigergeocoder.xml:87
#, no-c-format
msgid ""
"SELECT drop_indexes_generate_script() As actionsql;\n"
"actionsql\n"
"---------------------------------------------------------\n"
"DROP INDEX tiger.idx_tiger_countysub_lookup_lower_name;\n"
"DROP INDEX tiger.idx_tiger_edges_countyfp;\n"
"DROP INDEX tiger.idx_tiger_faces_countyfp;\n"
"DROP INDEX tiger.tiger_place_the_geom_gist;\n"
"DROP INDEX tiger.tiger_edges_the_geom_gist;\n"
"DROP INDEX tiger.tiger_state_the_geom_gist;\n"
"DROP INDEX tiger.idx_tiger_addr_least_address;\n"
"DROP INDEX tiger.idx_tiger_addr_tlid;\n"
"DROP INDEX tiger.idx_tiger_addr_zip;\n"
"DROP INDEX tiger.idx_tiger_county_countyfp;\n"
"DROP INDEX tiger.idx_tiger_county_lookup_lower_name;\n"
"DROP INDEX tiger.idx_tiger_county_lookup_snd_name;\n"
"DROP INDEX tiger.idx_tiger_county_lower_name;\n"
"DROP INDEX tiger.idx_tiger_county_snd_name;\n"
"DROP INDEX tiger.idx_tiger_county_the_geom_gist;\n"
"DROP INDEX tiger.idx_tiger_countysub_lookup_snd_name;\n"
"DROP INDEX tiger.idx_tiger_cousub_countyfp;\n"
"DROP INDEX tiger.idx_tiger_cousub_cousubfp;\n"
"DROP INDEX tiger.idx_tiger_cousub_lower_name;\n"
"DROP INDEX tiger.idx_tiger_cousub_snd_name;\n"
"DROP INDEX tiger.idx_tiger_cousub_the_geom_gist;\n"
"DROP INDEX tiger_data.idx_tiger_data_ma_addr_least_address;\n"
"DROP INDEX tiger_data.idx_tiger_data_ma_addr_tlid;\n"
"DROP INDEX tiger_data.idx_tiger_data_ma_addr_zip;\n"
"DROP INDEX tiger_data.idx_tiger_data_ma_county_countyfp;\n"
"DROP INDEX tiger_data.idx_tiger_data_ma_county_lookup_lower_name;\n"
"DROP INDEX tiger_data.idx_tiger_data_ma_county_lookup_snd_name;\n"
"DROP INDEX tiger_data.idx_tiger_data_ma_county_lower_name;\n"
"DROP INDEX tiger_data.idx_tiger_data_ma_county_snd_name;\n"
":\n"
":"
msgstr "SELECT drop_indexes_generate_script() As actionsql;\nactionsql\n---------------------------------------------------------\nDROP INDEX tiger.idx_tiger_countysub_lookup_lower_name;\nDROP INDEX tiger.idx_tiger_edges_countyfp;\nDROP INDEX tiger.idx_tiger_faces_countyfp;\nDROP INDEX tiger.tiger_place_the_geom_gist;\nDROP INDEX tiger.tiger_edges_the_geom_gist;\nDROP INDEX tiger.tiger_state_the_geom_gist;\nDROP INDEX tiger.idx_tiger_addr_least_address;\nDROP INDEX tiger.idx_tiger_addr_tlid;\nDROP INDEX tiger.idx_tiger_addr_zip;\nDROP INDEX tiger.idx_tiger_county_countyfp;\nDROP INDEX tiger.idx_tiger_county_lookup_lower_name;\nDROP INDEX tiger.idx_tiger_county_lookup_snd_name;\nDROP INDEX tiger.idx_tiger_county_lower_name;\nDROP INDEX tiger.idx_tiger_county_snd_name;\nDROP INDEX tiger.idx_tiger_county_the_geom_gist;\nDROP INDEX tiger.idx_tiger_countysub_lookup_snd_name;\nDROP INDEX tiger.idx_tiger_cousub_countyfp;\nDROP INDEX tiger.idx_tiger_cousub_cousubfp;\nDROP INDEX tiger.idx_tiger_cousub_lower_name;\nDROP INDEX tiger.idx_tiger_cousub_snd_name;\nDROP INDEX tiger.idx_tiger_cousub_the_geom_gist;\nDROP INDEX tiger_data.idx_tiger_data_ma_addr_least_address;\nDROP INDEX tiger_data.idx_tiger_data_ma_addr_tlid;\nDROP INDEX tiger_data.idx_tiger_data_ma_addr_zip;\nDROP INDEX tiger_data.idx_tiger_data_ma_county_countyfp;\nDROP INDEX tiger_data.idx_tiger_data_ma_county_lookup_lower_name;\nDROP INDEX tiger_data.idx_tiger_data_ma_county_lookup_snd_name;\nDROP INDEX tiger_data.idx_tiger_data_ma_county_lower_name;\nDROP INDEX tiger_data.idx_tiger_data_ma_county_snd_name;\n:\n:"

#. Tag: title
#: extras_tigergeocoder.xml:93 extras_tigergeocoder.xml:134
#: extras_tigergeocoder.xml:177 extras_tigergeocoder.xml:244
#: extras_tigergeocoder.xml:297 extras_tigergeocoder.xml:337
#: extras_tigergeocoder.xml:383 extras_tigergeocoder.xml:427
#: extras_tigergeocoder.xml:485 extras_tigergeocoder.xml:547
#: extras_tigergeocoder.xml:601 extras_tigergeocoder.xml:646
#: extras_tigergeocoder.xml:732 extras_tigergeocoder.xml:825
#: extras_tigergeocoder.xml:868 extras_tigergeocoder.xml:940
#: extras_tigergeocoder.xml:1008 extras_tigergeocoder.xml:1048
#, no-c-format
msgid "See Also"
msgstr "Siehe auch"

#. Tag: para
#: extras_tigergeocoder.xml:94 extras_tigergeocoder.xml:428
#, no-c-format
msgid ", <xref linkend=\"Missing_Indexes_Generate_Script\"/>"
msgstr ", <xref linkend=\"Missing_Indexes_Generate_Script\"/>"

#. Tag: refname
#: extras_tigergeocoder.xml:100
#, no-c-format
msgid "Drop_Nation_Tables_Generate_Script"
msgstr "Drop_Nation_Tables_Generate_Script"

#. Tag: refpurpose
#: extras_tigergeocoder.xml:102
#, no-c-format
msgid ""
"Generates a script that drops all tables in the specified schema that start "
"with <varname>county_all</varname>, <varname>state_all</varname> or state "
"code followed by <varname>county</varname> or <varname>state</varname>."
msgstr "Erzeugt ein Skript, welches alle Tabellen in dem angegebenen Schema löscht, die mit <varname>county_all</varname>, <varname>state_all</varname> oder dem Ländercode gefolgt von <varname>county</varname> oder <varname>state</varname> beginnen."

#. Tag: funcprototype
#: extras_tigergeocoder.xml:107
#, no-c-format
msgid ""
"<funcdef>text "
"<function>Drop_Nation_Tables_Generate_Script</function></funcdef> <paramdef "
"choice=\"opt\"><type>text </type> "
"<parameter>param_schema=tiger_data</parameter></paramdef>"
msgstr "<funcdef>text <function>Drop_Nation_Tables_Generate_Script</function></funcdef> <paramdef choice=\"opt\"><type>text </type> <parameter>param_schema=tiger_data</parameter></paramdef>"

#. Tag: para
#: extras_tigergeocoder.xml:117
#, no-c-format
msgid ""
"Generates a script that drops all tables in the specified schema that start "
"with <varname>county_all</varname>, <varname>state_all</varname> or stae "
"code followed by <varname>county</varname> or <varname>state</varname>. This"
" is needed if you are upgrading from <varname>tiger_2010</varname> to "
"<varname>tiger_2011</varname> data."
msgstr "Erzeugt ein Skript, welches alle Tabellen in dem angegebenen Schema löscht, die mit <varname>county_all</varname>, <varname>state_all</varname> oder dem Ländercode gefolgt von <varname>county</varname> oder <varname>state</varname> beginnen. Dies ist dann notwendig, wenn Sie von <varname>tiger_2010</varname> auf <varname>tiger_2011</varname> Daten upgraden."

#. Tag: para
#: extras_tigergeocoder.xml:120 extras_tigergeocoder.xml:325
#: extras_tigergeocoder.xml:586 extras_tigergeocoder.xml:764
#: extras_tigergeocoder.xml:1035
#, no-c-format
msgid "Availability: 2.1.0"
msgstr "Verfügbarkeit: 2.1.0"

#. Tag: programlisting
#: extras_tigergeocoder.xml:128
#, no-c-format
msgid ""
"SELECT drop_nation_tables_generate_script();\n"
"DROP TABLE tiger_data.county_all;\n"
"DROP TABLE tiger_data.county_all_lookup;\n"
"DROP TABLE tiger_data.state_all;\n"
"DROP TABLE tiger_data.ma_county;\n"
"DROP TABLE tiger_data.ma_state;"
msgstr "SELECT drop_nation_tables_generate_script();\nDROP TABLE tiger_data.county_all;\nDROP TABLE tiger_data.county_all_lookup;\nDROP TABLE tiger_data.state_all;\nDROP TABLE tiger_data.ma_county;\nDROP TABLE tiger_data.ma_state;"

#. Tag: refname
#: extras_tigergeocoder.xml:141
#, no-c-format
msgid "Drop_State_Tables_Generate_Script"
msgstr "Drop_State_Tables_Generate_Script"

#. Tag: refpurpose
#: extras_tigergeocoder.xml:143
#, no-c-format
msgid ""
"Generates a script that drops all tables in the specified schema that are "
"prefixed with the state abbreviation. Defaults schema to "
"<varname>tiger_data</varname> if no schema is specified."
msgstr "Erzeugt ein Skript, dass alle Tabellen in dem angegebenen Schema löscht, die als Präfix einen Ländercode haben. Wenn kein Schema angegeben ist wird standardmäßig auf das <varname>tiger_data</varname> Schema zugegriffen."

#. Tag: funcprototype
#: extras_tigergeocoder.xml:148
#, no-c-format
msgid ""
"<funcdef>text "
"<function>Drop_State_Tables_Generate_Script</function></funcdef> "
"<paramdef><type>text </type> <parameter>param_state</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>text </type> "
"<parameter>param_schema=tiger_data</parameter></paramdef>"
msgstr "<funcdef>text <function>Drop_State_Tables_Generate_Script</function></funcdef> <paramdef><type>text </type> <parameter>param_state</parameter></paramdef> <paramdef choice=\"opt\"><type>text </type> <parameter>param_schema=tiger_data</parameter></paramdef>"

#. Tag: para
#: extras_tigergeocoder.xml:159
#, no-c-format
msgid ""
"Generates a script that drops all tables in the specified schema that are "
"prefixed with the state abbreviation. Defaults schema to "
"<varname>tiger_data</varname> if no schema is specified. This function is "
"useful for dropping tables of a state just before you reload a state in case"
" something went wrong during your previous load."
msgstr "Erzeugt ein Skript, dass alle Tabellen in dem angegebenen Schema löscht, die als Präfix einen Ländercode haben. Wenn kein Schema angegeben ist wird standardmäßig auf das <varname>tiger_data</varname> Schema zugegriffen. Wenn beim Import etwas schiefgegangen ist, können mit dieser Funktion die Tabellen eines Staates unmittelbar vor dem erneuten Import, gelöscht werden."

#. Tag: programlisting
#: extras_tigergeocoder.xml:171
#, no-c-format
msgid ""
"SELECT drop_state_tables_generate_script('PA');\n"
"DROP TABLE tiger_data.pa_addr;\n"
"DROP TABLE tiger_data.pa_county;\n"
"DROP TABLE tiger_data.pa_county_lookup;\n"
"DROP TABLE tiger_data.pa_cousub;\n"
"DROP TABLE tiger_data.pa_edges;\n"
"DROP TABLE tiger_data.pa_faces;\n"
"DROP TABLE tiger_data.pa_featnames;\n"
"DROP TABLE tiger_data.pa_place;\n"
"DROP TABLE tiger_data.pa_state;\n"
"DROP TABLE tiger_data.pa_zip_lookup_base;\n"
"DROP TABLE tiger_data.pa_zip_state;\n"
"DROP TABLE tiger_data.pa_zip_state_loc;"
msgstr "SELECT drop_state_tables_generate_script('PA');\nDROP TABLE tiger_data.pa_addr;\nDROP TABLE tiger_data.pa_county;\nDROP TABLE tiger_data.pa_county_lookup;\nDROP TABLE tiger_data.pa_cousub;\nDROP TABLE tiger_data.pa_edges;\nDROP TABLE tiger_data.pa_faces;\nDROP TABLE tiger_data.pa_featnames;\nDROP TABLE tiger_data.pa_place;\nDROP TABLE tiger_data.pa_state;\nDROP TABLE tiger_data.pa_zip_lookup_base;\nDROP TABLE tiger_data.pa_zip_state;\nDROP TABLE tiger_data.pa_zip_state_loc;"

#. Tag: refname
#: extras_tigergeocoder.xml:183
#, no-c-format
msgid "Geocode"
msgstr "Geocode"

#. Tag: refpurpose
#: extras_tigergeocoder.xml:185
#, no-c-format
msgid ""
"Takes in an address as a string (or other normalized address) and outputs a "
"set of possible locations which include a point geometry in NAD 83 long lat,"
" a normalized address for each, and the rating. The lower the rating the "
"more likely the match. Results are sorted by lowest rating first. Can "
"optionally pass in maximum results, defaults to 10, and restrict_region "
"(defaults to NULL)"
msgstr ""

#. Tag: funcsynopsis
#: extras_tigergeocoder.xml:190
#, no-c-format
msgid ""
"<funcprototype> <funcdef>setof record <function>geocode</function></funcdef>"
" <paramdef><type>varchar </type> <parameter>address</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>integer </type> "
"<parameter>max_results=10</parameter></paramdef> <paramdef "
"choice=\"opt\"><type>geometry </type> "
"<parameter>restrict_region=NULL</parameter></paramdef> "
"<paramdef><type>norm_addy </type> <parameter>OUT addy</parameter></paramdef>"
" <paramdef><type>geometry </type> <parameter>OUT "
"geomout</parameter></paramdef> <paramdef><type>integer </type> "
"<parameter>OUT rating</parameter></paramdef> </funcprototype> "
"<funcprototype> <funcdef>setof record <function>geocode</function></funcdef>"
" <paramdef><type>norm_addy </type> <parameter>in_addy</parameter></paramdef>"
" <paramdef choice=\"opt\"><type>integer </type> "
"<parameter>max_results=10</parameter></paramdef> <paramdef "
"choice=\"opt\"><type>geometry </type> "
"<parameter>restrict_region=NULL</parameter></paramdef> "
"<paramdef><type>norm_addy </type> <parameter>OUT addy</parameter></paramdef>"
" <paramdef><type>geometry </type> <parameter>OUT "
"geomout</parameter></paramdef> <paramdef><type>integer </type> "
"<parameter>OUT rating</parameter></paramdef> </funcprototype>"
msgstr "<funcprototype> <funcdef>setof record <function>geocode</function></funcdef> <paramdef><type>varchar </type> <parameter>address</parameter></paramdef> <paramdef choice=\"opt\"><type>integer </type> <parameter>max_results=10</parameter></paramdef> <paramdef choice=\"opt\"><type>geometry </type> <parameter>restrict_region=NULL</parameter></paramdef> <paramdef><type>norm_addy </type> <parameter>OUT addy</parameter></paramdef> <paramdef><type>geometry </type> <parameter>OUT geomout</parameter></paramdef> <paramdef><type>integer </type> <parameter>OUT rating</parameter></paramdef> </funcprototype> <funcprototype> <funcdef>setof record <function>geocode</function></funcdef> <paramdef><type>norm_addy </type> <parameter>in_addy</parameter></paramdef> <paramdef choice=\"opt\"><type>integer </type> <parameter>max_results=10</parameter></paramdef> <paramdef choice=\"opt\"><type>geometry </type> <parameter>restrict_region=NULL</parameter></paramdef> <paramdef><type>norm_addy </type> <parameter>OUT addy</parameter></paramdef> <paramdef><type>geometry </type> <parameter>OUT geomout</parameter></paramdef> <paramdef><type>integer </type> <parameter>OUT rating</parameter></paramdef> </funcprototype>"

#. Tag: para
#: extras_tigergeocoder.xml:215
#, no-c-format
msgid ""
"Takes in an address as a string (or already normalized address) and outputs "
"a set of possible locations which include a point geometry in NAD 83 long "
"lat, a <varname>normalized_address</varname> (addy) for each, and the "
"rating. The lower the rating the more likely the match. Results are sorted "
"by lowest rating first. Uses Tiger data (edges,faces,addr), PostgreSQL fuzzy"
" string matching (soundex,levenshtein) and PostGIS line interpolation "
"functions to interpolate address along the Tiger edges. The higher the "
"rating the less likely the geocode is right. The geocoded point is defaulted"
" to offset 10 meters from center-line off to side (L/R) of street address is"
" located on."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:219
#, no-c-format
msgid ""
"Enhanced: 2.0.0 to support Tiger 2010 structured data and revised some logic"
" to improve speed, accuracy of geocoding, and to offset point from "
"centerline to side of street address is located on. The new parameter "
"<varname>max_results</varname> useful for specifying number of best results "
"or just returning the best result."
msgstr ""

#. Tag: title
#: extras_tigergeocoder.xml:225 extras_tigergeocoder.xml:287
#: extras_tigergeocoder.xml:376
#, no-c-format
msgid "Examples: Basic"
msgstr "Beispiele: Grundlagen"

#. Tag: para
#: extras_tigergeocoder.xml:226
#, no-c-format
msgid ""
"The below examples timings are on a 3.0 GHZ single processor Windows 7 "
"machine with 2GB ram running PostgreSQL 9.1rc1/PostGIS 2.0 loaded with all "
"of MA,MN,CA, RI state Tiger data loaded."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:227
#, no-c-format
msgid "Exact matches are faster to compute (61ms)"
msgstr "Genaue Übereinstimmungen haben eine kürzere Rechenzeit (61ms)"

#. Tag: programlisting
#: extras_tigergeocoder.xml:228
#, no-c-format
msgid ""
"SELECT g.rating, ST_X(g.geomout) As lon, ST_Y(g.geomout) As lat,\n"
"    (addy).address As stno, (addy).streetname As street,\n"
"    (addy).streettypeabbrev As styp, (addy).location As city, (addy).stateabbrev As st,(addy).zip\n"
"    FROM geocode('75 State Street, Boston MA 02109') As g;\n"
" rating |        lon        |       lat        | stno | street | styp |  city  | st |  zip\n"
"--------+-------------------+------------------+------+--------+------+--------+----+-------\n"
"      0 | -71.0556722990239 | 42.3589914927049 |   75 | State  | St   | Boston | MA | 02109"
msgstr "SELECT g.rating, ST_X(g.geomout) As lon, ST_Y(g.geomout) As lat,\n    (addy).address As stno, (addy).streetname As street,\n    (addy).streettypeabbrev As styp, (addy).location As city, (addy).stateabbrev As st,(addy).zip\n    FROM geocode('75 State Street, Boston MA 02109') As g;\n rating |        lon        |       lat        | stno | street | styp |  city  | st |  zip\n--------+-------------------+------------------+------+--------+------+--------+----+-------\n      0 | -71.0556722990239 | 42.3589914927049 |   75 | State  | St   | Boston | MA | 02109"

#. Tag: para
#: extras_tigergeocoder.xml:229
#, no-c-format
msgid ""
"Even if zip is not passed in the geocoder can guess (took about 122-150 ms)"
msgstr "Sogar wenn der Zip-Code nicht übergeben wird, kann ihn der Geokodierer erraten (dauerte ca. 122-150ms)"

#. Tag: programlisting
#: extras_tigergeocoder.xml:230
#, no-c-format
msgid ""
"SELECT g.rating, ST_AsText(ST_SnapToGrid(g.geomout,0.00001)) As wktlonlat,\n"
"    (addy).address As stno, (addy).streetname As street,\n"
"    (addy).streettypeabbrev As styp, (addy).location As city, (addy).stateabbrev As st,(addy).zip\n"
"    FROM geocode('226 Hanover Street, Boston, MA',1) As g;\n"
" rating |         wktlonlat         | stno | street  | styp |  city  | st |  zip\n"
"--------+---------------------------+------+---------+------+--------+----+-------\n"
"      1 | POINT(-71.05528 42.36316) |  226 | Hanover | St   | Boston | MA | 02113"
msgstr "SELECT g.rating, ST_AsText(ST_SnapToGrid(g.geomout,0.00001)) As wktlonlat,\n    (addy).address As stno, (addy).streetname As street,\n    (addy).streettypeabbrev As styp, (addy).location As city, (addy).stateabbrev As st,(addy).zip\n    FROM geocode('226 Hanover Street, Boston, MA',1) As g;\n rating |         wktlonlat         | stno | street  | styp |  city  | st |  zip\n--------+---------------------------+------+---------+------+--------+----+-------\n      1 | POINT(-71.05528 42.36316) |  226 | Hanover | St   | Boston | MA | 02113"

#. Tag: para
#: extras_tigergeocoder.xml:231
#, no-c-format
msgid ""
"Can handle misspellings and provides more than one possible solution with "
"ratings and takes longer (500ms)."
msgstr ""

#. Tag: programlisting
#: extras_tigergeocoder.xml:232
#, no-c-format
msgid ""
"SELECT g.rating, ST_AsText(ST_SnapToGrid(g.geomout,0.00001)) As wktlonlat,\n"
"    (addy).address As stno, (addy).streetname As street,\n"
"    (addy).streettypeabbrev As styp, (addy).location As city, (addy).stateabbrev As st,(addy).zip\n"
"    FROM geocode('31 - 37 Stewart Street, Boston, MA 02116') As g;\n"
" rating |         wktlonlat         | stno | street | styp |  city  | st |  zip\n"
"--------+---------------------------+------+--------+------+--------+----+-------\n"
"     70 | POINT(-71.06459 42.35113) |   31 | Stuart | St   | Boston | MA | 02116"
msgstr "SELECT g.rating, ST_AsText(ST_SnapToGrid(g.geomout,0.00001)) As wktlonlat,\n    (addy).address As stno, (addy).streetname As street,\n    (addy).streettypeabbrev As styp, (addy).location As city, (addy).stateabbrev As st,(addy).zip\n    FROM geocode('31 - 37 Stewart Street, Boston, MA 02116') As g;\n rating |         wktlonlat         | stno | street | styp |  city  | st |  zip\n--------+---------------------------+------+--------+------+--------+----+-------\n     70 | POINT(-71.06459 42.35113) |   31 | Stuart | St   | Boston | MA | 02116"

#. Tag: para
#: extras_tigergeocoder.xml:234
#, no-c-format
msgid ""
"Using to do a batch geocode of addresses. Easiest is to set "
"<varname>max_results=1</varname>. Only process those not yet geocoded (have "
"no rating)."
msgstr ""

#. Tag: programlisting
#: extras_tigergeocoder.xml:235
#, no-c-format
msgid ""
"CREATE TABLE addresses_to_geocode(addid serial PRIMARY KEY, address text,\n"
"        lon numeric, lat numeric, new_address text, rating integer);\n"
"\n"
"INSERT INTO addresses_to_geocode(address)\n"
"VALUES ('529 Main Street, Boston MA, 02129'),\n"
" ('77 Massachusetts Avenue, Cambridge, MA 02139'),\n"
" ('25 Wizard of Oz, Walaford, KS 99912323'),\n"
" ('26 Capen Street, Medford, MA'),\n"
" ('124 Mount Auburn St, Cambridge, Massachusetts 02138'),\n"
" ('950 Main Street, Worcester, MA 01610');\n"
"\n"
"-- only update the first 3 addresses (323-704 ms -  there are caching and shared memory effects so first geocode you do is always slower) --\n"
"-- for large numbers of addresses you don't want to update all at once\n"
"-- since the whole geocode must commit at once\n"
"-- For this example we rejoin with LEFT JOIN\n"
"-- and set to rating to -1 rating if no match\n"
"-- to ensure we don't regeocode a bad address\n"
"UPDATE addresses_to_geocode\n"
"  SET  (rating, new_address, lon, lat)\n"
"    = ( COALESCE((g.geo).rating,-1), pprint_addy((g.geo).addy),\n"
"       ST_X((g.geo).geomout)::numeric(8,5), ST_Y((g.geo).geomout)::numeric(8,5) )\n"
"FROM (SELECT addid\n"
"    FROM addresses_to_geocode\n"
"    WHERE rating IS NULL ORDER BY addid LIMIT 3) As a\n"
"    LEFT JOIN (SELECT addid, (geocode(address,1)) As geo\n"
"    FROM addresses_to_geocode As ag\n"
"    WHERE ag.rating IS NULL ORDER BY addid LIMIT 3) As g ON a.addid = g.addid\n"
"WHERE a.addid = addresses_to_geocode.addid;\n"
"\n"
"result\n"
"-----\n"
"Query returned successfully: 3 rows affected, 480 ms execution time.\n"
"\n"
"SELECT * FROM addresses_to_geocode WHERE rating is not null;\n"
"\n"
" addid |                   address                    |    lon    |   lat    |                new_address                | rating\n"
"-------+----------------------------------------------+-----------+----------+-------------------------------------------+--------\n"
"     1 | 529 Main Street, Boston MA, 02129            | -71.07181 | 42.38359 | 529 Main St, Boston, MA 02129             |      0\n"
"     2 | 77 Massachusetts Avenue, Cambridge, MA 02139 | -71.09428 | 42.35988 | 77 Massachusetts Ave, Cambridge, MA 02139 |      0\n"
"     3 | 25 Wizard of Oz, Walaford, KS 99912323       |           |          |                                           |     -1"
msgstr ""

#. Tag: title
#: extras_tigergeocoder.xml:238
#, no-c-format
msgid "Examples: Using Geometry filter"
msgstr "Beispiele: Verwendung eines Geometrie-Filters"

#. Tag: programlisting
#: extras_tigergeocoder.xml:239
#, no-c-format
msgid ""
"SELECT g.rating, ST_AsText(ST_SnapToGrid(g.geomout,0.00001)) As wktlonlat,\n"
"    (addy).address As stno, (addy).streetname As street,\n"
"    (addy).streettypeabbrev As styp,\n"
"    (addy).location As city, (addy).stateabbrev As st,(addy).zip\n"
"  FROM geocode('100 Federal Street, MA',\n"
"        3,\n"
"        (SELECT ST_Union(the_geom)\n"
"            FROM place WHERE statefp = '25' AND name = 'Lynn')::geometry\n"
"        ) As g;\n"
"\n"
" rating |        wktlonlat         | stno | street  | styp | city | st |  zip\n"
"--------+--------------------------+------+---------+------+------+----+-------\n"
"      8 | POINT(-70.96796 42.4659) |  100 | Federal | St   | Lynn | MA | 01905\n"
"Total query runtime: 245 ms."
msgstr "SELECT g.rating, ST_AsText(ST_SnapToGrid(g.geomout,0.00001)) As wktlonlat,\n    (addy).address As stno, (addy).streetname As street,\n    (addy).streettypeabbrev As styp,\n    (addy).location As city, (addy).stateabbrev As st,(addy).zip\n  FROM geocode('100 Federal Street, MA',\n        3,\n        (SELECT ST_Union(the_geom)\n            FROM place WHERE statefp = '25' AND name = 'Lynn')::geometry\n        ) As g;\n\n rating |        wktlonlat         | stno | street  | styp | city | st |  zip\n--------+--------------------------+------+---------+------+------+----+-------\n      8 | POINT(-70.96796 42.4659) |  100 | Federal | St   | Lynn | MA | 01905\nTotal query runtime: 245 ms."

#. Tag: para
#: extras_tigergeocoder.xml:245
#, no-c-format
msgid ""
", <xref linkend=\"Pprint_Addy\"/>, <xref linkend=\"ST_AsText\"/>, <xref "
"linkend=\"ST_SnapToGrid\"/>, <xref linkend=\"ST_X\"/>, <xref "
"linkend=\"ST_Y\"/>"
msgstr ", <xref linkend=\"Pprint_Addy\"/>, <xref linkend=\"ST_AsText\"/>, <xref linkend=\"ST_SnapToGrid\"/>, <xref linkend=\"ST_X\"/>, <xref linkend=\"ST_Y\"/>"

#. Tag: refname
#: extras_tigergeocoder.xml:251
#, no-c-format
msgid "Geocode_Intersection"
msgstr "Geocode_Intersection"

#. Tag: refpurpose
#: extras_tigergeocoder.xml:253
#, no-c-format
msgid ""
"Takes in 2 streets that intersect and a state, city, zip, and outputs a set "
"of possible locations on the first cross street that is at the intersection,"
" also includes a geomout as the point location in NAD 83 long lat, a "
"<varname>normalized_address</varname> (addy) for each location, and the "
"rating. The lower the rating the more likely the match. Results are sorted "
"by lowest rating first. Can optionally pass in maximum results, defaults to "
"10. Uses Tiger data (edges, faces, addr), PostgreSQL fuzzy string matching "
"(soundex, levenshtein)."
msgstr ""

#. Tag: funcprototype
#: extras_tigergeocoder.xml:258
#, no-c-format
msgid ""
"<funcdef>setof record <function>geocode_intersection</function></funcdef> "
"<paramdef><type>text </type> <parameter> roadway1</parameter></paramdef> "
"<paramdef><type>text </type> <parameter> roadway2</parameter></paramdef> "
"<paramdef><type>text </type> <parameter> in_state</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>text </type> <parameter> "
"in_city</parameter></paramdef> <paramdef choice=\"opt\"><type>text </type> "
"<parameter> in_zip</parameter></paramdef> <paramdef "
"choice=\"opt\"><type>integer </type> "
"<parameter>max_results=10</parameter></paramdef> <paramdef><type>norm_addy "
"</type> <parameter>OUT addy</parameter></paramdef> <paramdef><type>geometry "
"</type> <parameter>OUT geomout</parameter></paramdef> "
"<paramdef><type>integer </type> <parameter>OUT rating</parameter></paramdef>"
msgstr "<funcdef>setof record <function>geocode_intersection</function></funcdef> <paramdef><type>text </type> <parameter> roadway1</parameter></paramdef> <paramdef><type>text </type> <parameter> roadway2</parameter></paramdef> <paramdef><type>text </type> <parameter> in_state</parameter></paramdef> <paramdef choice=\"opt\"><type>text </type> <parameter> in_city</parameter></paramdef> <paramdef choice=\"opt\"><type>text </type> <parameter> in_zip</parameter></paramdef> <paramdef choice=\"opt\"><type>integer </type> <parameter>max_results=10</parameter></paramdef> <paramdef><type>norm_addy </type> <parameter>OUT addy</parameter></paramdef> <paramdef><type>geometry </type> <parameter>OUT geomout</parameter></paramdef> <paramdef><type>integer </type> <parameter>OUT rating</parameter></paramdef>"

#. Tag: para
#: extras_tigergeocoder.xml:276
#, no-c-format
msgid ""
"Takes in 2 streets that intersect and a state, city, zip, and outputs a set "
"of possible locations on the first cross street that is at the intersection,"
" also includes a point geometry in NAD 83 long lat, a normalized address for"
" each location, and the rating. The lower the rating the more likely the "
"match. Results are sorted by lowest rating first. Can optionally pass in "
"maximum results, defaults to 10. Returns "
"<varname>normalized_address</varname> (addy) for each, geomout as the point "
"location in nad 83 long lat, and the rating. The lower the rating the more "
"likely the match. Results are sorted by lowest rating first. Uses Tiger data"
" (edges,faces,addr), PostgreSQL fuzzy string matching (soundex,levenshtein)"
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:288
#, no-c-format
msgid ""
"The below examples timings are on a 3.0 GHZ single processor Windows 7 "
"machine with 2GB ram running PostgreSQL 9.0/PostGIS 1.5 loaded with all of "
"MA state Tiger data loaded. Currently a bit slow (3000 ms)"
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:289
#, no-c-format
msgid ""
"Testing on Windows 2003 64-bit 8GB on PostGIS 2.0 PostgreSQL 64-bit Tiger "
"2011 data loaded -- (41ms)"
msgstr ""

#. Tag: programlisting
#: extras_tigergeocoder.xml:290
#, no-c-format
msgid ""
"SELECT pprint_addy(addy), st_astext(geomout),rating\n"
"            FROM geocode_intersection( 'Haverford St','Germania St', 'MA', 'Boston', '02130',1);\n"
"           pprint_addy            |         st_astext          | rating\n"
"----------------------------------+----------------------------+--------\n"
"98 Haverford St, Boston, MA 02130 | POINT(-71.101375 42.31376) |      0"
msgstr "SELECT pprint_addy(addy), st_astext(geomout),rating\n            FROM geocode_intersection( 'Haverford St','Germania St', 'MA', 'Boston', '02130',1);\n           pprint_addy            |         st_astext          | rating\n----------------------------------+----------------------------+--------\n98 Haverford St, Boston, MA 02130 | POINT(-71.101375 42.31376) |      0"

#. Tag: para
#: extras_tigergeocoder.xml:291
#, no-c-format
msgid ""
"Even if zip is not passed in the geocoder can guess (took about 3500 ms on "
"the windows 7 box), on the windows 2003 64-bit 741 ms"
msgstr ""

#. Tag: programlisting
#: extras_tigergeocoder.xml:292
#, no-c-format
msgid ""
"SELECT pprint_addy(addy), st_astext(geomout),rating\n"
"                FROM geocode_intersection('Weld', 'School', 'MA', 'Boston');\n"
"          pprint_addy          |        st_astext         | rating\n"
"-------------------------------+--------------------------+--------\n"
" 98 Weld Ave, Boston, MA 02119 | POINT(-71.099 42.314234) |      3\n"
" 99 Weld Ave, Boston, MA 02119 | POINT(-71.099 42.314234) |      3"
msgstr "SELECT pprint_addy(addy), st_astext(geomout),rating\n                FROM geocode_intersection('Weld', 'School', 'MA', 'Boston');\n          pprint_addy          |        st_astext         | rating\n-------------------------------+--------------------------+--------\n 98 Weld Ave, Boston, MA 02119 | POINT(-71.099 42.314234) |      3\n 99 Weld Ave, Boston, MA 02119 | POINT(-71.099 42.314234) |      3"

#. Tag: para
#: extras_tigergeocoder.xml:298
#, no-c-format
msgid ", <xref linkend=\"Pprint_Addy\"/>, <xref linkend=\"ST_AsText\"/>"
msgstr ", <xref linkend=\"Pprint_Addy\"/>, <xref linkend=\"ST_AsText\"/>"

#. Tag: refname
#: extras_tigergeocoder.xml:304
#, no-c-format
msgid "Get_Geocode_Setting"
msgstr "Get_Geocode_Setting"

#. Tag: refpurpose
#: extras_tigergeocoder.xml:306
#, no-c-format
msgid ""
"Returns value of specific setting stored in tiger.geocode_settings table."
msgstr ""

#. Tag: funcprototype
#: extras_tigergeocoder.xml:311
#, no-c-format
msgid ""
"<funcdef>text <function>Get_Geocode_Setting</function></funcdef> "
"<paramdef><type>text </type> <parameter> setting_name</parameter></paramdef>"
msgstr "<funcdef>text <function>Get_Geocode_Setting</function></funcdef> <paramdef><type>text </type> <parameter> setting_name</parameter></paramdef>"

#. Tag: para
#: extras_tigergeocoder.xml:321
#, no-c-format
msgid ""
"Returns value of specific setting stored in tiger.geocode_settings table. "
"Settings allow you to toggle debugging of functions. Later plans will be to "
"control rating with settings. Current list of settings are as follows:"
msgstr ""

#. Tag: screen
#: extras_tigergeocoder.xml:322
#, no-c-format
msgid ""
"name              | setting |  unit   | category  |                                                             short_desc\n"
"--------------------------------+---------+---------+-----------+------------------------------------------------------------------------------------------------------------------------------\n"
" debug_geocode_address          | false   | boolean | debug     | outputs debug information in notice log such as queries when geocode_address is called if true\n"
" debug_geocode_intersection     | false   | boolean | debug     | outputs debug information in notice log such as queries when geocode_intersection is called if true\n"
" debug_normalize_address        | false   | boolean | debug     | outputs debug information in notice log such as queries and intermediate expressions when normalize_address is called if true\n"
" debug_reverse_geocode          | false   | boolean | debug     | if true, outputs debug information in notice log such as queries and intermediate expressions when reverse_geocode\n"
" reverse_geocode_numbered_roads | 0       | integer | rating    | For state and county highways, 0 - no preference in name,\n"
"                                                                  1 - prefer the numbered highway name, 2 - prefer local state/county name\n"
" use_pagc_address_parser        | false   | boolean | normalize | If set to true, will try to use the address_standardizer extension (via pagc_normalize_address)\n"
"                                                                 instead of tiger normalize_address built one"
msgstr "name              | setting |  unit   | category  |                                                             short_desc\n--------------------------------+---------+---------+-----------+------------------------------------------------------------------------------------------------------------------------------\n debug_geocode_address          | false   | boolean | debug     | outputs debug information in notice log such as queries when geocode_address is called if true\n debug_geocode_intersection     | false   | boolean | debug     | outputs debug information in notice log such as queries when geocode_intersection is called if true\n debug_normalize_address        | false   | boolean | debug     | outputs debug information in notice log such as queries and intermediate expressions when normalize_address is called if true\n debug_reverse_geocode          | false   | boolean | debug     | if true, outputs debug information in notice log such as queries and intermediate expressions when reverse_geocode\n reverse_geocode_numbered_roads | 0       | integer | rating    | For state and county highways, 0 - no preference in name,\n                                                                  1 - prefer the numbered highway name, 2 - prefer local state/county name\n use_pagc_address_parser        | false   | boolean | normalize | If set to true, will try to use the address_standardizer extension (via pagc_normalize_address)\n                                                                 instead of tiger normalize_address built one"

#. Tag: para
#: extras_tigergeocoder.xml:324
#, no-c-format
msgid ""
"Changed: 2.2.0 : default settings are now kept in a table called "
"geocode_settings_default. Use customized settingsa are in geocode_settings "
"and only contain those that have been set by user."
msgstr ""

#. Tag: title
#: extras_tigergeocoder.xml:331 extras_tigergeocoder.xml:1041
#, no-c-format
msgid "Example return debugging setting"
msgstr ""

#. Tag: programlisting
#: extras_tigergeocoder.xml:332
#, no-c-format
msgid ""
"SELECT get_geocode_setting('debug_geocode_address) As result;\n"
"result\n"
"---------\n"
"false"
msgstr "SELECT get_geocode_setting('debug_geocode_address) As result;\nresult\n---------\nfalse"

#. Tag: refname
#: extras_tigergeocoder.xml:344
#, no-c-format
msgid "Get_Tract"
msgstr "Get_Tract"

#. Tag: refpurpose
#: extras_tigergeocoder.xml:346
#, no-c-format
msgid ""
"Returns census tract or field from tract table of where the geometry is "
"located. Default to returning short name of tract."
msgstr ""

#. Tag: funcprototype
#: extras_tigergeocoder.xml:351
#, no-c-format
msgid ""
"<funcdef>text <function>get_tract</function></funcdef> "
"<paramdef><type>geometry </type> <parameter> loc_geom</parameter></paramdef>"
" <paramdef choice=\"opt\"><type>text </type> <parameter> "
"output_field=name</parameter></paramdef>"
msgstr "<funcdef>text <function>get_tract</function></funcdef> <paramdef><type>geometry </type> <parameter> loc_geom</parameter></paramdef> <paramdef choice=\"opt\"><type>text </type> <parameter> output_field=name</parameter></paramdef>"

#. Tag: para
#: extras_tigergeocoder.xml:362
#, no-c-format
msgid ""
"Given a geometry will return the census tract location of that geometry. NAD"
" 83 long lat is assumed if no spatial ref sys is specified."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:363
#, no-c-format
msgid ""
"This function uses the census <varname>tract</varname> whic is not loaded by"
" default. If you have already loaded your state table, you can load tract as"
" well as bg, and tabblock using the <xref "
"linkend=\"Loader_Generate_Census_Script\"/> script."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:365
#, no-c-format
msgid ""
"If you have not loaded your state data yet and want these additional tables "
"loaded, do the following"
msgstr ""

#. Tag: programlisting
#: extras_tigergeocoder.xml:366
#, no-c-format
msgid ""
"UPDATE tiger.loader_lookuptables SET load = true WHERE load = false AND "
"lookup_name IN('tract', 'bg', 'tabblock');"
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:367
#, no-c-format
msgid ""
"then they will be included by the <xref "
"linkend=\"Loader_Generate_Script\"/>."
msgstr ""

#. Tag: programlisting
#: extras_tigergeocoder.xml:377
#, no-c-format
msgid ""
"SELECT get_tract(ST_Point(-71.101375, 42.31376) ) As tract_name;\n"
"tract_name\n"
"---------\n"
"1203.01"
msgstr "SELECT get_tract(ST_Point(-71.101375, 42.31376) ) As tract_name;\ntract_name\n---------\n1203.01"

#. Tag: programlisting
#: extras_tigergeocoder.xml:378
#, no-c-format
msgid ""
"--this one returns the tiger geoid\n"
"SELECT get_tract(ST_Point(-71.101375, 42.31376), 'tract_id' ) As tract_id;\n"
"tract_id\n"
"---------\n"
"25025120301"
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:384
#, no-c-format
msgid "<para>></para>"
msgstr "<para>></para>"

#. Tag: refname
#: extras_tigergeocoder.xml:390
#, no-c-format
msgid "Install_Missing_Indexes"
msgstr "Install_Missing_Indexes"

#. Tag: refpurpose
#: extras_tigergeocoder.xml:392
#, no-c-format
msgid ""
"Finds all tables with key columns used in geocoder joins and filter "
"conditions that are missing used indexes on those columns and will add them."
msgstr ""

#. Tag: funcprototype
#: extras_tigergeocoder.xml:397
#, no-c-format
msgid ""
"<funcdef>boolean <function>Install_Missing_Indexes</function></funcdef> "
"<paramdef></paramdef>"
msgstr "<funcdef>boolean <function>Install_Missing_Indexes</function></funcdef> <paramdef></paramdef>"

#. Tag: para
#: extras_tigergeocoder.xml:407
#, no-c-format
msgid ""
"Finds all tables in <varname>tiger</varname> and "
"<varname>tiger_data</varname> schemas with key columns used in geocoder "
"joins and filters that are missing indexes on those columns and will output "
"the SQL DDL to define the index for those tables and then execute the "
"generated script. This is a helper function that adds new indexes needed to "
"make queries faster that may have been missing during the load process. This"
" function is a companion to <xref "
"linkend=\"Missing_Indexes_Generate_Script\"/> that in addition to generating"
" the create index script, also executes it. It is called as part of the "
"<filename>update_geocode.sql</filename> upgrade script."
msgstr ""

#. Tag: programlisting
#: extras_tigergeocoder.xml:421
#, no-c-format
msgid ""
"SELECT install_missing_indexes();\n"
"         install_missing_indexes\n"
"-------------------------\n"
" t"
msgstr "SELECT install_missing_indexes();\n         install_missing_indexes\n-------------------------\n t"

#. Tag: refname
#: extras_tigergeocoder.xml:434
#, no-c-format
msgid "Loader_Generate_Census_Script"
msgstr "Loader_Generate_Census_Script"

#. Tag: refpurpose
#: extras_tigergeocoder.xml:436
#, no-c-format
msgid ""
"Generates a shell script for the specified platform for the specified states"
" that will download Tiger census state tract, bg, and tabblocks data tables,"
" stage and load into <varname>tiger_data</varname> schema. Each state script"
" is returned as a separate record."
msgstr ""

#. Tag: funcprototype
#: extras_tigergeocoder.xml:441
#, no-c-format
msgid ""
"<funcdef>setof text "
"<function>loader_generate_census_script</function></funcdef> "
"<paramdef><type>text[]</type> <parameter>param_states</parameter></paramdef>"
" <paramdef><type>text</type> <parameter>os</parameter></paramdef>"
msgstr "<funcdef>setof text <function>loader_generate_census_script</function></funcdef> <paramdef><type>text[]</type> <parameter>param_states</parameter></paramdef> <paramdef><type>text</type> <parameter>os</parameter></paramdef>"

#. Tag: para
#: extras_tigergeocoder.xml:452
#, no-c-format
msgid ""
"Generates a shell script for the specified platform for the specified states"
" that will download Tiger data census state <varname>tract</varname>, block "
"groups <varname>bg</varname>, and <varname>tabblocks</varname> data tables, "
"stage and load into <varname>tiger_data</varname> schema. Each state script "
"is returned as a separate record."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:453
#, no-c-format
msgid ""
"It uses unzip on Linux (7-zip on Windows by default) and wget to do the "
"downloading. It uses <xref linkend=\"shp2pgsql_usage\"/> to load in the "
"data. Note the smallest unit it does is a whole state. It will only process "
"the files in the staging and temp folders."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:455 extras_tigergeocoder.xml:513
#, no-c-format
msgid ""
"It uses the following control tables to control the process and different OS"
" shell syntax variations."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:459 extras_tigergeocoder.xml:517
#: extras_tigergeocoder.xml:577
#, no-c-format
msgid ""
"<varname>loader_variables</varname> keeps track of various variables such as"
" census site, year, data and staging schemas"
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:462 extras_tigergeocoder.xml:520
#, no-c-format
msgid ""
"<varname>loader_platform</varname> profiles of various platforms and where "
"the various executables are located. Comes with windows and linux. More can "
"be added."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:465 extras_tigergeocoder.xml:523
#: extras_tigergeocoder.xml:583
#, no-c-format
msgid ""
"<varname>loader_lookuptables</varname> each record defines a kind of table "
"(state, county), whether to process records in it and how to load them in. "
"Defines the steps to import data, stage data, add, removes columns, indexes,"
" and constraints for each. Each table is prefixed with the state and "
"inherits from a table in the tiger schema. e.g. creates "
"<varname>tiger_data.ma_faces</varname> which inherits from "
"<varname>tiger.faces</varname>"
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:469
#, no-c-format
msgid ""
"includes this logic, but if you installed tiger geocoder prior to PostGIS "
"2.0.0 alpha5, you'll need to run this on the states you have already done to"
" get these additional tables."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:476
#, no-c-format
msgid ""
"Generate script to load up data for select states in Windows shell script "
"format."
msgstr ""

#. Tag: programlisting
#: extras_tigergeocoder.xml:477
#, no-c-format
msgid ""
"SELECT loader_generate_census_script(ARRAY['MA'], 'windows');\n"
"-- result --\n"
"set STATEDIR=\"\\gisdata\\www2.census.gov\\geo\\pvs\\tiger2010st\\25_Massachusetts\"\n"
"set TMPDIR=\\gisdata\\temp\\\n"
"set UNZIPTOOL=\"C:\\Program Files\\7-Zip\\7z.exe\"\n"
"set WGETTOOL=\"C:\\wget\\wget.exe\"\n"
"set PGBIN=C:\\projects\\pg\\pg91win\\bin\\\n"
"set PGPORT=5432\n"
"set PGHOST=localhost\n"
"set PGUSER=postgres\n"
"set PGPASSWORD=yourpasswordhere\n"
"set PGDATABASE=tiger_postgis20\n"
"set PSQL=\"%PGBIN%psql\"\n"
"set SHP2PGSQL=\"%PGBIN%shp2pgsql\"\n"
"cd \\gisdata\n"
"\n"
"%WGETTOOL% http://www2.census.gov/geo/pvs/tiger2010st/25_Massachusetts/25/ --no-parent --relative --accept=*bg10.zip,*tract10.zip,*tabblock10.zip --mirror --reject=html\n"
"del %TMPDIR%\\*.* /Q\n"
"%PSQL% -c \"DROP SCHEMA tiger_staging CASCADE;\"\n"
"%PSQL% -c \"CREATE SCHEMA tiger_staging;\"\n"
"cd %STATEDIR%\n"
"for /r %%z in (*.zip) do %UNZIPTOOL% e %%z  -o%TMPDIR%\n"
"cd %TMPDIR%\n"
"%PSQL% -c \"CREATE TABLE tiger_data.MA_tract(CONSTRAINT pk_MA_tract PRIMARY KEY (tract_id) ) INHERITS(tiger.tract); \"\n"
"%SHP2PGSQL% -c -s 4269 -g the_geom   -W \"latin1\" tl_2010_25_tract10.dbf tiger_staging.ma_tract10 | %PSQL%\n"
"%PSQL% -c \"ALTER TABLE tiger_staging.MA_tract10 RENAME geoid10 TO tract_id;  SELECT loader_load_staged_data(lower('MA_tract10'), lower('MA_tract')); \"\n"
"%PSQL% -c \"CREATE INDEX tiger_data_MA_tract_the_geom_gist ON tiger_data.MA_tract USING gist(the_geom);\"\n"
"%PSQL% -c \"VACUUM ANALYZE tiger_data.MA_tract;\"\n"
"%PSQL% -c \"ALTER TABLE tiger_data.MA_tract ADD CONSTRAINT chk_statefp CHECK (statefp = '25');\"\n"
":"
msgstr "SELECT loader_generate_census_script(ARRAY['MA'], 'windows');\n-- result --\nset STATEDIR=\"\\gisdata\\www2.census.gov\\geo\\pvs\\tiger2010st\\25_Massachusetts\"\nset TMPDIR=\\gisdata\\temp\\\nset UNZIPTOOL=\"C:\\Program Files\\7-Zip\\7z.exe\"\nset WGETTOOL=\"C:\\wget\\wget.exe\"\nset PGBIN=C:\\projects\\pg\\pg91win\\bin\\\nset PGPORT=5432\nset PGHOST=localhost\nset PGUSER=postgres\nset PGPASSWORD=yourpasswordhere\nset PGDATABASE=tiger_postgis20\nset PSQL=\"%PGBIN%psql\"\nset SHP2PGSQL=\"%PGBIN%shp2pgsql\"\ncd \\gisdata\n\n%WGETTOOL% http://www2.census.gov/geo/pvs/tiger2010st/25_Massachusetts/25/ --no-parent --relative --accept=*bg10.zip,*tract10.zip,*tabblock10.zip --mirror --reject=html\ndel %TMPDIR%\\*.* /Q\n%PSQL% -c \"DROP SCHEMA tiger_staging CASCADE;\"\n%PSQL% -c \"CREATE SCHEMA tiger_staging;\"\ncd %STATEDIR%\nfor /r %%z in (*.zip) do %UNZIPTOOL% e %%z  -o%TMPDIR%\ncd %TMPDIR%\n%PSQL% -c \"CREATE TABLE tiger_data.MA_tract(CONSTRAINT pk_MA_tract PRIMARY KEY (tract_id) ) INHERITS(tiger.tract); \"\n%SHP2PGSQL% -c -s 4269 -g the_geom   -W \"latin1\" tl_2010_25_tract10.dbf tiger_staging.ma_tract10 | %PSQL%\n%PSQL% -c \"ALTER TABLE tiger_staging.MA_tract10 RENAME geoid10 TO tract_id;  SELECT loader_load_staged_data(lower('MA_tract10'), lower('MA_tract')); \"\n%PSQL% -c \"CREATE INDEX tiger_data_MA_tract_the_geom_gist ON tiger_data.MA_tract USING gist(the_geom);\"\n%PSQL% -c \"VACUUM ANALYZE tiger_data.MA_tract;\"\n%PSQL% -c \"ALTER TABLE tiger_data.MA_tract ADD CONSTRAINT chk_statefp CHECK (statefp = '25');\"\n:"

#. Tag: para
#: extras_tigergeocoder.xml:478 extras_tigergeocoder.xml:540
#, no-c-format
msgid "Generate sh script"
msgstr "Erzeugt ein Shell-Skript"

#. Tag: programlisting
#: extras_tigergeocoder.xml:479
#, no-c-format
msgid ""
"STATEDIR=\"/gisdata/www2.census.gov/geo/pvs/tiger2010st/25_Massachusetts\"\n"
"TMPDIR=\"/gisdata/temp/\"\n"
"UNZIPTOOL=unzip\n"
"WGETTOOL=\"/usr/bin/wget\"\n"
"export PGBIN=/usr/pgsql-9.0/bin\n"
"export PGPORT=5432\n"
"export PGHOST=localhost\n"
"export PGUSER=postgres\n"
"export PGPASSWORD=yourpasswordhere\n"
"export PGDATABASE=geocoder\n"
"PSQL=${PGBIN}/psql\n"
"SHP2PGSQL=${PGBIN}/shp2pgsql\n"
"cd /gisdata\n"
"\n"
"wget http://www2.census.gov/geo/pvs/tiger2010st/25_Massachusetts/25/ --no-parent --relative --accept=*bg10.zip,*tract10.zip,*tabblock10.zip --mirror --reject=html\n"
"rm -f ${TMPDIR}/*.*\n"
"${PSQL} -c \"DROP SCHEMA tiger_staging CASCADE;\"\n"
"${PSQL} -c \"CREATE SCHEMA tiger_staging;\"\n"
"cd $STATEDIR\n"
"for z in *.zip; do $UNZIPTOOL -o -d $TMPDIR $z; done\n"
":\n"
":"
msgstr "STATEDIR=\"/gisdata/www2.census.gov/geo/pvs/tiger2010st/25_Massachusetts\"\nTMPDIR=\"/gisdata/temp/\"\nUNZIPTOOL=unzip\nWGETTOOL=\"/usr/bin/wget\"\nexport PGBIN=/usr/pgsql-9.0/bin\nexport PGPORT=5432\nexport PGHOST=localhost\nexport PGUSER=postgres\nexport PGPASSWORD=yourpasswordhere\nexport PGDATABASE=geocoder\nPSQL=${PGBIN}/psql\nSHP2PGSQL=${PGBIN}/shp2pgsql\ncd /gisdata\n\nwget http://www2.census.gov/geo/pvs/tiger2010st/25_Massachusetts/25/ --no-parent --relative --accept=*bg10.zip,*tract10.zip,*tabblock10.zip --mirror --reject=html\nrm -f ${TMPDIR}/*.*\n${PSQL} -c \"DROP SCHEMA tiger_staging CASCADE;\"\n${PSQL} -c \"CREATE SCHEMA tiger_staging;\"\ncd $STATEDIR\nfor z in *.zip; do $UNZIPTOOL -o -d $TMPDIR $z; done\n:\n:"

#. Tag: refname
#: extras_tigergeocoder.xml:492
#, no-c-format
msgid "Loader_Generate_Script"
msgstr "Loader_Generate_Script"

#. Tag: refpurpose
#: extras_tigergeocoder.xml:494
#, no-c-format
msgid ""
"Generates a shell script for the specified platform for the specified states"
" that will download Tiger data, stage and load into "
"<varname>tiger_data</varname> schema. Each state script is returned as a "
"separate record. Latest version supports Tiger 2010 structural changes and "
"also loads census tract, block groups, and blocks tables."
msgstr ""

#. Tag: funcprototype
#: extras_tigergeocoder.xml:499
#, no-c-format
msgid ""
"<funcdef>setof text <function>loader_generate_script</function></funcdef> "
"<paramdef><type>text[]</type> <parameter>param_states</parameter></paramdef>"
" <paramdef><type>text</type> <parameter>os</parameter></paramdef>"
msgstr "<funcdef>setof text <function>loader_generate_script</function></funcdef> <paramdef><type>text[]</type> <parameter>param_states</parameter></paramdef> <paramdef><type>text</type> <parameter>os</parameter></paramdef>"

#. Tag: para
#: extras_tigergeocoder.xml:510
#, no-c-format
msgid ""
"Generates a shell script for the specified platform for the specified states"
" that will download Tiger data, stage and load into "
"<varname>tiger_data</varname> schema. Each state script is returned as a "
"separate record."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:511
#, no-c-format
msgid ""
"It uses unzip on Linux (7-zip on Windows by default) and wget to do the "
"downloading. It uses <xref linkend=\"shp2pgsql_usage\"/> to load in the "
"data. Note the smallest unit it does is a whole state, but you can overwrite"
" this by downloading the files yourself. It will only process the files in "
"the staging and temp folders."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:526
#, no-c-format
msgid ""
"Availability: 2.0.0 to support Tiger 2010 structured data and load census "
"tract (tract), block groups (bg), and blocks (tabblocks) tables ."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:527
#, no-c-format
msgid ""
"If you are using pgAdmin 3, be warned that by default pgAdmin 3 truncates "
"long text. To fix, change <emphasis>File -&gt; Options -&gt; Query Tool "
"-&gt; Query Editor - &gt; Max. characters per column</emphasis> to larger "
"than 50000 characters."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:536
#, no-c-format
msgid ""
"Using psql where gistest is your database and "
"<filename>/gisdata/data_load.sh</filename> is the file to create with the "
"shell commands to run."
msgstr ""

#. Tag: programlisting
#: extras_tigergeocoder.xml:537
#, no-c-format
msgid ""
"<![CDATA[psql -U postgres -h localhost -d gistest -A -t \\\n"
" -c \"SELECT Loader_Generate_Script(ARRAY['MA'], 'gistest')\" > /gisdata/data_load.sh;]]>"
msgstr "<![CDATA[psql -U postgres -h localhost -d gistest -A -t \\\n -c \"SELECT Loader_Generate_Script(ARRAY['MA'], 'gistest')\" > /gisdata/data_load.sh;]]>"

#. Tag: para
#: extras_tigergeocoder.xml:538
#, no-c-format
msgid ""
"Generate script to load up data for 2 states in Windows shell script format."
msgstr ""

#. Tag: programlisting
#: extras_tigergeocoder.xml:539
#, no-c-format
msgid ""
"SELECT loader_generate_script(ARRAY['MA','RI'], 'windows') AS result;\n"
"-- result --\n"
"set TMPDIR=\\gisdata\\temp\\\n"
"set UNZIPTOOL=\"C:\\Program Files\\7-Zip\\7z.exe\"\n"
"set WGETTOOL=\"C:\\wget\\wget.exe\"\n"
"set PGBIN=C:\\Program Files\\PostgreSQL\\9.4\\bin\\\n"
"set PGPORT=5432\n"
"set PGHOST=localhost\n"
"set PGUSER=postgres\n"
"set PGPASSWORD=yourpasswordhere\n"
"set PGDATABASE=geocoder\n"
"set PSQL=\"%PGBIN%psql\"\n"
"set SHP2PGSQL=\"%PGBIN%shp2pgsql\"\n"
"cd \\gisdata\n"
"\n"
"cd \\gisdata\n"
"%WGETTOOL% ftp://ftp2.census.gov/geo/tiger/TIGER2015/PLACE/tl_*_25_* --no-parent --relative --recursive --level=2 --accept=zip --mirror --reject=html\n"
"cd \\gisdata/ftp2.census.gov/geo/tiger/TIGER2015/PLACE\n"
":\n"
":"
msgstr "SELECT loader_generate_script(ARRAY['MA','RI'], 'windows') AS result;\n-- result --\nset TMPDIR=\\gisdata\\temp\\\nset UNZIPTOOL=\"C:\\Program Files\\7-Zip\\7z.exe\"\nset WGETTOOL=\"C:\\wget\\wget.exe\"\nset PGBIN=C:\\Program Files\\PostgreSQL\\9.4\\bin\\\nset PGPORT=5432\nset PGHOST=localhost\nset PGUSER=postgres\nset PGPASSWORD=yourpasswordhere\nset PGDATABASE=geocoder\nset PSQL=\"%PGBIN%psql\"\nset SHP2PGSQL=\"%PGBIN%shp2pgsql\"\ncd \\gisdata\n\ncd \\gisdata\n%WGETTOOL% ftp://ftp2.census.gov/geo/tiger/TIGER2015/PLACE/tl_*_25_* --no-parent --relative --recursive --level=2 --accept=zip --mirror --reject=html\ncd \\gisdata/ftp2.census.gov/geo/tiger/TIGER2015/PLACE\n:\n:"

#. Tag: programlisting
#: extras_tigergeocoder.xml:541
#, no-c-format
msgid ""
"SELECT loader_generate_script(ARRAY['MA','RI'], 'sh') AS result;\n"
"-- result --\n"
"TMPDIR=\"/gisdata/temp/\"\n"
"UNZIPTOOL=unzip\n"
"WGETTOOL=\"/usr/bin/wget\"\n"
"export PGBIN=/usr/lib/postgresql/9.4/bin\n"
"export PGPORT=5432\n"
"export PGHOST=localhost\n"
"export PGUSER=postgres\n"
"export PGPASSWORD=yourpasswordhere\n"
"export PGDATABASE=geocoder\n"
"PSQL=${PGBIN}/psql\n"
"SHP2PGSQL=${PGBIN}/shp2pgsql\n"
"cd /gisdata\n"
"\n"
"cd /gisdata\n"
"wget ftp://ftp2.census.gov/geo/tiger/TIGER2015/PLACE/tl_*_25_* --no-parent --relative --recursive --level=2 --accept=zip --mirror --reject=html\n"
"cd /gisdata/ftp2.census.gov/geo/tiger/TIGER2015/PLACE\n"
"rm -f ${TMPDIR}/*.*\n"
":\n"
":"
msgstr "SELECT loader_generate_script(ARRAY['MA','RI'], 'sh') AS result;\n-- result --\nTMPDIR=\"/gisdata/temp/\"\nUNZIPTOOL=unzip\nWGETTOOL=\"/usr/bin/wget\"\nexport PGBIN=/usr/lib/postgresql/9.4/bin\nexport PGPORT=5432\nexport PGHOST=localhost\nexport PGUSER=postgres\nexport PGPASSWORD=yourpasswordhere\nexport PGDATABASE=geocoder\nPSQL=${PGBIN}/psql\nSHP2PGSQL=${PGBIN}/shp2pgsql\ncd /gisdata\n\ncd /gisdata\nwget ftp://ftp2.census.gov/geo/tiger/TIGER2015/PLACE/tl_*_25_* --no-parent --relative --recursive --level=2 --accept=zip --mirror --reject=html\ncd /gisdata/ftp2.census.gov/geo/tiger/TIGER2015/PLACE\nrm -f ${TMPDIR}/*.*\n:\n:"

#. Tag: para
#: extras_tigergeocoder.xml:548
#, no-c-format
msgid ", <xref linkend=\"Loader_Generate_Nation_Script\"/>"
msgstr ", <xref linkend=\"Loader_Generate_Nation_Script\"/>"

#. Tag: refname
#: extras_tigergeocoder.xml:554
#, no-c-format
msgid "Loader_Generate_Nation_Script"
msgstr "Loader_Generate_Nation_Script"

#. Tag: refpurpose
#: extras_tigergeocoder.xml:556
#, no-c-format
msgid ""
"Generates a shell script for the specified platform that loads in the county"
" and state lookup tables."
msgstr "Erzeugt für die angegebene Plattform ein Shell-Skript, welches die County und State Lookup Tabellen ladet."

#. Tag: funcprototype
#: extras_tigergeocoder.xml:561
#, no-c-format
msgid ""
"<funcdef>text <function>loader_generate_nation_script</function></funcdef> "
"<paramdef><type>text</type> <parameter>os</parameter></paramdef>"
msgstr "<funcdef>text <function>loader_generate_nation_script</function></funcdef> <paramdef><type>text</type> <parameter>os</parameter></paramdef>"

#. Tag: para
#: extras_tigergeocoder.xml:571
#, no-c-format
msgid ""
"Generates a shell script for the specified platform that loads in the "
"<varname>county_all</varname>, <varname>county_all_lookup</varname>, "
"<varname>state_all</varname> tables into <varname>tiger_data</varname> "
"schema. These inherit respectively from the <varname>county</varname>, "
"<varname>county_lookup</varname>, <varname>state</varname> tables in "
"<varname>tiger</varname> schema."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:572
#, no-c-format
msgid ""
"It uses unzip on Linux (7-zip on Windows by default) and wget to do the "
"downloading. It uses <xref linkend=\"shp2pgsql_usage\"/> to load in the "
"data."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:573
#, no-c-format
msgid ""
"It uses the following control tables "
"<varname>tiger.loader_platform</varname>, "
"<varname>tiger.loader_variables</varname>, and "
"<varname>tiger.loader_lookuptables</varname> to control the process and "
"different OS shell syntax variations."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:580
#, no-c-format
msgid ""
"<varname>loader_platform</varname> profiles of various platforms and where "
"the various executables are located. Comes with windows and linux/unix. More"
" can be added."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:587
#, no-c-format
msgid ""
"If you were running <varname>tiger_2010</varname> version and you want to "
"reload as state with <varname>tiger_2011</varname>, you'll need to for the "
"very first load generate and run drop statements <xref "
"linkend=\"Drop_Nation_Tables_Generate_Script\"/> before you run this script."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:593
#, no-c-format
msgid "Generate script script to load nation data Windows."
msgstr ""

#. Tag: programlisting
#: extras_tigergeocoder.xml:594
#, no-c-format
msgid "SELECT loader_generate_nation_script('windows');"
msgstr "SELECT loader_generate_nation_script('windows');"

#. Tag: para
#: extras_tigergeocoder.xml:595
#, no-c-format
msgid "Generate script to load up data for Linux/Unix systems."
msgstr ""

#. Tag: programlisting
#: extras_tigergeocoder.xml:596
#, no-c-format
msgid "SELECT loader_generate_nation_script('sh');"
msgstr "SELECT loader_generate_nation_script('sh');"

#. Tag: refname
#: extras_tigergeocoder.xml:608
#, no-c-format
msgid "Missing_Indexes_Generate_Script"
msgstr "Missing_Indexes_Generate_Script"

#. Tag: refpurpose
#: extras_tigergeocoder.xml:610
#, no-c-format
msgid ""
"Finds all tables with key columns used in geocoder joins that are missing "
"indexes on those columns and will output the SQL DDL to define the index for"
" those tables."
msgstr ""

#. Tag: funcprototype
#: extras_tigergeocoder.xml:616
#, no-c-format
msgid ""
"<funcdef>text <function>Missing_Indexes_Generate_Script</function></funcdef>"
" <paramdef></paramdef>"
msgstr "<funcdef>text <function>Missing_Indexes_Generate_Script</function></funcdef> <paramdef></paramdef>"

#. Tag: para
#: extras_tigergeocoder.xml:626
#, no-c-format
msgid ""
"Finds all tables in <varname>tiger</varname> and "
"<varname>tiger_data</varname> schemas with key columns used in geocoder "
"joins that are missing indexes on those columns and will output the SQL DDL "
"to define the index for those tables. This is a helper function that adds "
"new indexes needed to make queries faster that may have been missing during "
"the load process. As the geocoder is improved, this function will be updated"
" to accommodate new indexes being used. If this function outputs nothing, it"
" means all your tables have what we think are the key indexes already in "
"place."
msgstr ""

#. Tag: programlisting
#: extras_tigergeocoder.xml:640
#, no-c-format
msgid ""
"SELECT missing_indexes_generate_script();\n"
"-- output: This was run on a database that was created before many corrections were made to the loading script ---\n"
"CREATE INDEX idx_tiger_county_countyfp ON tiger.county USING btree(countyfp);\n"
"CREATE INDEX idx_tiger_cousub_countyfp ON tiger.cousub USING btree(countyfp);\n"
"CREATE INDEX idx_tiger_edges_tfidr ON tiger.edges USING btree(tfidr);\n"
"CREATE INDEX idx_tiger_edges_tfidl ON tiger.edges USING btree(tfidl);\n"
"CREATE INDEX idx_tiger_zip_lookup_all_zip ON tiger.zip_lookup_all USING btree(zip);\n"
"CREATE INDEX idx_tiger_data_ma_county_countyfp ON tiger_data.ma_county USING btree(countyfp);\n"
"CREATE INDEX idx_tiger_data_ma_cousub_countyfp ON tiger_data.ma_cousub USING btree(countyfp);\n"
"CREATE INDEX idx_tiger_data_ma_edges_countyfp ON tiger_data.ma_edges USING btree(countyfp);\n"
"CREATE INDEX idx_tiger_data_ma_faces_countyfp ON tiger_data.ma_faces USING btree(countyfp);"
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:647
#, no-c-format
msgid ", <xref linkend=\"Install_Missing_Indexes\"/>"
msgstr ", <xref linkend=\"Install_Missing_Indexes\"/>"

#. Tag: refname
#: extras_tigergeocoder.xml:653
#, no-c-format
msgid "Normalize_Address"
msgstr "Normalize_Address"

#. Tag: refpurpose
#: extras_tigergeocoder.xml:655
#, no-c-format
msgid ""
"Given a textual street address, returns a composite "
"<varname>norm_addy</varname> type that has road suffix, prefix and type "
"standardized, street, streetname etc. broken into separate fields. This "
"function will work with just the lookup data packaged with the "
"tiger_geocoder (no need for tiger census data)."
msgstr ""

#. Tag: funcprototype
#: extras_tigergeocoder.xml:661
#, no-c-format
msgid ""
"<funcdef>norm_addy <function>normalize_address</function></funcdef> "
"<paramdef><type>varchar </type> <parameter>in_address</parameter></paramdef>"
msgstr "<funcdef>norm_addy <function>normalize_address</function></funcdef> <paramdef><type>varchar </type> <parameter>in_address</parameter></paramdef>"

#. Tag: para
#: extras_tigergeocoder.xml:671 extras_tigergeocoder.xml:757
#, no-c-format
msgid ""
"Given a textual street address, returns a composite "
"<varname>norm_addy</varname> type that has road suffix, prefix and type "
"standardized, street, streetname etc. broken into separate fields. This is "
"the first step in the geocoding process to get all addresses into normalized"
" postal form. No other data is required aside from what is packaged with the"
" geocoder."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:673
#, no-c-format
msgid ""
"This function just uses the various direction/state/suffix lookup tables "
"preloaded with the tiger_geocoder and located in the "
"<varname>tiger</varname> schema, so it doesn't need you to download tiger "
"census data or any other additional data to make use of it. You may find the"
" need to add more abbreviations or alternative namings to the various lookup"
" tables in the <varname>tiger</varname> schema."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:675 extras_tigergeocoder.xml:761
#, no-c-format
msgid ""
"It uses various control lookup tables located in <varname>tiger</varname> "
"schema to normalize the input address."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:676 extras_tigergeocoder.xml:762
#, no-c-format
msgid ""
"Fields in the <varname>norm_addy</varname> type object returned by this "
"function in this order where () indicates a field required by the geocoder, "
"[] indicates an optional field:"
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:677
#, no-c-format
msgid ""
"(address) [predirAbbrev] (streetName) [streetTypeAbbrev] [postdirAbbrev] "
"[internal] [location] [stateAbbrev] [zip] [parsed] [zip4] "
"[address_alphanumeric]"
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:678 extras_tigergeocoder.xml:770
#, no-c-format
msgid ""
"Enhanced: 2.4.0 norm_addy object includes additional fields zip4 and "
"address_alphanumeric."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:681 extras_tigergeocoder.xml:773
#, no-c-format
msgid "<varname>address</varname> is an integer: The street number"
msgstr "<varname>address</varname> ist eine Ganzzahl: Die Hausnummer"

#. Tag: para
#: extras_tigergeocoder.xml:684 extras_tigergeocoder.xml:776
#, no-c-format
msgid ""
"<varname>predirAbbrev</varname> is varchar: Directional prefix of road such "
"as N, S, E, W etc. These are controlled using the "
"<varname>direction_lookup</varname> table."
msgstr "<varname>predirAbbrev</varname> ist ein Textfeld variabler Länge: Ein Präfix für die Straßenrichtung, wie N, S, E, W etc. Wird durch die <varname>direction_lookup</varname> Tabelle gesteuert."

#. Tag: para
#: extras_tigergeocoder.xml:687 extras_tigergeocoder.xml:779
#, no-c-format
msgid "<varname>streetName</varname> varchar"
msgstr "<varname>streetName</varname> varchar"

#. Tag: para
#: extras_tigergeocoder.xml:690 extras_tigergeocoder.xml:782
#, no-c-format
msgid ""
"<varname>streetTypeAbbrev</varname> varchar abbreviated version of street "
"type: e.g. St, Ave, Cir. These are controlled using the "
"<varname>street_type_lookup</varname> table."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:693 extras_tigergeocoder.xml:785
#, no-c-format
msgid ""
"<varname>postdirAbbrev</varname> varchar abbreviated directional suffice of "
"road N, S, E, W etc. These are controlled using the "
"<varname>direction_lookup</varname> table."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:696 extras_tigergeocoder.xml:788
#, no-c-format
msgid ""
"<varname>internal</varname> varchar internal address such as an apartment or"
" suite number."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:699 extras_tigergeocoder.xml:791
#, no-c-format
msgid ""
"<varname>location</varname> varchar usually a city or governing province."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:702 extras_tigergeocoder.xml:794
#, no-c-format
msgid ""
"<varname>stateAbbrev</varname> varchar two character US State. e.g MA, NY, "
"MI. These are controlled by the <varname>state_lookup</varname> table."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:705 extras_tigergeocoder.xml:797
#, no-c-format
msgid "<varname>zip</varname> varchar 5-digit zipcode. e.g. 02109."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:708 extras_tigergeocoder.xml:800
#, no-c-format
msgid ""
"<varname>parsed</varname> boolean - denotes if addess was formed from "
"normalize process. The normalize_address function sets this to true before "
"returning the address."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:711 extras_tigergeocoder.xml:803
#, no-c-format
msgid ""
"<varname>zip4</varname> last 4 digits of a 9 digit zip code. Availability: "
"PostGIS 2.4.0."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:714 extras_tigergeocoder.xml:806
#, no-c-format
msgid ""
"<varname>address_alphanumeric</varname> Full street number even if it has "
"alpha characters like 17R. Parsing of this is better using <xref "
"linkend=\"Pagc_Normalize_Address\"/> function. Availability: PostGIS 2.4.0."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:723
#, no-c-format
msgid ""
"Output select fields. Use <xref linkend=\"Pprint_Addy\"/> if you want a "
"pretty textual output."
msgstr "Gibt die ausgewählten Felder aus. Verwenden Sie bitte <xref linkend=\"Pprint_Addy\"/> wenn Sie einen sauber formatierten Ausgabetext benötigen."

#. Tag: programlisting
#: extras_tigergeocoder.xml:724
#, no-c-format
msgid ""
"SELECT address As orig, (g.na).streetname, (g.na).streettypeabbrev\n"
" FROM (SELECT address, normalize_address(address) As na\n"
"        FROM addresses_to_geocode) As g;\n"
"\n"
"                        orig                         |  streetname   | streettypeabbrev\n"
"-----------------------------------------------------+---------------+------------------\n"
" 28 Capen Street, Medford, MA                        | Capen         | St\n"
" 124 Mount Auburn St, Cambridge, Massachusetts 02138 | Mount Auburn  | St\n"
" 950 Main Street, Worcester, MA 01610                | Main          | St\n"
" 529 Main Street, Boston MA, 02129                   | Main          | St\n"
" 77 Massachusetts Avenue, Cambridge, MA 02139        | Massachusetts | Ave\n"
" 25 Wizard of Oz, Walaford, KS 99912323              | Wizard of Oz  |"
msgstr "SELECT address As orig, (g.na).streetname, (g.na).streettypeabbrev\n FROM (SELECT address, normalize_address(address) As na\n        FROM addresses_to_geocode) As g;\n\n                        orig                         |  streetname   | streettypeabbrev\n-----------------------------------------------------+---------------+------------------\n 28 Capen Street, Medford, MA                        | Capen         | St\n 124 Mount Auburn St, Cambridge, Massachusetts 02138 | Mount Auburn  | St\n 950 Main Street, Worcester, MA 01610                | Main          | St\n 529 Main Street, Boston MA, 02129                   | Main          | St\n 77 Massachusetts Avenue, Cambridge, MA 02139        | Massachusetts | Ave\n 25 Wizard of Oz, Walaford, KS 99912323              | Wizard of Oz  |"

#. Tag: para
#: extras_tigergeocoder.xml:733
#, no-c-format
msgid ", <xref linkend=\"Pprint_Addy\"/>"
msgstr ", <xref linkend=\"Pprint_Addy\"/>"

#. Tag: refname
#: extras_tigergeocoder.xml:739
#, no-c-format
msgid "Pagc_Normalize_Address"
msgstr "Pagc_Normalize_Address"

#. Tag: refpurpose
#: extras_tigergeocoder.xml:741
#, no-c-format
msgid ""
"Given a textual street address, returns a composite "
"<varname>norm_addy</varname> type that has road suffix, prefix and type "
"standardized, street, streetname etc. broken into separate fields. This "
"function will work with just the lookup data packaged with the "
"tiger_geocoder (no need for tiger census data). Requires "
"address_standardizer extension."
msgstr ""

#. Tag: funcprototype
#: extras_tigergeocoder.xml:747
#, no-c-format
msgid ""
"<funcdef>norm_addy <function>pagc_normalize_address</function></funcdef> "
"<paramdef><type>varchar </type> <parameter>in_address</parameter></paramdef>"
msgstr "<funcdef>norm_addy <function>pagc_normalize_address</function></funcdef> <paramdef><type>varchar </type> <parameter>in_address</parameter></paramdef>"

#. Tag: para
#: extras_tigergeocoder.xml:759
#, no-c-format
msgid ""
"This function just uses the various pagc_* lookup tables preloaded with the "
"tiger_geocoder and located in the <varname>tiger</varname> schema, so it "
"doesn't need you to download tiger census data or any other additional data "
"to make use of it. You may find the need to add more abbreviations or "
"alternative namings to the various lookup tables in the "
"<varname>tiger</varname> schema."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:763
#, no-c-format
msgid ""
"There are slight variations in casing and formatting over the <xref "
"linkend=\"Normalize_Address\"/>."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:765
#, no-c-format
msgid "&address_standardizer_required;"
msgstr "&address_standardizer_required;"

#. Tag: para
#: extras_tigergeocoder.xml:766
#, no-c-format
msgid ""
"(address) [predirAbbrev] (streetName) [streetTypeAbbrev] [postdirAbbrev] "
"[internal] [location] [stateAbbrev] [zip]"
msgstr "(address) [predirAbbrev] (streetName) [streetTypeAbbrev] [postdirAbbrev] [internal] [location] [stateAbbrev] [zip]"

#. Tag: para
#: extras_tigergeocoder.xml:767
#, no-c-format
msgid ""
"The native standardaddr of address_standardizer extension is at this time a "
"bit richer than norm_addy since its designed to support international "
"addresses (including country). standardaddr equivalent fields are:"
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:768
#, no-c-format
msgid "house_num,predir, name, suftype, sufdir, unit, city, state, postcode"
msgstr "house_num,predir, name, suftype, sufdir, unit, city, state, postcode"

#. Tag: para
#: extras_tigergeocoder.xml:814
#, no-c-format
msgid "Single call example"
msgstr "Beispiel für einen Einzelaufruf"

#. Tag: programlisting
#: extras_tigergeocoder.xml:815
#, no-c-format
msgid ""
"SELECT addy.*\n"
"FROM pagc_normalize_address('9000 E ROO ST STE 999, Springfield, CO') AS addy;\n"
"\n"
"\n"
" address | predirabbrev | streetname | streettypeabbrev | postdirabbrev | internal  |  location   | stateabbrev | zip | parsed\n"
"---------+--------------+------------+------------------+---------------+-----------+-------------+-------------+-----+--------\n"
"    9000 | E            | ROO        | ST               |               | SUITE 999 | SPRINGFIELD | CO          |     | t"
msgstr "SELECT addy.*\nFROM pagc_normalize_address('9000 E ROO ST STE 999, Springfield, CO') AS addy;\n\n\n address | predirabbrev | streetname | streettypeabbrev | postdirabbrev | internal  |  location   | stateabbrev | zip | parsed\n---------+--------------+------------+------------------+---------------+-----------+-------------+-------------+-----+--------\n    9000 | E            | ROO        | ST               |               | SUITE 999 | SPRINGFIELD | CO          |     | t"

#. Tag: para
#: extras_tigergeocoder.xml:817
#, no-c-format
msgid ""
"Batch call. There are currently speed issues with the way "
"postgis_tiger_geocoder wraps the address_standardizer. These will hopefully "
"be resolved in later editions. To work around them, if you need speed for "
"batch geocoding to call generate a normaddy in batch mode, you are "
"encouraged to directly call the address_standardizer standardize_address "
"function as shown below which is similar exercise to what we did in <xref "
"linkend=\"Normalize_Address\"/> that uses data created in <xref "
"linkend=\"Geocode\"/>."
msgstr ""

#. Tag: programlisting
#: extras_tigergeocoder.xml:821
#, no-c-format
msgid ""
"WITH g AS (SELECT address, ROW((sa).house_num, (sa).predir, (sa).name\n"
"  , (sa).suftype, (sa).sufdir, (sa).unit , (sa).city, (sa).state, (sa).postcode, true)::norm_addy As na\n"
" FROM (SELECT address, standardize_address('tiger.pagc_lex'\n"
"       , 'tiger.pagc_gaz'\n"
"       , 'tiger.pagc_rules', address) As sa\n"
"        FROM addresses_to_geocode) As g)\n"
"SELECT address As orig, (g.na).streetname, (g.na).streettypeabbrev\n"
" FROM  g;\n"
"\n"
" orig                                                |  streetname   | streettypeabbrev\n"
"-----------------------------------------------------+---------------+------------------\n"
" 529 Main Street, Boston MA, 02129                   | MAIN          | ST\n"
" 77 Massachusetts Avenue, Cambridge, MA 02139        | MASSACHUSETTS | AVE\n"
" 25 Wizard of Oz, Walaford, KS 99912323              | WIZARD OF     |\n"
" 26 Capen Street, Medford, MA                        | CAPEN         | ST\n"
" 124 Mount Auburn St, Cambridge, Massachusetts 02138 | MOUNT AUBURN  | ST\n"
" 950 Main Street, Worcester, MA 01610                | MAIN          | ST"
msgstr "WITH g AS (SELECT address, ROW((sa).house_num, (sa).predir, (sa).name\n  , (sa).suftype, (sa).sufdir, (sa).unit , (sa).city, (sa).state, (sa).postcode, true)::norm_addy As na\n FROM (SELECT address, standardize_address('tiger.pagc_lex'\n       , 'tiger.pagc_gaz'\n       , 'tiger.pagc_rules', address) As sa\n        FROM addresses_to_geocode) As g)\nSELECT address As orig, (g.na).streetname, (g.na).streettypeabbrev\n FROM  g;\n\n orig                                                |  streetname   | streettypeabbrev\n-----------------------------------------------------+---------------+------------------\n 529 Main Street, Boston MA, 02129                   | MAIN          | ST\n 77 Massachusetts Avenue, Cambridge, MA 02139        | MASSACHUSETTS | AVE\n 25 Wizard of Oz, Walaford, KS 99912323              | WIZARD OF     |\n 26 Capen Street, Medford, MA                        | CAPEN         | ST\n 124 Mount Auburn St, Cambridge, Massachusetts 02138 | MOUNT AUBURN  | ST\n 950 Main Street, Worcester, MA 01610                | MAIN          | ST"

#. Tag: para
#: extras_tigergeocoder.xml:826 extras_tigergeocoder.xml:942
#, no-c-format
msgid ", <xref linkend=\"Geocode\"/>"
msgstr ", <xref linkend=\"Geocode\"/>"

#. Tag: refname
#: extras_tigergeocoder.xml:832
#, no-c-format
msgid "Pprint_Addy"
msgstr "Pprint_Addy"

#. Tag: refpurpose
#: extras_tigergeocoder.xml:834
#, no-c-format
msgid ""
"Given a <varname>norm_addy</varname> composite type object, returns a pretty"
" print representation of it. Usually used in conjunction with "
"normalize_address."
msgstr ""

#. Tag: funcprototype
#: extras_tigergeocoder.xml:839
#, no-c-format
msgid ""
"<funcdef>varchar <function>pprint_addy</function></funcdef> "
"<paramdef><type>norm_addy </type> <parameter>in_addy</parameter></paramdef>"
msgstr "<funcdef>varchar <function>pprint_addy</function></funcdef> <paramdef><type>norm_addy </type> <parameter>in_addy</parameter></paramdef>"

#. Tag: para
#: extras_tigergeocoder.xml:849
#, no-c-format
msgid ""
"Given a <varname>norm_addy</varname> composite type object, returns a pretty"
" print representation of it. No other data is required aside from what is "
"packaged with the geocoder."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:850
#, no-c-format
msgid "Usually used in conjunction with <xref linkend=\"Normalize_Address\"/>."
msgstr "Wird üblicherweise in Verbindung mit <xref linkend=\"Normalize_Address\"/> verwendet."

#. Tag: para
#: extras_tigergeocoder.xml:858
#, no-c-format
msgid "Pretty print a single address"
msgstr ""

#. Tag: programlisting
#: extras_tigergeocoder.xml:859
#, no-c-format
msgid ""
"SELECT pprint_addy(normalize_address('202 East Fremont Street, Las Vegas, Nevada 89101')) As pretty_address;\n"
"            pretty_address\n"
"---------------------------------------\n"
" 202 E Fremont St, Las Vegas, NV 89101"
msgstr "SELECT pprint_addy(normalize_address('202 East Fremont Street, Las Vegas, Nevada 89101')) As pretty_address;\n            pretty_address\n---------------------------------------\n 202 E Fremont St, Las Vegas, NV 89101"

#. Tag: para
#: extras_tigergeocoder.xml:861
#, no-c-format
msgid "Pretty print address a table of addresses"
msgstr ""

#. Tag: programlisting
#: extras_tigergeocoder.xml:862
#, no-c-format
msgid ""
"SELECT address As orig, pprint_addy(normalize_address(address)) As pretty_address\n"
"        FROM addresses_to_geocode;\n"
"\n"
"                        orig                         |              pretty_address\n"
"-----------------------------------------------------+-------------------------------------------\n"
" 529 Main Street, Boston MA, 02129                   | 529 Main St, Boston MA, 02129\n"
" 77 Massachusetts Avenue, Cambridge, MA 02139        | 77 Massachusetts Ave, Cambridge, MA 02139\n"
" 28 Capen Street, Medford, MA                        | 28 Capen St, Medford, MA\n"
" 124 Mount Auburn St, Cambridge, Massachusetts 02138 | 124 Mount Auburn St, Cambridge, MA 02138\n"
" 950 Main Street, Worcester, MA 01610                | 950 Main St, Worcester, MA 01610"
msgstr "SELECT address As orig, pprint_addy(normalize_address(address)) As pretty_address\n        FROM addresses_to_geocode;\n\n                        orig                         |              pretty_address\n-----------------------------------------------------+-------------------------------------------\n 529 Main Street, Boston MA, 02129                   | 529 Main St, Boston MA, 02129\n 77 Massachusetts Avenue, Cambridge, MA 02139        | 77 Massachusetts Ave, Cambridge, MA 02139\n 28 Capen Street, Medford, MA                        | 28 Capen St, Medford, MA\n 124 Mount Auburn St, Cambridge, Massachusetts 02138 | 124 Mount Auburn St, Cambridge, MA 02138\n 950 Main Street, Worcester, MA 01610                | 950 Main St, Worcester, MA 01610"

#. Tag: refname
#: extras_tigergeocoder.xml:875
#, no-c-format
msgid "Reverse_Geocode"
msgstr "Reverse_Geocode"

#. Tag: refpurpose
#: extras_tigergeocoder.xml:877
#, no-c-format
msgid ""
"Takes a geometry point in a known spatial ref sys and returns a record "
"containing an array of theoretically possible addresses and an array of "
"cross streets. If include_strnum_range = true, includes the street range in "
"the cross streets."
msgstr ""

#. Tag: funcprototype
#: extras_tigergeocoder.xml:882
#, no-c-format
msgid ""
"<funcdef>record <function>Reverse_Geocode</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>pt</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>boolean </type> "
"<parameter>include_strnum_range=false</parameter></paramdef> "
"<paramdef><type>geometry[] </type> <parameter>OUT "
"intpt</parameter></paramdef> <paramdef><type>norm_addy[] </type> "
"<parameter>OUT addy</parameter></paramdef> <paramdef><type>varchar[] </type>"
" <parameter>OUT street</parameter></paramdef>"
msgstr "<funcdef>record <function>Reverse_Geocode</function></funcdef> <paramdef><type>geometry </type> <parameter>pt</parameter></paramdef> <paramdef choice=\"opt\"><type>boolean </type> <parameter>include_strnum_range=false</parameter></paramdef> <paramdef><type>geometry[] </type> <parameter>OUT intpt</parameter></paramdef> <paramdef><type>norm_addy[] </type> <parameter>OUT addy</parameter></paramdef> <paramdef><type>varchar[] </type> <parameter>OUT street</parameter></paramdef>"

#. Tag: para
#: extras_tigergeocoder.xml:896
#, no-c-format
msgid ""
"Takes a geometry point in a known spatial ref and returns a record "
"containing an array of theoretically possible addresses and an array of "
"cross streets. If include_strnum_range = true, includes the street range in "
"the cross streets. include_strnum_range defaults to false if not passed in. "
"Addresses are sorted according to which road a point is closest to so first "
"address is most likely the right one."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:899
#, no-c-format
msgid ""
"Why do we say theoretical instead of actual addresses. The Tiger data "
"doesn't have real addresses, but just street ranges. As such the theoretical"
" address is an interpolated address based on the street ranges. Like for "
"example interpolating one of my addresses returns a 26 Court St. and 26 "
"Court Sq., though there is no such place as 26 Court Sq. This is because a "
"point may be at a corner of 2 streets and thus the logic interpolates along "
"both streets. The logic also assumes addresses are equally spaced along a "
"street, which of course is wrong since you can have a municipal building "
"taking up a good chunk of the street range and the rest of the buildings are"
" clustered at the end."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:904
#, no-c-format
msgid ""
"Note: Hmm this function relies on Tiger data. If you have not loaded data "
"covering the region of this point, then hmm you will get a record filled "
"with NULLS."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:905
#, no-c-format
msgid "Returned elements of the record are as follows:"
msgstr "Die zurückgelieferten Elemente des Datensatzes lauten wie folgt:"

#. Tag: para
#: extras_tigergeocoder.xml:908
#, no-c-format
msgid ""
"<varname>intpt</varname> is an array of points: These are the center line "
"points on the street closest to the input point. There are as many points as"
" there are addresses."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:911
#, no-c-format
msgid ""
"<varname>addy</varname> is an array of norm_addy (normalized addresses): "
"These are an array of possible addresses that fit the input point. The first"
" one in the array is most likely. Generally there should be only one, except"
" in the case when a point is at the corner of 2 or 3 streets, or the point "
"is somewhere on the road and not off to the side."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:915
#, no-c-format
msgid ""
"<varname>street</varname> an array of varchar: These are cross streets (or "
"the street) (streets that intersect or are the street the point is projected"
" to be on)."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:926
#, no-c-format
msgid ""
"Example of a point at the corner of two streets, but closest to one. This is"
" approximate location of MIT: 77 Massachusetts Ave, Cambridge, MA 02139 Note"
" that although we don't have 3 streets, PostgreSQL will just return null for"
" entries above our upper bound so safe to use. This includes street ranges"
msgstr ""

#. Tag: programlisting
#: extras_tigergeocoder.xml:928
#, no-c-format
msgid ""
"SELECT pprint_addy(r.addy[1]) As st1, pprint_addy(r.addy[2]) As st2, pprint_addy(r.addy[3]) As st3,\n"
"            array_to_string(r.street, ',') As cross_streets\n"
"        FROM reverse_geocode(ST_GeomFromText('POINT(-71.093902 42.359446)',4269),true) As r;\n"
"\n"
" result\n"
" ------\n"
"      st1                                  | st2 | st3 |               cross_streets\n"
"-------------------------------------------+-----+-----+----------------------------------------------\n"
" 67 Massachusetts Ave, Cambridge, MA 02139 |     |     | 67 - 127 Massachusetts Ave,32 - 88 Vassar St"
msgstr "SELECT pprint_addy(r.addy[1]) As st1, pprint_addy(r.addy[2]) As st2, pprint_addy(r.addy[3]) As st3,\n            array_to_string(r.street, ',') As cross_streets\n        FROM reverse_geocode(ST_GeomFromText('POINT(-71.093902 42.359446)',4269),true) As r;\n\n result\n ------\n      st1                                  | st2 | st3 |               cross_streets\n-------------------------------------------+-----+-----+----------------------------------------------\n 67 Massachusetts Ave, Cambridge, MA 02139 |     |     | 67 - 127 Massachusetts Ave,32 - 88 Vassar St"

#. Tag: para
#: extras_tigergeocoder.xml:930
#, no-c-format
msgid ""
"Here we choose not to include the address ranges for the cross streets and "
"picked a location really really close to a corner of 2 streets thus could be"
" known by two different addresses."
msgstr ""

#. Tag: programlisting
#: extras_tigergeocoder.xml:932
#, no-c-format
msgid ""
"SELECT pprint_addy(r.addy[1]) As st1, pprint_addy(r.addy[2]) As st2,\n"
"pprint_addy(r.addy[3]) As st3, array_to_string(r.street, ',') As cross_str\n"
"FROM reverse_geocode(ST_GeomFromText('POINT(-71.06941 42.34225)',4269)) As r;\n"
"\n"
"result\n"
"--------\n"
"               st1               |               st2               | st3 | cross_str\n"
"---------------------------------+---------------------------------+-----+------------------------\n"
" 5 Bradford St, Boston, MA 02118 | 49 Waltham St, Boston, MA 02118 |     | Waltham St"
msgstr "SELECT pprint_addy(r.addy[1]) As st1, pprint_addy(r.addy[2]) As st2,\npprint_addy(r.addy[3]) As st3, array_to_string(r.street, ',') As cross_str\nFROM reverse_geocode(ST_GeomFromText('POINT(-71.06941 42.34225)',4269)) As r;\n\nresult\n--------\n               st1               |               st2               | st3 | cross_str\n---------------------------------+---------------------------------+-----+------------------------\n 5 Bradford St, Boston, MA 02118 | 49 Waltham St, Boston, MA 02118 |     | Waltham St"

#. Tag: para
#: extras_tigergeocoder.xml:934
#, no-c-format
msgid ""
"For this one we reuse our geocoded example from <xref linkend=\"Geocode\"/> "
"and we only want the primary address and at most 2 cross streets."
msgstr ""

#. Tag: programlisting
#: extras_tigergeocoder.xml:935
#, no-c-format
msgid ""
"SELECT actual_addr, lon, lat, pprint_addy((rg).addy[1]) As int_addr1,\n"
"    (rg).street[1] As cross1, (rg).street[2] As cross2\n"
"FROM (SELECT address As actual_addr, lon, lat,\n"
"    reverse_geocode( ST_SetSRID(ST_Point(lon,lat),4326) ) As rg\n"
"    FROM addresses_to_geocode WHERE rating > -1) As foo;\n"
"\n"
"                     actual_addr                     |    lon    |   lat    |                 int_addr1                 |     cross1      |   cross2\n"
"-----------------------------------------------------+-----------+----------+-------------------------------------------+-----------------+------------\n"
" 529 Main Street, Boston MA, 02129                   | -71.07181 | 42.38359 | 527 Main St, Boston, MA 02129             | Medford St      |\n"
" 77 Massachusetts Avenue, Cambridge, MA 02139        | -71.09428 | 42.35988 | 77 Massachusetts Ave, Cambridge, MA 02139 | Vassar St       |\n"
" 26 Capen Street, Medford, MA                        | -71.12377 | 42.41101 | 9 Edison Ave, Medford, MA 02155           | Capen St        | Tesla Ave\n"
" 124 Mount Auburn St, Cambridge, Massachusetts 02138 | -71.12304 | 42.37328 | 3 University Rd, Cambridge, MA 02138      | Mount Auburn St |\n"
" 950 Main Street, Worcester, MA 01610                | -71.82368 | 42.24956 | 3 Maywood St, Worcester, MA 01603         | Main St         | Maywood Pl"
msgstr "SELECT actual_addr, lon, lat, pprint_addy((rg).addy[1]) As int_addr1,\n    (rg).street[1] As cross1, (rg).street[2] As cross2\nFROM (SELECT address As actual_addr, lon, lat,\n    reverse_geocode( ST_SetSRID(ST_Point(lon,lat),4326) ) As rg\n    FROM addresses_to_geocode WHERE rating > -1) As foo;\n\n                     actual_addr                     |    lon    |   lat    |                 int_addr1                 |     cross1      |   cross2\n-----------------------------------------------------+-----------+----------+-------------------------------------------+-----------------+------------\n 529 Main Street, Boston MA, 02129                   | -71.07181 | 42.38359 | 527 Main St, Boston, MA 02129             | Medford St      |\n 77 Massachusetts Avenue, Cambridge, MA 02139        | -71.09428 | 42.35988 | 77 Massachusetts Ave, Cambridge, MA 02139 | Vassar St       |\n 26 Capen Street, Medford, MA                        | -71.12377 | 42.41101 | 9 Edison Ave, Medford, MA 02155           | Capen St        | Tesla Ave\n 124 Mount Auburn St, Cambridge, Massachusetts 02138 | -71.12304 | 42.37328 | 3 University Rd, Cambridge, MA 02138      | Mount Auburn St |\n 950 Main Street, Worcester, MA 01610                | -71.82368 | 42.24956 | 3 Maywood St, Worcester, MA 01603         | Main St         | Maywood Pl"

#. Tag: refname
#: extras_tigergeocoder.xml:948
#, no-c-format
msgid "Topology_Load_Tiger"
msgstr "Topology_Load_Tiger"

#. Tag: refpurpose
#: extras_tigergeocoder.xml:950
#, no-c-format
msgid ""
"Loads a defined region of tiger data into a PostGIS Topology and "
"transforming the tiger data to spatial reference of the topology and "
"snapping to the precision tolerance of the topology."
msgstr ""

#. Tag: funcprototype
#: extras_tigergeocoder.xml:956
#, no-c-format
msgid ""
"<funcdef>text <function>Topology_Load_Tiger</function></funcdef> "
"<paramdef><type>varchar </type> <parameter>topo_name</parameter></paramdef> "
"<paramdef><type>varchar </type> "
"<parameter>region_type</parameter></paramdef> <paramdef><type>varchar "
"</type> <parameter>region_id</parameter></paramdef>"
msgstr "<funcdef>text <function>Topology_Load_Tiger</function></funcdef> <paramdef><type>varchar </type> <parameter>topo_name</parameter></paramdef> <paramdef><type>varchar </type> <parameter>region_type</parameter></paramdef> <paramdef><type>varchar </type> <parameter>region_id</parameter></paramdef>"

#. Tag: para
#: extras_tigergeocoder.xml:968
#, no-c-format
msgid ""
"Loads a defined region of tiger data into a PostGIS Topology. The faces, "
"nodes and edges are transformed to the spatial reference system of the "
"target topology and points are snapped to the tolerance of the target "
"topology. The created faces, nodes, edges maintain the same ids as the "
"original Tiger data faces, nodes, edges so that datasets can be in the "
"future be more easily reconciled with tiger data. Returns summary details "
"about the process."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:971
#, no-c-format
msgid ""
"This would be useful for example for redistricting data where you require "
"the newly formed polygons to follow the center lines of streets and for the "
"resulting polygons not to overlap."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:973
#, no-c-format
msgid ""
"This function relies on Tiger data as well as the installation of the "
"PostGIS topology module. For more information, refer to <xref "
"linkend=\"Topology\"/> and <xref linkend=\"installation_configuration\"/>. "
"If you have not loaded data covering the region of interest, then no "
"topology records will be created. This function will also fail if you have "
"not created a topology using the topology functions."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:975
#, no-c-format
msgid ""
"Most topology validation errors are a result of tolerance issues where after"
" transformation the edges points don't quite line up or overlap. To remedy "
"the situation you may want to increase or lower the precision if you get "
"topology validation failures."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:977
#, no-c-format
msgid "Required arguments:"
msgstr "Benötigte Parameter:"

#. Tag: para
#: extras_tigergeocoder.xml:980
#, no-c-format
msgid ""
"<varname>topo_name</varname> The name of an existing PostGIS topology to "
"load data into."
msgstr "<varname>topo_name</varname> Die Bezeichnung einer bestehenden PostGIS Topologie, in die Daten geladen werden."

#. Tag: para
#: extras_tigergeocoder.xml:983
#, no-c-format
msgid ""
"<varname>region_type</varname> The type of bounding region. Currently only "
"<varname>place</varname> and <varname>county</varname> are supported. Plan "
"is to have several more. This is the table to look into to define the region"
" bounds. e.g <varname>tiger.place</varname>, <varname>tiger.county</varname>"
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:986
#, no-c-format
msgid ""
"<varname>region_id</varname> This is what TIGER calls the geoid. It is the "
"unique identifier of the region in the table. For place it is the "
"<varname>plcidfp</varname> column in <varname>tiger.place</varname>. For "
"county it is the <varname>cntyidfp</varname> column in "
"<varname>tiger.county</varname>"
msgstr ""

#. Tag: title
#: extras_tigergeocoder.xml:995
#, no-c-format
msgid "Example: Boston, Massachusetts Topology"
msgstr "Beispiel: Boston, Massachusetts Topologie"

#. Tag: para
#: extras_tigergeocoder.xml:996
#, no-c-format
msgid ""
"Create a topology for Boston, Massachusetts in Mass State Plane Feet (2249) "
"with tolerance 0.25 feet and then load in Boston city tiger faces, edges, "
"nodes."
msgstr ""

#. Tag: programlisting
#: extras_tigergeocoder.xml:998
#, no-c-format
msgid ""
"SELECT topology.CreateTopology('topo_boston', 2249, 0.25);\n"
"createtopology\n"
"--------------\n"
"   15\n"
"-- 60,902 ms ~ 1 minute on windows 7 desktop running 9.1 (with 5 states tiger data loaded)\n"
"SELECT tiger.topology_load_tiger('topo_boston', 'place', '2507000');\n"
"-- topology_loader_tiger --\n"
"29722 edges holding in temporary. 11108 faces added. 1875 edges of faces added.  20576 nodes added.\n"
"19962 nodes contained in a face.  0 edge start end corrected.  31597 edges added.\n"
"\n"
"-- 41 ms --\n"
"SELECT topology.TopologySummary('topo_boston');\n"
" -- topologysummary--\n"
"Topology topo_boston (15), SRID 2249, precision 0.25\n"
"20576 nodes, 31597 edges, 11109 faces, 0 topogeoms in 0 layers\n"
"\n"
"-- 28,797 ms to validate yeh returned no errors --\n"
"SELECT * FROM\n"
"    topology.ValidateTopology('topo_boston');\n"
"\n"
"       error       |   id1    |    id2\n"
"-------------------+----------+-----------"
msgstr ""

#. Tag: title
#: extras_tigergeocoder.xml:1002
#, no-c-format
msgid "Example: Suffolk, Massachusetts Topology"
msgstr "Beispiel: Suffolk, Massachusetts Topologie"

#. Tag: para
#: extras_tigergeocoder.xml:1003
#, no-c-format
msgid ""
"Create a topology for Suffolk, Massachusetts in Mass State Plane Meters "
"(26986) with tolerance 0.25 meters and then load in Suffolk county tiger "
"faces, edges, nodes."
msgstr ""

#. Tag: programlisting
#: extras_tigergeocoder.xml:1005
#, no-c-format
msgid ""
"SELECT topology.CreateTopology('topo_suffolk', 26986, 0.25);\n"
"-- this took 56,275 ms ~ 1 minute on Windows 7 32-bit with 5 states of tiger loaded\n"
"-- must have been warmed up after loading boston\n"
"SELECT tiger.topology_load_tiger('topo_suffolk', 'county', '25025');\n"
"-- topology_loader_tiger --\n"
" 36003 edges holding in temporary. 13518 faces added. 2172 edges of faces added.\n"
" 24761 nodes added.  24075 nodes contained in a face.  0 edge start end corrected.  38175 edges added.\n"
"-- 31 ms --\n"
"SELECT topology.TopologySummary('topo_suffolk');\n"
" -- topologysummary--\n"
" Topology topo_suffolk (14), SRID 26986, precision 0.25\n"
"24761 nodes, 38175 edges, 13519 faces, 0 topogeoms in 0 layers\n"
"\n"
"-- 33,606 ms to validate --\n"
"SELECT * FROM\n"
"    topology.ValidateTopology('topo_suffolk');\n"
"\n"
"       error       |   id1    |    id2\n"
"-------------------+----------+-----------\n"
" coincident nodes  | 81045651 |  81064553\n"
" edge crosses node | 81045651 |  85737793\n"
" edge crosses node | 81045651 |  85742215\n"
" edge crosses node | 81045651 | 620628939\n"
" edge crosses node | 81064553 |  85697815\n"
" edge crosses node | 81064553 |  85728168\n"
" edge crosses node | 81064553 |  85733413"
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:1009
#, no-c-format
msgid ""
", <xref linkend=\"CreateTopoGeom\"/>, <xref linkend=\"TopologySummary\"/>, "
"<xref linkend=\"ValidateTopology\"/>"
msgstr ", <xref linkend=\"CreateTopoGeom\"/>, <xref linkend=\"TopologySummary\"/>, <xref linkend=\"ValidateTopology\"/>"

#. Tag: refname
#: extras_tigergeocoder.xml:1015
#, no-c-format
msgid "Set_Geocode_Setting"
msgstr "Set_Geocode_Setting"

#. Tag: refpurpose
#: extras_tigergeocoder.xml:1017
#, no-c-format
msgid "Sets a setting that affects behavior of geocoder functions."
msgstr ""

#. Tag: funcprototype
#: extras_tigergeocoder.xml:1022
#, no-c-format
msgid ""
"<funcdef>text <function>Set_Geocode_Setting</function></funcdef> "
"<paramdef><type>text </type> <parameter> setting_name</parameter></paramdef>"
" <paramdef><type>text </type> <parameter> "
"setting_value</parameter></paramdef>"
msgstr "<funcdef>text <function>Set_Geocode_Setting</function></funcdef> <paramdef><type>text </type> <parameter> setting_name</parameter></paramdef> <paramdef><type>text </type> <parameter> setting_value</parameter></paramdef>"

#. Tag: para
#: extras_tigergeocoder.xml:1033
#, no-c-format
msgid ""
"Sets value of specific setting stored in "
"<varname>tiger.geocode_settings</varname> table. Settings allow you to "
"toggle debugging of functions. Later plans will be to control rating with "
"settings. Current list of settings are listed in <xref "
"linkend=\"Get_Geocode_Setting\"/>."
msgstr ""

#. Tag: para
#: extras_tigergeocoder.xml:1042
#, no-c-format
msgid ""
"If you run <xref linkend=\"Geocode\"/> when this function is true, the "
"NOTICE log will output timing and queries."
msgstr ""

#. Tag: programlisting
#: extras_tigergeocoder.xml:1043
#, no-c-format
msgid ""
"SELECT set_geocode_setting('debug_geocode_address', 'true') As result;\n"
"result\n"
"---------\n"
"true"
msgstr "SELECT set_geocode_setting('debug_geocode_address', 'true') As result;\nresult\n---------\ntrue"
