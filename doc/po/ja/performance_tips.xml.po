# SOME DESCRIPTIVE TITLE.
#
# Translators:
# Teramoto Ikuhiro <yellow@affrc.go.jp>, 2022.
msgid ""
msgstr ""
"Project-Id-Version: PostGIS\n"
"Report-Msgid-Bugs-To: https://bugs.kde.org\n"
"POT-Creation-Date: 2021-09-11 01:55+0000\n"
"PO-Revision-Date: 2022-06-14 09:50+0000\n"
"Last-Translator: Teramoto Ikuhiro <yellow@affrc.go.jp>\n"
"Language-Team: Japanese <https://weblate.osgeo.org/projects/postgis/"
"performance_tipsxml/ja/>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.12.2\n"

#. Tag: title
#: performance_tips.xml:3
#, no-c-format
msgid "Performance Tips"
msgstr "性能向上に関する技法"

#. Tag: title
#: performance_tips.xml:6
#, no-c-format
msgid "Small tables of large geometries"
msgstr "大きなジオメトリを持つ小さなテーブル"

#. Tag: title
#: performance_tips.xml:9
#, no-c-format
msgid "Problem description"
msgstr "問題の説明"

#. Tag: para
#: performance_tips.xml:11
#, no-c-format
msgid ""
"Current PostgreSQL versions (including 9.6) suffer from a query optimizer "
"weakness regarding TOAST tables. TOAST tables are a kind of \"extension room"
"\" used to store large (in the sense of data size) values that do not fit "
"into normal data pages (like long texts, images or complex geometries with "
"lots of vertices), see <ulink url=\"http://www.postgresql.org/docs/current/"
"static/storage-toast.html\">the PostgreSQL Documentation for TOAST</ulink> "
"for more information)."
msgstr ""
"現版のPostgreSQL (9.6を含む)では、TOASTテーブルに従うクエリオプティマイザの弱"
"さに苦しみます。 TOASTテーブルは、(長いテキスト、イメージ、多数の頂点を持つ複"
"合ジオメトリといった)通常のデータページに適合しない、(データサイズという意味"
"では)巨大な値を納めるための「拡張部屋」の一種です。詳細情報は <ulink url="
"\"http://www.postgresql.org/docs/current/static/storage-toast.html\">the "
"PostgreSQL Documentation for TOAST</ulink>をご覧ください。"

#. Tag: para
#: performance_tips.xml:19
#, no-c-format
msgid ""
"The problem appears if you happen to have a table with rather large "
"geometries, but not too many rows of them (like a table containing the "
"boundaries of all European countries in high resolution). Then the table "
"itself is small, but it uses lots of TOAST space. In our example case, the "
"table itself had about 80 rows and used only 3 data pages, but the TOAST "
"table used 8225 pages."
msgstr ""
"(高解像度で全てのヨーロッパの国の境界を含むテーブルのような)大きなジオメトリ"
"があるうえ、行がそう多くないテーブルを持つようになると、この問題が出てきます"
"。テーブル自体は小さいのですが、多くのTOASTスペースを使います。例として、テー"
"ブル自体は概ね80行で3データページしか使わなくてもTOASTテーブルで8225ページを"
"使うとします。"

#. Tag: para
#: performance_tips.xml:26
#, no-c-format
msgid ""
"Now issue a query where you use the geometry operator &amp;&amp; to search "
"for a bounding box that matches only very few of those rows. Now the query "
"optimizer sees that the table has only 3 pages and 80 rows. It estimates "
"that a sequential scan on such a small table is much faster than using an "
"index. And so it decides to ignore the GIST index. Usually, this estimation "
"is correct. But in our case, the &amp;&amp; operator has to fetch every "
"geometry from disk to compare the bounding boxes, thus reading all TOAST "
"pages, too."
msgstr ""
"ここで、ジオメトリ演算子の&amp;&amp;を使って、ほとんどマッチしないようなバウ"
"ンダリボックスを検索するクエリを出してみます。クエリオプティマイザにはテーブ"
"ルは3ページ80行しかないように見えます。オプティマイザは、小さなテーブルを順に"
"走査する方がインデクスを使うよりも早いと見積もります。そして、GiSTインデクス"
"は無視すると決めます。通常なら、この見積もりは正しいです。しかし、この場合は"
"&amp;&amp;演算子が全てのジオメトリをディスクから呼び出してバウンディングボッ"
"クスと比較しなければならなくなり、ゆえに、全てのTOASTページもまた呼び出す必要"
"があります。"

#. Tag: para
#: performance_tips.xml:35
#, no-c-format
msgid ""
"To see whether your suffer from this issue, use the \"EXPLAIN ANALYZE\" "
"postgresql command. For more information and the technical details, you can "
"read the thread on the PostgreSQL performance mailing list: <ulink url="
"\"http://archives.postgresql.org/pgsql-performance/2005-02/msg00030.php"
"\">http://archives.postgresql.org/pgsql-performance/2005-02/msg00030.php</"
"ulink>"
msgstr ""
"この問題に苦しむかどうかを見るには、PostgreSQLの\"EXPLAIN "
"ANALYZE\"コマンドを使います。詳細情報と技術情報については、"
"PostgreSQL性能メーリングリストのスレッド<ulink url=\"http://archives."
"postgresql.org/pgsql-performance/2005-02/msg00030.php\">http://archives."
"postgresql.org/pgsql-performance/2005-02/msg00030.php</ulink>をご覧下さい。"

#. Tag: para
#: performance_tips.xml:41
#, no-c-format
msgid ""
"and newer thread on PostGIS <ulink url=\"https://lists.osgeo.org/pipermail/"
"postgis-devel/2017-June/026209.html\">https://lists.osgeo.org/pipermail/"
"postgis-devel/2017-June/026209.html</ulink>"
msgstr ""
"また、PostGISの新しいスレッド<ulink url=\"https://lists.osgeo.org/pipermail/"
"postgis-devel/2017-June/026209.html\">https://lists.osgeo.org/pipermail/"
"postgis-devel/2017-June/026209.html</ulink>もご覧下さい。"

#. Tag: title
#: performance_tips.xml:45
#, no-c-format
msgid "Workarounds"
msgstr "応急処置"

#. Tag: para
#: performance_tips.xml:47
#, no-c-format
msgid ""
"The PostgreSQL people are trying to solve this issue by making the query "
"estimation TOAST-aware. For now, here are two workarounds:"
msgstr ""
"PostgreSQLコミュニティでは、TOASTを意識したクエリ見積もりを作ることで、この問"
"題を解決しようとしています。今のところは、二つの応急処置があります。"

#. Tag: para
#: performance_tips.xml:50
#, no-c-format
msgid ""
"The first workaround is to force the query planner to use the index. Send "
"\"SET enable_seqscan TO off;\" to the server before issuing the query. This "
"basically forces the query planner to avoid sequential scans whenever "
"possible. So it uses the GIST index as usual. But this flag has to be set on "
"every connection, and it causes the query planner to make misestimations in "
"other cases, so you should \"SET enable_seqscan TO on;\" after the query."
msgstr ""
"一つは、クエリプランナにインデクスの使用を強制することです。クエリを発行する"
"前に\"SET enable_seqscan TO off;\"をサーバに送信します。これは基本的にクエリ"
"プランナに対して可能な限り順に走査することを避けるよう強制します。そのため"
"GiSTインデクスを通常使うようになります。しかし、このフラグは接続するたびに設"
"定しなければならず、他のケースにおいてはクエリプランナに誤った見積もりをさせ"
"ることになるので、 \"SET enable_seqscan TO on;\"をクエリの後に送信すべきで"
"す。"

#. Tag: para
#: performance_tips.xml:58
#, no-c-format
msgid ""
"The second workaround is to make the sequential scan as fast as the query "
"planner thinks. This can be achieved by creating an additional column that "
"\"caches\" the bbox, and matching against this. In our example, the commands "
"are like:"
msgstr ""
"もう一つは、順に走査することをクエリプランナが考える程度に早くすることです。"
"これは、バウンダリボックスの「キャッシュ」を行う追加カラムを作成し、このカラ"
"ムにマッチさせるようにすることで達成することができます。ここでの例では次のよ"
"うになります。"

#. Tag: programlisting
#: performance_tips.xml:63
#, no-c-format
msgid ""
"SELECT "
"AddGeometryColumn('myschema','mytable','bbox','4326','GEOMETRY','2');\n"
"UPDATE mytable SET bbox = ST_Envelope(ST_Force2D(geom));"
msgstr ""
"SELECT AddGeometryColumn('myschema','mytable','bbox','4326','GEOMETRY','2');"
"\n"
"UPDATE mytable SET bbox = ST_Envelope(ST_Force2D(geom));"

#. Tag: para
#: performance_tips.xml:65
#, no-c-format
msgid ""
"Now change your query to use the &amp;&amp; operator against bbox instead of "
"geom_column, like:"
msgstr ""
"そして、次のように、&amp;&amp;演算子をgeom_columnに対して行っていたものをbbox"
"に変更します。"

#. Tag: programlisting
#: performance_tips.xml:68
#, no-c-format
msgid ""
"SELECT geom_column\n"
"FROM mytable\n"
"WHERE bbox &amp;&amp; ST_SetSRID('BOX3D(0 0,1 1)'::box3d,4326);"
msgstr ""
"SELECT geom_column\n"
"FROM mytable\n"
"WHERE bbox &amp;&amp; ST_SetSRID('BOX3D(0 0,1 1)'::box3d,4326);"

#. Tag: para
#: performance_tips.xml:70
#, no-c-format
msgid ""
"Of course, if you change or add rows to mytable, you have to keep the bbox "
"\"in sync\". The most transparent way to do this would be triggers, but you "
"also can modify your application to keep the bbox column current or run the "
"UPDATE query above after every modification."
msgstr ""
"もちろん、mytableの行を変更または追加したら、bboxを「同期」するようにしなけれ"
"ばなりません。最もすっきりした方法はトリガです。もしくは、アプリケーションを"
"変更してbboxカラムの現状を保持するか、テーブル更新後にいつもUPDATEクエリを実"
"行するかでも対応できます。"

#. Tag: title
#: performance_tips.xml:79
#, no-c-format
msgid "CLUSTERing on geometry indices"
msgstr "ジオメトリインデクスでCLUSTERを実行する"

#. Tag: para
#: performance_tips.xml:81
#, no-c-format
msgid ""
"For tables that are mostly read-only, and where a single index is used for "
"the majority of queries, PostgreSQL offers the CLUSTER command. This command "
"physically reorders all the data rows in the same order as the index "
"criteria, yielding two performance advantages: First, for index range scans, "
"the number of seeks on the data table is drastically reduced. Second, if "
"your working set concentrates to some small intervals on the indices, you "
"have a more efficient caching because the data rows are spread along fewer "
"data pages. (Feel invited to read the CLUSTER command documentation from the "
"PostgreSQL manual at this point.)"
msgstr ""
"読み込むことがほとんどで、かつほとんどのクエリでひとつのインデクスを使うよう"
"なテーブルのために、PostgreSQLはCLUSTERコマンドを提供しています。このコマンド"
"は、全てのデータ行を、インデクス基準にあわせて物理的に再整理するので、二つの"
"性能の利点を生みます。一つは、インデックスの範囲走査のために、データテーブル"
"のシーク回数が劇的に減少することです。もう一つは、いくつかの小さなインデック"
"ス間隔に集中する場合には、データ行が分布するデータページがより少なくなること"
"で、より効率的なキャッシュを持つことです (この点は、PostgreSQLマニュアルのCLU"
"STERコマンドのドキュメントを読むように仕向けられていると感じて下さい)。"

#. Tag: para
#: performance_tips.xml:91
#, no-c-format
msgid ""
"However, currently PostgreSQL does not allow clustering on PostGIS GIST "
"indices because GIST indices simply ignores NULL values, you get an error "
"message like:"
msgstr ""
"しかし、GiSTインデクスは単純にNULL値を無視するため現在のところPostGISのGiSTイ"
"ンデクスのクラスタリングはできず、次のようなエラーメッセージを得ます。"

#. Tag: programlisting
#: performance_tips.xml:95
#, no-c-format
msgid ""
"lwgeom=# CLUSTER my_geom_index ON my_table;\n"
"ERROR: cannot cluster when index access method does not handle null values\n"
"HINT: You may be able to work around this by marking column \"geom\" NOT "
"NULL."
msgstr ""
"lwgeom=# CLUSTER my_geom_index ON my_table;\n"
"ERROR: cannot cluster when index access method does not handle null values\n"
"(エラー: "
"インデクスアクセスメソッドがNULL値を扱わない場合クラスタ化できません)\n"
"HINT: You may be able to work around this by marking column \"geom\" NOT "
"NULL.\n"
"(ヒント: 列\"the_geom\"をNOT "
"NULLとすることで、これを回避できるかもしれません)"

#. Tag: para
#: performance_tips.xml:97
#, no-c-format
msgid ""
"As the HINT message tells you, one can work around this deficiency by adding "
"a \"not null\" constraint to the table:"
msgstr ""
"ヒントメッセージにある通り、テーブルに\"not null\"制限を追加することで、この"
"欠陥にとりあえず対応できます。例を示します。"

#. Tag: programlisting
#: performance_tips.xml:100
#, no-c-format
msgid ""
"lwgeom=# ALTER TABLE my_table ALTER COLUMN geom SET not null;\n"
"ALTER TABLE"
msgstr ""
"lwgeom=# ALTER TABLE my_table ALTER COLUMN geom SET not null;\n"
"ALTER TABLE"

#. Tag: para
#: performance_tips.xml:102
#, no-c-format
msgid ""
"Of course, this will not work if you in fact need NULL values in your "
"geometry column. Additionally, you must use the above method to add the "
"constraint, using a CHECK constraint like \"ALTER TABLE blubb ADD CHECK "
"(geometry is not null);\" will not work."
msgstr ""
"もちろん、ジオメトリカラムで実際にNULL値が必要な場合、この対応はできません。"
"さらには、制限を追加するには上の方法を使わなければならず、\"ALTER TABLE "
"blubb ADD CHECK (geometry is not null);\"のようなCHECK制限は使えません。"

#. Tag: title
#: performance_tips.xml:109
#, no-c-format
msgid "Avoiding dimension conversion"
msgstr "次元変換の回避"

#. Tag: para
#: performance_tips.xml:111
#, no-c-format
msgid ""
"Sometimes, you happen to have 3D or 4D data in your table, but always access "
"it using OpenGIS compliant ST_AsText() or ST_AsBinary() functions that only "
"output 2D geometries. They do this by internally calling the ST_Force2D() "
"function, which introduces a significant overhead for large geometries. To "
"avoid this overhead, it may be feasible to pre-drop those additional "
"dimensions once and forever:"
msgstr ""
"ときどき、テーブルで3次元、4次元のデータを持つのに、常にOpenGIS準拠の"
"ST_AsText()またはST_AsBinary()関数を使ってアクセスして 2次元ジオメトリを出力"
"させるようなことが起きます。内部でST_Force_2d()関数を呼んでいるために発生しま"
"すが、これは、大きなジオメトリでは重大なオーバヘッドを誘引することになりま"
"す。このオーバヘッドを回避するには、一度追加された次元を前もって落とし、かつ"
"これを永続化するのが適当かも知れません。"

#. Tag: programlisting
#: performance_tips.xml:118
#, no-c-format
msgid ""
"UPDATE mytable SET geom = ST_Force2D(geom);\n"
"VACUUM FULL ANALYZE mytable;"
msgstr ""
"UPDATE mytable SET geom = ST_Force2D(geom);\n"
"VACUUM FULL ANALYZE mytable;"

#. Tag: para
#: performance_tips.xml:120
#, no-c-format
msgid ""
"Note that if you added your geometry column using AddGeometryColumn() "
"there'll be a constraint on geometry dimension. To bypass it you will need "
"to drop the constraint. Remember to update the entry in the geometry_columns "
"table and recreate the constraint afterwards."
msgstr ""
"AddGeometryColumn()を使ってジオメトリカラムを追加した場合、ジオメトリの次元に"
"関する制限があることに注意してください。この制限を迂回するには、制限の削除が"
"必要になります。geometry_columnsテーブル内のエントリを更新して、その後で制限"
"を再作成することを忘れないで下さい。"

#. Tag: para
#: performance_tips.xml:126
#, no-c-format
msgid ""
"In case of large tables, it may be wise to divide this UPDATE into smaller "
"portions by constraining the UPDATE to a part of the table via a WHERE "
"clause and your primary key or another feasible criteria, and running a "
"simple \"VACUUM;\" between your UPDATEs. This drastically reduces the need "
"for temporary disk space. Additionally, if you have mixed dimension "
"geometries, restricting the UPDATE by \"WHERE dimension(geom)&gt;2\" skips "
"re-writing of geometries that already are in 2D."
msgstr ""
"大きなテーブルの場合、WHERE節、およびプライマリキー若しくは他の適切な基準によ"
"ってテーブルの一部へのUPDATEを制限させて、UPDATEの実行の間に単に\"VACUUM;"
"\"と実行することで、UPDATEをより小さい塊に分割するのが賢いやり方かもしれませ"
"ん。これにより、テンポラリディスクスペースが劇的に減少します。さらに、次元混"
"合のジオメトリを持つ場合、\"WHERE dimension(the_geom)&gt;"
"2\"によってUPDATEを制限することで"
"、2次元で書かれているジオメトリの再書き込みをスキップさせることができます。"

#~ msgid "Tuning your configuration"
#~ msgstr "コンフィギュレーションのチューン"

#~ msgid ""
#~ "Tuning for PostGIS is much like tuning for any PostgreSQL workload. The "
#~ "only additional note to keep in mind is that geometries and rasters are "
#~ "heavy so memory related optimizations generally have more of an impact on "
#~ "PostGIS than other types of PostgreSQL queries."
#~ msgstr ""
#~ "PostGISの調整はPostgreSQLの作業量の調整と非常に似ています。ジオメトリとラ"
#~ "スタは重く、メモリ関連の最適化は他のPostgreSQLクエリと比べて影響が大きい点"
#~ "だけは留意して下さい。"

#~ msgid ""
#~ "For general details about optimizing PostgreSQL, refer to <ulink url="
#~ "\"https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server\">Tuning "
#~ "your PostgreSQL Server</ulink>."
#~ msgstr ""
#~ "PostgreSQLの最適化に関する一般的な詳細は、<ulink url=\"https://wiki."
#~ "postgresql.org/wiki/Tuning_Your_PostgreSQL_Server\">Tuning your "
#~ "PostgreSQL Server</ulink>をご覧ください。"

#~ msgid ""
#~ "For PostgreSQL 9.4+ all these can be set at the server level without "
#~ "touching postgresql.conf or postgresql.auto.conf by using the <code>ALTER "
#~ "SYSTEM..</code> command."
#~ msgstr ""
#~ "PostgreSQL 9.4以上では、<code>ALTER SYSTEM..</code>を使うことで、"
#~ "postgresql.confやpostgresql.auto.confを触ることなくサーバレベルで設定でき"
#~ "ます。"

#~ msgid ""
#~ "ALTER SYSTEM SET work_mem = '256MB';\n"
#~ "-- this will force, non-startup configs to take effect for new "
#~ "connections\n"
#~ "SELECT pg_reload_conf();\n"
#~ "-- show current setting value\n"
#~ "-- use SHOW ALL to see all settings\n"
#~ "SHOW work_mem;"
#~ msgstr ""
#~ "ALTER SYSTEM SET work_mem = '256MB';\n"
#~ "-- 起動時設定でない設定を強制します。新規接続に影響を与えます。\n"
#~ "SELECT pg_reload_conf();\n"
#~ "-- 現在の設定値を表示\n"
#~ "-- 全ての設定を見るにはSHOW ALLを使います\n"
#~ "SHOW work_mem;"

#~ msgid ""
#~ "In addition to these settings, PostGIS also has some custom settings "
#~ "which you can find listed in <xref linkend=\"PostGIS_GUC\"/>."
#~ msgstr ""
#~ "この設定に追加して、PostGISには、<xref linkend=\"PostGIS_GUC\"/>で示してい"
#~ "る、いくつかの独特の設定があります。"

#~ msgid "Startup"
#~ msgstr "起動時"

#~ msgid "These settings are configured in postgresql.conf:"
#~ msgstr "これらの設定はpostgresql.conf内にあります。"

#~ msgid "constraint_exclusion"
#~ msgstr "constraint_exclusion"

#~ msgid "Default: partition"
#~ msgstr "デフォルト: partition"

#~ msgid ""
#~ "This is generally used for table partitioning. The default for this is "
#~ "set to \"partition\" which is ideal for PostgreSQL 8.4 and above since it "
#~ "will force the planner to only analyze tables for constraint "
#~ "consideration if they are in an inherited hierarchy and not pay the "
#~ "planner penalty otherwise."
#~ msgstr ""
#~ "一般的にテーブルのパーティショニングに使われます。デフォルトとして"
#~ "\"partition\"に設定されています。継承階層内にあり、プランナにペナルティ以"
#~ "外を払わないなら、クエリプランナにテーブルの制約条件の解析だけを行わせるの"
#~ "で、PostgreSQL 8.4以上ではこれが理想的です。"

#~ msgid "shared_buffers"
#~ msgstr "shared_buffers"

#~ msgid "Default: ~128MB in PostgreSQL 9.6"
#~ msgstr "デフォルト: PostgreSQL 9.6では128MB以下"

#~ msgid ""
#~ "Set to about 25% to 40% of available RAM. On windows you may not be able "
#~ "to set as high."
#~ msgstr ""
#~ "利用可能なRAMの25%から40%を設定します。Windowsでは高く設定することができな"
#~ "いかも知れません。"

#~ msgid ""
#~ "<ulink url=\"https://www.postgresql.org/docs/current/static/runtime-"
#~ "config-resource.html#GUC-MAX-WORKER-PROCESSES\">max_worker_processes</"
#~ "ulink> This setting is only available for PostgreSQL 9.4+. For PostgreSQL "
#~ "9.6+ this setting has additional importance in that it controls the max "
#~ "number of processes you can have for parallel queries."
#~ msgstr ""
#~ "<ulink url=\"https://www.postgresql.org/docs/current/static/runtime-"
#~ "config-resource.html#GUC-MAX-WORKER-PROCESSES\">max_worker_processes</"
#~ "ulink> これは、PostgreSQL 9.4以上で有効です。PostgreSQL 9.6以上では、パラ"
#~ "レルクエリ処理に使うプロセス数の最大値の制御で、さらに重要なものとなってい"
#~ "ます。"

#~ msgid "Default: 8"
#~ msgstr "デフォルト: 8"

#~ msgid ""
#~ "Sets the maximum number of background processes that the system can "
#~ "support. This parameter can only be set at server start."
#~ msgstr ""
#~ "システムが対応できるバックグラウンドプロセスの最大値を設定します。このパラ"
#~ "メータはサーバ起動時のみ設定できます。"

#~ msgid "Runtime"
#~ msgstr "実行時"

#~ msgid ""
#~ "<ulink url=\"http://www.postgresql.org/docs/current/static/runtime-config-"
#~ "resource.html#GUC-WORK-MEM\">work_mem</ulink> (the memory used for sort "
#~ "operations and complex queries)"
#~ msgstr ""
#~ "<ulink url=\"http://www.postgresql.org/docs/current/static/runtime-config-"
#~ "resource.html#GUC-WORK-MEM\">work_mem</ulink> (並べ替えや複雑なクエリに使"
#~ "われるメモリ)"

#~ msgid "Default: 1-4MB"
#~ msgstr "デフォルト: 1-4MB"

#~ msgid "Adjust up for large dbs, complex queries, lots of RAM"
#~ msgstr ""
#~ "大きなデータベースの場合や、複雑なクエリの場合、RAMが多い場合は値を大きく"
#~ "するように調整します。"

#~ msgid "Adjust down for many concurrent users or low RAM."
#~ msgstr ""
#~ "同時接続ユーザ数が多い場合や、RAMが少ない場合には値を小さくするように調整"
#~ "します。"

#~ msgid "If you have lots of RAM and few developers:"
#~ msgstr "たくさんのRAMを持ち、少数の開発者しかいない場合は次のようにします。"

#~ msgid "SET work_mem TO '256MB';"
#~ msgstr "SET work_mem TO '256MB';"

#~ msgid ""
#~ "<ulink url=\"http://www.postgresql.org/docs/current/static/runtime-config-"
#~ "resource.html#GUC-MAINTENANCE-WORK-MEM\">maintenance_work_mem</ulink> "
#~ "(used for VACUUM, CREATE INDEX, etc.)"
#~ msgstr ""
#~ "<ulink url=\"http://www.postgresql.org/docs/current/static/runtime-config-"
#~ "resource.html#GUC-MAINTENANCE-WORK-MEM\">maintenance_work_mem</ulink> "
#~ "(VACUUM, CREATE INDEX等で使われるメモリ)"

#~ msgid "Default: 16-64MB"
#~ msgstr "デフォルト: 16-64MB"

#~ msgid "Generally too low - ties up I/O, locks objects while swapping memory"
#~ msgstr ""
#~ "一般的には低すぎます - メモリスワップの間、入出力が拘束され、オブジェクト"
#~ "がロックされます。"

#~ msgid ""
#~ "Recommend 32MB to 1GB on production servers w/lots of RAM, but depends on "
#~ "the # of concurrent users. If you have lots of RAM and few developers:"
#~ msgstr ""
#~ "たくさんのRAMを持つ本番サーバでは32MBから1GBが推奨ですが、同時接続ユーザ数"
#~ "に依存します。たくさんのRAMを持ち、少数の開発者しかいない場合は次のように"
#~ "します。"

#~ msgid "SET maintenance_work_mem TO '1GB';"
#~ msgstr "SET maintenance_work_mem TO '1GB';"

#, fuzzy
#~ msgid ""
#~ "This setting is only available for PostgreSQL 9.6+ and will only affect "
#~ "PostGIS 2.3+, since only PostGIS 2.3+ supports parallel queries. If set "
#~ "to higher than 0, then some queries such as those involving relation "
#~ "functions like <code>ST_Intersects</code> can use multiple processes and "
#~ "can run more than twice as fast when doing so. If you have a lot of "
#~ "processors to spare, you should change the value of this to as many "
#~ "processors as you have. Also make sure to bump up "
#~ "<code>max_worker_processes</code> to at least as high as this number."
#~ msgstr ""
#~ "<ulink url=\"https://www.postgresql.org/docs/current/static/runtime-"
#~ "config-resource.html#GUC-MAX-PARALLEL-WORKERS-PER-GATHER"
#~ "\">max_parallel_workers_per_gather</ulink> PostgreSQL 9.6以上で有効です。"
#~ "また、パラレルクエリに対応しているPostGIS 2.3以上でのみ影響が出ます。0より"
#~ "大きい値にすると、<code>ST_Intersects</code>等の関係関数が複数のプロセスを"
#~ "使えるようになり、2倍以上高速になります。多数のプロセッサを予備に持ってい"
#~ "るなら、この値を、持っているプロセッサ数にあわせるべきです。また、"
#~ "<code>max_worker_processes</code>を少なくともこの値より大きくするようにし"
#~ "て下さい。"

#~ msgid "Default: 0"
#~ msgstr "デフォルト: 0"

#~ msgid ""
#~ "Sets the maximum number of workers that can be started by a single "
#~ "<varname>Gather</varname> node. Parallel workers are taken from the pool "
#~ "of processes established by <varname>max_worker_processes</varname>. Note "
#~ "that the requested number of workers may not actually be available at run "
#~ "time. If this occurs, the plan will run with fewer workers than expected, "
#~ "which may be inefficient. Setting this value to 0, which is the default, "
#~ "disables parallel query execution."
#~ msgstr ""
#~ "単一の<varname>Gather</varname>ノードが開始できるワーカの最大数を設定しま"
#~ "す。並列ワーカは、<varname>max_worker_processes</varname>で確立されたプロ"
#~ "セスのプールから取得されます。要求したワーカ数は、実際には実行可能になって"
#~ "いない場合があることに注意して下さい。これが発生する場合には、想定より少な"
#~ "いワーカでプランが実行され、非効率になります。これの値を0 (デフォルト値)に"
#~ "すると、パラレルクエリ実行が無効になります。"
