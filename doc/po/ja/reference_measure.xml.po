# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
msgid ""
msgstr ""
"Project-Id-Version: \n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2016-01-21 10:21+0000\n"
"PO-Revision-Date: 2016-02-10 19:16+0900\n"
"Language-Team: LANGUAGE <kde-i18n-doc@kde.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Last-Translator: TERAMOTO Ikuhiro <yellow@affrc.go.jp>\n"
"Language: ja\n"
"X-Generator: Poedit 1.8.6\n"

#. Tag: title
#: reference_measure.xml:3
#, no-c-format
msgid "Spatial Relationships and Measurements"
msgstr "空間関係関数と空間計測関数 "

#. Tag: refname
#: reference_measure.xml:6
#, no-c-format
msgid "ST_3DClosestPoint"
msgstr "ST_3DClosestPoint"

#. Tag: refpurpose
#: reference_measure.xml:8
#, no-c-format
msgid ""
"Returns the 3-dimensional point on g1 that is closest to g2. This is the first point of the 3D "
"shortest line."
msgstr "g1上の、g2に最も近い3次元ポイントを返します。3次元最短線の一つ目のポイントです。"

#. Tag: funcprototype
#: reference_measure.xml:14
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_3DClosestPoint</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_3DClosestPoint</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef>"

#. Tag: title
#: reference_measure.xml:27 reference_measure.xml:93 reference_measure.xml:146 reference_measure.xml:198
#: reference_measure.xml:255 reference_measure.xml:313 reference_measure.xml:383
#: reference_measure.xml:430 reference_measure.xml:503 reference_measure.xml:563
#: reference_measure.xml:635 reference_measure.xml:750 reference_measure.xml:823
#: reference_measure.xml:975 reference_measure.xml:1056 reference_measure.xml:1138
#: reference_measure.xml:1198 reference_measure.xml:1364 reference_measure.xml:1499
#: reference_measure.xml:1577 reference_measure.xml:1648 reference_measure.xml:1703
#: reference_measure.xml:1750 reference_measure.xml:1798 reference_measure.xml:1852
#: reference_measure.xml:1934 reference_measure.xml:1998 reference_measure.xml:2047
#: reference_measure.xml:2107 reference_measure.xml:2173 reference_measure.xml:2227
#: reference_measure.xml:2260 reference_measure.xml:2305 reference_measure.xml:2359
#: reference_measure.xml:2416 reference_measure.xml:2504 reference_measure.xml:2547
#: reference_measure.xml:2638 reference_measure.xml:2689 reference_measure.xml:2726
#: reference_measure.xml:2768 reference_measure.xml:2815 reference_measure.xml:2874
#: reference_measure.xml:2940 reference_measure.xml:2983 reference_measure.xml:3062
#: reference_measure.xml:3210
#, no-c-format
msgid "Description"
msgstr "説明"

#. Tag: para
#: reference_measure.xml:29
#, no-c-format
msgid ""
"Returns the 3-dimensional point on g1 that is closest to g2. This is the first point of the 3D "
"shortest line. The 3D length of the 3D shortest line is the 3D distance."
msgstr ""
"g1上の、g2に最も近い3次元ポイントを返します。3次元最短線の一つ目のポイントです。3次元最短線の長さは、3"
"次元距離と同じです。"

#. Tag: para
#: reference_measure.xml:32 reference_measure.xml:98 reference_measure.xml:151 reference_measure.xml:213
#: reference_measure.xml:270 reference_measure.xml:323 reference_measure.xml:388
#: reference_measure.xml:444 reference_measure.xml:2052 reference_measure.xml:2264
#: reference_measure.xml:2321 reference_measure.xml:2730 reference_measure.xml:2776
#, no-c-format
msgid "&Z_support;"
msgstr "&Z_support;"

#. Tag: para
#: reference_measure.xml:34 reference_measure.xml:100 reference_measure.xml:153 reference_measure.xml:215
#: reference_measure.xml:272 reference_measure.xml:325 reference_measure.xml:390
#: reference_measure.xml:446 reference_measure.xml:514
#, no-c-format
msgid "&P_support;"
msgstr "&P_support;"

#. Tag: para
#: reference_measure.xml:35 reference_measure.xml:104 reference_measure.xml:156 reference_measure.xml:212
#: reference_measure.xml:262 reference_measure.xml:321 reference_measure.xml:392
#: reference_measure.xml:442 reference_measure.xml:2821
#, no-c-format
msgid "Availability: 2.0.0"
msgstr "Availability: 2.0.0"

#. Tag: para
#: reference_measure.xml:36 reference_measure.xml:322 reference_measure.xml:443
#, no-c-format
msgid ""
"Changed: 2.2.0 - if 2 2D geometries are input, a 2D point is returned (instead of old behavior "
"assuming 0 for missing Z). In case of 2D and 3D, Z is no longer assumed to be 0 for missing Z."
msgstr ""
"Changed: 2.2.0 - 二つの2次元ジオメトリが入力である場合には、2次元ポイントが返ります (古い挙動では、存在"
"しないZの値について0を仮定していました)。2次元と3次元の場合には、もはや、存在しないZの値について0を仮定"
"しません。"

#. Tag: title
#: reference_measure.xml:40 reference_measure.xml:109 reference_measure.xml:160 reference_measure.xml:220
#: reference_measure.xml:329 reference_measure.xml:397 reference_measure.xml:450
#: reference_measure.xml:521 reference_measure.xml:579 reference_measure.xml:658
#: reference_measure.xml:760 reference_measure.xml:861 reference_measure.xml:1014
#: reference_measure.xml:1092 reference_measure.xml:1167 reference_measure.xml:1264
#: reference_measure.xml:1399 reference_measure.xml:1522 reference_measure.xml:1673
#: reference_measure.xml:1715 reference_measure.xml:1764 reference_measure.xml:1813
#: reference_measure.xml:1870 reference_measure.xml:1968 reference_measure.xml:2017
#: reference_measure.xml:2058 reference_measure.xml:2270 reference_measure.xml:2326
#: reference_measure.xml:2378 reference_measure.xml:2426 reference_measure.xml:2519
#: reference_measure.xml:2569 reference_measure.xml:2736 reference_measure.xml:2780
#: reference_measure.xml:2910 reference_measure.xml:2950 reference_measure.xml:2999
#: reference_measure.xml:3112 reference_measure.xml:3242
#, no-c-format
msgid "Examples"
msgstr "例"

#. Tag: para
#: reference_measure.xml:45
#, no-c-format
msgid "linestring and point -- both 3d and 2d closest point"
msgstr "ラインストリングとポイント -- 3次元と2次元の両方の最も近いポイント"

#. Tag: programlisting
#: reference_measure.xml:46
#, no-c-format
msgid ""
"SELECT ST_AsEWKT(ST_3DClosestPoint(line,pt)) AS cp3d_line_pt, \n"
"                ST_AsEWKT(ST_ClosestPoint(line,pt)) As cp2d_line_pt\n"
"        FROM (SELECT 'POINT(100 100 30)'::geometry As pt, \n"
"                        'LINESTRING (20 80 20, 98 190 1, 110 180 3, 50 75 1000)'::geometry As line\n"
"                ) As foo;\n"
"        \n"
"                \n"
" cp3d_line_pt                                                                        |               "
"cp2d_line_pt\n"
"-----------------------------------------------------------"
"+------------------------------------------\n"
" POINT(54.6993798867619 128.935022917228 11.5475869506606) | POINT(73.0769230769231 115.384615384615)"
msgstr ""
"SELECT ST_AsEWKT(ST_3DClosestPoint(line,pt)) AS cp3d_line_pt, \n"
"                ST_AsEWKT(ST_ClosestPoint(line,pt)) As cp2d_line_pt\n"
"        FROM (SELECT 'POINT(100 100 30)'::geometry As pt, \n"
"                        'LINESTRING (20 80 20, 98 190 1, 110 180 3, 50 75 1000)'::geometry As line\n"
"                ) As foo;\n"
"        \n"
"                \n"
" cp3d_line_pt                                                                        |               "
"cp2d_line_pt\n"
"-----------------------------------------------------------"
"+------------------------------------------\n"
" POINT(54.6993798867619 128.935022917228 11.5475869506606) | POINT(73.0769230769231 115.384615384615)"

#. Tag: para
#: reference_measure.xml:50
#, no-c-format
msgid "linestring and multipoint -- both 3d and 2d closest point"
msgstr "ラインストリングとマルチポイント -- 3次元と2次元の両方の最も近いポイント"

#. Tag: programlisting
#: reference_measure.xml:51
#, no-c-format
msgid ""
"SELECT ST_AsEWKT(ST_3DClosestPoint(line,pt)) AS cp3d_line_pt, \n"
"                ST_AsEWKT(ST_ClosestPoint(line,pt)) As cp2d_line_pt\n"
"        FROM (SELECT 'MULTIPOINT(100 100 30, 50 74 1000)'::geometry As pt, \n"
"                        'LINESTRING (20 80 20, 98 190 1, 110 180 3, 50 75 900)'::geometry As line\n"
"                ) As foo;\n"
"        \n"
"                \n"
"                       cp3d_line_pt                        | cp2d_line_pt\n"
"-----------------------------------------------------------+--------------\n"
" POINT(54.6993798867619 128.935022917228 11.5475869506606) | POINT(50 75)"
msgstr ""
"SELECT ST_AsEWKT(ST_3DClosestPoint(line,pt)) AS cp3d_line_pt, \n"
"                ST_AsEWKT(ST_ClosestPoint(line,pt)) As cp2d_line_pt\n"
"        FROM (SELECT 'MULTIPOINT(100 100 30, 50 74 1000)'::geometry As pt, \n"
"                        'LINESTRING (20 80 20, 98 190 1, 110 180 3, 50 75 900)'::geometry As line\n"
"                ) As foo;\n"
"        \n"
"                \n"
"                       cp3d_line_pt                        | cp2d_line_pt\n"
"-----------------------------------------------------------+--------------\n"
" POINT(54.6993798867619 128.935022917228 11.5475869506606) | POINT(50 75)"

#. Tag: para
#: reference_measure.xml:55
#, no-c-format
msgid "Multilinestring and polygon both 3d and 2d closest point"
msgstr "マルチラインストリングとポリゴン -- 3次元と2次元の両方の最も近いポイント"

#. Tag: programlisting
#: reference_measure.xml:56
#, no-c-format
msgid ""
"SELECT ST_AsEWKT(ST_3DClosestPoint(poly, mline)) As cp3d,\n"
"    ST_AsEWKT(ST_ClosestPoint(poly, mline)) As cp2d \n"
"        FROM (SELECT  ST_GeomFromEWKT('POLYGON((175 150 5, 20 40 5, 35 45 5, 50 60 5, 100 100 5, 175 "
"150 5))') As poly,\n"
"                ST_GeomFromEWKT('MULTILINESTRING((175 155 2, 20 40 20, 50 60 -2, 125 100 1, 175 155 "
"1),\n"
"                (1 10 2, 5 20 1))') As mline ) As foo;\n"
"                   cp3d                    |     cp2d\n"
"-------------------------------------------+--------------\n"
" POINT(39.993580415989 54.1889925532825 5) | POINT(20 40)"
msgstr ""
"SELECT ST_AsEWKT(ST_3DClosestPoint(poly, mline)) As cp3d,\n"
"    ST_AsEWKT(ST_ClosestPoint(poly, mline)) As cp2d \n"
"        FROM (SELECT  ST_GeomFromEWKT('POLYGON((175 150 5, 20 40 5, 35 45 5, 50 60 5, 100 100 5, 175 "
"150 5))') As poly,\n"
"                ST_GeomFromEWKT('MULTILINESTRING((175 155 2, 20 40 20, 50 60 -2, 125 100 1, 175 155 "
"1),\n"
"                (1 10 2, 5 20 1))') As mline ) As foo;\n"
"                   cp3d                    |     cp2d\n"
"-------------------------------------------+--------------\n"
" POINT(39.993580415989 54.1889925532825 5) | POINT(20 40)"

#. Tag: title
#: reference_measure.xml:66 reference_measure.xml:116 reference_measure.xml:166 reference_measure.xml:225
#: reference_measure.xml:286 reference_measure.xml:355 reference_measure.xml:403
#: reference_measure.xml:476 reference_measure.xml:537 reference_measure.xml:610
#: reference_measure.xml:721 reference_measure.xml:795 reference_measure.xml:948
#: reference_measure.xml:1019 reference_measure.xml:1100 reference_measure.xml:1172
#: reference_measure.xml:1469 reference_measure.xml:1528 reference_measure.xml:1607
#: reference_measure.xml:1723 reference_measure.xml:1771 reference_measure.xml:1820
#: reference_measure.xml:1875 reference_measure.xml:1973 reference_measure.xml:2023
#: reference_measure.xml:2065 reference_measure.xml:2149 reference_measure.xml:2204
#: reference_measure.xml:2236 reference_measure.xml:2279 reference_measure.xml:2333
#: reference_measure.xml:2385 reference_measure.xml:2479 reference_measure.xml:2524
#: reference_measure.xml:2611 reference_measure.xml:2666 reference_measure.xml:2702
#: reference_measure.xml:2743 reference_measure.xml:2786 reference_measure.xml:2832
#: reference_measure.xml:2916 reference_measure.xml:2956 reference_measure.xml:3033
#: reference_measure.xml:3253
#, no-c-format
msgid "See Also"
msgstr "関連情報"

#. Tag: para
#: reference_measure.xml:68
#, no-c-format
msgid ""
", <xref linkend=\"ST_ClosestPoint\"/>, <xref linkend=\"ST_3DDistance\"/>, <xref linkend="
"\"ST_3DShortestLine\"/>"
msgstr ""
", <xref linkend=\"ST_ClosestPoint\"/>, <xref linkend=\"ST_3DDistance\"/>, <xref linkend="
"\"ST_3DShortestLine\"/>"

#. Tag: refname
#: reference_measure.xml:73
#, no-c-format
msgid "ST_3DDistance"
msgstr "ST_3DDistance"

#. Tag: refpurpose
#: reference_measure.xml:75
#, no-c-format
msgid ""
"For geometry type Returns the 3-dimensional cartesian minimum distance (based on spatial ref) between "
"two geometries in projected units."
msgstr ""
"ジオメトリ型について、二つのジオメトリの、3次元の最小デカルト距離 (空間参照系に基づきます)を、投影法の"
"単位で返します。"

#. Tag: funcprototype
#: reference_measure.xml:80
#, no-c-format
msgid ""
"<funcdef>float <function>ST_3DDistance</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef>"
msgstr ""
"<funcdef>float <function>ST_3DDistance</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef>"

#. Tag: para
#: reference_measure.xml:95
#, no-c-format
msgid ""
"For geometry type returns the 3-dimensional minimum cartesian distance between two geometries in "
"projected units (spatial ref units)."
msgstr ""
"ジオメトリ型について、二つのジオメトリの、3次元の最小デカルト距離 (空間参照系に基づきます)を、投影法の"
"単位で返します。"

#. Tag: para
#: reference_measure.xml:101 reference_measure.xml:154
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM ?"
msgstr "&sqlmm_compliant; SQL-MM ?"

#. Tag: para
#: reference_measure.xml:102 reference_measure.xml:274 reference_measure.xml:517
#: reference_measure.xml:1586 reference_measure.xml:2138 reference_measure.xml:2189
#, no-c-format
msgid "&sfcgal_enhanced;"
msgstr "&sfcgal_enhanced;"

#. Tag: para
#: reference_measure.xml:105 reference_measure.xml:393
#, no-c-format
msgid "Changed: 2.2.0 - In case of 2D and 3D, Z is no longer assumed to be 0 for missing Z."
msgstr "Changed: 2.2.0 - 2次元と3次元の場合には、もはや、存在しないZの値について0を仮定しません。"

#. Tag: programlisting
#: reference_measure.xml:111
#, no-c-format
msgid ""
"-- Geometry example - units in meters (SRID: 2163 US National Atlas Equal area) (3D point and line "
"compared 2D point and line)\n"
"-- Note: currently no vertical datum support so Z is not transformed and assumed to be same units as "
"final.\n"
"SELECT ST_3DDistance(\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;POINT(-72.1235 42.3521 4)'),2163),\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;LINESTRING(-72.1260 42.45 15, -72.123 "
"42.1546 20)'),2163)\n"
"                ) As dist_3d,\n"
"                ST_Distance(\n"
"                        ST_Transform(ST_GeomFromText('POINT(-72.1235 42.3521)',4326),2163),\n"
"                        ST_Transform(ST_GeomFromText('LINESTRING(-72.1260 42.45, -72.123 42.1546)', "
"4326),2163)\n"
"                ) As dist_2d;\n"
"\n"
"     dist_3d      |     dist_2d\n"
"------------------+-----------------\n"
" 127.295059324629 | 126.66425605671"
msgstr ""
"-- ジオメトリの例 - メートル単位(SRID: 2163 米国ナショナルアトラス正積図法)\n"
"-- (3次元ポイントとラインの距離と、2次元ポイントとラインの距離とを比較)\n"
"-- ご注意: 現在は垂直データムに対応していないので、\n"
"-- Zは変換されずに、最終的に同じであると仮定されます。\n"
"SELECT ST_3DDistance(\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;POINT(-72.1235 42.3521 4)'),2163),\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;LINESTRING(-72.1260 42.45 15, -72.123 "
"42.1546 20)'),2163)\n"
"                ) As dist_3d,\n"
"                ST_Distance(\n"
"                        ST_Transform(ST_GeomFromText('POINT(-72.1235 42.3521)',4326),2163),\n"
"                        ST_Transform(ST_GeomFromText('LINESTRING(-72.1260 42.45, -72.123 42.1546)', "
"4326),2163)\n"
"                ) As dist_2d;\n"
"\n"
"     dist_3d      |     dist_2d\n"
"------------------+-----------------\n"
" 127.295059324629 | 126.66425605671"

#. Tag: programlisting
#: reference_measure.xml:112
#, no-c-format
msgid ""
"-- Multilinestring and polygon both 3d and 2d distance\n"
"-- Same example as 3D closest point example\n"
"SELECT ST_3DDistance(poly, mline) As dist3d,\n"
"    ST_Distance(poly, mline) As dist2d \n"
"        FROM (SELECT  ST_GeomFromEWKT('POLYGON((175 150 5, 20 40 5, 35 45 5, 50 60 5, 100 100 5, 175 "
"150 5))') As poly,\n"
"                ST_GeomFromEWKT('MULTILINESTRING((175 155 2, 20 40 20, 50 60 -2, 125 100 1, 175 155 "
"1),\n"
"                (1 10 2, 5 20 1))') As mline ) As foo;\n"
"      dist3d       | dist2d\n"
"-------------------+--------\n"
" 0.716635696066337 |      0"
msgstr ""
"-- 3次元2次元両方のマルチラインストリングとポリゴンの距離\n"
"-- 3次元最も近い点の例と同じです\n"
"SELECT ST_3DDistance(poly, mline) As dist3d,\n"
"    ST_Distance(poly, mline) As dist2d \n"
"        FROM (SELECT  ST_GeomFromEWKT('POLYGON((175 150 5, 20 40 5, 35 45 5, 50 60 5, 100 100 5, 175 "
"150 5))') As poly,\n"
"                ST_GeomFromEWKT('MULTILINESTRING((175 155 2, 20 40 20, 50 60 -2, 125 100 1, 175 155 "
"1),\n"
"                (1 10 2, 5 20 1))') As mline ) As foo;\n"
"      dist3d       | dist2d\n"
"-------------------+--------\n"
" 0.716635696066337 |      0"

#. Tag: para
#: reference_measure.xml:118
#, no-c-format
msgid ""
", <xref linkend=\"ST_3DClosestPoint\"/>, <xref linkend=\"ST_3DDWithin\"/>, <xref linkend="
"\"ST_3DMaxDistance\"/>, <xref linkend=\"ST_3DShortestLine\"/>, <xref linkend=\"ST_Transform\"/>"
msgstr ""
", <xref linkend=\"ST_3DClosestPoint\"/>, <xref linkend=\"ST_3DDWithin\"/>, <xref linkend="
"\"ST_3DMaxDistance\"/>, <xref linkend=\"ST_3DShortestLine\"/>, <xref linkend=\"ST_Transform\"/>"

#. Tag: refname
#: reference_measure.xml:124
#, no-c-format
msgid "ST_3DDWithin"
msgstr "ST_3DDWithin"

#. Tag: refpurpose
#: reference_measure.xml:126
#, no-c-format
msgid "For 3d (z) geometry type Returns true if two geometries 3d distance is within number of units."
msgstr ""
"3次元 (XYZ)ジオメトリ型について、二つのジオメトリの3次元距離が指定した数の内にある場合にtrueを返しま"
"す。"

#. Tag: funcprototype
#: reference_measure.xml:130
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_3DDWithin</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef> <paramdef><type>double precision </type> <parameter>distance_of_srid</parameter></paramdef>"
msgstr ""
"<funcdef>boolean <function>ST_3DDWithin</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef> <paramdef><type>double precision </type> <parameter>distance_of_srid</parameter></paramdef>"

#. Tag: para
#: reference_measure.xml:148
#, no-c-format
msgid ""
"For geometry type returns true if the 3d distance between two objects is within distance_of_srid "
"specified projected units (spatial ref units)."
msgstr ""
"ジオメトリ型について、二つのオブジェクト間の距離が、投影法の単位 (空間参照系の単位)でdistance_of_srid内"
"にある場合にtrueを返します。"

#. Tag: programlisting
#: reference_measure.xml:162
#, no-c-format
msgid ""
"-- Geometry example - units in meters (SRID: 2163 US National Atlas Equal area) (3D point and line "
"compared 2D point and line)\n"
"-- Note: currently no vertical datum support so Z is not transformed and assumed to be same units as "
"final.\n"
"SELECT ST_3DDWithin(\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;POINT(-72.1235 42.3521 4)'),2163),\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;LINESTRING(-72.1260 42.45 15, -72.123 "
"42.1546 20)'),2163),\n"
"                        126.8\n"
"                ) As within_dist_3d,\n"
"ST_DWithin(\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;POINT(-72.1235 42.3521 4)'),2163),\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;LINESTRING(-72.1260 42.45 15, -72.123 "
"42.1546 20)'),2163),\n"
"                        126.8\n"
"                ) As within_dist_2d;\n"
"\n"
" within_dist_3d | within_dist_2d\n"
"----------------+----------------\n"
" f              | t"
msgstr ""
"-- ジオメトリの例 - メートル単位(SRID: 2163 米国ナショナルアトラス正積図法)\n"
"-- (3次元ポイントとラインの距離と、2次元ポイントとラインの距離とを比較)\n"
"-- ご注意: 現在は垂直データムに対応していないので、\n"
"-- Zは変換されずに、最終的に同じであると仮定されます。\n"
"SELECT ST_3DDWithin(\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;POINT(-72.1235 42.3521 4)'),2163),\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;LINESTRING(-72.1260 42.45 15, -72.123 "
"42.1546 20)'),2163),\n"
"                        126.8\n"
"                ) As within_dist_3d,\n"
"ST_DWithin(\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;POINT(-72.1235 42.3521 4)'),2163),\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;LINESTRING(-72.1260 42.45 15, -72.123 "
"42.1546 20)'),2163),\n"
"                        126.8\n"
"                ) As within_dist_2d;\n"
"\n"
" within_dist_3d | within_dist_2d\n"
"----------------+----------------\n"
" f              | t"

#. Tag: para
#: reference_measure.xml:168
#, no-c-format
msgid ""
", <xref linkend=\"ST_Distance\"/>, <xref linkend=\"ST_DWithin\"/>, <xref linkend=\"ST_3DMaxDistance\"/"
">, <xref linkend=\"ST_Transform\"/>"
msgstr ""
", <xref linkend=\"ST_Distance\"/>, <xref linkend=\"ST_DWithin\"/>, <xref linkend=\"ST_3DMaxDistance\"/"
">, <xref linkend=\"ST_Transform\"/>"

#. Tag: refname
#: reference_measure.xml:174
#, no-c-format
msgid "ST_3DDFullyWithin"
msgstr "ST_3DDFullyWithin"

#. Tag: refpurpose
#: reference_measure.xml:176
#, no-c-format
msgid "Returns true if all of the 3D geometries are within the specified distance of one another."
msgstr "3次元ジオメトリが他のジオメトリとの距離が指定した範囲内ならtrueを返します。"

#. Tag: funcprototype
#: reference_measure.xml:182
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_3DDFullyWithin</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef> <paramdef><type>double precision </type> <parameter>distance</parameter></paramdef>"
msgstr ""
"<funcdef>boolean <function>ST_3DDFullyWithin</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef> <paramdef><type>double precision </type> <parameter>distance</parameter></paramdef>"

#. Tag: para
#: reference_measure.xml:200
#, no-c-format
msgid ""
"Returns true if the 3D geometries are fully within the specified distance of one another. The distance "
"is specified in units defined by the spatial reference system of the geometries. For this function to "
"make sense, the source geometries must both be of the same coordinate projection, having the same SRID."
msgstr ""
"3次元ジオメトリが他のジオメトリとの距離が、完全に指定した範囲内ならtrueを返します。距離の単位はジオメト"
"リの空間参照系で定義されているものとされます。この関数が意味を持つためには、与えられるジオメトリは両方"
"とも同じ座標系で同じSRIDを持つ必要があります。"

#. Tag: para
#: reference_measure.xml:207 reference_measure.xml:264 reference_measure.xml:1254
#: reference_measure.xml:1861 reference_measure.xml:1947 reference_measure.xml:2122
#, no-c-format
msgid ""
"This function call will automatically include a bounding box comparison that will make use of any "
"indexes that are available on the geometries."
msgstr ""
"この関数の呼び出しによって、ジオメトリで使用可能なインデクスを使用したバウンディングボックスの比較が自"
"動的に行われます。"

#. Tag: programlisting
#: reference_measure.xml:221
#, no-c-format
msgid ""
"-- This compares the difference between fully within and distance within as well\n"
"                -- as the distance fully within for the 2D footprint of the line/point vs. the 3d "
"fully within\n"
"                SELECT ST_3DDFullyWithin(geom_a, geom_b, 10) as D3DFullyWithin10, ST_3DDWithin(geom_a, "
"geom_b, 10) as D3DWithin10, \n"
"        ST_DFullyWithin(geom_a, geom_b, 20) as D2DFullyWithin20, \n"
"        ST_3DDFullyWithin(geom_a, geom_b, 20) as D3DFullyWithin20 from \n"
"                (select ST_GeomFromEWKT('POINT(1 1 2)') as geom_a,\n"
"                ST_GeomFromEWKT('LINESTRING(1 5 2, 2 7 20, 1 9 100, 14 12 3)') as geom_b) t1;\n"
" d3dfullywithin10 | d3dwithin10 | d2dfullywithin20 | d3dfullywithin20\n"
"------------------+-------------+------------------+------------------\n"
" f                | t           | t                | f"
msgstr ""
"-- これは、完全に範囲内にあるかどうかと範囲内にあるかどうかの比較と、\n"
"-- ライン/ポイントの2次元平面への投影で完全に範囲内にあるかどうかと\n"
"-- 3次元で完全に範囲内にあるかの比較とを行っています。\n"
"                SELECT ST_3DDFullyWithin(geom_a, geom_b, 10) as D3DFullyWithin10, ST_3DDWithin(geom_a, "
"geom_b, 10) as D3DWithin10, \n"
"        ST_DFullyWithin(geom_a, geom_b, 20) as D2DFullyWithin20, \n"
"        ST_3DDFullyWithin(geom_a, geom_b, 20) as D3DFullyWithin20 from \n"
"                (select ST_GeomFromEWKT('POINT(1 1 2)') as geom_a,\n"
"                ST_GeomFromEWKT('LINESTRING(1 5 2, 2 7 20, 1 9 100, 14 12 3)') as geom_b) t1;\n"
" d3dfullywithin10 | d3dwithin10 | d2dfullywithin20 | d3dfullywithin20\n"
"------------------+-------------+------------------+------------------\n"
" f                | t           | t                | f"

#. Tag: para
#: reference_measure.xml:227
#, no-c-format
msgid ""
", <xref linkend=\"ST_3DDWithin\"/>, <xref linkend=\"ST_DWithin\"/>, <xref linkend=\"ST_DFullyWithin\"/>"
msgstr ""
", <xref linkend=\"ST_3DDWithin\"/>, <xref linkend=\"ST_DWithin\"/>, <xref linkend=\"ST_DFullyWithin\"/>"

#. Tag: refname
#: reference_measure.xml:233
#, no-c-format
msgid "ST_3DIntersects"
msgstr "ST_3DIntersects"

#. Tag: refpurpose
#: reference_measure.xml:235
#, no-c-format
msgid ""
"Returns TRUE if the Geometries \"spatially intersect\" in 3d - only for points, linestrings, polygons, "
"polyhedral surface (area). With SFCGAL backend enabled also supports TINS"
msgstr ""
"ジオメトリが3次元で「空間的にインタセクトする」場合にTRUEを返します。ポイント、ラインストリング、ポリゴ"
"ン、多面体サーフェス (面)のみ対応します。SFCGALバックエンドによってTINも対応します。"

#. Tag: funcprototype
#: reference_measure.xml:241
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_3DIntersects</function></funcdef> <paramdef> <type>geometry</type> "
"<parameter>geomA</parameter> </paramdef> <paramdef> <type>geometry</type> <parameter>geomB</parameter> "
"</paramdef>"
msgstr ""
"<funcdef>boolean <function>ST_3DIntersects</function></funcdef> <paramdef> <type>geometry</type> "
"<parameter>geomA</parameter> </paramdef> <paramdef> <type>geometry</type> <parameter>geomB</parameter> "
"</paramdef>"

#. Tag: para
#: reference_measure.xml:256 reference_measure.xml:2110
#, no-c-format
msgid ""
"Overlaps, Touches, Within all imply spatial intersection. If any of the aforementioned returns true, "
"then the geometries also spatially intersect. Disjoint implies false for spatial intersection."
msgstr ""
"オーバラップ、接触、包含は全て、ジオメトリがインタセクトしていることを意味しています。これらがTRUEを返"
"す場合は、空間的にインタセクトしています。非接続は、空間インタセクトについてFALSEとなります。"

#. Tag: para
#: reference_measure.xml:269
#, no-c-format
msgid ""
"In order to take advantage of support for TINS, you need to enable the SFCGAL backend. This can be "
"done at session time with: <code>set postgis.backend = sfcgal;</code> or at the database or system "
"level. Database level can be done with <code>ALTER DATABASE gisdb SET postgis.backend = sfcgal;</code>."
msgstr ""
"TIN対応の利点を得るには、SFCGALバックエンドを有効にしなければなりません。セッション時に有効にするには"
"<code>set postgis.backend = sfcgal;</code>とします。データベースレベルまたはシステムレベルで有効になる"
"ならセッション時に有効です。データベースレベルで有効にするには<code>ALTER DATABASE gisdb SET postgis."
"backend = sfcgal;</code>とします。"

#. Tag: para
#: reference_measure.xml:273
#, no-c-format
msgid "&T_support;"
msgstr "&T_support;"

#. Tag: para
#: reference_measure.xml:275
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: ?"
msgstr "&sqlmm_compliant; SQL-MM 3: ?"

#. Tag: title
#: reference_measure.xml:278 reference_measure.xml:2141 reference_measure.xml:2193
#, no-c-format
msgid "Geometry Examples"
msgstr "ジオメトリの例"

#. Tag: programlisting
#: reference_measure.xml:279
#, no-c-format
msgid ""
"SELECT ST_3DIntersects(pt, line), ST_Intersects(pt,line) \n"
"        FROM (SELECT 'POINT(0 0 2)'::geometry As pt, \n"
"                'LINESTRING (0 0 1, 0 2 3 )'::geometry As line) As foo;\n"
" st_3dintersects | st_intersects\n"
"-----------------+---------------\n"
" f               | t\n"
"(1 row)"
msgstr ""
"SELECT ST_3DIntersects(pt, line), ST_Intersects(pt,line) \n"
"        FROM (SELECT 'POINT(0 0 2)'::geometry As pt, \n"
"                'LINESTRING (0 0 1, 0 2 3 )'::geometry As line) As foo;\n"
" st_3dintersects | st_intersects\n"
"-----------------+---------------\n"
" f               | t\n"
"(1 row)"

#. Tag: title
#: reference_measure.xml:282
#, no-c-format
msgid "TIN Examples"
msgstr "TINの例"

#. Tag: programlisting
#: reference_measure.xml:283
#, no-c-format
msgid ""
"set postgis.backend = sfcgal;\n"
"SELECT ST_3DIntersects('TIN(((0 0,1 0,0 1,0 0)))'::geometry, 'POINT(.1 .1)'::geometry);\n"
" st_3dintersects \n"
"-----------------\n"
" t"
msgstr ""
"set postgis.backend = sfcgal;\n"
"SELECT ST_3DIntersects('TIN(((0 0,1 0,0 1,0 0)))'::geometry, 'POINT(.1 .1)'::geometry);\n"
" st_3dintersects \n"
"-----------------\n"
" t"

#. Tag: refname
#: reference_measure.xml:293
#, no-c-format
msgid "ST_3DLongestLine"
msgstr "ST_3DLongestLine"

#. Tag: refpurpose
#: reference_measure.xml:295
#, no-c-format
msgid "Returns the 3-dimensional longest line between two geometries"
msgstr "二つのジオメトリの3次元長が最長となるラインを返します。"

#. Tag: funcprototype
#: reference_measure.xml:300
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_3DLongestLine</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_3DLongestLine</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef>"

#. Tag: para
#: reference_measure.xml:315
#, no-c-format
msgid ""
"Returns the 3-dimensional longest line between two geometries. The function will only return the first "
"longest line if more than one. The line returned will always start in g1 and end in g2. The 3D length "
"of the line this function returns will always be the same as <xref linkend=\"ST_3DMaxDistance\"/> "
"returns for g1 and g2."
msgstr ""
"二つのジオメトリの3次元長が最長となるラインを返します。見つかった最長線が複数ある場合は、最初のもののみ"
"返します。返されるラインは常にg1側を始点、g2側を終点とします。この関数が返すラインの3次元の長さは、常に"
"始点をg1に終点をg2にそれぞれ指定した場合の<xref linkend=\"ST_3DMaxDistance\"/>が返す値と同じになりま"
"す。"

#. Tag: para
#: reference_measure.xml:334
#, no-c-format
msgid "linestring and point -- both 3d and 2d longest line"
msgstr "ラインストリングとポイント -- 3次元と2次元の最長ライン"

#. Tag: programlisting
#: reference_measure.xml:335
#, no-c-format
msgid ""
"SELECT ST_AsEWKT(ST_3DLongestLine(line,pt)) AS lol3d_line_pt, \n"
"                ST_AsEWKT(ST_LongestLine(line,pt)) As lol2d_line_pt\n"
"        FROM (SELECT 'POINT(100 100 30)'::geometry As pt, \n"
"                        'LINESTRING (20 80 20, 98 190 1, 110 180 3, 50 75 1000)'::geometry As line\n"
"                ) As foo;\n"
"        \n"
"                \n"
"           lol3d_line_pt           |       lol2d_line_pt\n"
"-----------------------------------+----------------------------\n"
" LINESTRING(50 75 1000,100 100 30) | LINESTRING(98 190,100 100)"
msgstr ""
"SELECT ST_AsEWKT(ST_3DLongestLine(line,pt)) AS lol3d_line_pt, \n"
"                ST_AsEWKT(ST_LongestLine(line,pt)) As lol2d_line_pt\n"
"        FROM (SELECT 'POINT(100 100 30)'::geometry As pt, \n"
"                        'LINESTRING (20 80 20, 98 190 1, 110 180 3, 50 75 1000)'::geometry As line\n"
"                ) As foo;\n"
"        \n"
"                \n"
"           lol3d_line_pt           |       lol2d_line_pt\n"
"-----------------------------------+----------------------------\n"
" LINESTRING(50 75 1000,100 100 30) | LINESTRING(98 190,100 100)"

#. Tag: para
#: reference_measure.xml:339
#, no-c-format
msgid "linestring and multipoint -- both 3d and 2d longest line"
msgstr "ラインストリングとマルチポイント -- 3次元と2次元の最長ライン"

#. Tag: programlisting
#: reference_measure.xml:340
#, no-c-format
msgid ""
"SELECT ST_AsEWKT(ST_3DLongestLine(line,pt)) AS lol3d_line_pt, \n"
"                ST_AsEWKT(ST_LongestLine(line,pt)) As lol2d_line_pt\n"
"        FROM (SELECT 'MULTIPOINT(100 100 30, 50 74 1000)'::geometry As pt, \n"
"                        'LINESTRING (20 80 20, 98 190 1, 110 180 3, 50 75 900)'::geometry As line\n"
"                ) As foo;\n"
"        \n"
"                \n"
"          lol3d_line_pt          |      lol2d_line_pt\n"
"---------------------------------+--------------------------\n"
" LINESTRING(98 190 1,50 74 1000) | LINESTRING(98 190,50 74)"
msgstr ""
"SELECT ST_AsEWKT(ST_3DLongestLine(line,pt)) AS lol3d_line_pt, \n"
"                ST_AsEWKT(ST_LongestLine(line,pt)) As lol2d_line_pt\n"
"        FROM (SELECT 'MULTIPOINT(100 100 30, 50 74 1000)'::geometry As pt, \n"
"                        'LINESTRING (20 80 20, 98 190 1, 110 180 3, 50 75 900)'::geometry As line\n"
"                ) As foo;\n"
"        \n"
"                \n"
"          lol3d_line_pt          |      lol2d_line_pt\n"
"---------------------------------+--------------------------\n"
" LINESTRING(98 190 1,50 74 1000) | LINESTRING(98 190,50 74)"

#. Tag: para
#: reference_measure.xml:344
#, no-c-format
msgid "Multilinestring and polygon both 3d and 2d longest line"
msgstr "マルチラインストリングとポリゴン -- 3次元と2次元の最長ライン"

#. Tag: programlisting
#: reference_measure.xml:345
#, no-c-format
msgid ""
"SELECT ST_AsEWKT(ST_3DLongestLine(poly, mline)) As lol3d,\n"
"    ST_AsEWKT(ST_LongestLine(poly, mline)) As lol2d \n"
"        FROM (SELECT  ST_GeomFromEWKT('POLYGON((175 150 5, 20 40 5, 35 45 5, 50 60 5, 100 100 5, 175 "
"150 5))') As poly,\n"
"                ST_GeomFromEWKT('MULTILINESTRING((175 155 2, 20 40 20, 50 60 -2, 125 100 1, 175 155 "
"1),\n"
"                (1 10 2, 5 20 1))') As mline ) As foo;\n"
"            lol3d             |          lol2d\n"
"------------------------------+--------------------------\n"
" LINESTRING(175 150 5,1 10 2) | LINESTRING(175 150,1 10)"
msgstr ""
"SELECT ST_AsEWKT(ST_3DLongestLine(poly, mline)) As lol3d,\n"
"    ST_AsEWKT(ST_LongestLine(poly, mline)) As lol2d \n"
"        FROM (SELECT  ST_GeomFromEWKT('POLYGON((175 150 5, 20 40 5, 35 45 5, 50 60 5, 100 100 5, 175 "
"150 5))') As poly,\n"
"                ST_GeomFromEWKT('MULTILINESTRING((175 155 2, 20 40 20, 50 60 -2, 125 100 1, 175 155 "
"1),\n"
"                (1 10 2, 5 20 1))') As mline ) As foo;\n"
"            lol3d             |          lol2d\n"
"------------------------------+--------------------------\n"
" LINESTRING(175 150 5,1 10 2) | LINESTRING(175 150,1 10)"

#. Tag: para
#: reference_measure.xml:357
#, no-c-format
msgid ""
", <xref linkend=\"ST_3DDistance\"/>, <xref linkend=\"ST_LongestLine\"/>, <xref linkend="
"\"ST_3DShortestLine\"/>, <xref linkend=\"ST_3DMaxDistance\"/>"
msgstr ""
", <xref linkend=\"ST_3DDistance\"/>, <xref linkend=\"ST_LongestLine\"/>, <xref linkend="
"\"ST_3DShortestLine\"/>, <xref linkend=\"ST_3DMaxDistance\"/>"

#. Tag: refname
#: reference_measure.xml:363
#, no-c-format
msgid "ST_3DMaxDistance"
msgstr "ST_3DMaxDistance"

#. Tag: refpurpose
#: reference_measure.xml:365
#, no-c-format
msgid ""
"For geometry type Returns the 3-dimensional cartesian maximum distance (based on spatial ref) between "
"two geometries in projected units."
msgstr ""
"ジオメトリ型について、二つのジオメトリの、3次元の最大デカルト距離 (空間参照系に基づきます)を、投影法の"
"単位で返します。"

#. Tag: funcprototype
#: reference_measure.xml:370
#, no-c-format
msgid ""
"<funcdef>float <function>ST_3DMaxDistance</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef>"
msgstr ""
"<funcdef>float <function>ST_3DMaxDistance</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef>"

#. Tag: para
#: reference_measure.xml:385
#, no-c-format
msgid ""
"For geometry type returns the 3-dimensional maximum cartesian distance between two geometries in "
"projected units (spatial ref units)."
msgstr ""
"ジオメトリ型について、二つのジオメトリの、3次元の最大デカルト距離 (空間参照系に基づきます)を、投影法の"
"単位で返します。"

#. Tag: programlisting
#: reference_measure.xml:399
#, no-c-format
msgid ""
"-- Geometry example - units in meters (SRID: 2163 US National Atlas Equal area) (3D point and line "
"compared 2D point and line)\n"
"-- Note: currently no vertical datum support so Z is not transformed and assumed to be same units as "
"final.\n"
"SELECT ST_3DMaxDistance(\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;POINT(-72.1235 42.3521 "
"10000)'),2163),\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;LINESTRING(-72.1260 42.45 15, -72.123 "
"42.1546 20)'),2163)\n"
"                ) As dist_3d,\n"
"                ST_MaxDistance(\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;POINT(-72.1235 42.3521 "
"10000)'),2163),\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;LINESTRING(-72.1260 42.45 15, -72.123 "
"42.1546 20)'),2163)\n"
"                ) As dist_2d;\n"
"\n"
"     dist_3d      |     dist_2d\n"
"------------------+------------------\n"
" 24383.7467488441 | 22247.8472107251"
msgstr ""
"-- ジオメトリの例 - メートル単位(SRID: 2163 米国ナショナルアトラス正積図法)\n"
"-- (3次元ポイントとラインの距離と、2次元ポイントとラインの距離とを比較)\n"
"-- ご注意: 現在は垂直データムに対応していないので、Zは変換されずに、最終的に同じであると仮定されま"
"す。\n"
"SELECT ST_3DMaxDistance(\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;POINT(-72.1235 42.3521 "
"10000)'),2163),\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;LINESTRING(-72.1260 42.45 15, -72.123 "
"42.1546 20)'),2163)\n"
"                ) As dist_3d,\n"
"                ST_MaxDistance(\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;POINT(-72.1235 42.3521 "
"10000)'),2163),\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;LINESTRING(-72.1260 42.45 15, -72.123 "
"42.1546 20)'),2163)\n"
"                ) As dist_2d;\n"
"\n"
"     dist_3d      |     dist_2d\n"
"------------------+------------------\n"
" 24383.7467488441 | 22247.8472107251"

#. Tag: para
#: reference_measure.xml:405
#, no-c-format
msgid ""
", <xref linkend=\"ST_3DDWithin\"/>, <xref linkend=\"ST_3DMaxDistance\"/>, <xref linkend=\"ST_Transform"
"\"/>"
msgstr ""
", <xref linkend=\"ST_3DDWithin\"/>, <xref linkend=\"ST_3DMaxDistance\"/>, <xref linkend=\"ST_Transform"
"\"/>"

#. Tag: refname
#: reference_measure.xml:410
#, no-c-format
msgid "ST_3DShortestLine"
msgstr "ST_3DShortestLine"

#. Tag: refpurpose
#: reference_measure.xml:412
#, no-c-format
msgid "Returns the 3-dimensional shortest line between two geometries"
msgstr "二つのジオメトリの3次元長が最短となるラインを返します。"

#. Tag: funcprototype
#: reference_measure.xml:417
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_3DShortestLine</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_3DShortestLine</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef>"

#. Tag: para
#: reference_measure.xml:432
#, no-c-format
msgid ""
"Returns the 3-dimensional shortest line between two geometries. The function will only return the "
"first shortest line if more than one, that the function finds. If g1 and g2 intersects in just one "
"point the function will return a line with both start and end in that intersection-point. If g1 and g2 "
"are intersecting with more than one point the function will return a line with start and end in the "
"same point but it can be any of the intersecting points. The line returned will always start in g1 and "
"end in g2. The 3D length of the line this function returns will always be the same as <xref linkend="
"\"ST_3DDistance\"/> returns for g1 and g2."
msgstr ""
"二つのジオメトリの3次元長が最短となるラインを返します。見つかった最短線が複数ある場合は、最初のもののみ"
"返します。g1とg2が1点のみでインタセクトする場合は、インタセクション点を開始点と終了点とします。g1とg2が"
"1点より多くインタセクトする場合は、同じ点を開始点と終了点としますが、その点は不定です。返されるラインは"
"常にg1側を始点、g2側を終点とします。この関数が返すラインの長さは、常にg1とg2を指定した場合の<xref "
"linkend=\"ST_3DDistance\"/>が返す値と同じになります。"

#. Tag: para
#: reference_measure.xml:455
#, no-c-format
msgid "linestring and point -- both 3d and 2d shortest line"
msgstr "ラインストリングとポイント -- 3次元と2次元の最短ライン"

#. Tag: programlisting
#: reference_measure.xml:456
#, no-c-format
msgid ""
"SELECT ST_AsEWKT(ST_3DShortestLine(line,pt)) AS shl3d_line_pt, \n"
"                ST_AsEWKT(ST_ShortestLine(line,pt)) As shl2d_line_pt\n"
"        FROM (SELECT 'POINT(100 100 30)'::geometry As pt, \n"
"                        'LINESTRING (20 80 20, 98 190 1, 110 180 3, 50 75 1000)'::geometry As line\n"
"                ) As foo;\n"
"        \n"
"                \n"
" shl3d_line_pt                                                                                         "
"|               shl2d_line_pt\n"
"----------------------------------------------------------------------------"
"+------------------------------------------------------\n"
" LINESTRING(54.6993798867619 128.935022917228 11.5475869506606,100 100 30)  | "
"LINESTRING(73.0769230769231 115.384615384615,100 100)"
msgstr ""
"SELECT ST_AsEWKT(ST_3DShortestLine(line,pt)) AS shl3d_line_pt, \n"
"                ST_AsEWKT(ST_ShortestLine(line,pt)) As shl2d_line_pt\n"
"        FROM (SELECT 'POINT(100 100 30)'::geometry As pt, \n"
"                        'LINESTRING (20 80 20, 98 190 1, 110 180 3, 50 75 1000)'::geometry As line\n"
"                ) As foo;\n"
"        \n"
"                \n"
" shl3d_line_pt                                                                                         "
"|               shl2d_line_pt\n"
"----------------------------------------------------------------------------"
"+------------------------------------------------------\n"
" LINESTRING(54.6993798867619 128.935022917228 11.5475869506606,100 100 30)  | "
"LINESTRING(73.0769230769231 115.384615384615,100 100)"

#. Tag: para
#: reference_measure.xml:460
#, no-c-format
msgid "linestring and multipoint -- both 3d and 2d shortest line"
msgstr "ラインストリングとマルチポイント -- 3次元と2次元の最短ライン"

#. Tag: programlisting
#: reference_measure.xml:461
#, no-c-format
msgid ""
"SELECT ST_AsEWKT(ST_3DShortestLine(line,pt)) AS shl3d_line_pt, \n"
"                ST_AsEWKT(ST_ShortestLine(line,pt)) As shl2d_line_pt\n"
"        FROM (SELECT 'MULTIPOINT(100 100 30, 50 74 1000)'::geometry As pt, \n"
"                        'LINESTRING (20 80 20, 98 190 1, 110 180 3, 50 75 900)'::geometry As line\n"
"                ) As foo;\n"
"        \n"
"                \n"
"                       shl3d_line_pt                                       | shl2d_line_pt\n"
"---------------------------------------------------------------------------+------------------------\n"
" LINESTRING(54.6993798867619 128.935022917228 11.5475869506606,100 100 30) | LINESTRING(50 75,50 74)"
msgstr ""
"SELECT ST_AsEWKT(ST_3DShortestLine(line,pt)) AS shl3d_line_pt, \n"
"                ST_AsEWKT(ST_ShortestLine(line,pt)) As shl2d_line_pt\n"
"        FROM (SELECT 'MULTIPOINT(100 100 30, 50 74 1000)'::geometry As pt, \n"
"                        'LINESTRING (20 80 20, 98 190 1, 110 180 3, 50 75 900)'::geometry As line\n"
"                ) As foo;\n"
"        \n"
"                \n"
"                       shl3d_line_pt                                       | shl2d_line_pt\n"
"---------------------------------------------------------------------------+------------------------\n"
" LINESTRING(54.6993798867619 128.935022917228 11.5475869506606,100 100 30) | LINESTRING(50 75,50 74)"

#. Tag: para
#: reference_measure.xml:465
#, no-c-format
msgid "Multilinestring and polygon both 3d and 2d shortest line"
msgstr "マルチラインストリングとポリゴン -- 3次元と2次元の最短ライン"

#. Tag: programlisting
#: reference_measure.xml:466
#, no-c-format
msgid ""
"SELECT ST_AsEWKT(ST_3DShortestLine(poly, mline)) As shl3d,\n"
"    ST_AsEWKT(ST_ShortestLine(poly, mline)) As shl2d \n"
"        FROM (SELECT  ST_GeomFromEWKT('POLYGON((175 150 5, 20 40 5, 35 45 5, 50 60 5, 100 100 5, 175 "
"150 5))') As poly,\n"
"                ST_GeomFromEWKT('MULTILINESTRING((175 155 2, 20 40 20, 50 60 -2, 125 100 1, 175 155 "
"1),\n"
"                (1 10 2, 5 20 1))') As mline ) As foo;\n"
"                   shl3d                                                                           "
"|     shl2d\n"
"---------------------------------------------------------------------------------------------------"
"+------------------------\n"
" LINESTRING(39.993580415989 54.1889925532825 5,40.4078575708294 53.6052383805529 5.03423778139177) | "
"LINESTRING(20 40,20 40)"
msgstr ""
"SELECT ST_AsEWKT(ST_3DShortestLine(poly, mline)) As shl3d,\n"
"    ST_AsEWKT(ST_ShortestLine(poly, mline)) As shl2d \n"
"        FROM (SELECT  ST_GeomFromEWKT('POLYGON((175 150 5, 20 40 5, 35 45 5, 50 60 5, 100 100 5, 175 "
"150 5))') As poly,\n"
"                ST_GeomFromEWKT('MULTILINESTRING((175 155 2, 20 40 20, 50 60 -2, 125 100 1, 175 155 "
"1),\n"
"                (1 10 2, 5 20 1))') As mline ) As foo;\n"
"                   shl3d                                                                           "
"|     shl2d\n"
"---------------------------------------------------------------------------------------------------"
"+------------------------\n"
" LINESTRING(39.993580415989 54.1889925532825 5,40.4078575708294 53.6052383805529 5.03423778139177) | "
"LINESTRING(20 40,20 40)"

#. Tag: para
#: reference_measure.xml:478
#, no-c-format
msgid ""
", <xref linkend=\"ST_3DDistance\"/>, <xref linkend=\"ST_LongestLine\"/>, <xref linkend="
"\"ST_ShortestLine\"/>, <xref linkend=\"ST_3DMaxDistance\"/>"
msgstr ""
", <xref linkend=\"ST_3DDistance\"/>, <xref linkend=\"ST_LongestLine\"/>, <xref linkend="
"\"ST_ShortestLine\"/>, <xref linkend=\"ST_3DMaxDistance\"/>"

#. Tag: refname
#: reference_measure.xml:483
#, no-c-format
msgid "ST_Area"
msgstr "ST_Area"

#. Tag: refpurpose
#: reference_measure.xml:485
#, no-c-format
msgid ""
"Returns the area of the surface if it is a Polygon or MultiPolygon. For geometry, a 2D Cartesian area "
"is determined with units specified by the SRID. For geography, area is determined on a curved surface "
"with units in square meters."
msgstr ""
"ポリゴンまたはマルチポリゴンの場合にはサーフェスの面積を返します。ジオメトリ型の面積はSRIDに基づく単位"
"です。ジオグラフィ型の面積は曲面上で計算され、単位は平方メートルです。"

#. Tag: funcsynopsis
#: reference_measure.xml:489
#, no-c-format
msgid ""
"<funcprototype> <funcdef>float <function>ST_Area</function></funcdef> <paramdef><type>geometry </"
"type><parameter>g1</parameter></paramdef> </funcprototype> <funcprototype> <funcdef>float "
"<function>ST_Area</function></funcdef> <paramdef><type>geography </type><parameter>geog</parameter></"
"paramdef> <paramdef choice=\"opt\"><type>boolean </type><parameter>use_spheroid=true</parameter></"
"paramdef> </funcprototype>"
msgstr ""
"<funcprototype> <funcdef>float <function>ST_Area</function></funcdef> <paramdef><type>geometry </"
"type><parameter>g1</parameter></paramdef> </funcprototype> <funcprototype> <funcdef>float "
"<function>ST_Area</function></funcdef> <paramdef><type>geography </type><parameter>geog</parameter></"
"paramdef> <paramdef choice=\"opt\"><type>boolean </type><parameter>use_spheroid=true</parameter></"
"paramdef> </funcprototype>"

#. Tag: para
#: reference_measure.xml:505
#, no-c-format
msgid ""
"Returns the area of the geometry if it is a Polygon or MultiPolygon. Return the area measurement of an "
"ST_Surface or ST_MultiSurface value. For geometry, a 2D Cartesian area is determined with units "
"specified by the SRID. For geography, by default area is determined on a spheroid with units in square "
"meters. To measure around the faster but less accurate sphere, use ST_Area(geog,false)."
msgstr ""
"ポリゴンまたはマルチポリゴンの場合にはサーフェスの面積を返します。ST_SurfaceまたはST_MultiSurface値の面"
"積計測を返します。ジオメトリ型の面積はSRIDに基づく単位です。ジオグラフィ型の面積は平方メートルで、デ"
"フォルトでは回転楕円体についての計測です。計算速度が速い反面精度が落ちる球面での計測を行うには"
"ST_Area(geog,false)とします。"

#. Tag: para
#: reference_measure.xml:510
#, no-c-format
msgid "Enhanced: 2.0.0 - support for 2D polyhedral surfaces was introduced."
msgstr "Enhanced: 2.0.0 - 2次元多面体サーフェス対応が導入されました。"

#. Tag: para
#: reference_measure.xml:511 reference_measure.xml:1591
#, no-c-format
msgid ""
"Enhanced: 2.2.0 - measurement on spheroid performed with GeographicLib for improved accuracy and "
"robustness. Requires Proj &gt;= 4.9.0 to take advantage of the new feature."
msgstr ""
"Enhanced: 2.2.0 - 精度とロバスト性の向上のためにGeographicLibを使って回転楕円体面上での計測を行うように"
"しています。この新機能を使うには、Proj 4.9.0以上が必要です。"

#. Tag: para
#: reference_measure.xml:512 reference_measure.xml:653 reference_measure.xml:1583
#: reference_measure.xml:1961
#, no-c-format
msgid "&sfs_compliant;"
msgstr "&sfs_compliant;"

#. Tag: para
#: reference_measure.xml:513
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 8.1.2, 9.5.3"
msgstr "&sqlmm_compliant; SQL-MM 3: 8.1.2, 9.5.3"

#. Tag: para
#: reference_measure.xml:515
#, no-c-format
msgid ""
"For polyhedral surfaces, only supports 2D polyhedral surfaces (not 2.5D). For 2.5D, may give a non-"
"zero answer, but only for the faces that sit completely in XY plane."
msgstr ""
"多面体サーフェスについて、2次元多面体サーフェスのみ対応します (2.5次元は対応しません)。2.5次元につい"
"て、0でない答が与えられるかも知れませんが、完全にXY平面に付いているサーフェスのみです。"

#. Tag: para
#: reference_measure.xml:522
#, no-c-format
msgid ""
"Return area in square feet for a plot of Massachusetts land and multiply by conversion to get square "
"meters. Note this is in square feet because EPSG:2249 is Massachusetts State Plane Feet"
msgstr ""
"マサチューセッツのプロットから平方フィートの面積を返すものと、乗算で平方フィートから平方メートルに変換"
"するものです。EPSG:2249はマサチューセッツ州フィート平面であるので、平方フィートで面積が出ることに注意し"
"て下さい。"

#. Tag: programlisting
#: reference_measure.xml:525
#, no-c-format
msgid ""
"SELECT ST_Area(the_geom) As sqft, ST_Area(the_geom)*POWER(0.3048,2) As sqm\n"
"                FROM (SELECT\n"
"                ST_GeomFromText('POLYGON((743238 2967416,743238 2967450,\n"
"                        743265 2967450,743265.625 2967416,743238 2967416))',2249) ) As foo(the_geom);\n"
"  sqft   |     sqm\n"
"---------+-------------\n"
" 928.625 | 86.27208552"
msgstr ""
"SELECT ST_Area(the_geom) As sqft, ST_Area(the_geom)*POWER(0.3048,2) As sqm\n"
"                FROM (SELECT\n"
"                ST_GeomFromText('POLYGON((743238 2967416,743238 2967450,\n"
"                        743265 2967450,743265.625 2967416,743238 2967416))',2249) ) As foo(the_geom);\n"
"  sqft   |     sqm\n"
"---------+-------------\n"
" 928.625 | 86.27208552"

#. Tag: para
#: reference_measure.xml:526
#, no-c-format
msgid ""
"Return area square feet and transform to Massachusetts state plane meters (EPSG:26986) to get square "
"meters. Note this is in square feet because 2249 is Massachusetts State Plane Feet and transformed "
"area is in square meters since EPSG:26986 is state plane Massachusetts meters"
msgstr ""
"平方フィートの面積を返すものと、マサチューセッツ州メートル平面 (EPSG:26986)に変換して平方メートルを得る"
"ものです。EPSG:2249はマサチューセッツ州フィート平面であり、EPSG:26986はマサチューセッツ州メートル平面で"
"あることに注意して下さい。"

#. Tag: programlisting
#: reference_measure.xml:529
#, no-c-format
msgid ""
"SELECT ST_Area(the_geom) As sqft, ST_Area(ST_Transform(the_geom,26986)) As sqm\n"
"                FROM (SELECT\n"
"                ST_GeomFromText('POLYGON((743238 2967416,743238 2967450,\n"
"                        743265 2967450,743265.625 2967416,743238 2967416))',2249) ) As foo(the_geom);\n"
"  sqft   |       sqm\n"
"---------+------------------\n"
" 928.625 | 86.2724304199219"
msgstr ""
"SELECT ST_Area(the_geom) As sqft, ST_Area(ST_Transform(the_geom,26986)) As sqm\n"
"                FROM (SELECT\n"
"                ST_GeomFromText('POLYGON((743238 2967416,743238 2967450,\n"
"                        743265 2967450,743265.625 2967416,743238 2967416))',2249) ) As foo(the_geom);\n"
"  sqft   |       sqm\n"
"---------+------------------\n"
" 928.625 | 86.2724304199219"

#. Tag: para
#: reference_measure.xml:531
#, no-c-format
msgid ""
"Return area square feet and square meters using geography data type. Note that we transform to our "
"geometry to geography (before you can do that make sure your geometry is in WGS 84 long lat 4326). "
"Geography always measures in meters. This is just for demonstration to compare. Normally your table "
"will be stored in geography data type already."
msgstr ""
"ジオグラフィ型を使って平方フィートと平方メートルを返すものです。 ジオメトリをジオグラフィに変換すること"
"に注意して下さい (変換に先立ってジオメトリがWGS 84緯度経度のEPSG:4326であることを確認します)。ジオグラ"
"フィは常にメートルで計測されます。これは比較のためのデモンストレーションです。通常は、ジオグラフィ型が"
"既に格納されているものです。"

#. Tag: programlisting
#: reference_measure.xml:534
#, no-c-format
msgid ""
"SELECT ST_Area(the_geog)/POWER(0.3048,2) As sqft_spheroid,  ST_Area(the_geog,false)/POWER(0.3048,2) As "
"sqft_sphere, ST_Area(the_geog) As sqm_spheroid\n"
"                FROM (SELECT\n"
"                geography(\n"
"                ST_Transform(\n"
"                        ST_GeomFromText('POLYGON((743238 2967416,743238 2967450,743265 "
"2967450,743265.625 2967416,743238 2967416))',\n"
"                                2249\n"
"                                ) ,4326\n"
"                        )\n"
"                )\n"
"        ) As foo(the_geog);\n"
"  sqft_spheroid   |   sqft_sphere    |   sqm_spheroid\n"
"------------------+------------------+------------------\n"
" 928.684403538925 | 927.049336105925 | 86.2776042893529\n"
"\n"
" --if your data is in geography already\n"
" SELECT ST_Area(the_geog)/POWER(0.3048,2) As  sqft, ST_Area(the_geog) As sqm\n"
"        FROM somegeogtable;"
msgstr ""
"SELECT ST_Area(the_geog)/POWER(0.3048,2) As sqft_spheroid,  ST_Area(the_geog,false)/POWER(0.3048,2) As "
"sqft_sphere, ST_Area(the_geog) As sqm_spheroid\n"
"                FROM (SELECT\n"
"                geography(\n"
"                ST_Transform(\n"
"                        ST_GeomFromText('POLYGON((743238 2967416,743238 2967450,743265 "
"2967450,743265.625 2967416,743238 2967416))',\n"
"                                2249\n"
"                                ) ,4326\n"
"                        )\n"
"                )\n"
"        ) As foo(the_geog);\n"
"  sqft_spheroid   |   sqft_sphere    |   sqm_spheroid\n"
"------------------+------------------+------------------\n"
" 928.684403538925 | 927.049336105925 | 86.2776042893529\n"
"\n"
"-- データが既にジオグラフィ型である場合\n"
" SELECT ST_Area(the_geog)/POWER(0.3048,2) As  sqft, ST_Area(the_geog) As sqm\n"
"        FROM somegeogtable;"

#. Tag: para
#: reference_measure.xml:538
#, no-c-format
msgid ""
", <xref linkend=\"ST_GeographyFromText\"/>, <xref linkend=\"ST_SetSRID\"/>, <xref linkend="
"\"ST_Transform\"/>"
msgstr ""
", <xref linkend=\"ST_GeographyFromText\"/>, <xref linkend=\"ST_SetSRID\"/>, <xref linkend="
"\"ST_Transform\"/>"

#. Tag: refname
#: reference_measure.xml:544
#, no-c-format
msgid "ST_Azimuth"
msgstr "ST_Azimuth"

#. Tag: refpurpose
#: reference_measure.xml:546
#, no-c-format
msgid ""
"Returns the north-based azimuth as the angle in radians measured clockwise from the vertical on pointA "
"to pointB."
msgstr "pointAの鉛直線からPointBへの右回りの方位を北を基準にしたラジアン単位で返します。"

#. Tag: funcsynopsis
#: reference_measure.xml:549
#, no-c-format
msgid ""
"<funcprototype> <funcdef>float <function>ST_Azimuth</function></funcdef> <paramdef><type>geometry </"
"type><parameter>pointA</parameter></paramdef> <paramdef><type>geometry </type><parameter>pointB</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>float <function>ST_Azimuth</function></"
"funcdef> <paramdef><type>geography </type><parameter>pointA</parameter></paramdef> "
"<paramdef><type>geography </type><parameter>pointB</parameter></paramdef> </funcprototype>"
msgstr ""
"<funcprototype> <funcdef>float <function>ST_Azimuth</function></funcdef> <paramdef><type>geometry </"
"type><parameter>pointA</parameter></paramdef> <paramdef><type>geometry </type><parameter>pointB</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>float <function>ST_Azimuth</function></"
"funcdef> <paramdef><type>geography </type><parameter>pointA</parameter></paramdef> "
"<paramdef><type>geography </type><parameter>pointB</parameter></paramdef> </funcprototype>"

#. Tag: para
#: reference_measure.xml:565
#, no-c-format
msgid ""
"Returns the azimuth in radians of the segment defined by the given point geometries, or NULL if the "
"two points are coincident. The azimuth is angle is referenced from north, and is positive clockwise: "
"North = 0; East = &#x03C0;/2; South = &#x03C0;; West = 3&#x03C0;/2."
msgstr ""
"与えられたポイントジオメトリで定義される線分の方位をラジアン単位で返します。2点が一致する場合にはNULLを"
"返します。方位は北を基準として時計回りに計測します。北は0、東は&#x03C0;/2、南は&#x03C0;西は3&#x03C0;/2"
"になります。"

#. Tag: para
#: reference_measure.xml:567
#, no-c-format
msgid "For the geography type, the forward azimuth is solved as part of the inverse geodesic problem."
msgstr "ジオグラフィに対しては、前方の方位は測地線逆問題の一部として解きます。"

#. Tag: para
#: reference_measure.xml:568
#, no-c-format
msgid ""
"The azimuth is mathematical concept defined as the angle between a reference plane and a point, with "
"angular units in radians. Units can be converted to degrees using a built-in PostgreSQL function "
"degrees(), as shown in the example."
msgstr ""
"方位は、基準面と点の間の角度と定義される数学的概念です。PostgreSQL組み込み関数degrees()を使うと単位を度"
"に変換できます。下に例を挙げます。"

#. Tag: para
#: reference_measure.xml:571
#, no-c-format
msgid "Availability: 1.1.0"
msgstr "Availability: 1.1.0"

#. Tag: para
#: reference_measure.xml:572
#, no-c-format
msgid "Enhanced: 2.0.0 support for geography was introduced."
msgstr "Enhanced: 2.0.0 ジオグラフィ対応が導入されました。"

#. Tag: para
#: reference_measure.xml:573
#, no-c-format
msgid ""
"Enhanced: 2.2.0 measurement on spheroid performed with GeographicLib for improved accuracy and "
"robustness. Requires Proj &gt;= 4.9.0 to take advantage of the new feature."
msgstr ""
"Enhanced: 2.2.0 精度とロバスト性向上のために回転楕円体面上の計測をGeographicLibで行うようにしました。こ"
"の新機能を使うには、Proj 4.9.0以上が必要です。"

#. Tag: para
#: reference_measure.xml:574
#, no-c-format
msgid ""
"Azimuth is especially useful in conjunction with ST_Translate for shifting an object along its "
"perpendicular axis. See upgis_lineshift <ulink url=\"http://trac.osgeo.org/postgis/wiki/"
"UsersWikiplpgsqlfunctions\">Plpgsqlfunctions PostGIS wiki section</ulink> for example of this."
msgstr ""
"ST_Azimuthは、ST_Translateと併用して、垂直軸に沿ってオブジェクトをシフトさせる場合に、特に便利です。こ"
"れの例として、<ulink url=\"http://trac.osgeo.org/postgis/wiki/UsersWikiplpgsqlfunctions"
"\">Plpgsqlfunctions PostGIS wiki section</ulink>を参照して下さい。"

#. Tag: para
#: reference_measure.xml:580
#, no-c-format
msgid "Geometry Azimuth in degrees"
msgstr "度単位のジオメトリの方位"

#. Tag: programlisting
#: reference_measure.xml:581
#, no-c-format
msgid ""
"SELECT degrees(ST_Azimuth(ST_Point(25, 45), ST_Point(75, 100))) AS degA_B,\n"
"            degrees(ST_Azimuth(ST_Point(75, 100), ST_Point(25, 45))) AS degB_A;\n"
"\n"
"      dega_b       |     degb_a\n"
"------------------+------------------\n"
" 42.2736890060937 | 222.273689006094"
msgstr ""
"SELECT degrees(ST_Azimuth(ST_Point(25, 45), ST_Point(75, 100))) AS degA_B,\n"
"            degrees(ST_Azimuth(ST_Point(75, 100), ST_Point(25, 45))) AS degB_A;\n"
"\n"
"      dega_b       |     degb_a\n"
"------------------+------------------\n"
" 42.2736890060937 | 222.273689006094"

#. Tag: para
#: reference_measure.xml:591
#, no-c-format
msgid "Green: the start Point(25,45) with its vertical. Yellow: degA_B as the path to travel (azimuth)."
msgstr "緑: 開始点 (25,45)で、鉛直方向に行きます。黄: degA_Bを示す行程 (方位)です。"

#. Tag: para
#: reference_measure.xml:600
#, no-c-format
msgid "Green: the start Point(75,100) with its vertical. Yellow: degB_A as the path to travel (azimuth)."
msgstr "緑: (75,100)が開始点で、鉛直方向に行きます。黄: degB_Aを示す行程 (方位)です。"

#. Tag: para
#: reference_measure.xml:611
#, no-c-format
msgid ""
", <xref linkend=\"ST_Translate\"/>, <xref linkend=\"ST_Project\"/>, <ulink url=\"http://www.postgresql."
"org/docs/current/interactive/functions-math.html\">PostgreSQL Math Functions</ulink>"
msgstr ""
", <xref linkend=\"ST_Translate\"/>, <xref linkend=\"ST_Project\"/>, <ulink url=\"http://www.postgresql."
"org/docs/current/interactive/functions-math.html\">PostgreSQL Math Functions</ulink>"

#. Tag: refname
#: reference_measure.xml:618
#, no-c-format
msgid "ST_Centroid"
msgstr "ST_Centroid"

#. Tag: refpurpose
#: reference_measure.xml:620
#, no-c-format
msgid "Returns the geometric center of a geometry."
msgstr "ジオメトリの幾何学的重心を返します。"

#. Tag: funcprototype
#: reference_measure.xml:625
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_Centroid</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_Centroid</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef>"

#. Tag: para
#: reference_measure.xml:637
#, no-c-format
msgid ""
"Computes the geometric center of a geometry, or equivalently, the center of mass of the geometry as a "
"<varname>POINT</varname>. For [<varname>MULTI</varname>]<varname>POINT</varname>s, this is computed as "
"the arithmetic mean of the input coordinates. For [<varname>MULTI</varname>]<varname>LINESTRING</"
"varname>s, this is computed as the weighted length of each line segment. For [<varname>MULTI</"
"varname>]<varname>POLYGON</varname>s, \"weight\" is thought in terms of area. If an empty geometry is "
"supplied, an empty <varname>GEOMETRYCOLLECTION</varname> is returned. If <varname>NULL</varname> is "
"supplied, <varname>NULL</varname> is returned."
msgstr ""
"ジオメトリの幾何学的重心を計算します。ジオメトリの質量中心の<varname>POINT</varname>と同じです。"
"[<varname>MULTI</varname>]<varname>POINT</varname>に対しては、入力座標の算術平均として計算されます。 "
"[<varname>MULTI</varname>]<varname>LINESTRING</varname>に対しては、各区分の重み付き長さとして計算されま"
"す。 [<varname>MULTI</varname>]<varname>POLYGON</varname>に対しては、「重み」を面積ととらえて計算しま"
"す。空ジオメトリが与えられた場合は、空の<varname>GEOMETRYCOLLECTION</varname>が返されます。"
"<varname>NULL</varname>が与えられた場合は、<varname>NULL</varname>が返されます。"

#. Tag: para
#: reference_measure.xml:649
#, no-c-format
msgid ""
"The centroid is equal to the centroid of the set of component Geometries of highest dimension (since "
"the lower-dimension geometries contribute zero \"weight\" to the centroid)."
msgstr ""
"重心は、最も高い次元のジオメトリの要素の集合の重心と同じです (低い次元のジオメトリは「重み」0に貢献する"
"ため)。"

#. Tag: para
#: reference_measure.xml:654
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 8.1.4, 9.5.5"
msgstr "&sqlmm_compliant; SQL-MM 3: 8.1.4, 9.5.5"

#. Tag: para
#: reference_measure.xml:660
#, no-c-format
msgid ""
"In each of the following illustrations, the blue dot represents the centroid of the source geometry."
msgstr "次に示す図では、青点が入力ジオメトリの重心です。"

#. Tag: para
#: reference_measure.xml:673
#, no-c-format
msgid "Centroid of a <varname>MULTIPOINT</varname>"
msgstr "<varname>MULTIPOINT</varname>の重心"

#. Tag: para
#: reference_measure.xml:684
#, no-c-format
msgid "Centroid of a <varname>LINESTRING</varname>"
msgstr "<varname>LINESTRING</varname>の重心"

#. Tag: para
#: reference_measure.xml:697
#, no-c-format
msgid "Centroid of a <varname>POLYGON</varname>"
msgstr "<varname>POLYGON</varname>の重心"

#. Tag: para
#: reference_measure.xml:708
#, no-c-format
msgid "Centroid of a <varname>GEOMETRYCOLLECTION</varname>"
msgstr "<varname>GEOMETRYCOLLECTION</varname>の重心"

#. Tag: programlisting
#: reference_measure.xml:717
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_Centroid('MULTIPOINT ( -1 0, -1 2, -1 3, -1 4, -1 7, 0 1, 0 3, 1 1, 2 0, 6 0, 7 8, "
"9 8, 10 6 )'));\n"
"                                st_astext\n"
"------------------------------------------\n"
" POINT(2.30769230769231 3.30769230769231)\n"
"(1 row)"
msgstr ""
"SELECT ST_AsText(ST_Centroid('MULTIPOINT ( -1 0, -1 2, -1 3, -1 4, -1 7, 0 1, 0 3, 1 1, 2 0, 6 0, 7 8, "
"9 8, 10 6 )'));\n"
"                                st_astext\n"
"------------------------------------------\n"
" POINT(2.30769230769231 3.30769230769231)\n"
"(1 row)"

#. Tag: refname
#: reference_measure.xml:729
#, no-c-format
msgid "ST_ClosestPoint"
msgstr "ST_ClosestPoint"

#. Tag: refpurpose
#: reference_measure.xml:731
#, no-c-format
msgid ""
"<refpurpose>Returns the 2-dimensional point on g1 that is closest to g2. This is the first point of "
"the shortest line.</refpurpose>"
msgstr ""
"<refpurpose>g2に最も接近するg1上の2次元のポイントを返します。これは最短線の最初のポイントです。</"
"refpurpose>"

#. Tag: funcprototype
#: reference_measure.xml:737
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_ClosestPoint</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_ClosestPoint</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef>"

#. Tag: para
#: reference_measure.xml:752
#, no-c-format
msgid ""
"<para>Returns the 2-dimensional point on g1 that is closest to g2. This is the first point of the "
"shortest line.</para>"
msgstr "<para>g2に最も接近するg1上の2次元のポイントを返します。これは最短線の最初のポイントです。</para>"

#. Tag: para
#: reference_measure.xml:755
#, no-c-format
msgid "If you have a 3D Geometry, you may prefer to use <xref linkend=\"ST_3DClosestPoint\"/>."
msgstr "3次元ジオメトリの場合には<xref linkend=\"ST_3DClosestPoint\"/>の方が良いでしょう。"

#. Tag: para
#: reference_measure.xml:756 reference_measure.xml:1712 reference_measure.xml:1866
#: reference_measure.xml:2421 reference_measure.xml:2995
#, no-c-format
msgid "Availability: 1.5.0"
msgstr "Availability: 1.5.0"

#. Tag: para
#: reference_measure.xml:770
#, no-c-format
msgid ""
"Closest between point and linestring is the point itself, but closest point between a linestring and "
"point is the point on line string that is closest."
msgstr ""
"ポイントとラインストリングの間の最短は、ポイントそのものです。ラインストリングとポイントの間の最短は、"
"ラインストリング上の最短となるポイントです。"

#. Tag: programlisting
#: reference_measure.xml:774
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_ClosestPoint(pt,line)) AS cp_pt_line, \n"
"        ST_AsText(ST_ClosestPoint(line,pt)) As cp_line_pt\n"
"FROM (SELECT 'POINT(100 100)'::geometry As pt, \n"
"                'LINESTRING (20 80, 98 190, 110 180, 50 75 )'::geometry As line\n"
"        ) As foo;\n"
"\n"
"        \n"
"   cp_pt_line   |                cp_line_pt\n"
"----------------+------------------------------------------\n"
" POINT(100 100) | POINT(73.0769230769231 115.384615384615)"
msgstr ""
"SELECT ST_AsText(ST_ClosestPoint(pt,line)) AS cp_pt_line, \n"
"        ST_AsText(ST_ClosestPoint(line,pt)) As cp_line_pt\n"
"FROM (SELECT 'POINT(100 100)'::geometry As pt, \n"
"                'LINESTRING (20 80, 98 190, 110 180, 50 75 )'::geometry As line\n"
"        ) As foo;\n"
"\n"
"        \n"
"   cp_pt_line   |                cp_line_pt\n"
"----------------+------------------------------------------\n"
" POINT(100 100) | POINT(73.0769230769231 115.384615384615)"

#. Tag: para
#: reference_measure.xml:782
#, no-c-format
msgid "closest point on polygon A to polygon B"
msgstr "ポリゴンA上のポリゴンBへの最短点"

#. Tag: programlisting
#: reference_measure.xml:785
#, no-c-format
msgid ""
"SELECT ST_AsText(\n"
"                ST_ClosestPoint(\n"
"                        ST_GeomFromText('POLYGON((175 150, 20 40, 50 60, 125 100, 175 150))'),\n"
"                        ST_Buffer(ST_GeomFromText('POINT(110 170)'), 20)\n"
"                        ) \n"
"                ) As ptwkt;\n"
"                \n"
"                  ptwkt\n"
"------------------------------------------\n"
" POINT(140.752120669087 125.695053378061)"
msgstr ""
"SELECT ST_AsText(\n"
"                ST_ClosestPoint(\n"
"                        ST_GeomFromText('POLYGON((175 150, 20 40, 50 60, 125 100, 175 150))'),\n"
"                        ST_Buffer(ST_GeomFromText('POINT(110 170)'), 20)\n"
"                        ) \n"
"                ) As ptwkt;\n"
"                \n"
"                  ptwkt\n"
"------------------------------------------\n"
" POINT(140.752120669087 125.695053378061)"

#. Tag: para
#: reference_measure.xml:797
#, no-c-format
msgid ""
",<xref linkend=\"ST_Distance\"/>, <xref linkend=\"ST_LongestLine\"/>, <xref linkend=\"ST_ShortestLine"
"\"/>, <xref linkend=\"ST_MaxDistance\"/>"
msgstr ""
",<xref linkend=\"ST_Distance\"/>, <xref linkend=\"ST_LongestLine\"/>, <xref linkend=\"ST_ShortestLine"
"\"/>, <xref linkend=\"ST_MaxDistance\"/>"

#. Tag: refname
#: reference_measure.xml:803
#, no-c-format
msgid "ST_Contains"
msgstr "ST_Contains"

#. Tag: refpurpose
#: reference_measure.xml:805
#, no-c-format
msgid ""
"Returns true if and only if no points of B lie in the exterior of A, and at least one point of the "
"interior of B lies in the interior of A."
msgstr ""
"Bの点がAの外部に無く、かつBの内部の少なくとも一つの点がAの内部にある場合に限って、TRUEを返します。"

#. Tag: funcprototype
#: reference_measure.xml:810
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_Contains</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>geomA</parameter></paramdef> <paramdef><type>geometry </type> <parameter>geomB</parameter></"
"paramdef>"
msgstr ""
"<funcdef>boolean <function>ST_Contains</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>geomA</parameter></paramdef> <paramdef><type>geometry </type> <parameter>geomB</parameter></"
"paramdef>"

#. Tag: para
#: reference_measure.xml:825
#, no-c-format
msgid ""
"Geometry A contains Geometry B if and only if no points of B lie in the exterior of A, and at least "
"one point of the interior of B lies in the interior of A. An important subtlety of this definition is "
"that A does not contain its boundary, but A does contain itself. Contrast that to <xref linkend="
"\"ST_ContainsProperly\"/> where geometry A does not Contain Properly itself."
msgstr ""
"ジオメトリAがジオメトリBを含むのは、Bの点がAの外部に無く、かつBの内部の少なくとも一つの点がAの内部にあ"
"る場合に限ります。この定義の重要で微妙なところは、AはAの境界を含まないと判断するのに、AはA自身を含むと"
"判断することです。ジオメトリAはA自身を含まないと判断をする<xref linkend=\"ST_ContainsProperly\"/>と対照"
"的です。"

#. Tag: para
#: reference_measure.xml:829
#, no-c-format
msgid ""
"Returns TRUE if geometry B is completely inside geometry A. For this function to make sense, the "
"source geometries must both be of the same coordinate projection, having the same SRID. ST_Contains is "
"the inverse of ST_Within. So ST_Contains(A,B) implies ST_Within(B,A) except in the case of invalid "
"geometries where the result is always false regardless or not defined."
msgstr ""
"ジオメトリBが完全にジオメトリAの内側になる場合はTRUEを返します。この関数が意味のあるものにするために"
"は、元のジオメトリは同じ投影座標である、同じSRIDを持っている必要があります。ST_ContainsはST_Withinの逆"
"のものです。ST_Contains(A,B)はST_Within(B,A)を意味します。ただし、結果が常にFALSEになる、不用意な、また"
"は定義されていない不正なジオメトリの場合を除きます。"

#. Tag: para
#: reference_measure.xml:834 reference_measure.xml:1061 reference_measure.xml:1143
#: reference_measure.xml:1508 reference_measure.xml:2552 reference_measure.xml:2900
#: reference_measure.xml:3217
#, no-c-format
msgid "Performed by the GEOS module"
msgstr "GEOSモジュールによって実現しています。"

#. Tag: para
#: reference_measure.xml:837 reference_measure.xml:999 reference_measure.xml:1064
#: reference_measure.xml:1146 reference_measure.xml:1250 reference_measure.xml:1505
#: reference_measure.xml:3098 reference_measure.xml:3220
#, no-c-format
msgid "Do not call with a <varname>GEOMETRYCOLLECTION</varname> as an argument"
msgstr "<varname>GEOMETRYCOLLECTION</varname>を引数として呼ばないでください。"

#. Tag: para
#: reference_measure.xml:841 reference_measure.xml:1003 reference_measure.xml:1072
#: reference_measure.xml:1150 reference_measure.xml:3224
#, no-c-format
msgid "Do not use this function with invalid geometries. You will get unexpected results."
msgstr "この関数を不正なジオメトリで呼ばないでください。予期しない結果が返されます。"

#. Tag: para
#: reference_measure.xml:844
#, no-c-format
msgid ""
"This function call will automatically include a bounding box comparison that will make use of any "
"indexes that are available on the geometries. To avoid index use, use the function _ST_Contains."
msgstr ""
"この関数の呼び出しによって、ジオメトリで使用可能なインデクスを使用したバウンディングボックスの比較が自"
"動的に行われます。インデクスの使用を避けるには、_ST_Containsを使います。"

#. Tag: para
#: reference_measure.xml:849 reference_measure.xml:1083 reference_measure.xml:1158
#: reference_measure.xml:1514 reference_measure.xml:2131 reference_measure.xml:2561
#: reference_measure.xml:3232
#, no-c-format
msgid "NOTE: this is the \"allowable\" version that returns a boolean, not an integer."
msgstr "ご注意: これは論理値を返して整数を返さないのが「許される」版です。"

#. Tag: para
#: reference_measure.xml:852
#, no-c-format
msgid "&sfs_compliant; s2.1.1.2 // s2.1.13.3 - same as within(geometry B, geometry A)"
msgstr "&sfs_compliant; s2.1.1.2 // s2.1.13.3 - within(geometry B, geometry A)と同じ"

#. Tag: para
#: reference_measure.xml:854
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.31"
msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.31"

#. Tag: para
#: reference_measure.xml:856 reference_measure.xml:1087 reference_measure.xml:1162
#, no-c-format
msgid ""
"There are certain subtleties to ST_Contains and ST_Within that are not intuitively obvious. For "
"details check out <ulink url=\"http://lin-ear-th-inking.blogspot.com/2007/06/subtleties-of-ogc-covers-"
"spatial.html\">Subtleties of OGC Covers, Contains, Within</ulink>"
msgstr ""
"直感的に分かりにくいST_ContainsとST_Withinの微妙な違いがあります。詳細については、<ulink url=\"http://"
"lin-ear-th-inking.blogspot.com/2007/06/subtleties-of-ogc-covers-spatial.html\">Subtleties of OGC "
"Covers, Contains, Within</ulink>をご覧ください。"

#. Tag: para
#: reference_measure.xml:863
#, no-c-format
msgid ""
"The <function>ST_Contains</function> predicate returns <varname>TRUE</varname> in all the following "
"illustrations."
msgstr "次に示す図全てで、<function>ST_Contains</function>は<varname>TRUE</varname>を返します。"

#. Tag: para
#: reference_measure.xml:875
#, no-c-format
msgid "<varname>LINESTRING</varname> / <varname>MULTIPOINT</varname>"
msgstr "<varname>LINESTRING</varname> / <varname>MULTIPOINT</varname>"

#. Tag: para
#: reference_measure.xml:885 reference_measure.xml:3176
#, no-c-format
msgid "<varname>POLYGON</varname> / <varname>POINT</varname>"
msgstr "<varname>POLYGON</varname> / <varname>POINT</varname>"

#. Tag: para
#: reference_measure.xml:896 reference_measure.xml:936 reference_measure.xml:3145
#, no-c-format
msgid "<varname>POLYGON</varname> / <varname>LINESTRING</varname>"
msgstr "<varname>POLYGON</varname> / <varname>LINESTRING</varname>"

#. Tag: para
#: reference_measure.xml:906 reference_measure.xml:2598 reference_measure.xml:3125
#: reference_measure.xml:3135
#, no-c-format
msgid "<varname>POLYGON</varname> / <varname>POLYGON</varname>"
msgstr "<varname>POLYGON</varname> / <varname>POLYGON</varname>"

#. Tag: para
#: reference_measure.xml:914
#, no-c-format
msgid ""
"The <function>ST_Contains</function> predicate returns <varname>FALSE</varname> in all the following "
"illustrations."
msgstr "次に示す図全てで、<function>ST_Contains</function>は<function>FALSE</function>を返します。"

#. Tag: para
#: reference_measure.xml:926
#, no-c-format
msgid "<varname>POLYGON</varname> / <varname>MULTIPOINT</varname>"
msgstr "<varname>POLYGON</varname> / <varname>MULTIPOINT</varname>"

#. Tag: programlisting
#: reference_measure.xml:944
#, no-c-format
msgid ""
"-- A circle within a circle\n"
"SELECT ST_Contains(smallc, bigc) As smallcontainsbig,\n"
"           ST_Contains(bigc,smallc) As bigcontainssmall,\n"
"           ST_Contains(bigc, ST_Union(smallc, bigc)) as bigcontainsunion,\n"
"           ST_Equals(bigc, ST_Union(smallc, bigc)) as bigisunion,\n"
"           ST_Covers(bigc, ST_ExteriorRing(bigc)) As bigcoversexterior,\n"
"           ST_Contains(bigc, ST_ExteriorRing(bigc)) As bigcontainsexterior\n"
"FROM (SELECT ST_Buffer(ST_GeomFromText('POINT(1 2)'), 10) As smallc,\n"
"                         ST_Buffer(ST_GeomFromText('POINT(1 2)'), 20) As bigc) As foo;\n"
"\n"
"-- Result\n"
"  smallcontainsbig | bigcontainssmall | bigcontainsunion | bigisunion | bigcoversexterior | "
"bigcontainsexterior\n"
"------------------+------------------+------------------+------------+-------------------"
"+---------------------\n"
" f                | t                | t                | t          | t        | f\n"
"\n"
"-- Example demonstrating difference between contains and contains properly\n"
"SELECT ST_GeometryType(geomA) As geomtype, ST_Contains(geomA,geomA) AS acontainsa, "
"ST_ContainsProperly(geomA, geomA) AS acontainspropa,\n"
"   ST_Contains(geomA, ST_Boundary(geomA)) As acontainsba, ST_ContainsProperly(geomA, "
"ST_Boundary(geomA)) As acontainspropba\n"
"FROM (VALUES ( ST_Buffer(ST_Point(1,1), 5,1) ),\n"
"                         ( ST_MakeLine(ST_Point(1,1), ST_Point(-1,-1) ) ),\n"
"                         ( ST_Point(1,1) )\n"
"          ) As foo(geomA);\n"
"\n"
"  geomtype    | acontainsa | acontainspropa | acontainsba | acontainspropba\n"
"--------------+------------+----------------+-------------+-----------------\n"
"ST_Polygon    | t          | f              | f           | f\n"
"ST_LineString | t          | f              | f           | f\n"
"ST_Point      | t          | t              | f           | f"
msgstr ""
"-- 円の中にある円\n"
"SELECT ST_Contains(smallc, bigc) As smallcontainsbig,\n"
"           ST_Contains(bigc,smallc) As bigcontainssmall,\n"
"           ST_Contains(bigc, ST_Union(smallc, bigc)) as bigcontainsunion,\n"
"           ST_Equals(bigc, ST_Union(smallc, bigc)) as bigisunion,\n"
"           ST_Covers(bigc, ST_ExteriorRing(bigc)) As bigcoversexterior,\n"
"           ST_Contains(bigc, ST_ExteriorRing(bigc)) As bigcontainsexterior\n"
"FROM (SELECT ST_Buffer(ST_GeomFromText('POINT(1 2)'), 10) As smallc,\n"
"                         ST_Buffer(ST_GeomFromText('POINT(1 2)'), 20) As bigc) As foo;\n"
"\n"
"-- 結果\n"
"  smallcontainsbig | bigcontainssmall | bigcontainsunion | bigisunion | bigcoversexterior | "
"bigcontainsexterior\n"
"------------------+------------------+------------------+------------+-------------------"
"+---------------------\n"
" f                | t                | t                | t          | t        | f\n"
"\n"
"-- ST_ContainsとST_ContainsProperlyとの違いを示す例\n"
"SELECT ST_GeometryType(geomA) As geomtype, ST_Contains(geomA,geomA) AS acontainsa, "
"ST_ContainsProperly(geomA, geomA) AS acontainspropa,\n"
"   ST_Contains(geomA, ST_Boundary(geomA)) As acontainsba, ST_ContainsProperly(geomA, "
"ST_Boundary(geomA)) As acontainspropba\n"
"FROM (VALUES ( ST_Buffer(ST_Point(1,1), 5,1) ),\n"
"                         ( ST_MakeLine(ST_Point(1,1), ST_Point(-1,-1) ) ),\n"
"                         ( ST_Point(1,1) )\n"
"          ) As foo(geomA);\n"
"\n"
"  geomtype    | acontainsa | acontainspropa | acontainsba | acontainspropba\n"
"--------------+------------+----------------+-------------+-----------------\n"
"ST_Polygon    | t          | f              | f           | f\n"
"ST_LineString | t          | f              | f           | f\n"
"ST_Point      | t          | t              | f           | f"

#. Tag: para
#: reference_measure.xml:949
#, no-c-format
msgid ""
", <xref linkend=\"ST_ContainsProperly\"/>, <xref linkend=\"ST_Covers\"/>, <xref linkend=\"ST_CoveredBy"
"\"/>, <xref linkend=\"ST_Equals\"/>, <xref linkend=\"ST_Within\"/>"
msgstr ""
", <xref linkend=\"ST_ContainsProperly\"/>, <xref linkend=\"ST_Covers\"/>, <xref linkend=\"ST_CoveredBy"
"\"/>, <xref linkend=\"ST_Equals\"/>, <xref linkend=\"ST_Within\"/>"

#. Tag: refname
#: reference_measure.xml:955
#, no-c-format
msgid "ST_ContainsProperly"
msgstr "ST_ContainsProperly"

#. Tag: refpurpose
#: reference_measure.xml:957
#, no-c-format
msgid ""
"Returns true if B intersects the interior of A but not the boundary (or exterior). A does not contain "
"properly itself, but does contain itself."
msgstr ""
"BがAの内部にインタセクトするが境界 (または外部)にインタセクトしない場合に、TRUEを返します。Aは自身に"
"は、ContainsProperlyではありませんが、Containsです。"

#. Tag: funcprototype
#: reference_measure.xml:962
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_ContainsProperly</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>geomA</parameter></paramdef> <paramdef><type>geometry </type> <parameter>geomB</parameter></"
"paramdef>"
msgstr ""
"<funcdef>boolean <function>ST_ContainsProperly</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>geomA</parameter></paramdef> <paramdef><type>geometry </type> <parameter>geomB</parameter></"
"paramdef>"

#. Tag: para
#: reference_measure.xml:977
#, no-c-format
msgid "Returns true if B intersects the interior of A but not the boundary (or exterior)."
msgstr "BがAの内部にインタセクトするが境界 (または外部)にインタセクトしない場合に、TRUEを返します。"

#. Tag: para
#: reference_measure.xml:979
#, no-c-format
msgid "A does not contain properly itself, but does contain itself."
msgstr "Aは自身には、ContainsProperlyではありませんが、Containsです。"

#. Tag: para
#: reference_measure.xml:980
#, no-c-format
msgid ""
"Every point of the other geometry is a point of this geometry's interior. The DE-9IM Intersection "
"Matrix for the two geometries matches [T**FF*FF*] used in <xref linkend=\"ST_Relate\"/>"
msgstr ""
"他のジオメトリの全てのポイントは、このジオメトリの内部のポイントです。 <xref linkend=\"ST_Relate\"/>で"
"使われるDE-9IMでは[T**FF*FF*]に合致します。"

#. Tag: para
#: reference_measure.xml:984
#, no-c-format
msgid ""
"From JTS docs slightly reworded: The advantage to using this predicate over <xref linkend=\"ST_Contains"
"\"/> and <xref linkend=\"ST_Intersects\"/> is that it can be computed efficiently, with no need to "
"compute topology at individual points."
msgstr ""
"JTS文書からわずかに言い換えると、<xref linkend=\"ST_Contains\"/>と<xref linkend=\"ST_Intersects\"/>でこ"
"の述語を併用する利点は、個々のポイントでのトポロジの計算が必要なく、効率的に計算されることです。"

#. Tag: para
#: reference_measure.xml:986
#, no-c-format
msgid ""
"An example use case for this predicate is computing the intersections of a set of geometries with a "
"large polygonal geometry. Since intersection is a fairly slow operation, it can be more efficient to "
"use containsProperly to filter out test geometries which lie wholly inside the area. In these cases "
"the intersection is known a priori to be exactly the original test geometry."
msgstr ""
"この述語の使用事例として、大きいポリゴンジオメトリでのジオメトリの集合のインタセクションを計算すること"
"が挙げられます。インタセクションはかなり遅いので、ContainsProperlyを使って、対象ジオメトリのうち全体が"
"領域内にあるものを抜き出すことができ、効率的になります。これらの場面では、インタセクションは確実に元の"
"対象ジオメトリであることが直感的に分かります。"

#. Tag: para
#: reference_measure.xml:996
#, no-c-format
msgid "Availability: 1.4.0 - requires GEOS &gt;= 3.1.0."
msgstr "Availability: 1.4.0 - GEOS 3.1.0以上が必要です。"

#. Tag: para
#: reference_measure.xml:1006
#, no-c-format
msgid ""
"This function call will automatically include a bounding box comparison that will make use of any "
"indexes that are available on the geometries. To avoid index use, use the function "
"_ST_ContainsProperly."
msgstr ""
"この関数の呼び出しによって、ジオメトリで使用可能なインデクスを使用したバウンディングボックスの比較が自"
"動的に行われます。インデクスの使用を避けるには、_ST_ContainsProperlyを使います。"

#. Tag: programlisting
#: reference_measure.xml:1015
#, no-c-format
msgid ""
"--a circle within a circle\n"
"        SELECT ST_ContainsProperly(smallc, bigc) As smallcontainspropbig,\n"
"        ST_ContainsProperly(bigc,smallc) As bigcontainspropsmall,\n"
"        ST_ContainsProperly(bigc, ST_Union(smallc, bigc)) as bigcontainspropunion,\n"
"        ST_Equals(bigc, ST_Union(smallc, bigc)) as bigisunion,\n"
"        ST_Covers(bigc, ST_ExteriorRing(bigc)) As bigcoversexterior,\n"
"        ST_ContainsProperly(bigc, ST_ExteriorRing(bigc)) As bigcontainsexterior\n"
"        FROM (SELECT ST_Buffer(ST_GeomFromText('POINT(1 2)'), 10) As smallc,\n"
"        ST_Buffer(ST_GeomFromText('POINT(1 2)'), 20) As bigc) As foo;\n"
"        --Result\n"
"  smallcontainspropbig | bigcontainspropsmall | bigcontainspropunion | bigisunion | bigcoversexterior "
"| bigcontainsexterior\n"
"------------------+------------------+------------------+------------+-------------------"
"+---------------------\n"
" f                     | t                    | f                    | t          | t                 "
"| f\n"
"\n"
" --example demonstrating difference between contains and contains properly\n"
" SELECT ST_GeometryType(geomA) As geomtype, ST_Contains(geomA,geomA) AS acontainsa, "
"ST_ContainsProperly(geomA, geomA) AS acontainspropa,\n"
" ST_Contains(geomA, ST_Boundary(geomA)) As acontainsba, ST_ContainsProperly(geomA, ST_Boundary(geomA)) "
"As acontainspropba\n"
" FROM (VALUES ( ST_Buffer(ST_Point(1,1), 5,1) ),\n"
"                  ( ST_MakeLine(ST_Point(1,1), ST_Point(-1,-1) ) ),\n"
"                  ( ST_Point(1,1) )\n"
"        ) As foo(geomA);\n"
"\n"
"  geomtype    | acontainsa | acontainspropa | acontainsba | acontainspropba\n"
"--------------+------------+----------------+-------------+-----------------\n"
"ST_Polygon    | t          | f              | f           | f\n"
"ST_LineString | t          | f              | f           | f\n"
"ST_Point      | t          | t              | f           | f"
msgstr ""
"-- 円の中にある円\n"
"        SELECT ST_ContainsProperly(smallc, bigc) As smallcontainspropbig,\n"
"        ST_ContainsProperly(bigc,smallc) As bigcontainspropsmall,\n"
"        ST_ContainsProperly(bigc, ST_Union(smallc, bigc)) as bigcontainspropunion,\n"
"        ST_Equals(bigc, ST_Union(smallc, bigc)) as bigisunion,\n"
"        ST_Covers(bigc, ST_ExteriorRing(bigc)) As bigcoversexterior,\n"
"        ST_ContainsProperly(bigc, ST_ExteriorRing(bigc)) As bigcontainsexterior\n"
"        FROM (SELECT ST_Buffer(ST_GeomFromText('POINT(1 2)'), 10) As smallc,\n"
"        ST_Buffer(ST_GeomFromText('POINT(1 2)'), 20) As bigc) As foo;\n"
"        -- 結果\n"
"  smallcontainspropbig | bigcontainspropsmall | bigcontainspropunion | bigisunion | bigcoversexterior "
"| bigcontainsexterior\n"
"------------------+------------------+------------------+------------+-------------------"
"+---------------------\n"
" f                     | t                    | f                    | t          | t                 "
"| f\n"
"\n"
"-- ST_ContainsとST_ContainsProperlyとの違いを示す例\n"
" SELECT ST_GeometryType(geomA) As geomtype, ST_Contains(geomA,geomA) AS acontainsa, "
"ST_ContainsProperly(geomA, geomA) AS acontainspropa,\n"
" ST_Contains(geomA, ST_Boundary(geomA)) As acontainsba, ST_ContainsProperly(geomA, ST_Boundary(geomA)) "
"As acontainspropba\n"
" FROM (VALUES ( ST_Buffer(ST_Point(1,1), 5,1) ),\n"
"                  ( ST_MakeLine(ST_Point(1,1), ST_Point(-1,-1) ) ),\n"
"                  ( ST_Point(1,1) )\n"
"        ) As foo(geomA);\n"
"\n"
"  geomtype    | acontainsa | acontainspropa | acontainsba | acontainspropba\n"
"--------------+------------+----------------+-------------+-----------------\n"
"ST_Polygon    | t          | f              | f           | f\n"
"ST_LineString | t          | f              | f           | f\n"
"ST_Point      | t          | t              | f           | f"

#. Tag: para
#: reference_measure.xml:1020
#, no-c-format
msgid ""
", <xref linkend=\"ST_Boundary\"/>, <xref linkend=\"ST_Contains\"/>, <xref linkend=\"ST_Covers\"/>, "
"<xref linkend=\"ST_CoveredBy\"/>, <xref linkend=\"ST_Equals\"/>, <xref linkend=\"ST_Relate\"/>, <xref "
"linkend=\"ST_Within\"/>"
msgstr ""
", <xref linkend=\"ST_Boundary\"/>, <xref linkend=\"ST_Contains\"/>, <xref linkend=\"ST_Covers\"/>, "
"<xref linkend=\"ST_CoveredBy\"/>, <xref linkend=\"ST_Equals\"/>, <xref linkend=\"ST_Relate\"/>, <xref "
"linkend=\"ST_Within\"/>"

#. Tag: refname
#: reference_measure.xml:1026
#, no-c-format
msgid "ST_Covers"
msgstr "ST_Covers"

#. Tag: refpurpose
#: reference_measure.xml:1028
#, no-c-format
msgid "Returns 1 (TRUE) if no point in Geometry B is outside Geometry A"
msgstr "ジオメトリBにジオメトリAの外となるポイントが無い場合には、1 (TRUE)を返します。"

#. Tag: funcsynopsis
#: reference_measure.xml:1033
#, no-c-format
msgid ""
"<funcprototype> <funcdef>boolean <function>ST_Covers</function></funcdef> <paramdef><type>geometry </"
"type> <parameter>geomA</parameter></paramdef> <paramdef><type>geometry </type> <parameter>geomB</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>boolean <function>ST_Covers</"
"function></funcdef> <paramdef><type>geography </type> <parameter>geogpolyA</parameter></paramdef> "
"<paramdef><type>geography </type> <parameter>geogpointB</parameter></paramdef> </funcprototype>"
msgstr ""
"<funcprototype> <funcdef>boolean <function>ST_Covers</function></funcdef> <paramdef><type>geometry </"
"type> <parameter>geomA</parameter></paramdef> <paramdef><type>geometry </type> <parameter>geomB</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>boolean <function>ST_Covers</"
"function></funcdef> <paramdef><type>geography </type> <parameter>geogpolyA</parameter></paramdef> "
"<paramdef><type>geography </type> <parameter>geogpointB</parameter></paramdef> </funcprototype>"

#. Tag: para
#: reference_measure.xml:1058
#, no-c-format
msgid "Returns 1 (TRUE) if no point in Geometry/Geography B is outside Geometry/Geography A"
msgstr ""
"ジオメトリ/ジオグラフィBにジオメトリ/ジオグラフィAの外となるポイントが無い場合には、1 (TRUE)を返しま"
"す。"

#. Tag: para
#: reference_measure.xml:1068
#, no-c-format
msgid "For geography only Polygon covers point is supported."
msgstr ""
"ジオグラフィにおいては、ポリゴンがポイントをカバーするかを判断する場合のみ対応しています (訳注: ジオグ"
"ラフィでは頂点を結ぶ線が大円に沿うため)。"

#. Tag: para
#: reference_measure.xml:1075
#, no-c-format
msgid ""
"This function call will automatically include a bounding box comparison that will make use of any "
"indexes that are available on the geometries. To avoid index use, use the function _ST_Covers."
msgstr ""
"この関数の呼び出しによって、ジオメトリで使用可能なインデクスを使用したバウンディングボックスの比較が自"
"動的に行われます。インデクスの使用を避けるには、_ST_Coversを使います。"

#. Tag: para
#: reference_measure.xml:1080 reference_measure.xml:1152
#, no-c-format
msgid "Availability: 1.2.2 - requires GEOS &gt;= 3.0"
msgstr "Availability: 1.2.2 - GEOS 3.0以上が必要です。"

#. Tag: para
#: reference_measure.xml:1081
#, no-c-format
msgid "Availability: 1.5 - support for geography was introduced."
msgstr "Availability: 1.5 - ジオグラフィ対応が導入されました。"

#. Tag: para
#: reference_measure.xml:1086 reference_measure.xml:1161
#, no-c-format
msgid "Not an OGC standard, but Oracle has it too."
msgstr "これはOGC標準と違いますがOracleは持っています。"

#. Tag: para
#: reference_measure.xml:1093
#, no-c-format
msgid "Geometry example"
msgstr "ジオメトリの例"

#. Tag: programlisting
#: reference_measure.xml:1094
#, no-c-format
msgid ""
"--a circle covering a circle\n"
"SELECT ST_Covers(smallc,smallc) As smallinsmall,\n"
"        ST_Covers(smallc, bigc) As smallcoversbig,\n"
"        ST_Covers(bigc, ST_ExteriorRing(bigc)) As bigcoversexterior,\n"
"        ST_Contains(bigc, ST_ExteriorRing(bigc)) As bigcontainsexterior\n"
"FROM (SELECT ST_Buffer(ST_GeomFromText('POINT(1 2)'), 10) As smallc,\n"
"        ST_Buffer(ST_GeomFromText('POINT(1 2)'), 20) As bigc) As foo;\n"
"        --Result\n"
" smallinsmall | smallcoversbig | bigcoversexterior | bigcontainsexterior\n"
"--------------+----------------+-------------------+---------------------\n"
" t            | f              | t                 | f\n"
"(1 row)"
msgstr ""
"-- 円をカバーする円\n"
"SELECT ST_Covers(smallc,smallc) As smallinsmall,\n"
"        ST_Covers(smallc, bigc) As smallcoversbig,\n"
"        ST_Covers(bigc, ST_ExteriorRing(bigc)) As bigcoversexterior,\n"
"        ST_Contains(bigc, ST_ExteriorRing(bigc)) As bigcontainsexterior\n"
"FROM (SELECT ST_Buffer(ST_GeomFromText('POINT(1 2)'), 10) As smallc,\n"
"        ST_Buffer(ST_GeomFromText('POINT(1 2)'), 20) As bigc) As foo;\n"
"        -- 結果\n"
" smallinsmall | smallcoversbig | bigcoversexterior | bigcontainsexterior\n"
"--------------+----------------+-------------------+---------------------\n"
" t            | f              | t                 | f\n"
"(1 row)"

#. Tag: para
#: reference_measure.xml:1095
#, no-c-format
msgid "Geeography Example"
msgstr "ジオグラフィの例"

#. Tag: programlisting
#: reference_measure.xml:1096
#, no-c-format
msgid ""
"-- a point with a 300 meter buffer compared to a point, a point and its 10 meter buffer\n"
"SELECT ST_Covers(geog_poly, geog_pt) As poly_covers_pt, \n"
"        ST_Covers(ST_Buffer(geog_pt,10), geog_pt) As buff_10m_covers_cent\n"
"        FROM (SELECT ST_Buffer(ST_GeogFromText('SRID=4326;POINT(-99.327 31.4821)'), 300) As "
"geog_poly,\n"
"                                ST_GeogFromText('SRID=4326;POINT(-99.33 31.483)') As geog_pt ) As "
"foo;\n"
"                                \n"
" poly_covers_pt | buff_10m_covers_cent\n"
"----------------+------------------\n"
" f              | t"
msgstr ""
"-- ポイントと他のポイントから300メートルのバッファとの比較と\n"
"-- ポイントとそのポイントから10メートルのバッファとの比較\n"
"SELECT ST_Covers(geog_poly, geog_pt) As poly_covers_pt, \n"
"        ST_Covers(ST_Buffer(geog_pt,10), geog_pt) As buff_10m_covers_cent\n"
"        FROM (SELECT ST_Buffer(ST_GeogFromText('SRID=4326;POINT(-99.327 31.4821)'), 300) As "
"geog_poly,\n"
"                                ST_GeogFromText('SRID=4326;POINT(-99.33 31.483)') As geog_pt ) As "
"foo;\n"
"                                \n"
" poly_covers_pt | buff_10m_covers_cent\n"
"----------------+------------------\n"
" f              | t"

#. Tag: para
#: reference_measure.xml:1101
#, no-c-format
msgid ", <xref linkend=\"ST_CoveredBy\"/>, <xref linkend=\"ST_Within\"/>"
msgstr ", <xref linkend=\"ST_CoveredBy\"/>, <xref linkend=\"ST_Within\"/>"

#. Tag: refname
#: reference_measure.xml:1107
#, no-c-format
msgid "ST_CoveredBy"
msgstr "ST_CoveredBy"

#. Tag: refpurpose
#: reference_measure.xml:1109
#, no-c-format
msgid ""
"<refpurpose>Returns 1 (TRUE) if no point in Geometry/Geography A is outside Geometry/Geography B</"
"refpurpose>"
msgstr ""
"<refpurpose>ジオメトリ/ジオグラフィAの点がジオメトリ/ジオグラフィBの外に無い場合に、1 (TRUE)を返しま"
"す。</refpurpose>"

#. Tag: funcsynopsis
#: reference_measure.xml:1114
#, no-c-format
msgid ""
"<funcprototype> <funcdef>boolean <function>ST_CoveredBy</function></funcdef> <paramdef><type>geometry "
"</type> <parameter>geomA</parameter></paramdef> <paramdef><type>geometry </type> <parameter>geomB</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>boolean <function>ST_CoveredBy</"
"function></funcdef> <paramdef><type>geography </type> <parameter>geogA</parameter></paramdef> "
"<paramdef><type>geography </type> <parameter>geogB</parameter></paramdef> </funcprototype>"
msgstr ""
"<funcprototype> <funcdef>boolean <function>ST_CoveredBy</function></funcdef> <paramdef><type>geometry "
"</type> <parameter>geomA</parameter></paramdef> <paramdef><type>geometry </type> <parameter>geomB</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>boolean <function>ST_CoveredBy</"
"function></funcdef> <paramdef><type>geography </type> <parameter>geogA</parameter></paramdef> "
"<paramdef><type>geography </type> <parameter>geogB</parameter></paramdef> </funcprototype>"

#. Tag: para
#: reference_measure.xml:1140
#, no-c-format
msgid "<para>Returns 1 (TRUE) if no point in Geometry/Geography A is outside Geometry/Geography B</para>"
msgstr ""
"<para>ジオメトリ/ジオグラフィAの点がジオメトリ/ジオグラフィBの外に無い場合に、1 (TRUE)を返します。</"
"para>"

#. Tag: para
#: reference_measure.xml:1153
#, no-c-format
msgid ""
"This function call will automatically include a bounding box comparison that will make use of any "
"indexes that are available on the geometries. To avoid index use, use the function _ST_CoveredBy."
msgstr ""
"この関数の呼び出しによって、ジオメトリで使用可能なインデクスを使用したバウンディングボックスの比較が自"
"動的に行われます。インデクスの使用を避けるには、_ST_CoveredByを使います。"

#. Tag: programlisting
#: reference_measure.xml:1168
#, no-c-format
msgid ""
"--a circle coveredby a circle\n"
"SELECT ST_CoveredBy(smallc,smallc) As smallinsmall,\n"
"        ST_CoveredBy(smallc, bigc) As smallcoveredbybig,\n"
"        ST_CoveredBy(ST_ExteriorRing(bigc), bigc) As exteriorcoveredbybig,\n"
"        ST_Within(ST_ExteriorRing(bigc),bigc) As exeriorwithinbig\n"
"FROM (SELECT ST_Buffer(ST_GeomFromText('POINT(1 2)'), 10) As smallc,\n"
"        ST_Buffer(ST_GeomFromText('POINT(1 2)'), 20) As bigc) As foo;\n"
"        --Result\n"
" smallinsmall | smallcoveredbybig | exteriorcoveredbybig | exeriorwithinbig\n"
"--------------+-------------------+----------------------+------------------\n"
" t            | t                 | t                    | f\n"
"(1 row)"
msgstr ""
"-- 円にカバーされる円\n"
"SELECT ST_CoveredBy(smallc,smallc) As smallinsmall,\n"
"        ST_CoveredBy(smallc, bigc) As smallcoveredbybig,\n"
"        ST_CoveredBy(ST_ExteriorRing(bigc), bigc) As exteriorcoveredbybig,\n"
"        ST_Within(ST_ExteriorRing(bigc),bigc) As exeriorwithinbig\n"
"FROM (SELECT ST_Buffer(ST_GeomFromText('POINT(1 2)'), 10) As smallc,\n"
"        ST_Buffer(ST_GeomFromText('POINT(1 2)'), 20) As bigc) As foo;\n"
"        -- 結果\n"
" smallinsmall | smallcoveredbybig | exteriorcoveredbybig | exeriorwithinbig\n"
"--------------+-------------------+----------------------+------------------\n"
" t            | t                 | t                    | f\n"
"(1 row)"

#. Tag: para
#: reference_measure.xml:1173
#, no-c-format
msgid ""
", <xref linkend=\"ST_Covers\"/>, <xref linkend=\"ST_ExteriorRing\"/>, <xref linkend=\"ST_Within\"/>"
msgstr ""
", <xref linkend=\"ST_Covers\"/>, <xref linkend=\"ST_ExteriorRing\"/>, <xref linkend=\"ST_Within\"/>"

#. Tag: refname
#: reference_measure.xml:1179
#, no-c-format
msgid "ST_Crosses"
msgstr "ST_Crosses"

#. Tag: refpurpose
#: reference_measure.xml:1181
#, no-c-format
msgid ""
"Returns <varname>TRUE</varname> if the supplied geometries have some, but not all, interior points in "
"common."
msgstr ""
"与えられたジオメトリが共通の内部の点を持ち、かつそうでない点を持つ場合に、<varname>TRUE</varname>を返し"
"ます。"

#. Tag: funcprototype
#: reference_measure.xml:1187
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_Crosses</function></funcdef> <paramdef><type>geometry </"
"type><parameter>g1</parameter></paramdef> <paramdef><type>geometry </type><parameter>g2</parameter></"
"paramdef>"
msgstr ""
"<funcdef>boolean <function>ST_Crosses</function></funcdef> <paramdef><type>geometry </"
"type><parameter>g1</parameter></paramdef> <paramdef><type>geometry </type><parameter>g2</parameter></"
"paramdef>"

#. Tag: para
#: reference_measure.xml:1200
#, no-c-format
msgid ""
"<function>ST_Crosses</function> takes two geometry objects and returns <varname>TRUE</varname> if "
"their intersection \"spatially cross\", that is, the geometries have some, but not all interior points "
"in common. The intersection of the interiors of the geometries must not be the empty set and must have "
"a dimensionality less than the maximum dimension of the two input geometries. Additionally, the "
"intersection of the two geometries must not equal either of the source geometries. Otherwise, it "
"returns <varname>FALSE</varname>."
msgstr ""
"<function>ST_Crosses</function>は、二つのジオメトリをとり、インタセクションが「空間的にクロスする」、す"
"なわちジオメトリが共通の内部の点を持ち、かつそうでない点を持つ場合に<varname>TRUE</varname>を返します。"
"ジオメトリの内部のインタセクションは、空集合であってはならず、二つのジオメトリの最大次元より低い次元で"
"なければなりません。さらに言うと、二つのジオメトリのインタセクションは、元のジオメトリのいずれとも一致"
"してはなりません。これらを満たさない場合には<varname>FALSE</varname>を返します。"

#. Tag: para
#: reference_measure.xml:1209
#, no-c-format
msgid "In mathematical terms, this is expressed as:"
msgstr "数学的に述べると、次のようになります。"

#. Tag: remark
#: reference_measure.xml:1211
#, no-c-format
msgid ""
"TODO: Insert appropriate MathML markup here or use a gif. Simple HTML markup does not work well in "
"both IE and Firefox."
msgstr ""
"TODO:適切なMathMLマークアップかgif画像をここに挿入する.単純なHTMLマークアップはIEとFirefoxではうまく動"
"作しない. "

#. Tag: para
#: reference_measure.xml:1222
#, no-c-format
msgid "The DE-9IM Intersection Matrix for the two geometries is:"
msgstr "DE-9IMでは次のようになります。"

#. Tag: para
#: reference_measure.xml:1226
#, no-c-format
msgid "<markup>T*T******</markup> (for Point/Line, Point/Area, and Line/Area situations)"
msgstr "<markup>T*T******</markup> (for Point/Line, Point/Area, Line/Areaの場合)"

#. Tag: para
#: reference_measure.xml:1231
#, no-c-format
msgid "<markup>T*****T**</markup> (for Line/Point, Area/Point, and Area/Line situations)"
msgstr "<markup>T*****T**</markup> (for Line/Point, Area/Point, Area/Lineの場合)"

#. Tag: para
#: reference_measure.xml:1236
#, no-c-format
msgid "<markup>0********</markup> (for Line/Line situations)"
msgstr "<markup>0********</markup> (for Line/Lineの場合)"

#. Tag: para
#: reference_measure.xml:1240
#, no-c-format
msgid "For any other combination of dimensions this predicate returns false."
msgstr "他の次元の組み合わせでは、FALSEが返されます。"

#. Tag: para
#: reference_measure.xml:1243
#, no-c-format
msgid ""
"The OpenGIS Simple Features Specification defines this predicate only for Point/Line, Point/Area, Line/"
"Line, and Line/Area situations. JTS / GEOS extends the definition to apply to Line/Point, Area/Point "
"and Area/Line situations as well. This makes the relation symmetric."
msgstr ""
"OpenGIS Simple Feature Specificationでは、この述語はPoint/Line, Point/Area, Line/Line, Line/Areaの場合"
"についてのみ定義されています。JTS/GEOSでは、Line/Point, Area/Point, Area/Lineについて拡張しています。こ"
"れによって関係が対称になっています。"

#. Tag: para
#: reference_measure.xml:1259
#, no-c-format
msgid "&sfs_compliant; s2.1.13.3"
msgstr "&sfs_compliant; s2.1.13.3"

#. Tag: para
#: reference_measure.xml:1260
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.29"
msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.29"

#. Tag: para
#: reference_measure.xml:1266 reference_measure.xml:2570
#, no-c-format
msgid "The following illustrations all return <varname>TRUE</varname>."
msgstr "次に示す図全てで、<varname>TRUE</varname>が返されます。"

#. Tag: para
#: reference_measure.xml:1278
#, no-c-format
msgid "<varname>MULTIPOINT</varname> / <varname>LINESTRING</varname>"
msgstr "<varname>MULTIPOINT</varname> / <varname>LINESTRING</varname>"

#. Tag: para
#: reference_measure.xml:1288
#, no-c-format
msgid "<varname>MULTIPOINT</varname> / <varname>POLYGON</varname>"
msgstr "<varname>MULTIPOINT</varname> / <varname>POLYGON</varname>"

#. Tag: para
#: reference_measure.xml:1300
#, no-c-format
msgid "<varname>LINESTRING</varname> / <varname>POLYGON</varname>"
msgstr "<varname>LINESTRING</varname> / <varname>POLYGON</varname>"

#. Tag: para
#: reference_measure.xml:1310 reference_measure.xml:2590 reference_measure.xml:3156
#: reference_measure.xml:3166
#, no-c-format
msgid "<varname>LINESTRING</varname> / <varname>LINESTRING</varname>"
msgstr "<varname>LINESTRING</varname> / <varname>LINESTRING</varname>"

#. Tag: para
#: reference_measure.xml:1318
#, no-c-format
msgid "Consider a situation where a user has two tables: a table of roads and a table of highways."
msgstr "roads (道路)とhighways (高速道路)の2つのテーブルを持っている場面を考えます。"

#. Tag: programlisting
#: reference_measure.xml:1326
#, no-c-format
msgid ""
"CREATE TABLE roads (\n"
"  id serial NOT NULL,\n"
"  the_geom geometry,\n"
"  CONSTRAINT roads_pkey PRIMARY KEY (road_id)\n"
");"
msgstr ""
"CREATE TABLE roads (\n"
"  id serial NOT NULL,\n"
"  the_geom geometry,\n"
"  CONSTRAINT roads_pkey PRIMARY KEY (road_id)\n"
");"

#. Tag: programlisting
#: reference_measure.xml:1330
#, no-c-format
msgid ""
"CREATE TABLE highways (\n"
"  id serial NOT NULL,\n"
"  the_gem geometry,\n"
"  CONSTRAINT roads_pkey PRIMARY KEY (road_id)\n"
");"
msgstr ""
"CREATE TABLE highways (\n"
"  id serial NOT NULL,\n"
"  the_gem geometry,\n"
"  CONSTRAINT roads_pkey PRIMARY KEY (road_id)\n"
");"

#. Tag: para
#: reference_measure.xml:1337
#, no-c-format
msgid "To determine a list of roads that cross a highway, use a query similiar to:"
msgstr "次のようなクエリを使って、highwayとクロスするroadsのリストを決定します。"

#. Tag: programlisting
#: reference_measure.xml:1341
#, no-c-format
msgid ""
"SELECT roads.id\n"
"FROM roads, highways\n"
"WHERE ST_Crosses(roads.the_geom, highways.the_geom);"
msgstr ""
"SELECT roads.id\n"
"FROM roads, highways\n"
"WHERE ST_Crosses(roads.the_geom, highways.the_geom);"

#. Tag: refname
#: reference_measure.xml:1348
#, no-c-format
msgid "ST_LineCrossingDirection"
msgstr "ST_LineCrossingDirection"

#. Tag: refpurpose
#: reference_measure.xml:1350
#, no-c-format
msgid ""
"Given 2 linestrings, returns a number between -3 and 3 denoting what kind of crossing behavior. 0 is "
"no crossing."
msgstr ""
"与えられた二つのラインストリングに関するクロスの種類を-3から3の区間の数で返します。0の場合はクロスして"
"いません"

#. Tag: funcprototype
#: reference_measure.xml:1355
#, no-c-format
msgid ""
"<funcdef>integer <function>ST_LineCrossingDirection</function></funcdef> <paramdef><type>geometry </"
"type> <parameter>linestringA</parameter></paramdef> <paramdef><type>geometry </type> "
"<parameter>linestringB</parameter></paramdef>"
msgstr ""
"<funcdef>integer <function>ST_LineCrossingDirection</function></funcdef> <paramdef><type>geometry </"
"type> <parameter>linestringA</parameter></paramdef> <paramdef><type>geometry </type> "
"<parameter>linestringB</parameter></paramdef>"

#. Tag: para
#: reference_measure.xml:1366
#, no-c-format
msgid ""
"Given 2 linestrings, returns a number between -3 and 3 denoting what kind of crossing behavior. 0 is "
"no crossing. This is only supported for <varname>LINESTRING</varname>"
msgstr ""
"与えられた二つのラインストリングに関するクロスの種類を-3から3の区間の数で返します。0の場合はクロスして"
"いません。<varname>LINESTRING</varname>のみサポートします。"

#. Tag: para
#: reference_measure.xml:1367
#, no-c-format
msgid "Definition of integer constants is as follows:"
msgstr "整定数の定義は次の通りです。"

#. Tag: para
#: reference_measure.xml:1370
#, no-c-format
msgid "0: LINE NO CROSS"
msgstr "0: クロスが無い"

#. Tag: para
#: reference_measure.xml:1373
#, no-c-format
msgid "-1: LINE CROSS LEFT"
msgstr "-1: 左クロス"

#. Tag: para
#: reference_measure.xml:1376
#, no-c-format
msgid "1: LINE CROSS RIGHT"
msgstr "1: 右クロス"

#. Tag: para
#: reference_measure.xml:1379
#, no-c-format
msgid "-2: LINE MULTICROSS END LEFT"
msgstr "-2: 複数クロスで最後が左"

#. Tag: para
#: reference_measure.xml:1382
#, no-c-format
msgid "2: LINE MULTICROSS END RIGHT"
msgstr "2: 複数クロスで最後が右"

#. Tag: para
#: reference_measure.xml:1385
#, no-c-format
msgid "-3: LINE MULTICROSS END SAME FIRST LEFT"
msgstr "-3: 複数クロスで開始終了ともに左"

#. Tag: para
#: reference_measure.xml:1388
#, no-c-format
msgid "3: LINE MULTICROSS END SAME FIRST RIGHT"
msgstr "3: 複数クロスで開始終了ともに右"

#. Tag: para
#: reference_measure.xml:1392
#, no-c-format
msgid "Availability: 1.4"
msgstr "Availability: 1.4"

#. Tag: para
#: reference_measure.xml:1410
#, no-c-format
msgid "Line 1 (green), Line 2 ball is start point, triangle are end points. Query below."
msgstr "ライン1 (緑)とライン2 (青)、円が始点、三角が終点。クエリは次の通り。"

#. Tag: programlisting
#: reference_measure.xml:1414
#, no-c-format
msgid ""
"SELECT ST_LineCrossingDirection(foo.line1, foo.line2) As l1_cross_l2 ,\n"
"          ST_LineCrossingDirection(foo.line2, foo.line1) As l2_cross_l1\n"
"FROM (\n"
"SELECT\n"
" ST_GeomFromText('LINESTRING(25 169,89 114,40 70,86 43)') As line1,\n"
" ST_GeomFromText('LINESTRING(171 154,20 140,71 74,161 53)') As line2\n"
"        ) As foo;\n"
"\n"
" l1_cross_l2 | l2_cross_l1\n"
"-------------+-------------\n"
"           3 |          -3"
msgstr ""
"SELECT ST_LineCrossingDirection(foo.line1, foo.line2) As l1_cross_l2 ,\n"
"          ST_LineCrossingDirection(foo.line2, foo.line1) As l2_cross_l1\n"
"FROM (\n"
"SELECT\n"
" ST_GeomFromText('LINESTRING(25 169,89 114,40 70,86 43)') As line1,\n"
" ST_GeomFromText('LINESTRING(171 154,20 140,71 74,161 53)') As line2\n"
"        ) As foo;\n"
"\n"
" l1_cross_l2 | l2_cross_l1\n"
"-------------+-------------\n"
"           3 |          -3"

#. Tag: para
#: reference_measure.xml:1424 reference_measure.xml:1438 reference_measure.xml:1452
#, no-c-format
msgid "Line 1 (green), Line 2 (blue) ball is start point, triangle are end points. Query below."
msgstr "ライン1 (緑)とライン2 (青)、円が始点、三角が終点。クエリは次の通り。"

#. Tag: programlisting
#: reference_measure.xml:1428
#, no-c-format
msgid ""
"SELECT ST_LineCrossingDirection(foo.line1, foo.line2) As l1_cross_l2 ,\n"
"          ST_LineCrossingDirection(foo.line2, foo.line1) As l2_cross_l1\n"
"FROM (\n"
" SELECT\n"
"  ST_GeomFromText('LINESTRING(25 169,89 114,40 70,86 43)') As line1,\n"
"  ST_GeomFromText('LINESTRING (171 154, 20 140, 71 74, 2.99 90.16)') As line2\n"
") As foo;\n"
"\n"
" l1_cross_l2 | l2_cross_l1\n"
"-------------+-------------\n"
"           2 |          -2"
msgstr ""
"SELECT ST_LineCrossingDirection(foo.line1, foo.line2) As l1_cross_l2 ,\n"
"          ST_LineCrossingDirection(foo.line2, foo.line1) As l2_cross_l1\n"
"FROM (\n"
" SELECT\n"
"  ST_GeomFromText('LINESTRING(25 169,89 114,40 70,86 43)') As line1,\n"
"  ST_GeomFromText('LINESTRING (171 154, 20 140, 71 74, 2.99 90.16)') As line2\n"
") As foo;\n"
"\n"
" l1_cross_l2 | l2_cross_l1\n"
"-------------+-------------\n"
"           2 |          -2"

#. Tag: programlisting
#: reference_measure.xml:1442
#, no-c-format
msgid ""
"SELECT\n"
"        ST_LineCrossingDirection(foo.line1, foo.line2) As l1_cross_l2 ,\n"
"        ST_LineCrossingDirection(foo.line2, foo.line1) As l2_cross_l1\n"
"FROM (\n"
" SELECT\n"
"  ST_GeomFromText('LINESTRING(25 169,89 114,40 70,86 43)') As line1,\n"
"  ST_GeomFromText('LINESTRING (20 140, 71 74, 161 53)') As line2\n"
"  ) As foo;\n"
"\n"
" l1_cross_l2 | l2_cross_l1\n"
"-------------+-------------\n"
"          -1 |          1"
msgstr ""
"SELECT\n"
"        ST_LineCrossingDirection(foo.line1, foo.line2) As l1_cross_l2 ,\n"
"        ST_LineCrossingDirection(foo.line2, foo.line1) As l2_cross_l1\n"
"FROM (\n"
" SELECT\n"
"  ST_GeomFromText('LINESTRING(25 169,89 114,40 70,86 43)') As line1,\n"
"  ST_GeomFromText('LINESTRING (20 140, 71 74, 161 53)') As line2\n"
"  ) As foo;\n"
"\n"
" l1_cross_l2 | l2_cross_l1\n"
"-------------+-------------\n"
"          -1 |          1"

#. Tag: programlisting
#: reference_measure.xml:1456
#, no-c-format
msgid ""
"SELECT ST_LineCrossingDirection(foo.line1, foo.line2) As l1_cross_l2 ,\n"
"          ST_LineCrossingDirection(foo.line2, foo.line1) As l2_cross_l1\n"
"FROM (SELECT\n"
"        ST_GeomFromText('LINESTRING(25 169,89 114,40 70,86 43)') As line1,\n"
"        ST_GeomFromText('LINESTRING(2.99 90.16,71 74,20 140,171 154)') As line2\n"
"        ) As foo;\n"
"\n"
" l1_cross_l2 | l2_cross_l1\n"
"-------------+-------------\n"
"          -2 |          2"
msgstr ""
"SELECT ST_LineCrossingDirection(foo.line1, foo.line2) As l1_cross_l2 ,\n"
"          ST_LineCrossingDirection(foo.line2, foo.line1) As l2_cross_l1\n"
"FROM (SELECT\n"
"        ST_GeomFromText('LINESTRING(25 169,89 114,40 70,86 43)') As line1,\n"
"        ST_GeomFromText('LINESTRING(2.99 90.16,71 74,20 140,171 154)') As line2\n"
"        ) As foo;\n"
"\n"
" l1_cross_l2 | l2_cross_l1\n"
"-------------+-------------\n"
"          -2 |          2"

#. Tag: programlisting
#: reference_measure.xml:1464
#, no-c-format
msgid ""
"SELECT s1.gid, s2.gid, ST_LineCrossingDirection(s1.the_geom, s2.the_geom)\n"
"        FROM streets s1 CROSS JOIN streets s2 ON (s1.gid != s2.gid AND s1.the_geom &amp;&amp; s2."
"the_geom )\n"
"WHERE ST_CrossingDirection(s1.the_geom, s2.the_geom) > 0;"
msgstr ""
"SELECT s1.gid, s2.gid, ST_LineCrossingDirection(s1.the_geom, s2.the_geom)\n"
"        FROM streets s1 CROSS JOIN streets s2 ON (s1.gid != s2.gid AND s1.the_geom &amp;&amp; s2."
"the_geom )\n"
"WHERE ST_CrossingDirection(s1.the_geom, s2.the_geom) > 0;"

#. Tag: refname
#: reference_measure.xml:1477
#, no-c-format
msgid "ST_Disjoint"
msgstr "ST_Disjoint"

#. Tag: refpurpose
#: reference_measure.xml:1479
#, no-c-format
msgid ""
"Returns TRUE if the Geometries do not \"spatially intersect\" - if they do not share any space "
"together."
msgstr ""
"ジオメトリが「空間的にインタセクトし」ていない、すなわち、空間を共有していない場合に、TRUEを返します。"

#. Tag: funcprototype
#: reference_measure.xml:1485
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_Disjoint</function></funcdef> <paramdef> <type>geometry</type> "
"<parameter>A</parameter> </paramdef> <paramdef> <type>geometry</type> <parameter>B</parameter> </"
"paramdef>"
msgstr ""
"<funcdef>boolean <function>ST_Disjoint</function></funcdef> <paramdef> <type>geometry</type> "
"<parameter>A</parameter> </paramdef> <paramdef> <type>geometry</type> <parameter>B</parameter> </"
"paramdef>"

#. Tag: para
#: reference_measure.xml:1500
#, no-c-format
msgid ""
"Overlaps, Touches, Within all imply geometries are not spatially disjoint. If any of the "
"aforementioned returns true, then the geometries are not spatially disjoint. Disjoint implies false "
"for spatial intersection."
msgstr ""
"オーバラップ、接触、包含は全て、ジオメトリが非接続でないことを意味しています。これらがTRUEを返す場合"
"は、空間的に非接続ではありません。非接続は、空間インタセクトについてFALSEとなります。"

#. Tag: para
#: reference_measure.xml:1510
#, no-c-format
msgid "This function call does not use indexes"
msgstr "この関数はインデクスを使用しません。"

#. Tag: para
#: reference_measure.xml:1517
#, no-c-format
msgid "&sfs_compliant; s2.1.1.2 //s2.1.13.3 - a.Relate(b, 'FF*FF****')"
msgstr "&sfs_compliant; s2.1.1.2 //s2.1.13.3 - a.Relate(b, 'FF*FF****')"

#. Tag: para
#: reference_measure.xml:1519
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.26"
msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.26"

#. Tag: programlisting
#: reference_measure.xml:1524
#, no-c-format
msgid ""
"SELECT ST_Disjoint('POINT(0 0)'::geometry, 'LINESTRING ( 2 0, 0 2 )'::geometry);\n"
" st_disjoint\n"
"---------------\n"
" t\n"
"(1 row)\n"
"SELECT ST_Disjoint('POINT(0 0)'::geometry, 'LINESTRING ( 0 0, 0 2 )'::geometry);\n"
" st_disjoint\n"
"---------------\n"
" f\n"
"(1 row)"
msgstr ""
"SELECT ST_Disjoint('POINT(0 0)'::geometry, 'LINESTRING ( 2 0, 0 2 )'::geometry);\n"
" st_disjoint\n"
"---------------\n"
" t\n"
"(1 row)\n"
"SELECT ST_Disjoint('POINT(0 0)'::geometry, 'LINESTRING ( 0 0, 0 2 )'::geometry);\n"
" st_disjoint\n"
"---------------\n"
" f\n"
"(1 row)"

#. Tag: para
#: reference_measure.xml:1529
#, no-c-format
msgid "<para>ST_Intersects</para>"
msgstr "<para>ST_Intersects</para>"

#. Tag: refname
#: reference_measure.xml:1535
#, no-c-format
msgid "ST_Distance"
msgstr "ST_Distance"

#. Tag: refpurpose
#: reference_measure.xml:1537
#, no-c-format
msgid ""
"For geometry type Returns the 2D Cartesian distance between two geometries in projected units (based "
"on spatial ref). For geography type defaults to return minimum geodesic distance between two "
"geographies in meters."
msgstr ""
"ジオメトリ型については、二つのジオメトリの、2次元の最小デカルト距離 (空間参照系に基づきます)を、投影法"
"の単位で返します。ジオグラフィ型については、デフォルトでは、二つのジオメトリ間の測地距離をメートル単位"
"で返します。"

#. Tag: funcsynopsis
#: reference_measure.xml:1541
#, no-c-format
msgid ""
"<funcprototype> <funcdef>float <function>ST_Distance</function></funcdef> <paramdef><type>geometry </"
"type> <parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef> </funcprototype> <funcprototype> <funcdef>float <function>ST_Distance</function></funcdef> "
"<paramdef><type>geography </type> <parameter>gg1</parameter></paramdef> <paramdef><type>geography </"
"type> <parameter>gg2</parameter></paramdef> </funcprototype> <funcprototype> <funcdef>float "
"<function>ST_Distance</function></funcdef> <paramdef><type>geography </type> <parameter>gg1</"
"parameter></paramdef> <paramdef><type>geography </type> <parameter>gg2</parameter></paramdef> "
"<paramdef><type>boolean </type> <parameter>use_spheroid</parameter></paramdef> </funcprototype>"
msgstr ""
"<funcprototype> <funcdef>float <function>ST_Distance</function></funcdef> <paramdef><type>geometry </"
"type> <parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef> </funcprototype> <funcprototype> <funcdef>float <function>ST_Distance</function></funcdef> "
"<paramdef><type>geography </type> <parameter>gg1</parameter></paramdef> <paramdef><type>geography </"
"type> <parameter>gg2</parameter></paramdef> </funcprototype> <funcprototype> <funcdef>float "
"<function>ST_Distance</function></funcdef> <paramdef><type>geography </type> <parameter>gg1</"
"parameter></paramdef> <paramdef><type>geography </type> <parameter>gg2</parameter></paramdef> "
"<paramdef><type>boolean </type> <parameter>use_spheroid</parameter></paramdef> </funcprototype>"

#. Tag: para
#: reference_measure.xml:1579
#, no-c-format
msgid ""
"For geometry type returns the minimum 2D Cartesian distance between two geometries in projected units "
"(spatial ref units). For geography type defaults to return the minimum geodesic distance between two "
"geographies in meters. If use_spheroid is false, a faster sphere calculation is used instead of a "
"spheroid."
msgstr ""
"ジオメトリ型については、二つのジオメトリの、2次元の最小デカルト距離 (空間参照系に基づきます)を、投影法"
"の単位で返します。ジオグラフィ型については、デフォルトでは、二つのジオメトリ間の測地距離をメートル単位"
"で返します。use_spheroidをFALSEにすると、回転楕円体の替わりに球面で計算します。"

#. Tag: para
#: reference_measure.xml:1584
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.23"
msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.23"

#. Tag: para
#: reference_measure.xml:1585 reference_measure.xml:2053
#, no-c-format
msgid "&curve_support;"
msgstr "&curve_support;"

#. Tag: para
#: reference_measure.xml:1588
#, no-c-format
msgid ""
"Availability: 1.5.0 geography support was introduced in 1.5. Speed improvements for planar to better "
"handle large or many vertex geometries"
msgstr ""
"Availability: 1.5.0 1.5でジオグラフィが導入されました。大きいジオメトリや頂点の多いジオメトリについての"
"速度が改善しました。"

#. Tag: para
#: reference_measure.xml:1589
#, no-c-format
msgid ""
"Enhanced: 2.1.0 improved speed for geography. See <ulink url=\"http://boundlessgeo.com/2012/07/making-"
"geography-faster/\">Making Geography faster</ulink> for details."
msgstr ""
"Enhanced: 2.1.0 ジオグラフィでの速度が改善されました。詳細は<ulink url=\"http://boundlessgeo."
"com/2012/07/making-geography-faster/\">Making Geography faster</ulink>をご覧ください。"

#. Tag: para
#: reference_measure.xml:1590
#, no-c-format
msgid "Enhanced: 2.1.0 - support for curved geometries was introduced."
msgstr "Enhanced: 2.1.0 - 曲線ジオメトリ対応が導入されました。"

#. Tag: title
#: reference_measure.xml:1595
#, no-c-format
msgid "Basic Geometry Examples"
msgstr "基本的なジオメトリの例"

#. Tag: programlisting
#: reference_measure.xml:1597
#, no-c-format
msgid ""
"--Geometry example - units in planar degrees 4326 is WGS 84 long lat unit=degrees\n"
"SELECT ST_Distance(\n"
"                ST_GeomFromText('POINT(-72.1235 42.3521)',4326),\n"
"                ST_GeomFromText('LINESTRING(-72.1260 42.45, -72.123 42.1546)', 4326)\n"
"        );\n"
"st_distance\n"
"-----------------\n"
"0.00150567726382282\n"
"\n"
"-- Geometry example - units in meters (SRID: 26986 Massachusetts state plane meters) (most accurate "
"for Massachusetts)\n"
"SELECT ST_Distance(\n"
"                        ST_Transform(ST_GeomFromText('POINT(-72.1235 42.3521)',4326),26986),\n"
"                        ST_Transform(ST_GeomFromText('LINESTRING(-72.1260 42.45, -72.123 42.1546)', "
"4326),26986)\n"
"                );\n"
"st_distance\n"
"-----------------\n"
"123.797937878454\n"
"\n"
"-- Geometry example - units in meters (SRID: 2163 US National Atlas Equal area) (least accurate)\n"
"SELECT ST_Distance(\n"
"                        ST_Transform(ST_GeomFromText('POINT(-72.1235 42.3521)',4326),2163),\n"
"                        ST_Transform(ST_GeomFromText('LINESTRING(-72.1260 42.45, -72.123 42.1546)', "
"4326),2163)\n"
"                );\n"
"\n"
"st_distance\n"
"------------------\n"
"126.664256056812"
msgstr ""
"-- ジオメトリの例 - 4326はWGS 84経度緯度で単位は度\n"
"SELECT ST_Distance(\n"
"                ST_GeomFromText('POINT(-72.1235 42.3521)',4326),\n"
"                ST_GeomFromText('LINESTRING(-72.1260 42.45, -72.123 42.1546)', 4326)\n"
"        );\n"
"st_distance\n"
"-----------------\n"
"0.00150567726382282\n"
"\n"
"-- Geometry example - units in meters (SRID: 26986 Massachusetts state plane meters) (most accurate "
"for Massachusetts)\n"
"SELECT ST_Distance(\n"
"                        ST_Transform(ST_GeomFromText('POINT(-72.1235 42.3521)',4326),26986),\n"
"                        ST_Transform(ST_GeomFromText('LINESTRING(-72.1260 42.45, -72.123 42.1546)', "
"4326),26986)\n"
"                );\n"
"st_distance\n"
"-----------------\n"
"123.797937878454\n"
"\n"
"-- ジオメトリの例 - 単位はメートル (SRID: 2163 米国ナショナルアトラス正積図法)\n"
"(least accurate)\n"
"SELECT ST_Distance(\n"
"                        ST_Transform(ST_GeomFromText('POINT(-72.1235 42.3521)',4326),2163),\n"
"                        ST_Transform(ST_GeomFromText('LINESTRING(-72.1260 42.45, -72.123 42.1546)', "
"4326),2163)\n"
"                );\n"
"\n"
"st_distance\n"
"------------------\n"
"126.664256056812"

#. Tag: title
#: reference_measure.xml:1600 reference_measure.xml:2145 reference_measure.xml:2199
#, no-c-format
msgid "Geography Examples"
msgstr "ジオグラフィの例"

#. Tag: programlisting
#: reference_measure.xml:1601
#, no-c-format
msgid ""
"-- same as geometry example but note units in meters - use sphere for slightly faster less accurate\n"
"SELECT ST_Distance(gg1, gg2) As spheroid_dist, ST_Distance(gg1, gg2, false) As sphere_dist \n"
"FROM (SELECT\n"
"        ST_GeogFromText('SRID=4326;POINT(-72.1235 42.3521)') As gg1,\n"
"        ST_GeogFromText('SRID=4326;LINESTRING(-72.1260 42.45, -72.123 42.1546)') As gg2\n"
"        ) As foo  ;\n"
"\n"
"  spheroid_dist   |   sphere_dist\n"
"------------------+------------------\n"
" 123.802076746848 | 123.475736916397"
msgstr ""
"-- ジオメトリの例と同じですが、メートル単位になります\n"
"-- 球面を使うと若干速度が向上し精度が低下します\n"
"SELECT ST_Distance(gg1, gg2) As spheroid_dist, ST_Distance(gg1, gg2, false) As sphere_dist \n"
"FROM (SELECT\n"
"        ST_GeogFromText('SRID=4326;POINT(-72.1235 42.3521)') As gg1,\n"
"        ST_GeogFromText('SRID=4326;LINESTRING(-72.1260 42.45, -72.123 42.1546)') As gg2\n"
"        ) As foo  ;\n"
"\n"
"  spheroid_dist   |   sphere_dist\n"
"------------------+------------------\n"
" 123.802076746848 | 123.475736916397"

#. Tag: para
#: reference_measure.xml:1609
#, no-c-format
msgid ""
", <xref linkend=\"ST_DWithin\"/>, <xref linkend=\"ST_DistanceSphere\"/>, <xref linkend="
"\"ST_Distance_Spheroid\"/>, <xref linkend=\"ST_MaxDistance\"/>, <xref linkend=\"ST_Transform\"/>"
msgstr ""
", <xref linkend=\"ST_DWithin\"/>, <xref linkend=\"ST_DistanceSphere\"/>, <xref linkend="
"\"ST_Distance_Spheroid\"/>, <xref linkend=\"ST_MaxDistance\"/>, <xref linkend=\"ST_Transform\"/>"

#. Tag: refname
#: reference_measure.xml:1615
#, no-c-format
msgid "ST_HausdorffDistance"
msgstr "ST_HausdorffDistance"

#. Tag: refpurpose
#: reference_measure.xml:1617
#, no-c-format
msgid ""
"Returns the Hausdorff distance between two geometries. Basically a measure of how similar or "
"dissimilar 2 geometries are. Units are in the units of the spatial reference system of the geometries."
msgstr ""
"二つのジオメトリ間のハウスドルフ距離を返します。基本的にジオメトリが似ているかどうかを計測するもので"
"す。単位はジオメトリの空間参照系の単位です。"

#. Tag: funcsynopsis
#: reference_measure.xml:1622
#, no-c-format
msgid ""
"<funcprototype> <funcdef>float <function>ST_HausdorffDistance</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> "
"<parameter>g2</parameter></paramdef> </funcprototype> <funcprototype> <funcdef>float "
"<function>ST_HausdorffDistance</function></funcdef> <paramdef><type>geometry </type> <parameter>g1</"
"parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>densifyFrac</parameter></paramdef> </funcprototype>"
msgstr ""
"<funcprototype> <funcdef>float <function>ST_HausdorffDistance</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> "
"<parameter>g2</parameter></paramdef> </funcprototype> <funcprototype> <funcdef>float "
"<function>ST_HausdorffDistance</function></funcdef> <paramdef><type>geometry </type> <parameter>g1</"
"parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>densifyFrac</parameter></paramdef> </funcprototype>"

#. Tag: para
#: reference_measure.xml:1650
#, no-c-format
msgid ""
"Implements algorithm for computing a distance metric which can be thought of as the \"Discrete "
"Hausdorff Distance\". This is the Hausdorff distance restricted to discrete points for one of the "
"geometries. <ulink url=\"http://en.wikipedia.org/wiki/Hausdorff_distance\">Wikipedia article on "
"Hausdorff distance</ulink> <ulink url=\"http://lin-ear-th-inking.blogspot.com/2009/01/computing-"
"geometric-similarity.html\">Martin Davis note on how Hausdorff Distance calculation was used to prove "
"correctness of the CascadePolygonUnion approach.</ulink>"
msgstr ""
"「離散ハウスドルフ距離」とみなすことができる距離基準を計算します。これは、一つのジオメトリの離散点に制"
"限されたハウスドルフ距離です。<ulink url=\"http://en.wikipedia.org/wiki/Hausdorff_distance\">Hausdorff "
"distanceに関するWikiPedia英語版の記事</ulink>や<ulink url=\"http://lin-ear-th-inking.blogspot."
"com/2009/01/computing-geometric-similarity.html\">Martin Davis note on how Hausdorff Distance "
"calculation was used to prove correctness of the CascadePolygonUnion approach.</ulink>などを参照して下"
"さい。"

#. Tag: para
#: reference_measure.xml:1653
#, no-c-format
msgid ""
"When densifyFrac is specified, this function performs a segment densification before computing the "
"discrete hausdorff distance. The densifyFrac parameter sets the fraction by which to densify each "
"segment. Each segment will be split into a number of equal-length subsegments, whose fraction of the "
"total length is closest to the given fraction."
msgstr ""
"densifyFracが指定された際には、離散ハウスドルフ距離を計算する前に、線分の密度を高めます。densifyFracパ"
"ラメータは線分ごとの密度を高める小数です。それぞれの線分が、等分に分割されます。線分の長さに対する分割"
"線分の長さの比は与えられた小数に近くなります。"

#. Tag: para
#: reference_measure.xml:1658
#, no-c-format
msgid ""
"The current implementation supports only vertices as the discrete locations. This could be extended to "
"allow an arbitrary density of points to be used."
msgstr ""
"現在の実装では、離散位置は、頂点のみに対応しています。任意の密度でポイントを使用することができるよう拡"
"張されています。"

#. Tag: para
#: reference_measure.xml:1663
#, no-c-format
msgid ""
"This algorithm is NOT equivalent to the standard Hausdorff distance. However, it computes an "
"approximation that is correct for a large subset of useful cases. One important part of this subset is "
"Linestrings that are roughly parallel to each other, and roughly equal in length. This is a useful "
"metric for line matching."
msgstr ""
"このアルゴリズムは標準的なハウスドルフ距離と等価では*ありません*。しかし、使用可能な場面の大部分で正し"
"くなる近似計算がなされています。重要なものに、それぞれが概ね平行で概ね等しい長さのラインストリングがあ"
"ります。これはラインのマッチングに使える基準です。"

#. Tag: para
#: reference_measure.xml:1668
#, no-c-format
msgid "Availability: 1.5.0 - requires GEOS &gt;= 3.2.0"
msgstr "Availability: 1.5.0 - GEOS 3.2.0以上が必要です。"

#. Tag: para
#: reference_measure.xml:1674
#, no-c-format
msgid ""
"For each building, find the parcel that best represents it. First we require the parcel intersect with "
"the geometry. DISTINCT ON guarantees we get each building listed only once, the ORDER BY .. "
"ST_HausdorffDistance gives us a preference of parcel that is most similar to the building."
msgstr ""
"建物ごとに、建物を表現する最善の区画を見つけます。まず、ジオメトリとインタセクトする区画を求めます。"
"DISTINCT ONで、建物が一覧に一度だけ出現するのを保障します。ORDER BY ... ST_HausdorffDistanceで、最も建"
"物に近い区画が前に出ます。"

#. Tag: programlisting
#: reference_measure.xml:1676
#, no-c-format
msgid ""
"SELECT DISTINCT ON(buildings.gid) buildings.gid, parcels.parcel_id \n"
"   FROM buildings INNER JOIN parcels ON ST_Intersects(buildings.geom,parcels.geom) \n"
"     ORDER BY buildings.gid, ST_HausdorffDistance(buildings.geom, parcels.geom);"
msgstr ""
"SELECT DISTINCT ON(buildings.gid) buildings.gid, parcels.parcel_id \n"
"   FROM buildings INNER JOIN parcels ON ST_Intersects(buildings.geom,parcels.geom) \n"
"     ORDER BY buildings.gid, ST_HausdorffDistance(buildings.geom, parcels.geom);"

#. Tag: programlisting
#: reference_measure.xml:1678
#, no-c-format
msgid ""
"postgis=# SELECT ST_HausdorffDistance(\n"
"                                'LINESTRING (0 0, 2 0)'::geometry,\n"
"                                'MULTIPOINT (0 1, 1 0, 2 1)'::geometry);\n"
" st_hausdorffdistance\n"
" ----------------------\n"
"                                         1\n"
"(1 row)"
msgstr ""
"postgis=# SELECT ST_HausdorffDistance(\n"
"                                'LINESTRING (0 0, 2 0)'::geometry,\n"
"                                'MULTIPOINT (0 1, 1 0, 2 1)'::geometry);\n"
" st_hausdorffdistance\n"
" ----------------------\n"
"                                         1\n"
"(1 row)"

#. Tag: programlisting
#: reference_measure.xml:1679
#, no-c-format
msgid ""
"postgis=# SELECT st_hausdorffdistance('LINESTRING (130 0, 0 0, 0 150)'::geometry, 'LINESTRING (10 10, "
"10 150, 130 10)'::geometry, 0.5);\n"
" st_hausdorffdistance\n"
" ----------------------\n"
"                                        70\n"
"(1 row)"
msgstr ""
"postgis=# SELECT st_hausdorffdistance('LINESTRING (130 0, 0 0, 0 150)'::geometry, 'LINESTRING (10 10, "
"10 150, 130 10)'::geometry, 0.5);\n"
" st_hausdorffdistance\n"
" ----------------------\n"
"                                        70\n"
"(1 row)"

#. Tag: refname
#: reference_measure.xml:1686
#, no-c-format
msgid "ST_MaxDistance"
msgstr "ST_MaxDistance"

#. Tag: refpurpose
#: reference_measure.xml:1688
#, no-c-format
msgid "Returns the 2-dimensional largest distance between two geometries in projected units."
msgstr "二つのジオメトリ間の2次元距離の最大値を、投影法の単位で返します。"

#. Tag: funcprototype
#: reference_measure.xml:1694
#, no-c-format
msgid ""
"<funcdef>float <function>ST_MaxDistance</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef>"
msgstr ""
"<funcdef>float <function>ST_MaxDistance</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef>"

#. Tag: para
#: reference_measure.xml:1707
#, no-c-format
msgid ""
"Returns the 2-dimensional maximum distance between two geometries in projected units. If g1 and g2 is "
"the same geometry the function will return the distance between the two vertices most far from each "
"other in that geometry."
msgstr ""
"二つのジオメトリの最大2次元距離を投影法の単位で返します。g1とg2が同じジオメトリの場合には、ジオメトリ内"
"の最も遠くなる頂点の距離を返します。"

#. Tag: para
#: reference_measure.xml:1717
#, no-c-format
msgid "Basic furthest distance the point is to any part of the line"
msgstr "ポイントからラインへの基本的な最長距離"

#. Tag: programlisting
#: reference_measure.xml:1718
#, no-c-format
msgid ""
"postgis=# SELECT ST_MaxDistance('POINT(0 0)'::geometry, 'LINESTRING ( 2 0, 0 2 )'::geometry);\n"
"   st_maxdistance\n"
"-----------------\n"
" 2\n"
"(1 row)\n"
"\n"
"postgis=# SELECT ST_MaxDistance('POINT(0 0)'::geometry, 'LINESTRING ( 2 2, 2 2 )'::geometry);\n"
"  st_maxdistance  \n"
"------------------\n"
" 2.82842712474619\n"
"(1 row)"
msgstr ""
"postgis=# SELECT ST_MaxDistance('POINT(0 0)'::geometry, 'LINESTRING ( 2 0, 0 2 )'::geometry);\n"
"   st_maxdistance\n"
"-----------------\n"
" 2\n"
"(1 row)\n"
"\n"
"postgis=# SELECT ST_MaxDistance('POINT(0 0)'::geometry, 'LINESTRING ( 2 2, 2 2 )'::geometry);\n"
"  st_maxdistance  \n"
"------------------\n"
" 2.82842712474619\n"
"(1 row)"

#. Tag: para
#: reference_measure.xml:1724
#, no-c-format
msgid ", <xref linkend=\"ST_LongestLine\"/>, <xref linkend=\"ST_DFullyWithin\"/>"
msgstr ", <xref linkend=\"ST_LongestLine\"/>, <xref linkend=\"ST_DFullyWithin\"/>"

#. Tag: refname
#: reference_measure.xml:1730
#, no-c-format
msgid "ST_DistanceSphere"
msgstr "ST_DistanceSphere"

#. Tag: refpurpose
#: reference_measure.xml:1732
#, no-c-format
msgid ""
"Returns minimum distance in meters between two lon/lat geometries. Uses a spherical earth and radius "
"derived from the spheroid defined by the SRID. Faster than ST_DistanceSpheroid <xref linkend="
"\"ST_Distance_Spheroid\"/>, but less accurate. PostGIS versions prior to 1.5 only implemented for "
"points."
msgstr ""
"二つの経度緯度ジオメトリの間の最短距離をメートル単位で返します。SRIDで定義された回転楕円体に由来する半"
"径となる球面を使います。<xref linkend=\"ST_Distance_Spheroid\"/>より高速ですが、精度が悪くなります。"
"PostGISの1.5より前の版ではポイント間の計測のみ実装していました。"

#. Tag: funcprototype
#: reference_measure.xml:1741
#, no-c-format
msgid ""
"<funcdef>float <function>ST_DistanceSphere</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>geomlonlatA</parameter></paramdef> <paramdef><type>geometry </type> <parameter>geomlonlatB</"
"parameter></paramdef>"
msgstr ""
"<funcdef>float <function>ST_DistanceSphere</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>geomlonlatA</parameter></paramdef> <paramdef><type>geometry </type> <parameter>geomlonlatB</"
"parameter></paramdef>"

#. Tag: para
#: reference_measure.xml:1752
#, no-c-format
msgid ""
"Returns minimum distance in meters between two lon/lat points. Uses a spherical earth and radius "
"derived from the spheroid defined by the SRID. Faster than <xref linkend=\"ST_Distance_Spheroid\"/>, "
"but less accurate. PostGIS Versions prior to 1.5 only implemented for points."
msgstr ""
"二つの経度緯度ジオメトリの間の最短距離をメートル単位で返します。SRIDで定義された回転楕円体に由来する半"
"径となる球面を使います。<xref linkend=\"ST_Distance_Spheroid\"/>より高速ですが、精度が悪くなります。"
"PostGISの1.5より前の版ではポイント間の距離の計測だけを実装していました。"

#. Tag: para
#: reference_measure.xml:1758 reference_measure.xml:1807
#, no-c-format
msgid ""
"Availability: 1.5 - support for other geometry types besides points was introduced. Prior versions "
"only work with points."
msgstr ""
"Availability: 1.5 - ポイント以外のジオメトリが導入されました。以前の版ではポイントでのみ動作しました。"

#. Tag: para
#: reference_measure.xml:1759
#, no-c-format
msgid "Changed: 2.2.0 In prior versions this used to be called ST_Distance_Sphere"
msgstr "Changed: 2.2.0 前の版ではこの関数はST_Distance_Sphereと呼ばれていました。"

#. Tag: programlisting
#: reference_measure.xml:1766
#, no-c-format
msgid ""
"SELECT round(CAST(ST_DistanceSphere(ST_Centroid(the_geom), ST_GeomFromText('POINT(-118 38)',4326)) As "
"numeric),2) As dist_meters,\n"
"round(CAST(ST_Distance(ST_Transform(ST_Centroid(the_geom),32611),\n"
"                ST_Transform(ST_GeomFromText('POINT(-118 38)', 4326),32611)) As numeric),2) As "
"dist_utm11_meters,\n"
"round(CAST(ST_Distance(ST_Centroid(the_geom), ST_GeomFromText('POINT(-118 38)', 4326)) As numeric),5) "
"As dist_degrees,\n"
"round(CAST(ST_Distance(ST_Transform(the_geom,32611),\n"
"                ST_Transform(ST_GeomFromText('POINT(-118 38)', 4326),32611)) As numeric),2) As "
"min_dist_line_point_meters\n"
"FROM\n"
"        (SELECT ST_GeomFromText('LINESTRING(-118.584 38.374,-118.583 38.5)', 4326) As the_geom) as "
"foo;\n"
"         dist_meters | dist_utm11_meters | dist_degrees | min_dist_line_point_meters\n"
"        -------------+-------------------+--------------+----------------------------\n"
"                70424.47 |          70438.00 |      0.72900 |                   65871.18"
msgstr ""
"SELECT round(CAST(ST_DistanceSphere(ST_Centroid(the_geom), ST_GeomFromText('POINT(-118 38)',4326)) As "
"numeric),2) As dist_meters,\n"
"round(CAST(ST_Distance(ST_Transform(ST_Centroid(the_geom),32611),\n"
"                ST_Transform(ST_GeomFromText('POINT(-118 38)', 4326),32611)) As numeric),2) As "
"dist_utm11_meters,\n"
"round(CAST(ST_Distance(ST_Centroid(the_geom), ST_GeomFromText('POINT(-118 38)', 4326)) As numeric),5) "
"As dist_degrees,\n"
"round(CAST(ST_Distance(ST_Transform(the_geom,32611),\n"
"                ST_Transform(ST_GeomFromText('POINT(-118 38)', 4326),32611)) As numeric),2) As "
"min_dist_line_point_meters\n"
"FROM\n"
"        (SELECT ST_GeomFromText('LINESTRING(-118.584 38.374,-118.583 38.5)', 4326) As the_geom) as "
"foo;\n"
"         dist_meters | dist_utm11_meters | dist_degrees | min_dist_line_point_meters\n"
"        -------------+-------------------+--------------+----------------------------\n"
"                70424.47 |          70438.00 |      0.72900 |                   65871.18"

#. Tag: para
#: reference_measure.xml:1773
#, no-c-format
msgid ", <xref linkend=\"ST_Distance_Spheroid\"/>"
msgstr ", <xref linkend=\"ST_Distance_Spheroid\"/>"

#. Tag: refname
#: reference_measure.xml:1779
#, no-c-format
msgid "ST_DistanceSpheroid"
msgstr "ST_DistanceSpheroid"

#. Tag: refpurpose
#: reference_measure.xml:1781
#, no-c-format
msgid ""
"Returns the minimum distance between two lon/lat geometries given a particular spheroid. PostGIS "
"versions prior to 1.5 only support points."
msgstr ""
"指定した回転楕円体による、二つの経度緯度ジオメトリ間の最小距離を返します。PostGIS 1.5より前ではポイント"
"間の計測のみ対応していました。"

#. Tag: funcprototype
#: reference_measure.xml:1788
#, no-c-format
msgid ""
"<funcdef>float <function>ST_DistanceSpheroid</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>geomlonlatA</parameter></paramdef> <paramdef><type>geometry </type> <parameter>geomlonlatB</"
"parameter></paramdef> <paramdef><type>spheroid </type> <parameter>measurement_spheroid</parameter></"
"paramdef>"
msgstr ""
"<funcdef>float <function>ST_DistanceSpheroid</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>geomlonlatA</parameter></paramdef> <paramdef><type>geometry </type> <parameter>geomlonlatB</"
"parameter></paramdef> <paramdef><type>spheroid </type> <parameter>measurement_spheroid</parameter></"
"paramdef>"

#. Tag: para
#: reference_measure.xml:1800
#, no-c-format
msgid ""
"Returns minimum distance in meters between two lon/lat geometries given a particular spheroid. See the "
"explanation of spheroids given for <xref linkend=\"ST_Length_Spheroid\"/>. PostGIS version prior to "
"1.5 only support points."
msgstr ""
"指定した回転楕円体による、ふたつの経度緯度ジオメトリ間の最小距離を返します。回転楕円体の説明については "
"<xref linkend=\"ST_Length_Spheroid\"/>をご覧下さい。PostGIS 1.5より前ではポイント間の計測のみ対応してい"
"ました。"

#. Tag: para
#: reference_measure.xml:1804
#, no-c-format
msgid ""
"This function currently does not look at the SRID of a geometry and will always assume its represented "
"in the coordinates of the passed in spheroid. Prior versions of this function only support points."
msgstr ""
"この関数は現在のところ、ジオメトリのSRIDを見ずに、常に関数に渡される回転楕円体の座標で表現されていると"
"仮定します。以前の版ではポイント間の計測のみ対応していました。"

#. Tag: para
#: reference_measure.xml:1808
#, no-c-format
msgid "Changed: 2.2.0 In prior versions this used to be called ST_Distance_Spheroid"
msgstr "Changed: 2.2.0 前の版ではST_Distance_Spheroidと呼ばれていました。"

#. Tag: programlisting
#: reference_measure.xml:1815
#, no-c-format
msgid ""
"SELECT round(CAST(\n"
"                ST_DistanceSpheroid(ST_Centroid(the_geom), ST_GeomFromText('POINT(-118 38)',4326), "
"'SPHEROID[\"WGS 84\",6378137,298.257223563]')\n"
"                        As numeric),2) As dist_meters_spheroid,\n"
"                round(CAST(ST_DistanceSphere(ST_Centroid(the_geom), ST_GeomFromText('POINT(-118 "
"38)',4326)) As numeric),2) As dist_meters_sphere,\n"
"round(CAST(ST_Distance(ST_Transform(ST_Centroid(the_geom),32611),\n"
"                ST_Transform(ST_GeomFromText('POINT(-118 38)', 4326),32611)) As numeric),2) As "
"dist_utm11_meters\n"
"FROM\n"
"        (SELECT ST_GeomFromText('LINESTRING(-118.584 38.374,-118.583 38.5)', 4326) As the_geom) as "
"foo;\n"
" dist_meters_spheroid | dist_meters_sphere | dist_utm11_meters\n"
"----------------------+--------------------+-------------------\n"
"                         70454.92 |           70424.47 |          70438.00"
msgstr ""
"SELECT round(CAST(\n"
"                ST_DistanceSpheroid(ST_Centroid(the_geom), ST_GeomFromText('POINT(-118 38)',4326), "
"'SPHEROID[\"WGS 84\",6378137,298.257223563]')\n"
"                        As numeric),2) As dist_meters_spheroid,\n"
"                round(CAST(ST_DistanceSphere(ST_Centroid(the_geom), ST_GeomFromText('POINT(-118 "
"38)',4326)) As numeric),2) As dist_meters_sphere,\n"
"round(CAST(ST_Distance(ST_Transform(ST_Centroid(the_geom),32611),\n"
"                ST_Transform(ST_GeomFromText('POINT(-118 38)', 4326),32611)) As numeric),2) As "
"dist_utm11_meters\n"
"FROM\n"
"        (SELECT ST_GeomFromText('LINESTRING(-118.584 38.374,-118.583 38.5)', 4326) As the_geom) as "
"foo;\n"
" dist_meters_spheroid | dist_meters_sphere | dist_utm11_meters\n"
"----------------------+--------------------+-------------------\n"
"                         70454.92 |           70424.47 |          70438.00"

#. Tag: para
#: reference_measure.xml:1822
#, no-c-format
msgid ", <xref linkend=\"ST_DistanceSphere\"/>"
msgstr ", <xref linkend=\"ST_DistanceSphere\"/>"

#. Tag: refname
#: reference_measure.xml:1828
#, no-c-format
msgid "ST_DFullyWithin"
msgstr "ST_DFullyWithin"

#. Tag: refpurpose
#: reference_measure.xml:1830
#, no-c-format
msgid "Returns true if all of the geometries are within the specified distance of one another"
msgstr "全てのジオメトリが指定したジオメトリから指定した距離内にある場合にTRUEを返します。"

#. Tag: funcprototype
#: reference_measure.xml:1836
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_DFullyWithin</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef> <paramdef><type>double precision </type> <parameter>distance</parameter></paramdef>"
msgstr ""
"<funcdef>boolean <function>ST_DFullyWithin</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef> <paramdef><type>double precision </type> <parameter>distance</parameter></paramdef>"

#. Tag: para
#: reference_measure.xml:1854
#, no-c-format
msgid ""
"Returns true if the geometries is fully within the specified distance of one another. The distance is "
"specified in units defined by the spatial reference system of the geometries. For this function to "
"make sense, the source geometries must both be of the same coordinate projection, having the same SRID."
msgstr ""
"全てのジオメトリが指定したジオメトリから指定した距離内にある場合にTRUEを返します。距離はジオメトリの空"
"間参照系で定義されている単位になります。この関数が意味のあるものにするためには、与えられるジオメトリは"
"両方とも同じ座標系で同じSRIDを持つ必要があります。"

#. Tag: programlisting
#: reference_measure.xml:1871
#, no-c-format
msgid ""
"postgis=# SELECT ST_DFullyWithin(geom_a, geom_b, 10) as DFullyWithin10, ST_DWithin(geom_a, geom_b, 10) "
"as DWithin10, ST_DFullyWithin(geom_a, geom_b, 20) as DFullyWithin20 from \n"
"                (select ST_GeomFromText('POINT(1 1)') as geom_a,ST_GeomFromText('LINESTRING(1 5, 2 7, "
"1 9, 14 12)') as geom_b) t1;\n"
"   \n"
"-----------------\n"
" DFullyWithin10 | DWithin10 | DFullyWithin20 |\n"
"---------------+----------+---------------+\n"
" f             | t        | t             |"
msgstr ""
"postgis=# SELECT ST_DFullyWithin(geom_a, geom_b, 10) as DFullyWithin10, ST_DWithin(geom_a, geom_b, 10) "
"as DWithin10, ST_DFullyWithin(geom_a, geom_b, 20) as DFullyWithin20 from \n"
"                (select ST_GeomFromText('POINT(1 1)') as geom_a,ST_GeomFromText('LINESTRING(1 5, 2 7, "
"1 9, 14 12)') as geom_b) t1;\n"
"   \n"
"-----------------\n"
" DFullyWithin10 | DWithin10 | DFullyWithin20 |\n"
"---------------+----------+---------------+\n"
" f             | t        | t             |"

#. Tag: para
#: reference_measure.xml:1877
#, no-c-format
msgid ", <xref linkend=\"ST_DWithin\"/>"
msgstr ", <xref linkend=\"ST_DWithin\"/>"

#. Tag: refname
#: reference_measure.xml:1883
#, no-c-format
msgid "ST_DWithin"
msgstr "ST_DWithin"

#. Tag: refpurpose
#: reference_measure.xml:1885
#, no-c-format
msgid ""
"Returns true if the geometries are within the specified distance of one another. For geometry units "
"are in those of spatial reference and For geography units are in meters and measurement is defaulted "
"to use_spheroid=true (measure around spheroid), for faster check, use_spheroid=false to measure along "
"sphere."
msgstr ""
"ジオメトリが指定したジオメトリから指定した距離内にある場合にTRUEを返します。ジオメトリについては、距離"
"は空間参照系で定義されている単位になります。ジオグラフィについては、メートル単位で、デフォルトでは"
"use_spheroid=true　(回転楕円体を使った計算)となり、速いチェックをするにはuse_spheroid=falseとして球面を"
"使って計算します。"

#. Tag: funcsynopsis
#: reference_measure.xml:1891
#, no-c-format
msgid ""
"<funcprototype> <funcdef>boolean <function>ST_DWithin</function></funcdef> <paramdef><type>geometry </"
"type> <parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef> <paramdef><type>double precision </type> <parameter>distance_of_srid</parameter></paramdef> "
"</funcprototype> <funcprototype> <funcdef>boolean <function>ST_DWithin</function></funcdef> "
"<paramdef><type>geography </type> <parameter>gg1</parameter></paramdef> <paramdef><type>geography </"
"type> <parameter>gg2</parameter></paramdef> <paramdef><type>double precision </type> "
"<parameter>distance_meters</parameter></paramdef> </funcprototype> <funcprototype> <funcdef>boolean "
"<function>ST_DWithin</function></funcdef> <paramdef><type>geography </type> <parameter>gg1</"
"parameter></paramdef> <paramdef><type>geography </type> <parameter>gg2</parameter></paramdef> "
"<paramdef><type>double precision </type> <parameter>distance_meters</parameter></paramdef> "
"<paramdef><type>boolean </type> <parameter>use_spheroid</parameter></paramdef> </funcprototype>"
msgstr ""
"<funcprototype> <funcdef>boolean <function>ST_DWithin</function></funcdef> <paramdef><type>geometry </"
"type> <parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef> <paramdef><type>double precision </type> <parameter>distance_of_srid</parameter></paramdef> "
"</funcprototype> <funcprototype> <funcdef>boolean <function>ST_DWithin</function></funcdef> "
"<paramdef><type>geography </type> <parameter>gg1</parameter></paramdef> <paramdef><type>geography </"
"type> <parameter>gg2</parameter></paramdef> <paramdef><type>double precision </type> "
"<parameter>distance_meters</parameter></paramdef> </funcprototype> <funcprototype> <funcdef>boolean "
"<function>ST_DWithin</function></funcdef> <paramdef><type>geography </type> <parameter>gg1</"
"parameter></paramdef> <paramdef><type>geography </type> <parameter>gg2</parameter></paramdef> "
"<paramdef><type>double precision </type> <parameter>distance_meters</parameter></paramdef> "
"<paramdef><type>boolean </type> <parameter>use_spheroid</parameter></paramdef> </funcprototype>"

#. Tag: para
#: reference_measure.xml:1936
#, no-c-format
msgid "Returns true if the geometries are within the specified distance of one another."
msgstr "ジオメトリが指定したジオメトリから指定した距離内にある場合にTRUEを返します。"

#. Tag: para
#: reference_measure.xml:1938
#, no-c-format
msgid ""
"For Geometries: The distance is specified in units defined by the spatial reference system of the "
"geometries. For this function to make sense, the source geometries must both be of the same coordinate "
"projection, having the same SRID."
msgstr ""
"ジオメトリについては、距離は空間参照系で定義されている単位になります。この関数が意味を持つためには、与"
"えられるジオメトリは両方とも同じ座標系で同じSRIDを持つ必要があります。"

#. Tag: para
#: reference_measure.xml:1943
#, no-c-format
msgid ""
"For geography units are in meters and measurement is defaulted to use_spheroid=true, for faster check, "
"use_spheroid=false to measure along sphere."
msgstr ""
"ジオグラフィについては、メートル単位で、デフォルトではuse_spheroid=true　(回転楕円体を使った計算)とな"
"り、速いチェックをするにはuse_spheroid=falseとして球面を使って計算します。"

#. Tag: para
#: reference_measure.xml:1953
#, no-c-format
msgid ""
"Prior to 1.3, ST_Expand was commonly used in conjunction with &amp;&amp; and ST_Distance to achieve "
"the same effect and in pre-1.3.4 this function was basically short-hand for that construct. From "
"1.3.4, ST_DWithin uses a more short-circuit distance function which should make it more efficient than "
"prior versions for larger buffer regions."
msgstr ""
"1.3より前では、ST_Expandは一般的に&amp;&amp;とST_Distanceとを併用して、同じ効果を得ていました。1.3.4よ"
"り前では、この関数は、基本的にこのやり方の短縮版でした。1.3.4から、ST_DWithinは、大きなバッファ領域につ"
"いて前の版より効果的になる、より短縮した距離関数を使っています。"

#. Tag: para
#: reference_measure.xml:1959
#, no-c-format
msgid "Use ST_3DDWithin if you have 3D geometries."
msgstr "3次元ジオメトリの場合にはST_3DDWithinを使います。"

#. Tag: para
#: reference_measure.xml:1962
#, no-c-format
msgid "Availability: 1.5.0 support for geography was introduced"
msgstr "Availability: 1.5.0 ジオグラフィ対応が導入されました。"

#. Tag: para
#: reference_measure.xml:1963
#, no-c-format
msgid ""
"Enhanced: 2.1.0 improved speed for geography. See <ulink url=\"http://blog.opengeo.org/2012/07/12/"
"making-geography-faster/\">Making Geography faster</ulink> for details."
msgstr ""
"Enhanced: 2.1.0で、ジオグラフィでの速度が向上しました。詳細については<ulink url=\"http://blog.opengeo."
"org/2012/07/12/making-geography-faster/\">Making Geography faster</ulink>を参照して下さい。"

#. Tag: para
#: reference_measure.xml:1964
#, no-c-format
msgid "Enhanced: 2.1.0 support for curved geometries was introduced."
msgstr "Enhanced: 2.1.0 曲線ジオメトリ対応が導入されました。"

#. Tag: programlisting
#: reference_measure.xml:1969
#, no-c-format
msgid ""
"--Find the nearest hospital to each school\n"
"--that is within 3000 units of the school.\n"
"-- We do an ST_DWithin search to utilize indexes to limit our search list\n"
"-- that the non-indexable ST_Distance needs to process\n"
"--If the units of the spatial reference is meters then units would be meters\n"
"SELECT DISTINCT ON (s.gid) s.gid, s.school_name, s.the_geom, h.hospital_name\n"
"        FROM schools s\n"
"                LEFT JOIN hospitals h ON ST_DWithin(s.the_geom, h.the_geom, 3000)\n"
"        ORDER BY s.gid, ST_Distance(s.the_geom, h.the_geom);\n"
"\n"
"--The schools with no close hospitals\n"
"--Find all schools with no hospital within 3000 units\n"
"--away from the school.  Units is in units of spatial ref (e.g. meters, feet, degrees)\n"
"SELECT s.gid, s.school_name\n"
"        FROM schools s\n"
"                LEFT JOIN hospitals h ON ST_DWithin(s.the_geom, h.the_geom, 3000)\n"
"        WHERE h.gid IS NULL;"
msgstr ""
"-- それぞれの学校から3000単位以内の、最も近い病院の探索。\n"
"-- インデクスを使用しないST_Distanceの処理に渡す学校リストを制限するために、\n"
"-- ST_DWithin探索でインデクスを使います。\n"
"-- 空間参照系の単位がメートルの場合は、単位はメートルになります。\n"
"SELECT DISTINCT ON (s.gid) s.gid, s.school_name, s.the_geom, h.hospital_name\n"
"        FROM schools s\n"
"                LEFT JOIN hospitals h ON ST_DWithin(s.the_geom, h.the_geom, 3000)\n"
"        ORDER BY s.gid, ST_Distance(s.the_geom, h.the_geom);\n"
"\n"
"-- 病院が近くに無い学校の探索。\n"
"-- 病院が3000単位内に無い全ての学校を探索します。\n"
"-- 単位は空間参照系の単位です(メートル、フィート、度)\n"
"SELECT s.gid, s.school_name\n"
"        FROM schools s\n"
"                LEFT JOIN hospitals h ON ST_DWithin(s.the_geom, h.the_geom, 3000)\n"
"        WHERE h.gid IS NULL;"

#. Tag: para
#: reference_measure.xml:1975
#, no-c-format
msgid ", <xref linkend=\"ST_Expand\"/>"
msgstr ", <xref linkend=\"ST_Expand\"/>"

#. Tag: refname
#: reference_measure.xml:1981
#, no-c-format
msgid "ST_Equals"
msgstr "ST_Equals"

#. Tag: refpurpose
#: reference_measure.xml:1983
#, no-c-format
msgid "Returns true if the given geometries represent the same geometry. Directionality is ignored."
msgstr "与えられたジオメトリ表現が同じ場合にTRUEを返します。方向は無視されます。"

#. Tag: funcprototype
#: reference_measure.xml:1989
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_Equals</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>A</parameter></paramdef> <paramdef><type>geometry </type> <parameter>B</parameter></"
"paramdef>"
msgstr ""
"<funcdef>boolean <function>ST_Equals</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>A</parameter></paramdef> <paramdef><type>geometry </type> <parameter>B</parameter></"
"paramdef>"

#. Tag: para
#: reference_measure.xml:2000
#, no-c-format
msgid ""
"Returns TRUE if the given Geometries are \"spatially equal\". Use this for a 'better' answer than '='. "
"Note by spatially equal we mean ST_Within(A,B) = true and ST_Within(B,A) = true and also mean ordering "
"of points can be different but represent the same geometry structure. To verify the order of points is "
"consistent, use ST_OrderingEquals (it must be noted ST_OrderingEquals is a little more stringent than "
"simply verifying order of points are the same)."
msgstr ""
"与えられたジオメトリ表現が「空間的に同じ」場合にTRUEを返します。'='よりも「よりよい」答を得るために使い"
"ます。空間的に同じということは、ST_Within(A,B) = trueかつST_Within(B,A) = trueとなります。また、ポイン"
"トの順序が違ってもジオメトリ構造ならtrueとなります。構成ポイントの順序の確認にはST_OrderingEqualsを使用"
"します (ST_OrderingEqualsはポイントのオーダが同じかを確認するよりも若干厳しくなります)。"

#. Tag: para
#: reference_measure.xml:2009
#, no-c-format
msgid "This function will return false if either geometry is invalid even if they are binary equal."
msgstr ""
"この関数は、どちらのジオメトリも不正である場合は、バイナリで同じ場合であっても、FALSEを返します。"

#. Tag: para
#: reference_measure.xml:2012
#, no-c-format
msgid "&sfs_compliant; s2.1.1.2"
msgstr "&sfs_compliant; s2.1.1.2"

#. Tag: para
#: reference_measure.xml:2013
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.24"
msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.24"

#. Tag: programlisting
#: reference_measure.xml:2019
#, no-c-format
msgid ""
"SELECT ST_Equals(ST_GeomFromText('LINESTRING(0 0, 10 10)'),\n"
"                ST_GeomFromText('LINESTRING(0 0, 5 5, 10 10)'));\n"
" st_equals\n"
"-----------\n"
" t\n"
"(1 row)\n"
"\n"
"SELECT ST_Equals(ST_Reverse(ST_GeomFromText('LINESTRING(0 0, 10 10)')),\n"
"                ST_GeomFromText('LINESTRING(0 0, 5 5, 10 10)'));\n"
" st_equals\n"
"-----------\n"
" t\n"
"(1 row)"
msgstr ""
"SELECT ST_Equals(ST_GeomFromText('LINESTRING(0 0, 10 10)'),\n"
"                ST_GeomFromText('LINESTRING(0 0, 5 5, 10 10)'));\n"
" st_equals\n"
"-----------\n"
" t\n"
"(1 row)\n"
"\n"
"SELECT ST_Equals(ST_Reverse(ST_GeomFromText('LINESTRING(0 0, 10 10)')),\n"
"                ST_GeomFromText('LINESTRING(0 0, 5 5, 10 10)'));\n"
" st_equals\n"
"-----------\n"
" t\n"
"(1 row)"

#. Tag: para
#: reference_measure.xml:2025
#, no-c-format
msgid ""
", <xref linkend=\"ST_OrderingEquals\"/>, <xref linkend=\"ST_Reverse\"/>, <xref linkend=\"ST_Within\"/>"
msgstr ""
", <xref linkend=\"ST_OrderingEquals\"/>, <xref linkend=\"ST_Reverse\"/>, <xref linkend=\"ST_Within\"/>"

#. Tag: refname
#: reference_measure.xml:2032
#, no-c-format
msgid "ST_HasArc"
msgstr "ST_HasArc"

#. Tag: refpurpose
#: reference_measure.xml:2034
#, no-c-format
msgid ""
"<refpurpose>Returns true if a geometry or geometry collection contains a circular string</refpurpose>"
msgstr ""
"<refpurpose>ジオメトリまたはジオメトリコレクションが曲線ストリングを含む場合にTRUEを返します。</"
"refpurpose>"

#. Tag: funcprototype
#: reference_measure.xml:2039
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_HasArc</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>geomA</parameter></paramdef>"
msgstr ""
"<funcdef>boolean <function>ST_HasArc</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>geomA</parameter></paramdef>"

#. Tag: para
#: reference_measure.xml:2049
#, no-c-format
msgid "<para>Returns true if a geometry or geometry collection contains a circular string</para>"
msgstr "<para>ジオメトリまたはジオメトリコレクションが曲線ストリングを含む場合にTRUEを返します。</para>"

#. Tag: para
#: reference_measure.xml:2051
#, no-c-format
msgid "Availability: 1.2.3?"
msgstr "Availability: 1.2.3?"

#. Tag: programlisting
#: reference_measure.xml:2060
#, no-c-format
msgid ""
"SELECT ST_HasArc(ST_Collect('LINESTRING(1 2, 3 4, 5 6)', 'CIRCULARSTRING(1 1, 2 3, 4 5, 6 7, 5 6)'));\n"
"                st_hasarc\n"
"                --------\n"
"                t"
msgstr ""
"SELECT ST_HasArc(ST_Collect('LINESTRING(1 2, 3 4, 5 6)', 'CIRCULARSTRING(1 1, 2 3, 4 5, 6 7, 5 6)'));\n"
"                st_hasarc\n"
"                --------\n"
"                t"

#. Tag: para
#: reference_measure.xml:2067
#, no-c-format
msgid ", <xref linkend=\"ST_LineToCurve\"/>"
msgstr ", <xref linkend=\"ST_LineToCurve\"/>"

#. Tag: refname
#: reference_measure.xml:2073
#, no-c-format
msgid "<refname>ST_Intersects</refname>"
msgstr "<refname>ST_Intersects</refname>"

#. Tag: refpurpose
#: reference_measure.xml:2075
#, no-c-format
msgid ""
"Returns TRUE if the Geometries/Geography \"spatially intersect in 2D\" - (share any portion of space) "
"and FALSE if they don't (they are Disjoint). For geography -- tolerance is 0.00001 meters (so any "
"points that close are considered to intersect)"
msgstr ""
"ジオメトリ/ジオグラフィが「2次元空間で空間的にインタセクトする」 (空間に共有部分がある)場合にTRUEを返し"
"ます。そうでない (非接続)場合はFALSEを返します。ジオグラフィについては、許容量は0.00001メートルです (近"
"い点はインタセクトと考えられてしまいます)。"

#. Tag: funcsynopsis
#: reference_measure.xml:2081
#, no-c-format
msgid ""
"<funcprototype> <funcdef>boolean <function>ST_Intersects</function></funcdef> <paramdef> "
"<type>geometry</type> <parameter>geomA</parameter> </paramdef> <paramdef> <type>geometry</type> "
"<parameter>geomB</parameter> </paramdef> </funcprototype> <funcprototype> <funcdef>boolean "
"<function>ST_Intersects</function></funcdef> <paramdef> <type>geography</type> <parameter>geogA</"
"parameter> </paramdef> <paramdef> <type>geography</type> <parameter>geogB</parameter> </paramdef> </"
"funcprototype>"
msgstr ""
"<funcprototype> <funcdef>boolean <function>ST_Intersects</function></funcdef> <paramdef> "
"<type>geometry</type> <parameter>geomA</parameter> </paramdef> <paramdef> <type>geometry</type> "
"<parameter>geomB</parameter> </paramdef> </funcprototype> <funcprototype> <funcdef>boolean "
"<function>ST_Intersects</function></funcdef> <paramdef> <type>geography</type> <parameter>geogA</"
"parameter> </paramdef> <paramdef> <type>geography</type> <parameter>geogB</parameter> </paramdef> </"
"funcprototype>"

#. Tag: para
#: reference_measure.xml:2108
#, no-c-format
msgid ""
"If a geometry or geography shares any portion of space then they intersect. For geography -- tolerance "
"is 0.00001 meters (so any points that are close are considered to intersect)"
msgstr ""
"ジオメトリ/ジオグラフィが空間に共有部分がある場合には、インタセクトしています。ジオグラフィでは許容誤差"
"が0.00001メートルです (近い点はインタセクトと考えられてしまいます)。"

#. Tag: para
#: reference_measure.xml:2115
#, no-c-format
msgid ""
"Do not call with a <varname>GEOMETRYCOLLECTION</varname> as an argument for geometry version. The "
"geography version supports GEOMETRYCOLLECTION since its a thin wrapper around distance implementation."
msgstr ""
"ジオメトリ版では、<varname>GEOMETRYCOLLECTION</varname>を引数にして呼ばないでください。ジオグラフィ版で"
"は、距離計測の実装にかぶせられる薄いラッパですので、GEOMETRYCOLLECTIONに対応しています。"

#. Tag: para
#: reference_measure.xml:2119
#, no-c-format
msgid "Performed by the GEOS module (for geometry), geography is native"
msgstr "ジオメトリについては、GEOSモジュールで実現しています。ジオグラフィについてはネイティブです。"

#. Tag: para
#: reference_measure.xml:2120
#, no-c-format
msgid "Availability: 1.5 support for geography was introduced."
msgstr "Availability: 1.5 ジオグラフィ対応が導入されました。"

#. Tag: para
#: reference_measure.xml:2127
#, no-c-format
msgid ""
"For geography, this function has a distance tolerance of about 0.00001 meters and uses the sphere "
"rather than spheroid calculation."
msgstr ""
"ジオグラフィでは、この関数は0.00001メートルの距離許容を持ち、回転楕円体計算でなく球面を使います。"

#. Tag: para
#: reference_measure.xml:2134
#, no-c-format
msgid "&sfs_compliant; s2.1.1.2 //s2.1.13.3 - ST_Intersects(g1, g2 ) --&gt; Not (ST_Disjoint(g1, g2 ))"
msgstr "&sfs_compliant; s2.1.1.2 //s2.1.13.3 - ST_Intersects(g1, g2 ) --&gt; Not (ST_Disjoint(g1, g2 ))"

#. Tag: para
#: reference_measure.xml:2137
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.27"
msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.27"

#. Tag: programlisting
#: reference_measure.xml:2142
#, no-c-format
msgid ""
"SELECT ST_Intersects('POINT(0 0)'::geometry, 'LINESTRING ( 2 0, 0 2 )'::geometry);\n"
" st_intersects\n"
"---------------\n"
" f\n"
"(1 row)\n"
"SELECT ST_Intersects('POINT(0 0)'::geometry, 'LINESTRING ( 0 0, 0 2 )'::geometry);\n"
" st_intersects\n"
"---------------\n"
" t\n"
"(1 row)"
msgstr ""
"SELECT ST_Intersects('POINT(0 0)'::geometry, 'LINESTRING ( 2 0, 0 2 )'::geometry);\n"
" st_intersects\n"
"---------------\n"
" f\n"
"(1 row)\n"
"SELECT ST_Intersects('POINT(0 0)'::geometry, 'LINESTRING ( 0 0, 0 2 )'::geometry);\n"
" st_intersects\n"
"---------------\n"
" t\n"
"(1 row)"

#. Tag: programlisting
#: reference_measure.xml:2146
#, no-c-format
msgid ""
"SELECT ST_Intersects(\n"
"                ST_GeographyFromText('SRID=4326;LINESTRING(-43.23456 72.4567,-43.23456 72.4568)'),\n"
"                ST_GeographyFromText('SRID=4326;POINT(-43.23456 72.4567772)')\n"
"                );\n"
"\n"
" st_intersects\n"
"---------------\n"
"t"
msgstr ""
"SELECT ST_Intersects(\n"
"                ST_GeographyFromText('SRID=4326;LINESTRING(-43.23456 72.4567,-43.23456 72.4568)'),\n"
"                ST_GeographyFromText('SRID=4326;POINT(-43.23456 72.4567772)')\n"
"                );\n"
"\n"
" st_intersects\n"
"---------------\n"
"t"

#. Tag: para
#: reference_measure.xml:2150
#, no-c-format
msgid ", <xref linkend=\"ST_Disjoint\"/>"
msgstr ", <xref linkend=\"ST_Disjoint\"/>"

#. Tag: refname
#: reference_measure.xml:2155
#, no-c-format
msgid "ST_Length"
msgstr "ST_Length"

#. Tag: refpurpose
#: reference_measure.xml:2157
#, no-c-format
msgid ""
"Returns the 2D length of the geometry if it is a LineString or MultiLineString. geometry are in units "
"of spatial reference and geography are in meters (default spheroid)"
msgstr ""
"ジオメトリがLINESTRINGまたはMULTILINESTRINGの場合には、それらの2次元長を返します。ジオメトリでは、単位"
"は空間参照系の単位です。ジオグラフィでは、メートル単位です (回転楕円体がデフォルトです)。"

#. Tag: funcsynopsis
#: reference_measure.xml:2160
#, no-c-format
msgid ""
"<funcprototype> <funcdef>float <function>ST_Length</function></funcdef> <paramdef><type>geometry </"
"type><parameter>a_2dlinestring</parameter></paramdef> </funcprototype> <funcprototype> <funcdef>float "
"<function>ST_Length</function></funcdef> <paramdef><type>geography </type><parameter>geog</parameter></"
"paramdef> <paramdef choice=\"opt\"><type>boolean </type><parameter>use_spheroid=true</parameter></"
"paramdef> </funcprototype>"
msgstr ""
"<funcprototype> <funcdef>float <function>ST_Length</function></funcdef> <paramdef><type>geometry </"
"type><parameter>a_2dlinestring</parameter></paramdef> </funcprototype> <funcprototype> <funcdef>float "
"<function>ST_Length</function></funcdef> <paramdef><type>geography </type><parameter>geog</parameter></"
"paramdef> <paramdef choice=\"opt\"><type>boolean </type><parameter>use_spheroid=true</parameter></"
"paramdef> </funcprototype>"

#. Tag: para
#: reference_measure.xml:2175
#, no-c-format
msgid ""
"For geometry: Returns the 2D Cartesian length of the geometry if it is a LineString, MultiLineString, "
"ST_Curve, ST_MultiCurve. 0 is returned for areal geometries. For areal geometries use <xref linkend="
"\"ST_Perimeter\"/>. For geometry types, units for length measures are specified by the spatial "
"reference system of the geometry."
msgstr ""
"ジオメトリについては、LINESTRING, MULTILINESTRING, ST_Curve, ST_MultiCurveの場合には、ジオメトリの2次元"
"デカルト距離を返します。面ジオメトリに対しては0を返します。面ジオメトリに対しては<xref linkend="
"\"ST_Perimeter\"/>を使います。計測単位はジオメトリの空間参照系の単位になります。ジオグラフィについて"
"は、領域ジオメトリに対する周囲長関数としての働きもします。"

#. Tag: para
#: reference_measure.xml:2178
#, no-c-format
msgid ""
"For geography types, the calculations are performed using the inverse geodesic problem, where length "
"units are in meters. If PostGIS is compiled with PROJ version 4.8.0 or later, the spheroid is "
"specified by the SRID, otherwise it is exclusive to WGS84. If <varname>use_spheroid=false</varname>, "
"then calculations will approximate a sphere instead of a spheroid."
msgstr ""
"ジオグラフィに対しては、測地線の逆問題を使って計算し、長さの単位はメートルです。PostGISをPROJ 4.8.0以上"
"でコンパイルしているなら、回転楕円体面はSRIDで指定されたものですが、そうでなければ、WGS84に限定されま"
"す。<varname>use_spheroid=false</varname>とすると、回転楕円体面でなく近似する球面で計算します。"

#. Tag: para
#: reference_measure.xml:2182
#, no-c-format
msgid ""
"Currently for geometry this is an alias for ST_Length2D, but this may change to support higher "
"dimensions."
msgstr "現在は、ジオメトリに対してはST_Length2Dの別名ですが、高次元対応に変更されるかも知れません。"

#. Tag: para
#: reference_measure.xml:2183
#, no-c-format
msgid ""
"Changed: 2.0.0 Breaking change -- in prior versions applying this to a MULTI/POLYGON of type geography "
"would give you the perimeter of the POLYGON/MULTIPOLYGON. In 2.0.0 this was changed to return 0 to be "
"in line with geometry behavior. Please use ST_Perimeter if you want the perimeter of a polygon"
msgstr ""
"Changed: 2.0.0 大幅な変更 -- 以前の版ではジオグラフィのPOLYGONやMULTIPOLYGONへの適用によってPOLYGONや"
"MULTIPOLYGONの周囲長を返しました。2.0.0版ではジオメトリの挙動に従うため0を返すように変更しました。ポリ"
"ゴンの周囲長を求める場合は、ST_Perimeterを使います。"

#. Tag: para
#: reference_measure.xml:2185
#, no-c-format
msgid ""
"For geography measurement defaults spheroid measurement. To use the faster less accurate sphere use "
"ST_Length(gg,false);"
msgstr ""
"ジオグラフィに対しては、回転楕円体面での計測を行います。速くなる反面精度が下がる球面を使用するには、"
"ST_Length(gg,false)；とします。"

#. Tag: para
#: reference_measure.xml:2186 reference_measure.xml:2649
#, no-c-format
msgid "&sfs_compliant; s2.1.5.1"
msgstr "&sfs_compliant; s2.1.5.1"

#. Tag: para
#: reference_measure.xml:2187
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 7.1.2, 9.3.4"
msgstr "&sqlmm_compliant; SQL-MM 3: 7.1.2, 9.3.4"

#. Tag: para
#: reference_measure.xml:2188
#, no-c-format
msgid "Availability: 1.5.0 geography support was introduced in 1.5."
msgstr "Availability: 1.5.0 ジオグラフィt対応が導入されました。"

#. Tag: para
#: reference_measure.xml:2194
#, no-c-format
msgid ""
"Return length in feet for line string. Note this is in feet because EPSG:2249 is Massachusetts State "
"Plane Feet"
msgstr ""
"ラインストリングのフィート単位の長さを返します。EPSG:2249はフィート単位のマサチューセッツ州平面なので、"
"フィート単位になることに注意して下さい。"

#. Tag: programlisting
#: reference_measure.xml:2196
#, no-c-format
msgid ""
"SELECT ST_Length(ST_GeomFromText('LINESTRING(743238 2967416,743238 2967450,743265 2967450,\n"
"743265.625 2967416,743238 2967416)',2249));\n"
"st_length\n"
"---------\n"
" 122.630744000095\n"
"\n"
"\n"
"--Transforming WGS 84 LineString to Massachusetts state plane meters\n"
"SELECT ST_Length(\n"
"        ST_Transform(\n"
"                ST_GeomFromEWKT('SRID=4326;LINESTRING(-72.1260 42.45, -72.1240 42.45666, -72.123 "
"42.1546)'),\n"
"                26986\n"
"        )\n"
");\n"
"st_length\n"
"---------\n"
"34309.4563576191"
msgstr ""
"SELECT ST_Length(ST_GeomFromText('LINESTRING(743238 2967416,743238 2967450,743265 2967450,\n"
"743265.625 2967416,743238 2967416)',2249));\n"
"st_length\n"
"---------\n"
" 122.630744000095\n"
"\n"
"\n"
"-- WGS84ラインストリングをメートル単位のマサチューセッツ平面に変換\n"
"SELECT ST_Length(\n"
"        ST_Transform(\n"
"                ST_GeomFromEWKT('SRID=4326;LINESTRING(-72.1260 42.45, -72.1240 42.45666, -72.123 "
"42.1546)'),\n"
"                26986\n"
"        )\n"
");\n"
"st_length\n"
"---------\n"
"34309.4563576191"

#. Tag: para
#: reference_measure.xml:2200
#, no-c-format
msgid "Return length of WGS 84 geography line"
msgstr "WGS84ジオグラフィのラインの長さを返します。"

#. Tag: programlisting
#: reference_measure.xml:2201
#, no-c-format
msgid ""
"-- default calculation is using a sphere rather than spheroid\n"
"SELECT ST_Length(the_geog) As length_spheroid,  ST_Length(the_geog,false) As length_sphere\n"
"FROM (SELECT ST_GeographyFromText(\n"
"'SRID=4326;LINESTRING(-72.1260 42.45, -72.1240 42.45666, -72.123 42.1546)') As the_geog)\n"
" As foo;\n"
" length_spheroid  |  length_sphere\n"
"------------------+------------------\n"
" 34310.5703627288 | 34346.2060960742"
msgstr ""
"-- デフォルトでは回転楕円体面でなく球面を使って計算します\n"
"SELECT ST_Length(the_geog) As length_spheroid,  ST_Length(the_geog,false) As length_sphere\n"
"FROM (SELECT ST_GeographyFromText(\n"
"'SRID=4326;LINESTRING(-72.1260 42.45, -72.1240 42.45666, -72.123 42.1546)') As the_geog)\n"
" As foo;\n"
" length_spheroid  |  length_sphere\n"
"------------------+------------------\n"
" 34310.5703627288 | 34346.2060960742"

#. Tag: para
#: reference_measure.xml:2205
#, no-c-format
msgid ""
", <xref linkend=\"ST_GeomFromEWKT\"/>, <xref linkend=\"ST_Length_Spheroid\"/>, <xref linkend="
"\"ST_Perimeter\"/>, <xref linkend=\"ST_Transform\"/>"
msgstr ""
", <xref linkend=\"ST_GeomFromEWKT\"/>, <xref linkend=\"ST_Length_Spheroid\"/>, <xref linkend="
"\"ST_Perimeter\"/>, <xref linkend=\"ST_Transform\"/>"

#. Tag: refname
#: reference_measure.xml:2211
#, no-c-format
msgid "ST_Length2D"
msgstr "ST_Length2D"

#. Tag: refpurpose
#: reference_measure.xml:2213
#, no-c-format
msgid ""
"<refpurpose>Returns the 2-dimensional length of the geometry if it is a linestring or multi-"
"linestring. This is an alias for <varname>ST_Length</varname></refpurpose>"
msgstr ""
"<refpurpose>LINESTRINGまたはMULTILINESTRINGに対して、ジオメトリの2次元長を返します。これは"
"<varname>ST_Length</varname>の別名です。</refpurpose>"

#. Tag: funcprototype
#: reference_measure.xml:2219
#, no-c-format
msgid ""
"<funcdef>float <function>ST_Length2D</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>a_2dlinestring</parameter></paramdef>"
msgstr ""
"<funcdef>float <function>ST_Length2D</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>a_2dlinestring</parameter></paramdef>"

#. Tag: para
#: reference_measure.xml:2229
#, no-c-format
msgid ""
"<para>Returns the 2-dimensional length of the geometry if it is a linestring or multi-linestring. This "
"is an alias for <varname>ST_Length</varname></para>"
msgstr ""
"<para>LINESTRINGまたはMULTILINESTRINGに対して、ジオメトリの2次元長を返します。これは"
"<varname>ST_Length</varname>の別名です。</para>"

#. Tag: para
#: reference_measure.xml:2238
#, no-c-format
msgid ", <xref linkend=\"ST_3DLength\"/>"
msgstr ", <xref linkend=\"ST_3DLength\"/>"

#. Tag: refname
#: reference_measure.xml:2244
#, no-c-format
msgid "ST_3DLength"
msgstr "ST_3DLength"

#. Tag: refpurpose
#: reference_measure.xml:2246
#, no-c-format
msgid ""
"Returns the 3-dimensional or 2-dimensional length of the geometry if it is a linestring or multi-"
"linestring."
msgstr "LINESTRINGまたはMULTILINESTRINGに対して、ジオメトリの3次元長または2次元長を返します。"

#. Tag: funcprototype
#: reference_measure.xml:2252
#, no-c-format
msgid ""
"<funcdef>float <function>ST_3DLength</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>a_3dlinestring</parameter></paramdef>"
msgstr ""
"<funcdef>float <function>ST_3DLength</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>a_3dlinestring</parameter></paramdef>"

#. Tag: para
#: reference_measure.xml:2262
#, no-c-format
msgid ""
"Returns the 3-dimensional or 2-dimensional length of the geometry if it is a linestring or multi-"
"linestring. For 2-d lines it will just return the 2-d length (same as ST_Length and ST_Length2D)"
msgstr ""
"LINESTRINGまたはMULTILINESTRINGに対して、ジオメトリの3次元長または2次元長を返します。2次元ラインについ"
"ては、2次元長を返します (ST_LengthやST_Length2Dと同じです)。"

#. Tag: para
#: reference_measure.xml:2265
#, no-c-format
msgid "Changed: 2.0.0 In prior versions this used to be called ST_Length3D"
msgstr "Changed: 2.0.0 以前の版ではST_Length3Dと呼ばれていました。"

#. Tag: para
#: reference_measure.xml:2272
#, no-c-format
msgid ""
"Return length in feet for a 3D cable. Note this is in feet because EPSG:2249 is Massachusetts State "
"Plane Feet"
msgstr ""
"3次元ケーブルの長さをフィート単位で返します。EPSG:2249はフィート単位のマサチューセッツ州平面なので、"
"フィート単位になることに注意して下さい。"

#. Tag: programlisting
#: reference_measure.xml:2274
#, no-c-format
msgid ""
"SELECT ST_3DLength(ST_GeomFromText('LINESTRING(743238 2967416 1,743238 2967450 1,743265 2967450 3,\n"
"743265.625 2967416 3,743238 2967416 3)',2249));\n"
"ST_3DLength\n"
"-----------\n"
"122.704716741457"
msgstr ""
"SELECT ST_3DLength(ST_GeomFromText('LINESTRING(743238 2967416 1,743238 2967450 1,743265 2967450 3,\n"
"743265.625 2967416 3,743238 2967416 3)',2249));\n"
"ST_3DLength\n"
"-----------\n"
"122.704716741457"

#. Tag: para
#: reference_measure.xml:2281
#, no-c-format
msgid ", <xref linkend=\"ST_Length2D\"/>"
msgstr ", <xref linkend=\"ST_Length2D\"/>"

#. Tag: refname
#: reference_measure.xml:2287
#, no-c-format
msgid "ST_LengthSpheroid"
msgstr "ST_LengthSpheroid"

#. Tag: refpurpose
#: reference_measure.xml:2289
#, no-c-format
msgid ""
"Calculates the 2D or 3D length of a linestring/multilinestring on an ellipsoid. This is useful if the "
"coordinates of the geometry are in longitude/latitude and a length is desired without reprojection."
msgstr ""
"LINESTRINGまたはMULTILINESTRINGに対して、回転楕円体上の2次元長または3次元長を返します。ジオメトリの座標"
"が経度/緯度で、投影変換なしに距離を求める場合に使います。"

#. Tag: funcprototype
#: reference_measure.xml:2296
#, no-c-format
msgid ""
"<funcdef>float <function>ST_LengthSpheroid</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>a_linestring</parameter></paramdef> <paramdef><type>spheroid </type> <parameter>a_spheroid</"
"parameter></paramdef>"
msgstr ""
"<funcdef>float <function>ST_LengthSpheroid</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>a_linestring</parameter></paramdef> <paramdef><type>spheroid </type> <parameter>a_spheroid</"
"parameter></paramdef>"

#. Tag: para
#: reference_measure.xml:2307
#, no-c-format
msgid ""
"Calculates the length of a geometry on an ellipsoid. This is useful if the coordinates of the geometry "
"are in longitude/latitude and a length is desired without reprojection. The ellipsoid is a separate "
"database type and can be constructed as follows:"
msgstr ""
"回転楕円体上のジオメトリの長さを返します。ジオメトリの座標が経度/緯度で、投影変換なしに距離を求める場合"
"に使います。回転楕円体は独立したデータベースタイプで、次のように構成されています。"

#. Tag: literallayout
#: reference_measure.xml:2313 reference_measure.xml:2367
#, no-c-format
msgid ""
"SPHEROID[&lt;NAME&gt;,&lt;SEMI-MAJOR\n"
"                  AXIS&gt;,&lt;INVERSE FLATTENING&gt;]"
msgstr "SPHEROID[&lt;名称&gt;,&lt;長軸半径&gt;,&lt;扁平率の逆数&gt;]"

#. Tag: literallayout
#: reference_measure.xml:2316 reference_measure.xml:2370
#, no-c-format
msgid "SPHEROID[\"GRS_1980\",6378137,298.257222101]"
msgstr "SPHEROID[\"GRS_1980\",6378137,298.257222101]"

#. Tag: para
#: reference_measure.xml:2317 reference_measure.xml:2371
#, no-c-format
msgid "Will return 0 for anything that is not a MULTILINESTRING or LINESTRING"
msgstr "MULTILINESTRINGかLINESTRINGでない場合は0が返されます。"

#. Tag: para
#: reference_measure.xml:2319
#, no-c-format
msgid "Availability: 1.2.2"
msgstr "Availability: 1.2.2"

#. Tag: para
#: reference_measure.xml:2320
#, no-c-format
msgid ""
"Changed: 2.2.0 In prior versions this used to be called ST_Length_Spheroid and used to have a "
"ST_3DLength_Spheroid alias"
msgstr ""
"Changed: 2.2.0 前の版ではST_Length_Spheroidと呼ばれていました。また、ST_3DLength_Spheroidの別名でした。"

#. Tag: programlisting
#: reference_measure.xml:2328
#, no-c-format
msgid ""
"SELECT ST_LengthSpheroid( geometry_column,\n"
"                          'SPHEROID[\"GRS_1980\",6378137,298.257222101]' )\n"
"                          FROM geometry_table;\n"
"\n"
"SELECT ST_LengthSpheroid( the_geom, sph_m ) As tot_len,\n"
"ST_LengthSpheroid(ST_GeometryN(the_geom,1), sph_m) As len_line1,\n"
"ST_LengthSpheroid(ST_GeometryN(the_geom,2), sph_m) As len_line2\n"
"                          FROM (SELECT ST_GeomFromText('MULTILINESTRING((-118.584 38.374,-118.583 "
"38.5),\n"
"        (-71.05957 42.3589 , -71.061 43))') As the_geom,\n"
"CAST('SPHEROID[\"GRS_1980\",6378137,298.257222101]' As spheroid) As sph_m)  as foo;\n"
"        tot_len      |    len_line1     |    len_line2\n"
"------------------+------------------+------------------\n"
" 85204.5207562955 | 13986.8725229309 | 71217.6482333646\n"
"\n"
" --3D\n"
"SELECT ST_LengthSpheroid( the_geom, sph_m ) As tot_len,\n"
"ST_LengthSpheroid(ST_GeometryN(the_geom,1), sph_m) As len_line1,\n"
"ST_LengthSpheroid(ST_GeometryN(the_geom,2), sph_m) As len_line2\n"
"                          FROM (SELECT ST_GeomFromEWKT('MULTILINESTRING((-118.584 38.374 20,-118.583 "
"38.5 30),\n"
"        (-71.05957 42.3589 75, -71.061 43 90))') As the_geom,\n"
"CAST('SPHEROID[\"GRS_1980\",6378137,298.257222101]' As spheroid) As sph_m)  as foo;\n"
"\n"
"         tot_len      |    len_line1    |    len_line2\n"
"------------------+-----------------+------------------\n"
" 85204.5259107402 | 13986.876097711 | 71217.6498130292"
msgstr ""
"SELECT ST_LengthSpheroid( geometry_column,\n"
"                          'SPHEROID[\"GRS_1980\",6378137,298.257222101]' )\n"
"                          FROM geometry_table;\n"
"\n"
"SELECT ST_LengthSpheroid( the_geom, sph_m ) As tot_len,\n"
"ST_LengthSpheroid(ST_GeometryN(the_geom,1), sph_m) As len_line1,\n"
"ST_LengthSpheroid(ST_GeometryN(the_geom,2), sph_m) As len_line2\n"
"                          FROM (SELECT ST_GeomFromText('MULTILINESTRING((-118.584 38.374,-118.583 "
"38.5),\n"
"        (-71.05957 42.3589 , -71.061 43))') As the_geom,\n"
"CAST('SPHEROID[\"GRS_1980\",6378137,298.257222101]' As spheroid) As sph_m)  as foo;\n"
"        tot_len      |    len_line1     |    len_line2\n"
"------------------+------------------+------------------\n"
" 85204.5207562955 | 13986.8725229309 | 71217.6482333646\n"
"\n"
" -- 3次元\n"
"SELECT ST_LengthSpheroid( the_geom, sph_m ) As tot_len,\n"
"ST_LengthSpheroid(ST_GeometryN(the_geom,1), sph_m) As len_line1,\n"
"ST_LengthSpheroid(ST_GeometryN(the_geom,2), sph_m) As len_line2\n"
"                          FROM (SELECT ST_GeomFromEWKT('MULTILINESTRING((-118.584 38.374 20,-118.583 "
"38.5 30),\n"
"        (-71.05957 42.3589 75, -71.061 43 90))') As the_geom,\n"
"CAST('SPHEROID[\"GRS_1980\",6378137,298.257222101]' As spheroid) As sph_m)  as foo;\n"
"\n"
"         tot_len      |    len_line1    |    len_line2\n"
"------------------+-----------------+------------------\n"
" 85204.5259107402 | 13986.876097711 | 71217.6498130292"

#. Tag: para
#: reference_measure.xml:2335
#, no-c-format
msgid ", <xref linkend=\"ST_Length\"/>"
msgstr ", <xref linkend=\"ST_Length\"/>"

#. Tag: refname
#: reference_measure.xml:2341
#, no-c-format
msgid "ST_Length2D_Spheroid"
msgstr "ST_Length2D_Spheroid"

#. Tag: refpurpose
#: reference_measure.xml:2343
#, no-c-format
msgid ""
"Calculates the 2D length of a linestring/multilinestring on an ellipsoid. This is useful if the "
"coordinates of the geometry are in longitude/latitude and a length is desired without reprojection."
msgstr ""
"LINESTRINGまたはMULTILINESTRINGに対して、回転楕円体上の2次元長を返します。ジオメトリの座標が経度/緯度"
"で、投影変換なしに距離を求める場合に使います。"

#. Tag: funcprototype
#: reference_measure.xml:2350
#, no-c-format
msgid ""
"<funcdef>float <function>ST_Length2D_Spheroid</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>a_linestring</parameter></paramdef> <paramdef><type>spheroid </type> <parameter>a_spheroid</"
"parameter></paramdef>"
msgstr ""
"<funcdef>float <function>ST_Length2D_Spheroid</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>a_linestring</parameter></paramdef> <paramdef><type>spheroid </type> <parameter>a_spheroid</"
"parameter></paramdef>"

#. Tag: para
#: reference_measure.xml:2361
#, no-c-format
msgid ""
"Calculates the 2D length of a geometry on an ellipsoid. This is useful if the coordinates of the "
"geometry are in longitude/latitude and a length is desired without reprojection. The ellipsoid is a "
"separate database type and can be constructed as follows:"
msgstr ""
"LINESTRINGまたはMULTILINESTRINGに対して、回転楕円体上の2次元長を返します。ジオメトリの座標が経度/緯度"
"で、投影変換なしに距離を求める場合に使います。回転楕円体は独立したデータベースタイプで、次のように構成"
"されています。"

#. Tag: para
#: reference_measure.xml:2372
#, no-c-format
msgid ""
"This is much like <xref linkend=\"ST_Length_Spheroid\"/> except it will throw away the Z coordinate in "
"calculations."
msgstr ""
"この関数は<xref linkend=\"ST_Length_Spheroid\"/>によく似ていますが、計算結果からZ座標が除かれている点が"
"違います。"

#. Tag: programlisting
#: reference_measure.xml:2380
#, no-c-format
msgid ""
"SELECT ST_Length2D_Spheroid( geometry_column,\n"
"                          'SPHEROID[\"GRS_1980\",6378137,298.257222101]' )\n"
"                          FROM geometry_table;\n"
"\n"
"SELECT ST_Length2D_Spheroid( the_geom, sph_m ) As tot_len,\n"
"ST_Length2D_Spheroid(ST_GeometryN(the_geom,1), sph_m) As len_line1,\n"
"ST_Length2D_Spheroid(ST_GeometryN(the_geom,2), sph_m) As len_line2\n"
"                          FROM (SELECT ST_GeomFromText('MULTILINESTRING((-118.584 38.374,-118.583 "
"38.5),\n"
"        (-71.05957 42.3589 , -71.061 43))') As the_geom,\n"
"CAST('SPHEROID[\"GRS_1980\",6378137,298.257222101]' As spheroid) As sph_m)  as foo;\n"
"        tot_len      |    len_line1     |    len_line2\n"
"------------------+------------------+------------------\n"
" 85204.5207562955 | 13986.8725229309 | 71217.6482333646\n"
"\n"
" --3D Observe same answer\n"
"SELECT ST_Length2D_Spheroid( the_geom, sph_m ) As tot_len,\n"
"ST_Length2D_Spheroid(ST_GeometryN(the_geom,1), sph_m) As len_line1,\n"
"ST_Length2D_Spheroid(ST_GeometryN(the_geom,2), sph_m) As len_line2\n"
"                          FROM (SELECT ST_GeomFromEWKT('MULTILINESTRING((-118.584 38.374 20,-118.583 "
"38.5 30),\n"
"        (-71.05957 42.3589 75, -71.061 43 90))') As the_geom,\n"
"CAST('SPHEROID[\"GRS_1980\",6378137,298.257222101]' As spheroid) As sph_m)  as foo;\n"
"\n"
"        tot_len      |    len_line1     |    len_line2\n"
"------------------+------------------+------------------\n"
" 85204.5207562955 | 13986.8725229309 | 71217.6482333646"
msgstr ""
"SELECT ST_Length2D_Spheroid( geometry_column,\n"
"                          'SPHEROID[\"GRS_1980\",6378137,298.257222101]' )\n"
"                          FROM geometry_table;\n"
"\n"
"SELECT ST_Length2D_Spheroid( the_geom, sph_m ) As tot_len,\n"
"ST_Length2D_Spheroid(ST_GeometryN(the_geom,1), sph_m) As len_line1,\n"
"ST_Length2D_Spheroid(ST_GeometryN(the_geom,2), sph_m) As len_line2\n"
"                          FROM (SELECT ST_GeomFromText('MULTILINESTRING((-118.584 38.374,-118.583 "
"38.5),\n"
"        (-71.05957 42.3589 , -71.061 43))') As the_geom,\n"
"CAST('SPHEROID[\"GRS_1980\",6378137,298.257222101]' As spheroid) As sph_m)  as foo;\n"
"        tot_len      |    len_line1     |    len_line2\n"
"------------------+------------------+------------------\n"
" 85204.5207562955 | 13986.8725229309 | 71217.6482333646\n"
"\n"
"-- 3次元 同じ答になります\n"
"SELECT ST_Length2D_Spheroid( the_geom, sph_m ) As tot_len,\n"
"ST_Length2D_Spheroid(ST_GeometryN(the_geom,1), sph_m) As len_line1,\n"
"ST_Length2D_Spheroid(ST_GeometryN(the_geom,2), sph_m) As len_line2\n"
"                          FROM (SELECT ST_GeomFromEWKT('MULTILINESTRING((-118.584 38.374 20,-118.583 "
"38.5 30),\n"
"        (-71.05957 42.3589 75, -71.061 43 90))') As the_geom,\n"
"CAST('SPHEROID[\"GRS_1980\",6378137,298.257222101]' As spheroid) As sph_m)  as foo;\n"
"\n"
"        tot_len      |    len_line1     |    len_line2\n"
"------------------+------------------+------------------\n"
" 85204.5207562955 | 13986.8725229309 | 71217.6482333646"

#. Tag: para
#: reference_measure.xml:2387
#, no-c-format
msgid ", <xref linkend=\"ST_Length_Spheroid\"/>"
msgstr ", <xref linkend=\"ST_Length_Spheroid\"/>"

#. Tag: refname
#: reference_measure.xml:2393
#, no-c-format
msgid "ST_LongestLine"
msgstr "ST_LongestLine"

#. Tag: refpurpose
#: reference_measure.xml:2395
#, no-c-format
msgid ""
"Returns the 2-dimensional longest line points of two geometries. The function will only return the "
"first longest line if more than one, that the function finds. The line returned will always start in "
"g1 and end in g2. The length of the line this function returns will always be the same as "
"st_maxdistance returns for g1 and g2."
msgstr ""
"二つのジオメトリの2次元長が最長となるラインを返します。見つかったラインが複数ある場合は、最初のもののみ"
"返します。返されるラインは常にg1側を始点、g2側を終点とします。この関数が返すラインの長さは、常に始点を"
"g1に終点をg2にそれぞれ指定した場合のST_MaxDistanceが返す値と同じになります。"

#. Tag: funcprototype
#: reference_measure.xml:2403
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_LongestLine</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_LongestLine</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef>"

#. Tag: para
#: reference_measure.xml:2418
#, no-c-format
msgid "Returns the 2-dimensional longest line between the points of two geometries."
msgstr "二つのジオメトリの2次元長が最長となるポイントを返します。"

#. Tag: para
#: reference_measure.xml:2436
#, no-c-format
msgid "Longest line between point and line"
msgstr "ポイントとラインとの間の最長線"

#. Tag: programlisting
#: reference_measure.xml:2439
#, no-c-format
msgid ""
"SELECT ST_AsText(\n"
"        ST_LongestLine('POINT(100 100)'::geometry, \n"
"                'LINESTRING (20 80, 98 190, 110 180, 50 75 )'::geometry)\n"
"        ) As lline;\n"
"\n"
"        \n"
"   lline\n"
"-----------------\n"
"LINESTRING(100 100,98 190)"
msgstr ""
"SELECT ST_AsText(\n"
"        ST_LongestLine('POINT(100 100)'::geometry, \n"
"                'LINESTRING (20 80, 98 190, 110 180, 50 75 )'::geometry)\n"
"        ) As lline;\n"
"\n"
"        \n"
"   lline\n"
"-----------------\n"
"LINESTRING(100 100,98 190)"

#. Tag: para
#: reference_measure.xml:2447
#, no-c-format
msgid "longest line between polygon and polygon"
msgstr "ポリゴンとポリゴンとの間の最長線"

#. Tag: programlisting
#: reference_measure.xml:2450
#, no-c-format
msgid ""
"SELECT ST_AsText(\n"
"        ST_LongestLine(\n"
"                ST_GeomFromText('POLYGON((175 150, 20 40, \n"
"                        50 60, 125 100, 175 150))'),\n"
"                ST_Buffer(ST_GeomFromText('POINT(110 170)'), 20)\n"
"                ) \n"
"        ) As llinewkt;\n"
"                \n"
"   lline\n"
"-----------------\n"
"LINESTRING(20 40,121.111404660392 186.629392246051)"
msgstr ""
"SELECT ST_AsText(\n"
"        ST_LongestLine(\n"
"                ST_GeomFromText('POLYGON((175 150, 20 40, \n"
"                        50 60, 125 100, 175 150))'),\n"
"                ST_Buffer(ST_GeomFromText('POINT(110 170)'), 20)\n"
"                ) \n"
"        ) As llinewkt;\n"
"                \n"
"   lline\n"
"-----------------\n"
"LINESTRING(20 40,121.111404660392 186.629392246051)"

#. Tag: para
#: reference_measure.xml:2466
#, no-c-format
msgid ""
"longest straight distance to travel from one part of an elegant city to the other Note the max "
"distance = to the length of the line."
msgstr "素敵な街のある部分から他の部分への直線移動距離 (最大距離=この線の長さ)"

#. Tag: programlisting
#: reference_measure.xml:2470
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_LongestLine(c.the_geom, c.the_geom)) As llinewkt, \n"
"        ST_MaxDistance(c.the_geom,c.the_geom) As max_dist, \n"
"        ST_Length(ST_LongestLine(c.the_geom, c.the_geom)) As lenll \n"
"FROM (SELECT ST_BuildArea(ST_Collect(the_geom)) As the_geom\n"
"        FROM (SELECT ST_Translate(ST_SnapToGrid(ST_Buffer(ST_Point(50 ,generate_series(50,190, 50) \n"
"                        ),40, 'quad_segs=2'),1), x, 0)  As the_geom \n"
"                        FROM generate_series(1,100,50) As x)  AS foo\n"
") As c;\n"
"                \n"
"          llinewkt          |     max_dist     |      lenll\n"
"---------------------------+------------------+------------------\n"
" LINESTRING(23 22,129 178) | 188.605408193933 | 188.605408193933"
msgstr ""
"SELECT ST_AsText(ST_LongestLine(c.the_geom, c.the_geom)) As llinewkt, \n"
"        ST_MaxDistance(c.the_geom,c.the_geom) As max_dist, \n"
"        ST_Length(ST_LongestLine(c.the_geom, c.the_geom)) As lenll \n"
"FROM (SELECT ST_BuildArea(ST_Collect(the_geom)) As the_geom\n"
"        FROM (SELECT ST_Translate(ST_SnapToGrid(ST_Buffer(ST_Point(50 ,generate_series(50,190, 50) \n"
"                        ),40, 'quad_segs=2'),1), x, 0)  As the_geom \n"
"                        FROM generate_series(1,100,50) As x)  AS foo\n"
") As c;\n"
"                \n"
"          llinewkt          |     max_dist     |      lenll\n"
"---------------------------+------------------+------------------\n"
" LINESTRING(23 22,129 178) | 188.605408193933 | 188.605408193933"

#. Tag: para
#: reference_measure.xml:2481
#, no-c-format
msgid ", <xref linkend=\"ST_ShortestLine\"/>, <xref linkend=\"ST_LongestLine\"/>"
msgstr ", <xref linkend=\"ST_ShortestLine\"/>, <xref linkend=\"ST_LongestLine\"/>"

#. Tag: refname
#: reference_measure.xml:2487
#, no-c-format
msgid "ST_OrderingEquals"
msgstr "ST_OrderingEquals"

#. Tag: refpurpose
#: reference_measure.xml:2489
#, no-c-format
msgid ""
"Returns true if the given geometries represent the same geometry and points are in the same "
"directional order."
msgstr "与えられたジオメトリが同じジオメトリを示し、ポイントの順序が同じである場合にTRUEを返します。"

#. Tag: funcprototype
#: reference_measure.xml:2495
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_OrderingEquals</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>A</parameter></paramdef> <paramdef><type>geometry </type> <parameter>B</parameter></"
"paramdef>"
msgstr ""
"<funcdef>boolean <function>ST_OrderingEquals</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>A</parameter></paramdef> <paramdef><type>geometry </type> <parameter>B</parameter></"
"paramdef>"

#. Tag: para
#: reference_measure.xml:2506
#, no-c-format
msgid ""
"ST_OrderingEquals compares two geometries and returns t (TRUE) if the geometries are equal and the "
"coordinates are in the same order; otherwise it returns f (FALSE)."
msgstr ""
"ST_OrderingEqualsは、二つのジオメトリを比較して、ジオメトリが同じで、座標値が同じ順序である場合には、t "
"(TRUE)を返し、それ以外の場合には、f (FALSE)を返します。"

#. Tag: para
#: reference_measure.xml:2511
#, no-c-format
msgid ""
"This function is implemented as per the ArcSDE SQL specification rather than SQL-MM. http://edndoc."
"esri.com/arcsde/9.1/sql_api/sqlapi3.htm#ST_OrderingEquals"
msgstr ""
"この関数は、SQL-MM仕様ではなくArcSDE SQL仕様に従って実装しています。http://edndoc.esri.com/arcsde/9.1/"
"sql_api/sqlapi3.htm#ST_OrderingEqualsをご覧ください。"

#. Tag: para
#: reference_measure.xml:2515
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.43"
msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.43"

#. Tag: programlisting
#: reference_measure.xml:2521
#, no-c-format
msgid ""
"SELECT ST_OrderingEquals(ST_GeomFromText('LINESTRING(0 0, 10 10)'),\n"
"                ST_GeomFromText('LINESTRING(0 0, 5 5, 10 10)'));\n"
" st_orderingequals\n"
"-----------\n"
" f\n"
"(1 row)\n"
"\n"
"SELECT ST_OrderingEquals(ST_GeomFromText('LINESTRING(0 0, 10 10)'),\n"
"                ST_GeomFromText('LINESTRING(0 0, 0 0, 10 10)'));\n"
" st_orderingequals\n"
"-----------\n"
" t\n"
"(1 row)\n"
"\n"
"SELECT ST_OrderingEquals(ST_Reverse(ST_GeomFromText('LINESTRING(0 0, 10 10)')),\n"
"                ST_GeomFromText('LINESTRING(0 0, 0 0, 10 10)'));\n"
" st_orderingequals\n"
"-----------\n"
" f\n"
"(1 row)"
msgstr ""
"SELECT ST_OrderingEquals(ST_GeomFromText('LINESTRING(0 0, 10 10)'),\n"
"                ST_GeomFromText('LINESTRING(0 0, 5 5, 10 10)'));\n"
" st_orderingequals\n"
"-----------\n"
" f\n"
"(1 row)\n"
"\n"
"SELECT ST_OrderingEquals(ST_GeomFromText('LINESTRING(0 0, 10 10)'),\n"
"                ST_GeomFromText('LINESTRING(0 0, 0 0, 10 10)'));\n"
" st_orderingequals\n"
"-----------\n"
" t\n"
"(1 row)\n"
"\n"
"SELECT ST_OrderingEquals(ST_Reverse(ST_GeomFromText('LINESTRING(0 0, 10 10)')),\n"
"                ST_GeomFromText('LINESTRING(0 0, 0 0, 10 10)'));\n"
" st_orderingequals\n"
"-----------\n"
" f\n"
"(1 row)"

#. Tag: para
#: reference_measure.xml:2525
#, no-c-format
msgid ", <xref linkend=\"ST_Reverse\"/>"
msgstr ", <xref linkend=\"ST_Reverse\"/>"

#. Tag: refname
#: reference_measure.xml:2531
#, no-c-format
msgid "ST_Overlaps"
msgstr "ST_Overlaps"

#. Tag: refpurpose
#: reference_measure.xml:2533
#, no-c-format
msgid ""
"Returns TRUE if the Geometries share space, are of the same dimension, but are not completely "
"contained by each other."
msgstr "ジオメトリが共有空間を持ち、同じ次元で、かつ完全には一方に含まれていない場合にTRUEを返します。"

#. Tag: funcprototype
#: reference_measure.xml:2538
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_Overlaps</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>A</parameter></paramdef> <paramdef><type>geometry </type> <parameter>B</parameter></"
"paramdef>"
msgstr ""
"<funcdef>boolean <function>ST_Overlaps</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>A</parameter></paramdef> <paramdef><type>geometry </type> <parameter>B</parameter></"
"paramdef>"

#. Tag: para
#: reference_measure.xml:2549
#, no-c-format
msgid ""
"Returns TRUE if the Geometries \"spatially overlap\". By that we mean they intersect, but one does not "
"completely contain another."
msgstr ""
"ジオメトリが「空間的にオーバラップ」する場合にTRUEを返します。ジオメトリがインタセクトして、かつ一方が"
"他方を完全には含まない場合です。"

#. Tag: para
#: reference_measure.xml:2554 reference_measure.xml:2882 reference_measure.xml:2896
#, no-c-format
msgid "Do not call with a GeometryCollection as an argument"
msgstr "ジオメトリコレクションを引数として呼ばないでください。"

#. Tag: para
#: reference_measure.xml:2556
#, no-c-format
msgid ""
"This function call will automatically include a bounding box comparison that will make use of any "
"indexes that are available on the geometries. To avoid index use, use the function _ST_Overlaps."
msgstr ""
"この関数の呼び出しによって、ジオメトリで使用可能なインデクスを使用したバウンディングボックスの比較が自"
"動的に行われます。インデクスの使用を避けるには_ST_Overlapsを使います。"

#. Tag: para
#: reference_measure.xml:2564 reference_measure.xml:2902 reference_measure.xml:3107
#, no-c-format
msgid "&sfs_compliant; s2.1.1.2 // s2.1.13.3"
msgstr "&sfs_compliant; s2.1.1.2 // s2.1.13.3"

#. Tag: para
#: reference_measure.xml:2565
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.32"
msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.32"

#. Tag: para
#: reference_measure.xml:2581
#, no-c-format
msgid "<varname>MULTIPOINT</varname> / <varname>MULTIPOINT</varname>"
msgstr "<varname>MULTIPOINT</varname> / <varname>MULTIPOINT</varname>"

#. Tag: programlisting
#: reference_measure.xml:2605
#, no-c-format
msgid ""
"--a point on a line is contained by the line and is of a lower dimension, and therefore does not "
"overlap the line\n"
"                        nor crosses\n"
"\n"
"SELECT ST_Overlaps(a,b) As a_overlap_b,\n"
"        ST_Crosses(a,b) As a_crosses_b,\n"
"                ST_Intersects(a, b) As a_intersects_b, ST_Contains(b,a) As b_contains_a\n"
"FROM (SELECT ST_GeomFromText('POINT(1 0.5)') As a, ST_GeomFromText('LINESTRING(1 0, 1 1, 3 5)')  As "
"b)\n"
"        As foo\n"
"\n"
"a_overlap_b | a_crosses_b | a_intersects_b | b_contains_a\n"
"------------+-------------+----------------+--------------\n"
"f           | f           | t              | t\n"
"\n"
"--a line that is partly contained by circle, but not fully is defined as intersecting and crossing,\n"
"-- but since of different dimension it does not overlap\n"
"SELECT ST_Overlaps(a,b) As a_overlap_b, ST_Crosses(a,b) As a_crosses_b,\n"
"        ST_Intersects(a, b) As a_intersects_b,\n"
"        ST_Contains(a,b) As a_contains_b\n"
"FROM (SELECT ST_Buffer(ST_GeomFromText('POINT(1 0.5)'), 3)  As a, ST_GeomFromText('LINESTRING(1 0, 1 "
"1, 3 5)')  As b)\n"
"        As foo;\n"
"\n"
" a_overlap_b | a_crosses_b | a_intersects_b | a_contains_b\n"
"-------------+-------------+----------------+--------------\n"
" f           | t           | t              | f\n"
"\n"
" -- a 2-dimensional bent hot dog (aka buffered line string) that intersects a circle,\n"
" --        but is not fully contained by the circle is defined as overlapping since they are of the "
"same dimension,\n"
"--        but it does not cross, because the intersection of the 2 is of the same dimension\n"
"--        as the maximum dimension of the 2\n"
"\n"
"SELECT ST_Overlaps(a,b) As a_overlap_b, ST_Crosses(a,b) As a_crosses_b, ST_Intersects(a, b) As "
"a_intersects_b,\n"
"ST_Contains(b,a) As b_contains_a,\n"
"ST_Dimension(a) As dim_a, ST_Dimension(b) as dim_b, ST_Dimension(ST_Intersection(a,b)) As "
"dima_intersection_b\n"
"FROM (SELECT ST_Buffer(ST_GeomFromText('POINT(1 0.5)'), 3)  As a,\n"
"        ST_Buffer(ST_GeomFromText('LINESTRING(1 0, 1 1, 3 5)'),0.5)  As b)\n"
"        As foo;\n"
"\n"
" a_overlap_b | a_crosses_b | a_intersects_b | b_contains_a | dim_a | dim_b | dima_intersection_b\n"
"-------------+-------------+----------------+--------------+-------+-------+---------------------\n"
" t           | f           | t              | f            |     2 |     2 |              2"
msgstr ""
"-- 線上にある点は、線に含まれていますが\n"
"-- 低い次元ですので、線とオーバラップもクロスもしません\n"
"\n"
"SELECT ST_Overlaps(a,b) As a_overlap_b,\n"
"        ST_Crosses(a,b) As a_crosses_b,\n"
"                ST_Intersects(a, b) As a_intersects_b, ST_Contains(b,a) As b_contains_a\n"
"FROM (SELECT ST_GeomFromText('POINT(1 0.5)') As a, ST_GeomFromText('LINESTRING(1 0, 1 1, 3 5)')  As "
"b)\n"
"        As foo\n"
"\n"
"a_overlap_b | a_crosses_b | a_intersects_b | b_contains_a\n"
"------------+-------------+----------------+--------------\n"
"f           | f           | t              | t\n"
"\n"
"-- ラインは部分的に円に含まれますが、完全にはインタセクトとクロスを満たしません\n"
"-- 次元の違いからオーバラップしません\n"
"SELECT ST_Overlaps(a,b) As a_overlap_b, ST_Crosses(a,b) As a_crosses_b,\n"
"        ST_Intersects(a, b) As a_intersects_b,\n"
"        ST_Contains(a,b) As a_contains_b\n"
"FROM (SELECT ST_Buffer(ST_GeomFromText('POINT(1 0.5)'), 3)  As a, ST_GeomFromText('LINESTRING(1 0, 1 "
"1, 3 5)')  As b)\n"
"        As foo;\n"
"\n"
" a_overlap_b | a_crosses_b | a_intersects_b | a_contains_b\n"
"-------------+-------------+----------------+--------------\n"
" f           | t           | t              | f\n"
"\n"
"-- 円にインタセクトした、2次元の曲がったホットドッグ\n"
"-- (または、ふくれたラインストリング)です。\n"
"-- 完全には円に含まれず、同じ次元ですのでオーバラップします。\n"
"-- インタセクションの次元が最大次元と同じ2次元ですから、クロスしません。\n"
"\n"
"SELECT ST_Overlaps(a,b) As a_overlap_b, ST_Crosses(a,b) As a_crosses_b, ST_Intersects(a, b) As "
"a_intersects_b,\n"
"ST_Contains(b,a) As b_contains_a,\n"
"ST_Dimension(a) As dim_a, ST_Dimension(b) as dim_b, ST_Dimension(ST_Intersection(a,b)) As "
"dima_intersection_b\n"
"FROM (SELECT ST_Buffer(ST_GeomFromText('POINT(1 0.5)'), 3)  As a,\n"
"        ST_Buffer(ST_GeomFromText('LINESTRING(1 0, 1 1, 3 5)'),0.5)  As b)\n"
"        As foo;\n"
"\n"
" a_overlap_b | a_crosses_b | a_intersects_b | b_contains_a | dim_a | dim_b | dima_intersection_b\n"
"-------------+-------------+----------------+--------------+-------+-------+---------------------\n"
" t           | f           | t              | f            |     2 |     2 |              2"

#. Tag: para
#: reference_measure.xml:2613
#, no-c-format
msgid ""
", <xref linkend=\"ST_Crosses\"/>, <xref linkend=\"ST_Dimension\"/>, <xref linkend=\"ST_Intersects\"/>"
msgstr ""
", <xref linkend=\"ST_Crosses\"/>, <xref linkend=\"ST_Dimension\"/>, <xref linkend=\"ST_Intersects\"/>"

#. Tag: refname
#: reference_measure.xml:2618
#, no-c-format
msgid "ST_Perimeter"
msgstr "ST_Perimeter"

#. Tag: refpurpose
#: reference_measure.xml:2620
#, no-c-format
msgid ""
"Return the length measurement of the boundary of an ST_Surface or ST_MultiSurface geometry or "
"geography. (Polygon, MultiPolygon). geometry measurement is in units of spatial reference and "
"geography is in meters."
msgstr ""
"ST_SrrfaceまたはST_MultiSurface (POLYGONまたはMULTIPOLYGON)の境界の長さの計測値を返します。ジオメトリで"
"は単位は空間参照系によります。ジオグラフィではメートル単位になります。"

#. Tag: funcsynopsis
#: reference_measure.xml:2624
#, no-c-format
msgid ""
"<funcprototype> <funcdef>float <function>ST_Perimeter</function></funcdef> <paramdef><type>geometry </"
"type><parameter>g1</parameter></paramdef> </funcprototype> <funcprototype> <funcdef>float "
"<function>ST_Perimeter</function></funcdef> <paramdef><type>geography </type><parameter>geog</"
"parameter></paramdef> <paramdef choice=\"opt\"><type>boolean </type><parameter>use_spheroid=true</"
"parameter></paramdef> </funcprototype>"
msgstr ""
"<funcprototype> <funcdef>float <function>ST_Perimeter</function></funcdef> <paramdef><type>geometry </"
"type><parameter>g1</parameter></paramdef> </funcprototype> <funcprototype> <funcdef>float "
"<function>ST_Perimeter</function></funcdef> <paramdef><type>geography </type><parameter>geog</"
"parameter></paramdef> <paramdef choice=\"opt\"><type>boolean </type><parameter>use_spheroid=true</"
"parameter></paramdef> </funcprototype>"

#. Tag: para
#: reference_measure.xml:2640
#, no-c-format
msgid ""
"Returns the 2D perimeter of the geometry/geography if it is a ST_Surface, ST_MultiSurface (Polygon, "
"MultiPolygon). 0 is returned for non-areal geometries. For linear geometries use <xref linkend="
"\"ST_Length\"/>. For geometry types, units for perimeter measures are specified by the spatial "
"reference system of the geometry."
msgstr ""
"ジオメトリ/ジオグラフィがST_SrrfaceまたはST_MultiSurface (POLYGONまたはMULTIPOLYGON)の場合に、2次元周囲"
"長を返します。面ジオメトリでない場合には0を返します。ラインストリングについては<xref linkend="
"\"ST_Length\"/>を使います。ジオメトリに対しては、周囲長の計測単位は空間参照系によります。"

#. Tag: para
#: reference_measure.xml:2643
#, no-c-format
msgid ""
"For geography types, the calculations are performed using the inverse geodesic problem, where "
"perimeter units are in meters. If PostGIS is compiled with PROJ version 4.8.0 or later, the spheroid "
"is specified by the SRID, otherwise it is exclusive to WGS84. If <varname>use_spheroid=false</"
"varname>, then calculations will approximate a sphere instead of a spheroid."
msgstr ""
"ジオグラフィに対しては、測地線の逆問題を使って計算し、長さの単位はメートルです。PostGISをPROJ 4.8.0以上"
"でコンパイルしているなら、回転楕円体面はSRIDで指定されたものですが、そうでなければ、WGS84に限定されま"
"す。<varname>use_spheroid=false</varname>とすると、回転楕円体面でなく近似する球面で計算します。"

#. Tag: para
#: reference_measure.xml:2647
#, no-c-format
msgid "Currently this is an alias for ST_Perimeter2D, but this may change to support higher dimensions."
msgstr "現在は、この関数はST_Perimeter2Dの別名ですが、高次元対応に変更されるかも知れません。"

#. Tag: para
#: reference_measure.xml:2650
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 8.1.3, 9.5.4"
msgstr "&sqlmm_compliant; SQL-MM 3: 8.1.3, 9.5.4"

#. Tag: para
#: reference_measure.xml:2651
#, no-c-format
msgid "Availability 2.0.0: Support for geography was introduced"
msgstr "Availability: 2.0.0 ジオグラフィ対応が導入されました。"

#. Tag: title
#: reference_measure.xml:2655
#, no-c-format
msgid "Examples: Geometry"
msgstr "例: ジオメトリ"

#. Tag: para
#: reference_measure.xml:2656
#, no-c-format
msgid ""
"Return perimeter in feet for Polygon and MultiPolygon. Note this is in feet because EPSG:2249 is "
"Massachusetts State Plane Feet"
msgstr ""
"POLYGONとMULTIPOLYGONに対するフィート単位の周囲長を返します。EPSG:2249はフィート単位のマサチューセッツ"
"平面なので、フィート単位です。"

#. Tag: programlisting
#: reference_measure.xml:2658
#, no-c-format
msgid ""
"SELECT ST_Perimeter(ST_GeomFromText('POLYGON((743238 2967416,743238 2967450,743265 2967450,\n"
"743265.625 2967416,743238 2967416))', 2249));\n"
"st_perimeter\n"
"---------\n"
" 122.630744000095\n"
"(1 row)\n"
"\n"
"SELECT ST_Perimeter(ST_GeomFromText('MULTIPOLYGON(((763104.471273676 2949418.44119003,\n"
"763104.477769673 2949418.42538203,\n"
"763104.189609677 2949418.22343004,763104.471273676 2949418.44119003)),\n"
"((763104.471273676 2949418.44119003,763095.804579742 2949436.33850239,\n"
"763086.132105649 2949451.46730207,763078.452329651 2949462.11549407,\n"
"763075.354136904 2949466.17407812,763064.362142565 2949477.64291974,\n"
"763059.953961626 2949481.28983009,762994.637609571 2949532.04103014,\n"
"762990.568508415 2949535.06640477,762986.710889563 2949539.61421415,\n"
"763117.237897679 2949709.50493431,763235.236617789 2949617.95619822,\n"
"763287.718121842 2949562.20592617,763111.553321674 2949423.91664605,\n"
"763104.471273676 2949418.44119003)))', 2249));\n"
"st_perimeter\n"
"---------\n"
" 845.227713366825\n"
"(1 row)"
msgstr ""
"SELECT ST_Perimeter(ST_GeomFromText('POLYGON((743238 2967416,743238 2967450,743265 2967450,\n"
"743265.625 2967416,743238 2967416))', 2249));\n"
"st_perimeter\n"
"---------\n"
" 122.630744000095\n"
"(1 row)\n"
"\n"
"SELECT ST_Perimeter(ST_GeomFromText('MULTIPOLYGON(((763104.471273676 2949418.44119003,\n"
"763104.477769673 2949418.42538203,\n"
"763104.189609677 2949418.22343004,763104.471273676 2949418.44119003)),\n"
"((763104.471273676 2949418.44119003,763095.804579742 2949436.33850239,\n"
"763086.132105649 2949451.46730207,763078.452329651 2949462.11549407,\n"
"763075.354136904 2949466.17407812,763064.362142565 2949477.64291974,\n"
"763059.953961626 2949481.28983009,762994.637609571 2949532.04103014,\n"
"762990.568508415 2949535.06640477,762986.710889563 2949539.61421415,\n"
"763117.237897679 2949709.50493431,763235.236617789 2949617.95619822,\n"
"763287.718121842 2949562.20592617,763111.553321674 2949423.91664605,\n"
"763104.471273676 2949418.44119003)))', 2249));\n"
"st_perimeter\n"
"---------\n"
" 845.227713366825\n"
"(1 row)"

#. Tag: title
#: reference_measure.xml:2661
#, no-c-format
msgid "Examples: Geography"
msgstr "例: ジオグラフィ"

#. Tag: para
#: reference_measure.xml:2662
#, no-c-format
msgid ""
"Return perimeter in meters and feet for Polygon and MultiPolygon. Note this is geography (WGS 84 long "
"lat)"
msgstr ""
"ポリゴンとマルチポリゴンのメートル単位とフィート単位の周囲長を返します。ジオグラフィ (WGS 84経度緯度)で"
"あることに注意して下さい。"

#. Tag: programlisting
#: reference_measure.xml:2663
#, no-c-format
msgid ""
"SELECT  ST_Perimeter(geog) As per_meters, ST_Perimeter(geog)/0.3048 As per_ft \n"
"FROM ST_GeogFromText('POLYGON((-71.1776848522251 42.3902896512902,-71.1776843766326 42.3903829478009,\n"
"-71.1775844305465 42.3903826677917,-71.1775825927231 42.3902893647987,-71.1776848522251 "
"42.3902896512902))') As geog;\n"
"\n"
"   per_meters    |      per_ft\n"
"-----------------+------------------\n"
"37.3790462565251 | 122.634666195949\n"
"\n"
"\n"
"-- MultiPolygon example --\n"
"SELECT  ST_Perimeter(geog) As per_meters, ST_Perimeter(geog,false) As per_sphere_meters,  "
"ST_Perimeter(geog)/0.3048 As per_ft \n"
"FROM ST_GeogFromText('MULTIPOLYGON(((-71.1044543107478 42.340674480411,-71.1044542869917 "
"42.3406744369506,\n"
"-71.1044553562977 42.340673886454,-71.1044543107478 42.340674480411)),\n"
"((-71.1044543107478 42.340674480411,-71.1044860600303 42.3407237015564,-71.1045215770124 "
"42.3407653385914,\n"
"-71.1045498002983 42.3407946553165,-71.1045611902745 42.3408058316308,-71.1046016507427 "
"42.340837442371,\n"
"-71.104617893173 42.3408475056957,-71.1048586153981 42.3409875993595,-71.1048736143677 "
"42.3409959528211,\n"
"-71.1048878050242 42.3410084812078,-71.1044020965803 42.3414730072048,\n"
"-71.1039672113619 42.3412202916693,-71.1037740497748 42.3410666421308,\n"
"-71.1044280218456 42.3406894151355,-71.1044543107478 42.340674480411)))') As geog;\n"
"\n"
"    per_meters    | per_sphere_meters |      per_ft\n"
"------------------+-------------------+------------------\n"
" 257.634283683311 |  257.412311446337 | 845.256836231335"
msgstr ""
"SELECT  ST_Perimeter(geog) As per_meters, ST_Perimeter(geog)/0.3048 As per_ft \n"
"FROM ST_GeogFromText('POLYGON((-71.1776848522251 42.3902896512902,-71.1776843766326 42.3903829478009,\n"
"-71.1775844305465 42.3903826677917,-71.1775825927231 42.3902893647987,-71.1776848522251 "
"42.3902896512902))') As geog;\n"
"\n"
"   per_meters    |      per_ft\n"
"-----------------+------------------\n"
"37.3790462565251 | 122.634666195949\n"
"\n"
"\n"
"-- マルチポリゴンの例 --\n"
"SELECT  ST_Perimeter(geog) As per_meters, ST_Perimeter(geog,false) As per_sphere_meters,  "
"ST_Perimeter(geog)/0.3048 As per_ft \n"
"FROM ST_GeogFromText('MULTIPOLYGON(((-71.1044543107478 42.340674480411,-71.1044542869917 "
"42.3406744369506,\n"
"-71.1044553562977 42.340673886454,-71.1044543107478 42.340674480411)),\n"
"((-71.1044543107478 42.340674480411,-71.1044860600303 42.3407237015564,-71.1045215770124 "
"42.3407653385914,\n"
"-71.1045498002983 42.3407946553165,-71.1045611902745 42.3408058316308,-71.1046016507427 "
"42.340837442371,\n"
"-71.104617893173 42.3408475056957,-71.1048586153981 42.3409875993595,-71.1048736143677 "
"42.3409959528211,\n"
"-71.1048878050242 42.3410084812078,-71.1044020965803 42.3414730072048,\n"
"-71.1039672113619 42.3412202916693,-71.1037740497748 42.3410666421308,\n"
"-71.1044280218456 42.3406894151355,-71.1044543107478 42.340674480411)))') As geog;\n"
"\n"
"    per_meters    | per_sphere_meters |      per_ft\n"
"------------------+-------------------+------------------\n"
" 257.634283683311 |  257.412311446337 | 845.256836231335"

#. Tag: para
#: reference_measure.xml:2667
#, no-c-format
msgid ", <xref linkend=\"ST_GeomFromText\"/>, <xref linkend=\"ST_Length\"/>"
msgstr ", <xref linkend=\"ST_GeomFromText\"/>, <xref linkend=\"ST_Length\"/>"

#. Tag: refname
#: reference_measure.xml:2673
#, no-c-format
msgid "ST_Perimeter2D"
msgstr "ST_Perimeter2D"

#. Tag: refpurpose
#: reference_measure.xml:2675
#, no-c-format
msgid ""
"Returns the 2-dimensional perimeter of the geometry, if it is a polygon or multi-polygon. This is "
"currently an alias for ST_Perimeter."
msgstr ""
"POLYGONまたはMULTIPOLYGONジオメトリの場合に、2次元周囲長を返します。これは、現在はST_Perimeterの別名で"
"す。"

#. Tag: funcprototype
#: reference_measure.xml:2681
#, no-c-format
msgid ""
"<funcdef>float <function>ST_Perimeter2D</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>geomA</parameter></paramdef>"
msgstr ""
"<funcdef>float <function>ST_Perimeter2D</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>geomA</parameter></paramdef>"

#. Tag: para
#: reference_measure.xml:2691
#, no-c-format
msgid "Returns the 2-dimensional perimeter of the geometry, if it is a polygon or multi-polygon."
msgstr "POLYGONまたはMULTIPOLYGONジオメトリの場合に、2次元周囲長を返します。"

#. Tag: para
#: reference_measure.xml:2696
#, no-c-format
msgid ""
"This is currently an alias for ST_Perimeter. In future versions ST_Perimeter may return the highest "
"dimension perimeter for a geometry. This is still under consideration"
msgstr ""
"これは、現在はST_Perimeterの別名です。将来的に、ST_Perimeterがジオメトリの最大次元の周囲長を返すように"
"なるかも知れません。これは、まだ考慮中です。"

#. Tag: refname
#: reference_measure.xml:2710
#, no-c-format
msgid "ST_3DPerimeter"
msgstr "ST_3DPerimeter"

#. Tag: refpurpose
#: reference_measure.xml:2712
#, no-c-format
msgid "Returns the 3-dimensional perimeter of the geometry, if it is a polygon or multi-polygon."
msgstr "POLYGONまたはMULTIPOLYGONジオメトリの場合には、3次元周囲長を返します。"

#. Tag: funcprototype
#: reference_measure.xml:2718
#, no-c-format
msgid ""
"<funcdef>float <function>ST_3DPerimeter</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>geomA</parameter></paramdef>"
msgstr ""
"<funcdef>float <function>ST_3DPerimeter</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>geomA</parameter></paramdef>"

#. Tag: para
#: reference_measure.xml:2728
#, no-c-format
msgid ""
"Returns the 3-dimensional perimeter of the geometry, if it is a polygon or multi-polygon. If the "
"geometry is 2-dimensional, then the 2-dimensional perimeter is returned."
msgstr ""
"POLYGONまたはMULTIPOLYGONジオメトリの場合には、3次元周囲長を返します。ジオメトリが2次元の場合には、2次"
"元周囲長を返します。"

#. Tag: para
#: reference_measure.xml:2731
#, no-c-format
msgid "Changed: 2.0.0 In prior versions this used to be called ST_Perimeter3D"
msgstr "Changed: 2.0.0 以前の版ではST_Perimeter3Dと呼ばれていました。"

#. Tag: para
#: reference_measure.xml:2737
#, no-c-format
msgid "Perimeter of a slightly elevated polygon in the air in Massachusetts state plane feet"
msgstr ""
"フィート単位のマサチューセッツ州平面での、大気中にある、わずかに持ち上げられたポリゴンの周囲長です。"

#. Tag: programlisting
#: reference_measure.xml:2738
#, no-c-format
msgid ""
"SELECT ST_3DPerimeter(the_geom), ST_Perimeter2d(the_geom), ST_Perimeter(the_geom) FROM\n"
"                        (SELECT ST_GeomFromEWKT('SRID=2249;POLYGON((743238 2967416 2,743238 2967450 "
"1,\n"
"743265.625 2967416 1,743238 2967416 2))') As the_geom) As foo;\n"
"\n"
"  ST_3DPerimeter  |  st_perimeter2d  |   st_perimeter\n"
"------------------+------------------+------------------\n"
" 105.465793597674 | 105.432997272188 | 105.432997272188"
msgstr ""
"SELECT ST_3DPerimeter(the_geom), ST_Perimeter2d(the_geom), ST_Perimeter(the_geom) FROM\n"
"                        (SELECT ST_GeomFromEWKT('SRID=2249;POLYGON((743238 2967416 2,743238 2967450 "
"1,\n"
"743265.625 2967416 1,743238 2967416 2))') As the_geom) As foo;\n"
"\n"
"  ST_3DPerimeter  |  st_perimeter2d  |   st_perimeter\n"
"------------------+------------------+------------------\n"
" 105.465793597674 | 105.432997272188 | 105.432997272188"

#. Tag: para
#: reference_measure.xml:2745
#, no-c-format
msgid ", <xref linkend=\"ST_Perimeter\"/>, <xref linkend=\"ST_Perimeter2D\"/>"
msgstr ", <xref linkend=\"ST_Perimeter\"/>, <xref linkend=\"ST_Perimeter2D\"/>"

#. Tag: refname
#: reference_measure.xml:2751
#, no-c-format
msgid "ST_PointOnSurface"
msgstr "ST_PointOnSurface"

#. Tag: refpurpose
#: reference_measure.xml:2753
#, no-c-format
msgid "Returns a <varname>POINT</varname> guaranteed to lie on the surface."
msgstr "サーフェス上にあることを保障された<varname>POINT</varname>を返します。"

#. Tag: funcprototype
#: reference_measure.xml:2758
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_PointOnSurface</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_PointOnSurface</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef>"

#. Tag: para
#: reference_measure.xml:2770
#, no-c-format
msgid "Returns a <varname>POINT</varname> guaranteed to intersect a surface."
msgstr "サーフェス上にあることを保障された<varname>POINT</varname>を返します。"

#. Tag: para
#: reference_measure.xml:2772
#, no-c-format
msgid "&sfs_compliant; s3.2.14.2 // s3.2.18.2"
msgstr "&sfs_compliant; s3.2.14.2 // s3.2.18.2"

#. Tag: para
#: reference_measure.xml:2773
#, no-c-format
msgid ""
"&sqlmm_compliant; SQL-MM 3: 8.1.5, 9.5.6. According to the specs, ST_PointOnSurface works for surface "
"geometries (POLYGONs, MULTIPOLYGONS, CURVED POLYGONS). So PostGIS seems to be extending what the spec "
"allows here. Most databases Oracle,DB II, ESRI SDE seem to only support this function for surfaces. "
"SQL Server 2008 like PostGIS supports for all common geometries."
msgstr ""
"&sqlmm_compliant; SQL-MM 3: 8.1.5, 9.5.6. 仕様によると、ST_PointOnSurfaceは面ジオメトリ (POLYGON, "
"MULTIPOLYGON, 曲線ポリゴン)で動作します。PostGISは、仕様で許される以上に拡張しているように見えます。"
"Oracle, DB II, ESRI SDEといったほとんどのデータベースでは、面ジオメトリにのみ対応しているように見えま"
"す。SQL Server 2008は、PostGISのように全ての一般的なジオメトリに対応しています。"

#. Tag: programlisting
#: reference_measure.xml:2782
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_PointOnSurface('POINT(0 5)'::geometry));\n"
" st_astext\n"
"------------\n"
" POINT(0 5)\n"
"(1 row)\n"
"\n"
"SELECT ST_AsText(ST_PointOnSurface('LINESTRING(0 5, 0 10)'::geometry));\n"
" st_astext\n"
"------------\n"
" POINT(0 5)\n"
"(1 row)\n"
"\n"
"SELECT ST_AsText(ST_PointOnSurface('POLYGON((0 0, 0 5, 5 5, 5 0, 0 0))'::geometry));\n"
"   st_astext\n"
"----------------\n"
" POINT(2.5 2.5)\n"
"(1 row)\n"
"\n"
"SELECT ST_AsEWKT(ST_PointOnSurface(ST_GeomFromEWKT('LINESTRING(0 5 1, 0 0 1, 0 10 2)')));\n"
"   st_asewkt\n"
"----------------\n"
" POINT(0 0 1)\n"
"(1 row)"
msgstr ""
"SELECT ST_AsText(ST_PointOnSurface('POINT(0 5)'::geometry));\n"
" st_astext\n"
"------------\n"
" POINT(0 5)\n"
"(1 row)\n"
"\n"
"SELECT ST_AsText(ST_PointOnSurface('LINESTRING(0 5, 0 10)'::geometry));\n"
" st_astext\n"
"------------\n"
" POINT(0 5)\n"
"(1 row)\n"
"\n"
"SELECT ST_AsText(ST_PointOnSurface('POLYGON((0 0, 0 5, 5 5, 5 0, 0 0))'::geometry));\n"
"   st_astext\n"
"----------------\n"
" POINT(2.5 2.5)\n"
"(1 row)\n"
"\n"
"SELECT ST_AsEWKT(ST_PointOnSurface(ST_GeomFromEWKT('LINESTRING(0 5 1, 0 0 1, 0 10 2)')));\n"
"   st_asewkt\n"
"----------------\n"
" POINT(0 0 1)\n"
"(1 row)"

#. Tag: para
#: reference_measure.xml:2788
#, no-c-format
msgid ", <xref linkend=\"ST_Point_Inside_Circle\"/>"
msgstr ", <xref linkend=\"ST_Point_Inside_Circle\"/>"

#. Tag: refname
#: reference_measure.xml:2794
#, no-c-format
msgid "ST_Project"
msgstr "ST_Project"

#. Tag: refpurpose
#: reference_measure.xml:2796
#, no-c-format
msgid ""
"Returns a <varname>POINT</varname> projected from a start point using a distance in meters and bearing "
"(azimuth) in radians."
msgstr ""
"メートル単位の距離とラジアン単位の方位とを使って始点から算出された<varname>POINT</varname>を返します。"

#. Tag: funcprototype
#: reference_measure.xml:2801
#, no-c-format
msgid ""
"<funcdef>geography <function>ST_Project</function></funcdef> <paramdef><type>geography </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>float </type> <parameter>distance</parameter></"
"paramdef> <paramdef><type>float </type> <parameter>azimuth</parameter></paramdef>"
msgstr ""
"<funcdef>geography <function>ST_Project</function></funcdef> <paramdef><type>geography </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>float </type> <parameter>distance</parameter></"
"paramdef> <paramdef><type>float </type> <parameter>azimuth</parameter></paramdef>"

#. Tag: para
#: reference_measure.xml:2817
#, no-c-format
msgid ""
"Returns a <varname>POINT</varname> projected along a geodesic from a start point using an azimuth "
"(bearing) measured in radians and distance measured in meters. This is also called a direct geodesic "
"problem."
msgstr ""
"ラジアン単位の方位とメートル単位の距離を使って、始点から測地線に沿って移動した<varname>POINT</varname>"
"を返します。これは測地線問題と言われるものです。"

#. Tag: para
#: reference_measure.xml:2818
#, no-c-format
msgid ""
"The azimuth is sometimes called the heading or the bearing in navigation. It is measured relative to "
"true north (azimuth zero). East is azimuth 90 (&#x03C0;/2), south is azimuth 180 (&#x03C0;), west is "
"azimuth 270 (3&#x03C0;/2)."
msgstr ""
"方位はナビゲーションでは時々ヘディングまたはベアリングと呼ばれます。 真北(0度)との相対値です。東が90 "
"(&#x03C0;/2)で、南が180 (&#x03C0;)、西が270 (3&#x03C0;/2)となります。"

#. Tag: para
#: reference_measure.xml:2819
#, no-c-format
msgid "The distance is given in meters."
msgstr "距離はメートル単位です。"

#. Tag: title
#: reference_measure.xml:2826
#, no-c-format
msgid "Example: Using degrees - projected point 100,000 meters and bearing 45 degrees"
msgstr "例: 度を使用する例 - 100,000メートルと方位45度で位置計算される点"

#. Tag: programlisting
#: reference_measure.xml:2828
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_Project('POINT(0 0)'::geography, 100000, radians(45.0)));\n"
"\n"
"                 st_astext\n"
"--------------------------------------------\n"
" POINT(0.635231029125537 0.639472334729198)\n"
"(1 row)"
msgstr ""
"SELECT ST_AsText(ST_Project('POINT(0 0)'::geography, 100000, radians(45.0)));\n"
"\n"
"                 st_astext\n"
"--------------------------------------------\n"
" POINT(0.635231029125537 0.639472334729198)\n"
"(1 row)"

#. Tag: para
#: reference_measure.xml:2834
#, no-c-format
msgid ""
", <xref linkend=\"ST_Distance\"/>, <ulink url=\"http://www.postgresql.org/docs/current/interactive/"
"functions-math.html\">PostgreSQL Math Functions</ulink>"
msgstr ""
", <xref linkend=\"ST_Distance\"/>, <ulink url=\"http://www.postgresql.org/docs/current/interactive/"
"functions-math.html\">PostgreSQL Math Functions</ulink>"

#. Tag: refname
#: reference_measure.xml:2840
#, no-c-format
msgid "ST_Relate"
msgstr "ST_Relate"

#. Tag: refpurpose
#: reference_measure.xml:2842
#, no-c-format
msgid ""
"Returns true if this Geometry is spatially related to anotherGeometry, by testing for intersections "
"between the Interior, Boundary and Exterior of the two geometries as specified by the values in the "
"intersectionMatrixPattern. If no intersectionMatrixPattern is passed in, then returns the maximum "
"intersectionMatrixPattern that relates the 2 geometries."
msgstr ""
"intersectionMatrixPatternの値について、二つのジオメトリの内部、境界、外部のインタセクションを見て、指定"
"したジオメトリがもうひとつのジオメトリと空間的に関係している場合に、TRUEを返します。"
"intersectionMatrixPatternが無い場合には、二つのジオメトリについての最大のintersectionMatrixPatternを返"
"します。"

#. Tag: funcsynopsis
#: reference_measure.xml:2850
#, no-c-format
msgid ""
"<funcprototype> <funcdef>boolean <function>ST_Relate</function></funcdef> <paramdef><type>geometry </"
"type> <parameter>geomA</parameter></paramdef> <paramdef><type>geometry </type> <parameter>geomB</"
"parameter></paramdef> <paramdef><type>text </type> <parameter>intersectionMatrixPattern</parameter></"
"paramdef> </funcprototype> <funcprototype> <funcdef>text <function>ST_Relate</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef> <paramdef><type>geometry </"
"type> <parameter>geomB</parameter></paramdef> </funcprototype> <funcprototype> <funcdef>text "
"<function>ST_Relate</function></funcdef> <paramdef><type>geometry </type> <parameter>geomA</"
"parameter></paramdef> <paramdef><type>geometry </type> <parameter>geomB</parameter></paramdef> "
"<paramdef><type>integer </type> <parameter>BoundaryNodeRule</parameter></paramdef> </funcprototype>"
msgstr ""
"<funcprototype> <funcdef>boolean <function>ST_Relate</function></funcdef> <paramdef><type>geometry </"
"type> <parameter>geomA</parameter></paramdef> <paramdef><type>geometry </type> <parameter>geomB</"
"parameter></paramdef> <paramdef><type>text </type> <parameter>intersectionMatrixPattern</parameter></"
"paramdef> </funcprototype> <funcprototype> <funcdef>text <function>ST_Relate</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef> <paramdef><type>geometry </"
"type> <parameter>geomB</parameter></paramdef> </funcprototype> <funcprototype> <funcdef>text "
"<function>ST_Relate</function></funcdef> <paramdef><type>geometry </type> <parameter>geomA</"
"parameter></paramdef> <paramdef><type>geometry </type> <parameter>geomB</parameter></paramdef> "
"<paramdef><type>integer </type> <parameter>BoundaryNodeRule</parameter></paramdef> </funcprototype>"

#. Tag: para
#: reference_measure.xml:2876
#, no-c-format
msgid ""
"Version 1: Takes geomA, geomB, intersectionMatrix and Returns 1 (TRUE) if this Geometry is spatially "
"related to anotherGeometry, by testing for intersections between the Interior, Boundary and Exterior "
"of the two geometries as specified by the values in the <ulink url=\"http://en.wikipedia.org/wiki/"
"DE-9IM\">DE-9IM matrix pattern</ulink>."
msgstr ""
"一つ目の形式: geomA, geomB, intersectionMatrixを取り、<ulink url=\"http://en.wikipedia.org/wiki/DE-9IM"
"\">DE-9IM matrix pattern</ulink>の値によって指定される、二つのジオメトリの内部、境界、外部のインタセク"
"ションを見て、指定したジオメトリがもう一つのジオメトリと空間的に関係している場合に1 (TRUE)を返します。"

#. Tag: para
#: reference_measure.xml:2881
#, no-c-format
msgid "This is especially useful for testing compound checks of intersection, crosses, etc in one step."
msgstr "これは特にインタセクト、クロス等の複合チェックを一度に行うために使われます。"

#. Tag: para
#: reference_measure.xml:2884
#, no-c-format
msgid ""
"This is the \"allowable\" version that returns a boolean, not an integer. This is defined in OGC spec"
msgstr "これは論理値を返して整数を返さないのが「許される」版です。これはOGC仕様で定められています。"

#. Tag: para
#: reference_measure.xml:2887
#, no-c-format
msgid ""
"This DOES NOT automagically include an index call. The reason for that is some relationships are anti "
"e.g. Disjoint. If you are using a relationship pattern that requires intersection, then include the "
"&amp;&amp; index call."
msgstr ""
"この関数は、自動的にはインデクスを*呼びだしません*。非接続など、関連が否定的になるものがあるためです。"
"インタセクションを必要とするパターンの関連を使うのでしたら、&amp;&amp;演算子でインデクスを呼び出して下"
"さい。"

#. Tag: para
#: reference_measure.xml:2892
#, no-c-format
msgid "Version 2: Takes geomA and geomB and returns the <xref linkend=\"DE-9IM\"/>"
msgstr "二つ目の形式: geomAとgeomBを取り、<xref linkend=\"DE-9IM\"/>を返します。"

#. Tag: para
#: reference_measure.xml:2894
#, no-c-format
msgid ""
"Version 3: same as version 2, but allows to specify a boundary node rule (1:OGC/MOD2, 2:Endpoint, 3:"
"MultivalentEndpoint, 4:MonovalentEndpoint)"
msgstr ""
"三つ目の形式: 二つ目の形式と同じですが、境界ノード規則 (1:OGC/MOD2, 2:Endpoint, 3:MultivalentEndpoint, "
"4:MonovalentEndpoint)を指定できます。"

#. Tag: para
#: reference_measure.xml:2898
#, no-c-format
msgid "not in OGC spec, but implied. see s2.1.13.2"
msgstr "OGC仕様にはありませんが実装しました。s2.1.13.2をご覧下さい。"

#. Tag: para
#: reference_measure.xml:2903
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.25"
msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.25"

#. Tag: para
#: reference_measure.xml:2904
#, no-c-format
msgid "Enhanced: 2.0.0 - added support for specifying boundary node rule (requires GEOS &gt;= 3.0)."
msgstr "Enhanced: 2.0.0 - 境界ノード規則が追加されました (GEOS 3.0以上が必要です)。"

#. Tag: programlisting
#: reference_measure.xml:2911
#, no-c-format
msgid ""
"--Find all compounds that intersect and not touch a poly (interior intersects)\n"
"SELECT l.* , b.name As poly_name\n"
"        FROM polys As b\n"
"INNER JOIN compounds As l\n"
"ON (p.the_geom &amp;&amp; b.the_geom\n"
"AND ST_Relate(l.the_geom, b.the_geom,'T********'));\n"
"\n"
"SELECT ST_Relate(ST_GeometryFromText('POINT(1 2)'), ST_Buffer(ST_GeometryFromText('POINT(1 2)'),2));\n"
"st_relate\n"
"-----------\n"
"0FFFFF212\n"
"\n"
"SELECT ST_Relate(ST_GeometryFromText('LINESTRING(1 2, 3 4)'), ST_GeometryFromText('LINESTRING(5 6, 7 "
"8)'));\n"
"st_relate\n"
"-----------\n"
"FF1FF0102\n"
"\n"
"\n"
"SELECT ST_Relate(ST_GeometryFromText('POINT(1 2)'), ST_Buffer(ST_GeometryFromText('POINT(1 2)'),2), "
"'0FFFFF212');\n"
"st_relate\n"
"-----------\n"
"t\n"
"\n"
"SELECT ST_Relate(ST_GeometryFromText('POINT(1 2)'), ST_Buffer(ST_GeometryFromText('POINT(1 2)'),2), "
"'*FF*FF212');\n"
"st_relate\n"
"-----------\n"
"t"
msgstr ""
"-- あるポリゴンとインタセクトして接触しない (内部でインタセクトする)区域を\n"
"-- 探索します。\n"
"SELECT l.* , b.name As poly_name\n"
"        FROM polys As b\n"
"INNER JOIN compounds As l\n"
"ON (p.the_geom &amp;&amp; b.the_geom\n"
"AND ST_Relate(l.the_geom, b.the_geom,'T********'));\n"
"\n"
"SELECT ST_Relate(ST_GeometryFromText('POINT(1 2)'), ST_Buffer(ST_GeometryFromText('POINT(1 2)'),2));\n"
"st_relate\n"
"-----------\n"
"0FFFFF212\n"
"\n"
"SELECT ST_Relate(ST_GeometryFromText('LINESTRING(1 2, 3 4)'), ST_GeometryFromText('LINESTRING(5 6, 7 "
"8)'));\n"
"st_relate\n"
"-----------\n"
"FF1FF0102\n"
"\n"
"\n"
"SELECT ST_Relate(ST_GeometryFromText('POINT(1 2)'), ST_Buffer(ST_GeometryFromText('POINT(1 2)'),2), "
"'0FFFFF212');\n"
"st_relate\n"
"-----------\n"
"t\n"
"\n"
"SELECT ST_Relate(ST_GeometryFromText('POINT(1 2)'), ST_Buffer(ST_GeometryFromText('POINT(1 2)'),2), "
"'*FF*FF212');\n"
"st_relate\n"
"-----------\n"
"t"

#. Tag: para
#: reference_measure.xml:2918
#, no-c-format
msgid ""
", <xref linkend=\"DE-9IM\"/>, <xref linkend=\"ST_Disjoint\"/>, <xref linkend=\"ST_Intersects\"/>, "
"<xref linkend=\"ST_Touches\"/>"
msgstr ""
", <xref linkend=\"DE-9IM\"/>, <xref linkend=\"ST_Disjoint\"/>, <xref linkend=\"ST_Intersects\"/>, "
"<xref linkend=\"ST_Touches\"/>"

#. Tag: refname
#: reference_measure.xml:2924
#, no-c-format
msgid "ST_RelateMatch"
msgstr "ST_RelateMatch"

#. Tag: refpurpose
#: reference_measure.xml:2926
#, no-c-format
msgid "Returns true if intersectionMattrixPattern1 implies intersectionMatrixPattern2"
msgstr "intersectionMattrixPattern1がintersectionMatrixPattern2を含む場合にTRUEを返します。"

#. Tag: funcprototype
#: reference_measure.xml:2931
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_RelateMatch</function></funcdef> <paramdef><type>text </type> "
"<parameter>intersectionMatrix</parameter></paramdef> <paramdef><type>text </type> "
"<parameter>intersectionMatrixPattern</parameter></paramdef>"
msgstr ""
"<funcdef>boolean <function>ST_RelateMatch</function></funcdef> <paramdef><type>text </type> "
"<parameter>intersectionMatrix</parameter></paramdef> <paramdef><type>text </type> "
"<parameter>intersectionMatrixPattern</parameter></paramdef>"

#. Tag: para
#: reference_measure.xml:2942
#, no-c-format
msgid ""
"Takes intersectionMatrix and intersectionMatrixPattern and Returns true if the intersectionMatrix "
"satisfies the intersectionMatrixPattern. For more information refer to <xref linkend=\"DE-9IM\"/>."
msgstr ""
"intersectionMatrixとintersectionMatrixPatternを取り、intersectionMatrixがintersectionMatrixPatternを満"
"たす場合にTRUEを返します。詳細情報については<xref linkend=\"DE-9IM\"/>をご覧下さい。"

#. Tag: para
#: reference_measure.xml:2945
#, no-c-format
msgid "Availability: 2.0.0 - requires GEOS &gt;= 3.3.0."
msgstr "Availability: 2.0.0 - GEOS 3.3.0以上が必要です。"

#. Tag: programlisting
#: reference_measure.xml:2951
#, no-c-format
msgid ""
"SELECT ST_RelateMatch('101202FFF', 'TTTTTTFFF') ;\n"
"-- result --\n"
"t\n"
"--example of common intersection matrix patterns and example matrices\n"
"-- comparing relationships of involving one invalid geometry and ( a line and polygon that intersect "
"at interior and boundary)\n"
"SELECT mat.name, pat.name, ST_RelateMatch(mat.val, pat.val) As satisfied\n"
"    FROM \n"
"        ( VALUES ('Equality', 'T1FF1FFF1'),\n"
"                ('Overlaps', 'T*T***T**'),\n"
"                ('Within', 'T*F**F***'),\n"
"                ('Disjoint', 'FF*FF****') As pat(name,val)\n"
"        CROSS JOIN \n"
"            (        VALUES ('Self intersections (invalid)', '111111111'),\n"
"                    ('IE2_BI1_BB0_BE1_EI1_EE2', 'FF2101102'),\n"
"                    ('IB1_IE1_BB0_BE0_EI2_EI1_EE2', 'F11F00212')\n"
"            ) As mat(name,val);"
msgstr ""
"SELECT ST_RelateMatch('101202FFF', 'TTTTTTFFF') ;\n"
"-- 結果 --\n"
"t\n"
"-- 一般的なインタセクションマトリクスパターンの例および\n"
"-- 不正なジオメトリと\n"
"-- 内部と境界でインタセクトするラインストリングと\n"
"-- 内部と境界でインタセクトするポリゴンの関係を比較する\n"
"-- マトリクスの例\n"
"SELECT mat.name, pat.name, ST_RelateMatch(mat.val, pat.val) As satisfied\n"
"    FROM \n"
"        ( VALUES ('Equality', 'T1FF1FFF1'),\n"
"                ('Overlaps', 'T*T***T**'),\n"
"                ('Within', 'T*F**F***'),\n"
"                ('Disjoint', 'FF*FF****') As pat(name,val)\n"
"        CROSS JOIN \n"
"            (        VALUES ('Self intersections (invalid)', '111111111'),\n"
"                    ('IE2_BI1_BB0_BE1_EI1_EE2', 'FF2101102'),\n"
"                    ('IB1_IE1_BB0_BE0_EI2_EI1_EE2', 'F11F00212')\n"
"            ) As mat(name,val);"

#. Tag: para
#: reference_measure.xml:2957
#, no-c-format
msgid ", <xref linkend=\"ST_Relate\"/>"
msgstr ", <xref linkend=\"ST_Relate\"/>"

#. Tag: refname
#: reference_measure.xml:2963
#, no-c-format
msgid "ST_ShortestLine"
msgstr "ST_ShortestLine"

#. Tag: refpurpose
#: reference_measure.xml:2965
#, no-c-format
msgid "Returns the 2-dimensional shortest line between two geometries"
msgstr "二つのジオメトリの2次元長が最短となるラインを返します。"

#. Tag: funcprototype
#: reference_measure.xml:2970
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_ShortestLine</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_ShortestLine</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef>"

#. Tag: para
#: reference_measure.xml:2985
#, no-c-format
msgid ""
"Returns the 2-dimensional shortest line between two geometries. The function will only return the "
"first shortest line if more than one, that the function finds. If g1 and g2 intersects in just one "
"point the function will return a line with both start and end in that intersection-point. If g1 and g2 "
"are intersecting with more than one point the function will return a line with start and end in the "
"same point but it can be any of the intersecting points. The line returned will always start in g1 and "
"end in g2. The length of the line this function returns will always be the same as ST_Distance returns "
"for g1 and g2."
msgstr ""
"二つのジオメトリの2次元最短ラインを返します。複数発見した場合には、最初のラインを返します。g1とg2が1点"
"でインタセクトする場合には、インタセクトした点を始点と終点として返します。g1とg2が複数点でインタセクト"
"する場合には、インタセクトした点からなるラインを返しますが、どの点になるかは分かりません。返されるライ"
"ンは常にg1が始点でg2が終点です。この関数が返すラインの長さは常にg1とg2を引数に取ったST_Distanceの返り値"
"と同じです。"

#. Tag: para
#: reference_measure.xml:3009
#, no-c-format
msgid "Shortest line between point and linestring"
msgstr "ポイントとラインストリングの最短ライン"

#. Tag: programlisting
#: reference_measure.xml:3012
#, no-c-format
msgid ""
"SELECT ST_AsText(\n"
"        ST_ShortestLine('POINT(100 100)'::geometry, \n"
"                'LINESTRING (20 80, 98 190, 110 180, 50 75 )'::geometry)\n"
"        ) As sline;\n"
"\n"
"        \n"
"   sline\n"
"-----------------\n"
"LINESTRING(100 100,73.0769230769231 115.384615384615)"
msgstr ""
"SELECT ST_AsText(\n"
"        ST_ShortestLine('POINT(100 100)'::geometry, \n"
"                'LINESTRING (20 80, 98 190, 110 180, 50 75 )'::geometry)\n"
"        ) As sline;\n"
"\n"
"        \n"
"   sline\n"
"-----------------\n"
"LINESTRING(100 100,73.0769230769231 115.384615384615)"

#. Tag: para
#: reference_measure.xml:3020
#, no-c-format
msgid "shortest line between polygon and polygon"
msgstr "ポリゴンとポリゴンの最短ライン"

#. Tag: programlisting
#: reference_measure.xml:3023
#, no-c-format
msgid ""
"SELECT ST_AsText(\n"
"                ST_ShortestLine(\n"
"                        ST_GeomFromText('POLYGON((175 150, 20 40, 50 60, 125 100, 175 150))'),\n"
"                        ST_Buffer(ST_GeomFromText('POINT(110 170)'), 20)\n"
"                        ) \n"
"                ) As slinewkt;\n"
"                \n"
" LINESTRING(140.752120669087 125.695053378061,121.111404660392 153.370607753949)"
msgstr ""
"SELECT ST_AsText(\n"
"                ST_ShortestLine(\n"
"                        ST_GeomFromText('POLYGON((175 150, 20 40, 50 60, 125 100, 175 150))'),\n"
"                        ST_Buffer(ST_GeomFromText('POINT(110 170)'), 20)\n"
"                        ) \n"
"                ) As slinewkt;\n"
"                \n"
" LINESTRING(140.752120669087 125.695053378061,121.111404660392 153.370607753949)"

#. Tag: para
#: reference_measure.xml:3035
#, no-c-format
msgid ""
", <xref linkend=\"ST_Distance\"/>, <xref linkend=\"ST_LongestLine\"/>, <xref linkend=\"ST_MaxDistance"
"\"/>"
msgstr ""
", <xref linkend=\"ST_Distance\"/>, <xref linkend=\"ST_LongestLine\"/>, <xref linkend=\"ST_MaxDistance"
"\"/>"

#. Tag: refname
#: reference_measure.xml:3041
#, no-c-format
msgid "ST_Touches"
msgstr "ST_Touches"

#. Tag: refpurpose
#: reference_measure.xml:3043
#, no-c-format
msgid ""
"Returns <varname>TRUE</varname> if the geometries have at least one point in common, but their "
"interiors do not intersect."
msgstr ""
"ジオメトリが共通のポイントを少なくとも一つ持ち、かつ内部でインタセクトしない場合に、<varname>TRUE</"
"varname>を返します。"

#. Tag: funcprototype
#: reference_measure.xml:3049
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_Touches</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef>"
msgstr ""
"<funcdef>boolean <function>ST_Touches</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef>"

#. Tag: para
#: reference_measure.xml:3064
#, no-c-format
msgid ""
"Returns <varname>TRUE</varname> if the only points in common between <parameter>g1</parameter> and "
"<parameter>g2</parameter> lie in the union of the boundaries of <parameter>g1</parameter> and "
"<parameter>g2</parameter>. The <function>ST_Touches</function> relation applies to all Area/Area, Line/"
"Line, Line/Area, Point/Area and Point/Line pairs of relationships, but <emphasis>not</emphasis> to the "
"Point/Point pair."
msgstr ""
"<parameter>g1</parameter>と<parameter>g2</parameter>の共通部分の点が<parameter>g1</parameter>と"
"<parameter>g2</parameter>の境界の結合上にある場合にTRUEを返します。ST_Touchesは、面/面, 線/線, 線/面, "
"点/面, 点/線の全てを受け付けますが、点/点は<emphasis>受け付けません</emphasis>。"

#. Tag: para
#: reference_measure.xml:3071
#, no-c-format
msgid "In mathematical terms, this predicate is expressed as:"
msgstr "数学用語で言うと、この述語は次のように表現されます。"

#. Tag: para
#: reference_measure.xml:3081
#, no-c-format
msgid "The allowable DE-9IM Intersection Matrices for the two geometries are:"
msgstr "二つのジオメトリに対して許されるDE-9IMは次のようになります。"

#. Tag: markup
#: reference_measure.xml:3085
#, no-c-format
msgid "FT*******"
msgstr "FT*******"

#. Tag: markup
#: reference_measure.xml:3089
#, no-c-format
msgid "F**T*****"
msgstr "F**T*****"

#. Tag: markup
#: reference_measure.xml:3093
#, no-c-format
msgid "F***T****"
msgstr "F***T****"

#. Tag: para
#: reference_measure.xml:3102
#, no-c-format
msgid ""
"This function call will automatically include a bounding box comparison that will make use of any "
"indexes that are available on the geometries. To avoid using an index, use <function>_ST_Touches</"
"function> instead."
msgstr ""
"この関数の呼び出しによって、ジオメトリで使用可能なインデクスを使用したバウンディングボックスの比較が自"
"動的に行われます。インデクスの使用を避けるには<function>_ST_Touches</function>を使います。"

#. Tag: para
#: reference_measure.xml:3108
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.28"
msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.28"

#. Tag: para
#: reference_measure.xml:3114
#, no-c-format
msgid ""
"The <function>ST_Touches</function> predicate returns <varname>TRUE</varname> in all the following "
"illustrations."
msgstr "次に示す図全てで、<function>_ST_Touches</function>は<varname>TRUE</varname>を返します。"

#. Tag: programlisting
#: reference_measure.xml:3184
#, no-c-format
msgid ""
"SELECT ST_Touches('LINESTRING(0 0, 1 1, 0 2)'::geometry, 'POINT(1 1)'::geometry);\n"
" st_touches\n"
"------------\n"
" f\n"
"(1 row)\n"
"\n"
"SELECT ST_Touches('LINESTRING(0 0, 1 1, 0 2)'::geometry, 'POINT(0 2)'::geometry);\n"
" st_touches\n"
"------------\n"
" t\n"
"(1 row)"
msgstr ""
"SELECT ST_Touches('LINESTRING(0 0, 1 1, 0 2)'::geometry, 'POINT(1 1)'::geometry);\n"
" st_touches\n"
"------------\n"
" f\n"
"(1 row)\n"
"\n"
"SELECT ST_Touches('LINESTRING(0 0, 1 1, 0 2)'::geometry, 'POINT(0 2)'::geometry);\n"
" st_touches\n"
"------------\n"
" t\n"
"(1 row)"

#. Tag: refname
#: reference_measure.xml:3190
#, no-c-format
msgid "ST_Within"
msgstr "ST_Within"

#. Tag: refpurpose
#: reference_measure.xml:3192
#, no-c-format
msgid "Returns true if the geometry A is completely inside geometry B"
msgstr "ジオメトリAが完全にジオメトリBの内側にある場合にTRUEを返します。"

#. Tag: funcprototype
#: reference_measure.xml:3197
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_Within</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>A</parameter></paramdef> <paramdef><type>geometry </type> <parameter>B</parameter></"
"paramdef>"
msgstr ""
"<funcdef>boolean <function>ST_Within</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>A</parameter></paramdef> <paramdef><type>geometry </type> <parameter>B</parameter></"
"paramdef>"

#. Tag: para
#: reference_measure.xml:3212
#, no-c-format
msgid ""
"Returns TRUE if geometry A is completely inside geometry B. For this function to make sense, the "
"source geometries must both be of the same coordinate projection, having the same SRID. It is a given "
"that if ST_Within(A,B) is true and ST_Within(B,A) is true, then the two geometries are considered "
"spatially equal."
msgstr ""
"ジオメトリAが完全にジオメトリBの内側にある場合にTRUEを返します。この関数が意味を持つためには、与えられ"
"るジオメトリは両方とも同じ座標系で同じSRIDを持つ必要があります。ST_Within(A,B)がTRUEかつST_Within(B,A)"
"がTRUEである場合には、二つのジオメトリは空間的に同じであると考えられます。"

#. Tag: para
#: reference_measure.xml:3227
#, no-c-format
msgid ""
"This function call will automatically include a bounding box comparison that will make use of any "
"indexes that are available on the geometries. To avoid index use, use the function _ST_Within."
msgstr ""
"この関数の呼び出しによって、ジオメトリで使用可能なインデクスを使用したバウンディングボックスの比較が自"
"動的に行われます。インデクスの使用を避けるには_ST_Withinを使います。"

#. Tag: para
#: reference_measure.xml:3235
#, no-c-format
msgid "&sfs_compliant; s2.1.1.2 // s2.1.13.3 - a.Relate(b, 'T*F**F***')"
msgstr "&sfs_compliant; s2.1.1.2 // s2.1.13.3 - a.Relate(b, 'T*F**F***')"

#. Tag: para
#: reference_measure.xml:3238
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.30"
msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.30"

#. Tag: programlisting
#: reference_measure.xml:3243
#, no-c-format
msgid ""
"--a circle within a circle\n"
"SELECT ST_Within(smallc,smallc) As smallinsmall,\n"
"        ST_Within(smallc, bigc) As smallinbig,\n"
"        ST_Within(bigc,smallc) As biginsmall,\n"
"        ST_Within(ST_Union(smallc, bigc), bigc) as unioninbig,\n"
"        ST_Within(bigc, ST_Union(smallc, bigc)) as biginunion,\n"
"        ST_Equals(bigc, ST_Union(smallc, bigc)) as bigisunion\n"
"FROM\n"
"(\n"
"SELECT ST_Buffer(ST_GeomFromText('POINT(50 50)'), 20) As smallc,\n"
"        ST_Buffer(ST_GeomFromText('POINT(50 50)'), 40) As bigc) As foo;\n"
"--Result\n"
" smallinsmall | smallinbig | biginsmall | unioninbig | biginunion | bigisunion\n"
"--------------+------------+------------+------------+------------+------------\n"
" t            | t          | f          | t          | t          | t\n"
"(1 row)"
msgstr ""
"-- 円の中にある円\n"
"SELECT ST_Within(smallc,smallc) As smallinsmall,\n"
"        ST_Within(smallc, bigc) As smallinbig,\n"
"        ST_Within(bigc,smallc) As biginsmall,\n"
"        ST_Within(ST_Union(smallc, bigc), bigc) as unioninbig,\n"
"        ST_Within(bigc, ST_Union(smallc, bigc)) as biginunion,\n"
"        ST_Equals(bigc, ST_Union(smallc, bigc)) as bigisunion\n"
"FROM\n"
"(\n"
"SELECT ST_Buffer(ST_GeomFromText('POINT(50 50)'), 20) As smallc,\n"
"        ST_Buffer(ST_GeomFromText('POINT(50 50)'), 40) As bigc) As foo;\n"
"-- 結果\n"
" smallinsmall | smallinbig | biginsmall | unioninbig | biginunion | bigisunion\n"
"--------------+------------+------------+------------+------------+------------\n"
" t            | t          | f          | t          | t          | t\n"
"(1 row)"

#. Tag: para
#: reference_measure.xml:3254
#, no-c-format
msgid ", <xref linkend=\"ST_Equals\"/>, <xref linkend=\"ST_IsValid\"/>"
msgstr ", <xref linkend=\"ST_Equals\"/>, <xref linkend=\"ST_IsValid\"/>"
