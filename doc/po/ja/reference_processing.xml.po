# SOME DESCRIPTIVE TITLE.
#
# Translators:
# Regina Obe, 2017
# Regina Obe, 2017
# TERAMOTO Ikuhiro <yellow@affrc.go.jp>, 2017
# Teramoto Ikuhiro <yellow@affrc.go.jp>, 2022.
msgid ""
msgstr ""
"Project-Id-Version: PostGIS\n"
"Report-Msgid-Bugs-To: https://bugs.kde.org\n"
"POT-Creation-Date: 2022-11-27 05:42+0000\n"
"PO-Revision-Date: 2022-12-02 03:53+0000\n"
"Last-Translator: Teramoto Ikuhiro <yellow@affrc.go.jp>\n"
"Language-Team: Japanese <https://weblate.osgeo.org/projects/postgis/"
"reference_processingxml/ja/>\n"
"Language: ja\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"X-Generator: Weblate 4.14.1\n"

#. Tag: para
#: reference_processing.xml:5
#, no-c-format
msgid ""
"These functions compute geometric constructions, or alter geometry size or "
"shape."
msgstr ""
"これらの関数は幾何的構造の計算、すなわちジオメトリのサイズや形状を変更しま"
"す。"

#. Tag: title
#: reference_processing.xml:11
#, no-c-format
msgid "Geometry Processing"
msgstr "ジオメトリ処理関数"

#. Tag: refname
#: reference_processing.xml:15
#, no-c-format
msgid "ST_Buffer"
msgstr "ST_Buffer"

#. Tag: refpurpose
#: reference_processing.xml:17
#, no-c-format
msgid ""
"Computes a geometry covering all points within a given distance from a "
"geometry."
msgstr ""
"あるジオメトリからの距離が指定された距離以下となる点全ての集合となるジオメト"
"リを返します。"

#. Tag: funcsynopsis
#: reference_processing.xml:23
#, no-c-format
msgid ""
"<funcprototype> <funcdef>geometry <function>ST_Buffer</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>float </type> <parameter>radius_of_buffer</parameter></"
"paramdef> <paramdef choice=\"opt\"><type>text </type> "
"<parameter>buffer_style_parameters = ''</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>geometry <function>ST_Buffer</"
"function></funcdef> <paramdef><type>geometry </type> <parameter>g1</"
"parameter></paramdef> <paramdef><type>float </type> "
"<parameter>radius_of_buffer</parameter></paramdef> <paramdef><type>integer </"
"type> <parameter>num_seg_quarter_circle</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>geography <function>ST_Buffer</"
"function></funcdef> <paramdef><type>geography </type> <parameter>g1</"
"parameter></paramdef> <paramdef><type>float </type> "
"<parameter>radius_of_buffer</parameter></paramdef> <paramdef "
"choice=\"opt\"><type>text </type> <parameter>buffer_style_parameters</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geography "
"<function>ST_Buffer</function></funcdef> <paramdef><type>geography </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>float </type> "
"<parameter>radius_of_buffer</parameter></paramdef> <paramdef><type>integer </"
"type> <parameter>num_seg_quarter_circle</parameter></paramdef> </"
"funcprototype>"
msgstr ""
"<funcprototype> <funcdef>geometry <function>ST_Buffer</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>float </type> <parameter>radius_of_buffer</parameter></"
"paramdef> <paramdef choice=\"opt\"><type>text </type> "
"<parameter>buffer_style_parameters = ''</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>geometry <function>ST_Buffer</"
"function></funcdef> <paramdef><type>geometry </type> <parameter>g1</"
"parameter></paramdef> <paramdef><type>float </type> "
"<parameter>radius_of_buffer</parameter></paramdef> <paramdef><type>integer </"
"type> <parameter>num_seg_quarter_circle</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>geography <function>ST_Buffer</"
"function></funcdef> <paramdef><type>geography </type> <parameter>g1</"
"parameter></paramdef> <paramdef><type>float </type> "
"<parameter>radius_of_buffer</parameter></paramdef> <paramdef "
"choice=\"opt\"><type>text </type> <parameter>buffer_style_parameters</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geography "
"<function>ST_Buffer</function></funcdef> <paramdef><type>geography </type> "
"<parameter>g1</parameter></paramdef> <paramdef><type>float </type> "
"<parameter>radius_of_buffer</parameter></paramdef> <paramdef><type>integer </"
"type> <parameter>num_seg_quarter_circle</parameter></paramdef> </"
"funcprototype>"

#. Tag: title
#: reference_processing.xml:57 reference_processing.xml:307
#: reference_processing.xml:389 reference_processing.xml:510
#: reference_processing.xml:556 reference_processing.xml:653
#: reference_processing.xml:728 reference_processing.xml:835
#: reference_processing.xml:894 reference_processing.xml:949
#: reference_processing.xml:1029 reference_processing.xml:1126
#: reference_processing.xml:1194 reference_processing.xml:1249
#: reference_processing.xml:1297 reference_processing.xml:1356
#: reference_processing.xml:1507 reference_processing.xml:1628
#: reference_processing.xml:1686 reference_processing.xml:1752
#: reference_processing.xml:1833 reference_processing.xml:1888
#: reference_processing.xml:1931 reference_processing.xml:2023
#: reference_processing.xml:2066 reference_processing.xml:2121
#: reference_processing.xml:2184 reference_processing.xml:2262
#, no-c-format
msgid "Description"
msgstr "説明"

#. Tag: para
#: reference_processing.xml:59
#, no-c-format
msgid ""
"Computes a POLYGON or MULTIPOLYGON that represents all points whose distance "
"from a geometry/geography is less than or equal to a given distance. A "
"negative distance shrinks the geometry rather than expanding it. A negative "
"distance may shrink a polygon completely, in which case POLYGON EMPTY is "
"returned. For points and lines negative distances always return empty "
"results."
msgstr ""
"ジオメトリ/ジオグラフィからの距離が与えられた距離より短くなる全ての点を表現す"
"るPOLYGONまたはMULTIPOLYGONを生成します。距離に負数を指定すると、ジオメトリは"
"拡大されずに縮小されます。負の距離ではポリゴンを完全に縮小し切る可能性があ"
"り、その時はPOLYGON EMPTYを返します。ポイントとラインで負の距離を指定すると、"
"常に空を返します。"

#. Tag: para
#: reference_processing.xml:65
#, no-c-format
msgid ""
"For geometry, the distance is specified in the units of the Spatial "
"Reference System of the geometry. For geography, the distance is specified "
"in meters."
msgstr ""
"ジオメトリの場合、指定される距離の単位は、ジオメトリの空間参照系の単位です。"
"ジオグラフィの場合、指定される距離の単位はメートルです。"

#. Tag: para
#: reference_processing.xml:69
#, no-c-format
msgid ""
"The optional third parameter controls the buffer accuracy and style. The "
"accuracy of circular arcs in the buffer is specified as the number of line "
"segments used to approximate a quarter circle (default is 8). The buffer "
"style can be specifed by providing a list of blank-separated key=value pairs "
"as follows:"
msgstr ""
"3番目のパラメータは任意で、バッファの精度とスタイルを扱います。バッファの円弧"
"の精度は四分の一円の近似に使用される辺の数です (デフォルトは8)。バッファのス"
"タイルは キー=値 のペアを空白区切りでリストにして指定します。キーは次の通りで"
"す。"

#. Tag: para
#: reference_processing.xml:76
#, no-c-format
msgid ""
"'quad_segs=#' : number of line segments used to approximate a quarter circle "
"(default is 8)."
msgstr "'quad_segs=#' : 四分の一円近似に使う辺の数 (デフォルトは8)。"

#. Tag: para
#: reference_processing.xml:79
#, no-c-format
msgid ""
"'endcap=round|flat|square' : endcap style (defaults to \"round\"). 'butt' is "
"accepted as a synonym for 'flat'."
msgstr ""
"'endcap=round|flat|square' : 終端スタイル (デフォルトは "
"\"round\")。'butt'は'flat'の同義語として受け付けます。"

#. Tag: para
#: reference_processing.xml:82
#, no-c-format
msgid ""
"'join=round|mitre|bevel' : join style (defaults to \"round\"). 'miter' is "
"accepted as a synonym for 'mitre'."
msgstr ""
"'join=round|mitre|bevel' : 接続スタイル (デフォルトは"
"\"round\")。'miter'も'mitre'の同義語として受け付けます。"

#. Tag: para
#: reference_processing.xml:85
#, no-c-format
msgid ""
"'mitre_limit=#.#' : mitre ratio limit (only affects mitered join style). "
"'miter_limit' is accepted as a synonym for 'mitre_limit'."
msgstr ""
"'mitre_limit=#.#' : マイター比 (訳注: 継ぎ目の内側と外側の距離と線幅との比)の"
"最大値 (継ぎ目スタイルがmiterである場合のみ有"
"効)。'miter_limit'は'mitre_limit'の同義語として受け付けます。"

#. Tag: para
#: reference_processing.xml:88
#, no-c-format
msgid ""
"'side=both|left|right' : 'left' or 'right' performs a single-sided buffer on "
"the geometry, with the buffered side relative to the direction of the line. "
"This is only applicable to LINESTRING geometry and does not affect POINT or "
"POLYGON geometries. By default end caps are square."
msgstr ""
"'side=both|left|right' : 'left'または'right'については、線の方向から見た相対"
"的なサイドで、ジオメトリの片側バッファを実行します。これはLINESTRINGジオメト"
"リにだけ関連して、POINTまたはPOLYGONジオメトリには影響がありません。デフォル"
"トでは終端スタイルは四角形です。"

#. Tag: para
#: reference_processing.xml:94
#, no-c-format
msgid ""
"For geography, this is a wrapper around the geometry implementation. It "
"determines a planar spatial reference system that best fits the bounding box "
"of the geography object (trying UTM, Lambert Azimuthal Equal Area (LAEA) "
"North/South pole, and finally Mercator ). The buffer is computed in the "
"planar space, and then transformed back to WGS84. This may not produce the "
"desired behavior if the input object is much larger than a UTM zone or "
"crosses the dateline"
msgstr ""
"ジオグラフィでは、この関数はジオメトリ実装をラップした関数です。ジオグラフィ"
"オブジェクトおｎバウンディングボックスに最も適した平面空間参照系を決定します "
"(UTM、北極南極のランベルト正積方位図法 (LAEA)、最後はメルカトルを試していきま"
"す)。バッファは平面空間上で計算され、WGS84に戻されます。入力オブジェクトがUTM"
"ゾーンより非常に大きい場合や日付変更線を超える場合には、望ましくない振る舞い"
"になる場合があります。"

#. Tag: para
#: reference_processing.xml:101
#, no-c-format
msgid ""
"Buffer output is always a valid polygonal geometry. Buffer can handle "
"invalid inputs, so buffering by distance 0 is sometimes used as a way of "
"repairing invalid polygons. <xref linkend=\"ST_MakeValid\"/> can also be "
"used for this purpose."
msgstr ""
"バッファ出力は常に妥当なポリゴンジオメトリです。バッファは不正な入力を処理で"
"きるので、不正なポリゴンを修復する方法として、距離0のバッファリングが使われま"
"す。同じ目的の関数としては<xref linkend=\"ST_MakeValid\"/>が使われます。"

#. Tag: para
#: reference_processing.xml:107
#, no-c-format
msgid ""
"Buffering is sometimes used to perform a within-distance search. For this "
"use case it is more efficient to use <xref linkend=\"ST_DWithin\"/>."
msgstr ""
"バッファ作成は時々、距離内にある地物を検索する際に使われます。この使い方につ"
"いては、<xref linkend=\"ST_DWithin\"/>の方が効率的です。"

#. Tag: para
#: reference_processing.xml:110 reference_processing.xml:1396
#, no-c-format
msgid ""
"This function ignores the Z dimension. It always gives a 2D result even when "
"used on a 3D geometry."
msgstr ""
"この関数はZ値を無視します。この関数を3次元ジオメトリ上で使用したとしても、常"
"に2次元の結果となります。"

#. Tag: para
#: reference_processing.xml:113
#, no-c-format
msgid ""
"Enhanced: 2.5.0 - ST_Buffer geometry support was enhanced to allow for side "
"buffering specification <code>side=both|left|right</code>."
msgstr ""
"Enhanced: 2.5.0 - ST_Bufferのジオメトリ対応版が強化され、バッファを施す側を"
"<code>side=both|left|right</code>で指定できるようになりました。"

#. Tag: para
#: reference_processing.xml:114
#, no-c-format
msgid ""
"Availability: 1.5 - ST_Buffer was enhanced to support different endcaps and "
"join types. These are useful for example to convert road linestrings into "
"polygon roads with flat or square edges instead of rounded edges. Thin "
"wrapper for geography was added."
msgstr ""
"Availability: 1.5 - ST_Bufferが強化され、様々な終端と継ぎ目に対応するようにな"
"りました。たとえば、道路ラインストリングを道路ポリゴンに変換する際に終端を丸"
"でなく平面や四角で処理したい場合などに使えます。ジオグラフィ用の薄いラッパが"
"追加されました。"

#. Tag: para
#: reference_processing.xml:118 reference_processing.xml:744
#: reference_processing.xml:1043 reference_processing.xml:1209
#: reference_processing.xml:1392 reference_processing.xml:1646
#: reference_processing.xml:1757 reference_processing.xml:1897
#: reference_processing.xml:1954 reference_processing.xml:2204
#: reference_processing.xml:2285
#, no-c-format
msgid "Performed by the GEOS module."
msgstr "GEOSモジュールで実現しています。"

#. Tag: para
#: reference_processing.xml:119 reference_processing.xml:676
#, no-c-format
msgid "&sfs_compliant; s2.1.1.3"
msgstr "&sfs_compliant; s2.1.1.3"

#. Tag: para
#: reference_processing.xml:120
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM IEC 13249-3: 5.1.30"
msgstr "&sqlmm_compliant; SQL-MM IEC 13249-3: 5.1.30"

#. Tag: title
#: reference_processing.xml:124 reference_processing.xml:325
#: reference_processing.xml:423 reference_processing.xml:527
#: reference_processing.xml:600 reference_processing.xml:682
#: reference_processing.xml:751 reference_processing.xml:853
#: reference_processing.xml:908 reference_processing.xml:978
#: reference_processing.xml:1050 reference_processing.xml:1150
#: reference_processing.xml:1215 reference_processing.xml:1267
#: reference_processing.xml:1309 reference_processing.xml:1402
#: reference_processing.xml:1524 reference_processing.xml:1717
#: reference_processing.xml:1856 reference_processing.xml:1902
#: reference_processing.xml:1959 reference_processing.xml:2036
#: reference_processing.xml:2093 reference_processing.xml:2210
#: reference_processing.xml:2291
#, no-c-format
msgid "Examples"
msgstr "例"

#. Tag: para
#: reference_processing.xml:135
#, no-c-format
msgid "quad_segs=8 (default)"
msgstr "quad_segs=8 (デフォルト)"

#. Tag: programlisting
#: reference_processing.xml:138
#, no-c-format
msgid ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText('POINT(100 90)'),\n"
" 50, 'quad_segs=8');"
msgstr ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText('POINT(100 90)'),\n"
" 50, 'quad_segs=8');"

#. Tag: para
#: reference_processing.xml:146
#, no-c-format
msgid "quad_segs=2 (lame)"
msgstr "quad_segs=2 (不十分)"

#. Tag: programlisting
#: reference_processing.xml:149
#, no-c-format
msgid ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText('POINT(100 90)'),\n"
" 50, 'quad_segs=2');"
msgstr ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText('POINT(100 90)'),\n"
" 50, 'quad_segs=2');"

#. Tag: para
#: reference_processing.xml:158
#, no-c-format
msgid "endcap=round join=round (default)"
msgstr "endcap=round join=round (デフォルト)"

#. Tag: programlisting
#: reference_processing.xml:161
#, no-c-format
msgid ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'endcap=round join=round');"
msgstr ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'endcap=round join=round');"

#. Tag: para
#: reference_processing.xml:169
#, no-c-format
msgid "endcap=square"
msgstr "endcap=square"

#. Tag: programlisting
#: reference_processing.xml:172
#, no-c-format
msgid ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'endcap=square join=round');"
msgstr ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'endcap=square join=round');"

#. Tag: para
#: reference_processing.xml:180
#, no-c-format
msgid "endcap=flat"
msgstr "endcap=flat"

#. Tag: programlisting
#: reference_processing.xml:183
#, no-c-format
msgid ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'endcap=flat join=round');"
msgstr ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'endcap=flat join=round');"

#. Tag: para
#: reference_processing.xml:192
#, no-c-format
msgid "join=bevel"
msgstr "join=bevel"

#. Tag: programlisting
#: reference_processing.xml:195
#, no-c-format
msgid ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'join=bevel');"
msgstr ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'join=bevel');"

#. Tag: para
#: reference_processing.xml:203
#, no-c-format
msgid "join=mitre mitre_limit=5.0 (default mitre limit)"
msgstr "join=mitre mitre_limit=5.0 (デフォルトの最大マイター比)"

#. Tag: programlisting
#: reference_processing.xml:206
#, no-c-format
msgid ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'join=mitre mitre_limit=5.0');"
msgstr ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'join=mitre mitre_limit=5.0');"

#. Tag: para
#: reference_processing.xml:214
#, no-c-format
msgid "join=mitre mitre_limit=1"
msgstr "join=mitre mitre_limit=1"

#. Tag: programlisting
#: reference_processing.xml:217
#, no-c-format
msgid ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'join=mitre mitre_limit=1.0');"
msgstr ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'join=mitre mitre_limit=1.0');"

#. Tag: para
#: reference_processing.xml:226
#, no-c-format
msgid "side=left"
msgstr "side=left"

#. Tag: programlisting
#: reference_processing.xml:229
#, no-c-format
msgid ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'side=left');"
msgstr ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'side=left');"

#. Tag: para
#: reference_processing.xml:237
#, no-c-format
msgid "side=right"
msgstr "side=right"

#. Tag: programlisting
#: reference_processing.xml:240
#, no-c-format
msgid ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'side=right');"
msgstr ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'side=right');"

#. Tag: para
#: reference_processing.xml:248
#, no-c-format
msgid "side=left join=mitre"
msgstr "side=left join=mitre"

#. Tag: programlisting
#: reference_processing.xml:251
#, no-c-format
msgid ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'side=left join=mitre');"
msgstr ""
"SELECT ST_Buffer(\n"
" ST_GeomFromText(\n"
"  'LINESTRING(50 50,150 150,150 50)'\n"
" ), 10, 'side=left join=mitre');"

#. Tag: para
#: reference_processing.xml:260
#, no-c-format
msgid "right-hand-winding, polygon boundary side=left"
msgstr "右回り、ポリゴン境界は左"

#. Tag: programlisting
#: reference_processing.xml:263
#, no-c-format
msgid ""
"SELECT ST_Buffer(\n"
"ST_ForceRHR(\n"
"ST_Boundary(\n"
" ST_GeomFromText(\n"
"'POLYGON ((50 50, 50 150, 150 150, 150 50, 50 50))'))),\n"
" ), 20, 'side=left');"
msgstr ""
"SELECT ST_Buffer(\n"
"ST_ForceRHR(\n"
"ST_Boundary(\n"
" ST_GeomFromText(\n"
"'POLYGON ((50 50, 50 150, 150 150, 150 50, 50 50))'))),\n"
" ), 20, 'side=left');"

#. Tag: para
#: reference_processing.xml:270
#, no-c-format
msgid "right-hand-winding, polygon boundary side=right"
msgstr "右回り、ポリゴン境界は右"

#. Tag: programlisting
#: reference_processing.xml:273
#, no-c-format
msgid ""
"SELECT ST_Buffer(\n"
"ST_ForceRHR(\n"
"ST_Boundary(\n"
" ST_GeomFromText(\n"
"'POLYGON ((50 50, 50 150, 150 150, 150 50, 50 50))'))\n"
"), 20,'side=right')"
msgstr ""
"SELECT ST_Buffer(\n"
"ST_ForceRHR(\n"
"ST_Boundary(\n"
" ST_GeomFromText(\n"
"'POLYGON ((50 50, 50 150, 150 150, 150 50, 50 50))'))\n"
"), 20,'side=right')"

#. Tag: programlisting
#: reference_processing.xml:280
#, no-c-format
msgid ""
"--A buffered point approximates a circle\n"
"-- A buffered point forcing approximation of (see diagram)\n"
"-- 2 points per quarter circle is poly with 8 sides (see diagram)\n"
"SELECT ST_NPoints(ST_Buffer(ST_GeomFromText('POINT(100 90)'), 50)) As "
"promisingcircle_pcount,\n"
"ST_NPoints(ST_Buffer(ST_GeomFromText('POINT(100 90)'), 50, 2)) As "
"lamecircle_pcount;\n"
"\n"
"promisingcircle_pcount | lamecircle_pcount\n"
"------------------------+-------------------\n"
"             33 |                9\n"
"\n"
"--A lighter but lamer circle\n"
"-- only 2 points per quarter circle is an octagon\n"
"--Below is a 100 meter octagon\n"
"-- Note coordinates are in NAD 83 long lat which we transform\n"
"to Mass state plane meter and then buffer to get measurements in meters;\n"
"SELECT ST_AsText(ST_Buffer(\n"
"ST_Transform(\n"
"ST_SetSRID(ST_Point(-71.063526, 42.35785),4269), 26986)\n"
",100,2)) As octagon;\n"
"----------------------\n"
"POLYGON((236057.59057465 900908.759918696,236028.301252769 "
"900838.049240578,235\n"
"957.59057465 900808.759918696,235886.879896532 "
"900838.049240578,235857.59057465\n"
"900908.759918696,235886.879896532 900979.470596815,235957.59057465 "
"901008.759918\n"
"696,236028.301252769 900979.470596815,236057.59057465 900908.759918696))"
msgstr ""
"-- ポイントに対する近似円バッファ\n"
"-- 4分の1円を2点で近似するようポイントに施したバッファは8辺のポリゴンです。\n"
"-- (ダイアグラム参照)\n"
"SELECT ST_NPoints(ST_Buffer(ST_GeomFromText('POINT(100 90)'), 50)) As "
"promisingcircle_pcount,\n"
"ST_NPoints(ST_Buffer(ST_GeomFromText('POINT(100 90)'), 50, 2)) As "
"lamecircle_pcount;\n"
"\n"
"promisingcircle_pcount | lamecircle_pcount\n"
"------------------------+-------------------\n"
"             33 |                9\n"
"\n"
"-- 手軽だけれども不十分な円(4分の1円で2点だけの八角形)\n"
"-- 次に示すのは100メートルの八角形です。\n"
"-- 座標系は、元はNAD 83経度緯度で、\n"
"-- メートル単位マサチューセッツ州平面に変換してから、\n"
"-- メートルでバッファを取っています。\n"
"SELECT ST_AsText(ST_Buffer(\n"
"ST_Transform(\n"
"ST_SetSRID(ST_Point(-71.063526, 42.35785),4269), 26986)\n"
",100,2)) As octagon;\n"
"----------------------\n"
"POLYGON((236057.59057465 900908.759918696,236028.301252769 "
"900838.049240578,235\n"
"957.59057465 900808.759918696,235886.879896532 "
"900838.049240578,235857.59057465\n"
"900908.759918696,235886.879896532 900979.470596815,235957.59057465 "
"901008.759918\n"
"696,236028.301252769 900979.470596815,236057.59057465 900908.759918696))"

#. Tag: title
#: reference_processing.xml:284 reference_processing.xml:349
#: reference_processing.xml:486 reference_processing.xml:532
#: reference_processing.xml:632 reference_processing.xml:702
#: reference_processing.xml:808 reference_processing.xml:858
#: reference_processing.xml:999 reference_processing.xml:1105
#: reference_processing.xml:1145 reference_processing.xml:1172
#: reference_processing.xml:1228 reference_processing.xml:1272
#: reference_processing.xml:1325 reference_processing.xml:1484
#: reference_processing.xml:1600 reference_processing.xml:1657
#: reference_processing.xml:1729 reference_processing.xml:1800
#: reference_processing.xml:1861 reference_processing.xml:1907
#: reference_processing.xml:2000 reference_processing.xml:2041
#: reference_processing.xml:2100 reference_processing.xml:2153
#: reference_processing.xml:2227 reference_processing.xml:2319
#, no-c-format
msgid "See Also"
msgstr "関連情報"

#. Tag: para
#: reference_processing.xml:286
#, no-c-format
msgid ""
", <xref linkend=\"ST_DWithin\"/>, <xref linkend=\"ST_SetSRID\"/>, <xref "
"linkend=\"ST_Transform\"/>, <xref linkend=\"ST_Union\"/>, <xref "
"linkend=\"ST_MakeValid\"/>"
msgstr ""
", <xref linkend=\"ST_DWithin\"/>, <xref linkend=\"ST_SetSRID\"/>, <xref "
"linkend=\"ST_Transform\"/>, <xref linkend=\"ST_Union\"/>, <xref "
"linkend=\"ST_MakeValid\"/>"

#. Tag: refname
#: reference_processing.xml:292
#, no-c-format
msgid "ST_BuildArea"
msgstr "ST_BuildArea"

#. Tag: refpurpose
#: reference_processing.xml:294
#, no-c-format
msgid "Creates a polygonal geometry formed by the linework of a geometry."
msgstr "与えられたジオメトリの構成ラインから面ジオメトリを生成します。"

#. Tag: funcprototype
#: reference_processing.xml:299
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_BuildArea</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geom</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_BuildArea</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geom</parameter></paramdef>"

#. Tag: para
#: reference_processing.xml:309
#, no-c-format
msgid ""
"Creates an areal geometry formed by the constituent linework of the input "
"geometry. The input can be LINESTRINGS, MULTILINESTRINGS, POLYGONS, "
"MULTIPOLYGONS, and GeometryCollections. The result is a Polygon or "
"MultiPolygon, depending on input. If the input linework does not form "
"polygons, NULL is returned."
msgstr ""
"与えられたジオメトリの構成ラインから面ジオメトリを生成します。入力として"
"LINESTRING, MULTILINESTRING, POLYGON, MULTIPOLYGON, GEOMETRYCOLLECTIONを取る"
"ことができます。返り値は、ポリゴンまたはマルチポリゴンで、どちらになるかは入"
"力に依存します。入力構成ラインがポリゴンを形成しない場合はNULLを返します。"

#. Tag: para
#: reference_processing.xml:315
#, no-c-format
msgid "This function assumes all inner geometries represent holes"
msgstr "この関数は全ての内部ジオメトリが穴を表現すると仮定します。"

#. Tag: para
#: reference_processing.xml:318
#, no-c-format
msgid ""
"Input linework must be correctly noded for this function to work properly"
msgstr ""
"この関数が正しく動作するには、入力ラインに正しくノードが作成されている必要が"
"あります。"

#. Tag: para
#: reference_processing.xml:321 reference_processing.xml:1045
#, no-c-format
msgid "Availability: 1.1.0"
msgstr "Availability: 1.1.0"

#. Tag: para
#: reference_processing.xml:335
#, no-c-format
msgid "These will create a donut"
msgstr "ドーナツを生成します。"

#. Tag: programlisting
#: reference_processing.xml:338
#, no-c-format
msgid ""
"--using polygons\n"
"SELECT ST_BuildArea(ST_Collect(smallc,bigc))\n"
"FROM (SELECT\n"
"    ST_Buffer(\n"
"      ST_GeomFromText('POINT(100 90)'), 25) As smallc,\n"
"    ST_Buffer(ST_GeomFromText('POINT(100 90)'), 50) As bigc) As foo;"
msgstr ""
"-- ポリゴンを使用\n"
"SELECT ST_BuildArea(ST_Collect(smallc,bigc))\n"
"FROM (SELECT\n"
"    ST_Buffer(\n"
"      ST_GeomFromText('POINT(100 90)'), 25) As smallc,\n"
"    ST_Buffer(ST_GeomFromText('POINT(100 90)'), 50) As bigc) As foo;"

#. Tag: programlisting
#: reference_processing.xml:340
#, no-c-format
msgid ""
"--using linestrings\n"
"SELECT ST_BuildArea(ST_Collect(smallc,bigc))\n"
"FROM (SELECT\n"
"    ST_ExteriorRing(ST_Buffer(\n"
"      ST_GeomFromText('POINT(100 90)'), 25)) As smallc,\n"
"    ST_ExteriorRing(ST_Buffer(ST_GeomFromText('POINT(100 90)'), 50)) As "
"bigc) As foo;"
msgstr ""
"-- ラインストリングを使用\n"
"SELECT ST_BuildArea(ST_Collect(smallc,bigc))\n"
"FROM (SELECT\n"
"    ST_ExteriorRing(ST_Buffer(\n"
"      ST_GeomFromText('POINT(100 90)'), 25)) As smallc,\n"
"    ST_ExteriorRing(ST_Buffer(ST_GeomFromText('POINT(100 90)'), 50)) As "
"bigc) As foo;"

#. Tag: para
#: reference_processing.xml:351
#, no-c-format
msgid ""
", <xref linkend=\"ST_MakePolygon\"/>, <xref linkend=\"ST_MakeValid\"/>, "
"<xref linkend=\"ST_BdPolyFromText\"/>, <xref linkend=\"ST_BdMPolyFromText\"/"
"> (wrappers to this function with standard OGC interface)"
msgstr ""
", <xref linkend=\"ST_MakePolygon\"/>, <xref linkend=\"ST_MakeValid\"/>, "
"<xref linkend=\"ST_BdPolyFromText\"/>, <xref linkend=\"ST_BdMPolyFromText\"/"
"> (wrappers to this function with standard OGC interface)"

#. Tag: refname
#: reference_processing.xml:363
#, no-c-format
msgid "ST_Centroid"
msgstr "ST_Centroid"

#. Tag: refpurpose
#: reference_processing.xml:365
#, no-c-format
msgid "Returns the geometric center of a geometry."
msgstr "ジオメトリの幾何学的重心を返します。"

#. Tag: funcsynopsis
#: reference_processing.xml:369
#, no-c-format
msgid ""
"<funcprototype> <funcdef>geometry <function>ST_Centroid</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>geography <function>ST_Centroid</"
"function></funcdef> <paramdef><type>geography </type> <parameter>g1</"
"parameter></paramdef> <paramdef choice=\"opt\"><type>boolean </type> "
"<parameter>use_spheroid=true</parameter></paramdef> </funcprototype>"
msgstr ""
"<funcprototype> <funcdef>geometry <function>ST_Centroid</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>geography <function>ST_Centroid</"
"function></funcdef> <paramdef><type>geography </type> <parameter>g1</"
"parameter></paramdef> <paramdef choice=\"opt\"><type>boolean </type> "
"<parameter>use_spheroid=true</parameter></paramdef> </funcprototype>"

#. Tag: para
#: reference_processing.xml:391
#, no-c-format
msgid ""
"Computes a point which is the geometric center of mass of a geometry. For "
"[<varname>MULTI</varname>]<varname>POINT</varname>s, the centroid is the "
"arithmetic mean of the input coordinates. For [<varname>MULTI</"
"varname>]<varname>LINESTRING</varname>s, the centroid is computed using the "
"weighted length of each line segment. For [<varname>MULTI</"
"varname>]<varname>POLYGON</varname>s, the centroid is computed in terms of "
"area. If an empty geometry is supplied, an empty "
"<varname>GEOMETRYCOLLECTION</varname> is returned. If <varname>NULL</"
"varname> is supplied, <varname>NULL</varname> is returned. If "
"<varname>CIRCULARSTRING</varname> or <varname>COMPOUNDCURVE</varname> are "
"supplied, they are converted to linestring with CurveToLine first, then same "
"than for <varname>LINESTRING</varname>"
msgstr ""
"ジオメトリの幾何学的重心を計算します。[<varname>MULTI</"
"varname>]<varname>POINT</varname>に対しては、入力座標の算術平均として計算され"
"ます。 [<varname>MULTI</varname>]<varname>LINESTRING</varname>に対しては、各"
"辺の重み付き長さとして計算されます。 [<varname>MULTI</"
"varname>]<varname>POLYGON</varname>に対しては、面積から計算されます。空ジオメ"
"トリが与えられた場合には、空の<varname>GEOMETRYCOLLECTION</varname>が返されま"
"す。<varname>NULL</varname>が与えられた場合には、<varname>NULL</varname>が返"
"されます。<varname>CIRCULARSTRING</varname>または<varname>COMPOUNDCURVE</"
"varname>が与えられた場合には、まずCurveToLineで直線に変換されてから、"
"<varname>LINESTRING</varname>と同じ計算を行います。"

#. Tag: para
#: reference_processing.xml:404
#, no-c-format
msgid ""
"For mixed-dimension input, the result is equal to the centroid of the "
"component Geometries of highest dimension (since the lower-dimension "
"geometries contribute zero \"weight\" to the centroid)."
msgstr ""
"入力が混合次元の場合には、結果は最大次元のジオメトリの重心と同じになります "
"(低次元ジオメトリは重心に0の「重み」を与えるためです)。"

#. Tag: para
#: reference_processing.xml:407
#, no-c-format
msgid ""
"Note that for polygonal geometries the centroid does not necessarily lie in "
"the interior of the polygon. For example, see the diagram below of the "
"centroid of a C-shaped polygon. To construct a point guaranteed to lie in "
"the interior of a polygon use <xref linkend=\"ST_PointOnSurface\"/>."
msgstr ""
"ポリゴンジオメトリに対しては、重心は必ずしもポリゴンの内部にあるわけではない"
"ことに注意して下さい。たとえば、下図のCの形のポリゴンの重心をご覧下さい。ポリ"
"ゴン内部にポイントがあることを保障するには<xref "
"linkend=\"ST_PointOnSurface\"/>を使います。"

#. Tag: para
#: reference_processing.xml:414
#, no-c-format
msgid ""
"New in 2.3.0 : supports <varname>CIRCULARSTRING</varname> and "
"<varname>COMPOUNDCURVE</varname> (using CurveToLine)"
msgstr ""
"New in 2.3.0 : <varname>CIRCULARSTRING</varname>と<varname>COMPOUNDCURVE</"
"varname>に対応するようになりました (CurveToLineを使います)。"

#. Tag: para
#: reference_processing.xml:416
#, no-c-format
msgid "Availability: 2.4.0 support for geography was introduced."
msgstr "Availability: 2.4.0 ジオグラフィが導入されました。"

#. Tag: para
#: reference_processing.xml:418
#, no-c-format
msgid "&sfs_compliant;"
msgstr "&sfs_compliant;"

#. Tag: para
#: reference_processing.xml:419
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 8.1.4, 9.5.5"
msgstr "&sqlmm_compliant; SQL-MM 3: 8.1.4, 9.5.5"

#. Tag: para
#: reference_processing.xml:425
#, no-c-format
msgid ""
"In the following illustrations the red dot is the centroid of the source "
"geometry."
msgstr "次に示す図では、赤点が入力ジオメトリの重心です。"

#. Tag: para
#: reference_processing.xml:438
#, no-c-format
msgid "Centroid of a <varname>MULTIPOINT</varname>"
msgstr "<varname>MULTIPOINT</varname>の重心"

#. Tag: para
#: reference_processing.xml:449
#, no-c-format
msgid "Centroid of a <varname>LINESTRING</varname>"
msgstr "<varname>LINESTRING</varname>の重心"

#. Tag: para
#: reference_processing.xml:462
#, no-c-format
msgid "Centroid of a <varname>POLYGON</varname>"
msgstr "<varname>POLYGON</varname>の重心"

#. Tag: para
#: reference_processing.xml:473
#, no-c-format
msgid "Centroid of a <varname>GEOMETRYCOLLECTION</varname>"
msgstr "<varname>GEOMETRYCOLLECTION</varname>の重心"

#. Tag: programlisting
#: reference_processing.xml:482
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_Centroid('MULTIPOINT ( -1 0, -1 2, -1 3, -1 4, -1 7, 0 "
"1, 0 3, 1 1, 2 0, 6 0, 7 8, 9 8, 10 6 )'));\n"
"                st_astext\n"
"------------------------------------------\n"
" POINT(2.30769230769231 3.30769230769231)\n"
"(1 row)\n"
"\n"
"SELECT ST_AsText(ST_centroid(g))\n"
"FROM  ST_GeomFromText('CIRCULARSTRING(0 2, -1 1,0 0, 0.5 0, 1 0, 2 1, 1 2, "
"0.5 2, 0 2)')  AS g ;\n"
"------------------------------------------\n"
"POINT(0.5 1)\n"
"\n"
"\n"
"SELECT ST_AsText(ST_centroid(g))\n"
"FROM  ST_GeomFromText('COMPOUNDCURVE(CIRCULARSTRING(0 2, -1 1,0 0),(0 0, 0.5 "
"0, 1 0),CIRCULARSTRING( 1 0, 2 1, 1 2),(1 2, 0.5 2, 0 2))' ) AS g;\n"
"------------------------------------------\n"
"POINT(0.5 1)"
msgstr ""
"SELECT ST_AsText(ST_Centroid('MULTIPOINT ( -1 0, -1 2, -1 3, -1 4, -1 7, 0 "
"1, 0 3, 1 1, 2 0, 6 0, 7 8, 9 8, 10 6 )'));\n"
"                st_astext\n"
"------------------------------------------\n"
" POINT(2.30769230769231 3.30769230769231)\n"
"(1 row)\n"
"\n"
"SELECT ST_AsText(ST_centroid(g))\n"
"FROM  ST_GeomFromText('CIRCULARSTRING(0 2, -1 1,0 0, 0.5 0, 1 0, 2 1, 1 2, "
"0.5 2, 0 2)')  AS g ;\n"
"------------------------------------------\n"
"POINT(0.5 1)\n"
"\n"
"\n"
"SELECT ST_AsText(ST_centroid(g))\n"
"FROM  ST_GeomFromText('COMPOUNDCURVE(CIRCULARSTRING(0 2, -1 1,0 0),(0 0, 0.5 "
"0, 1 0),CIRCULARSTRING( 1 0, 2 1, 1 2),(1 2, 0.5 2, 0 2))' ) AS g;\n"
"------------------------------------------\n"
"POINT(0.5 1)"

#. Tag: para
#: reference_processing.xml:488
#, no-c-format
msgid ", <xref linkend=\"ST_GeometricMedian\"/>"
msgstr ", <xref linkend=\"ST_GeometricMedian\"/>"

#. Tag: refname
#: reference_processing.xml:494
#, no-c-format
msgid "ST_ChaikinSmoothing"
msgstr "ST_ChaikinSmoothing"

#. Tag: refpurpose
#: reference_processing.xml:495
#, no-c-format
msgid "Returns a smoothed version of a geometry, using the Chaikin algorithm"
msgstr ""
"チャイキンのアルゴリズムを使って、与えられたジオメトリの平滑化されたものを返"
"します。"

#. Tag: funcprototype
#: reference_processing.xml:500
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_ChaikinSmoothing</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>geom</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>integer</type> <parameter>nIterations = 1</"
"parameter></paramdef> <paramdef choice=\"opt\"><type>boolean</type> "
"<parameter>preserveEndPoints = false</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_ChaikinSmoothing</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>geom</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>integer</type> <parameter>nIterations = "
"1</parameter></paramdef> <paramdef choice=\"opt\"><type>boolean</type> "
"<parameter>preserveEndPoints = false</parameter></paramdef>"

#. Tag: para
#: reference_processing.xml:511
#, no-c-format
msgid ""
"Returns a \"smoothed\" version of the given geometry using the Chaikin "
"algorithm. See <ulink url=\"http://www.idav.ucdavis.edu/education/CAGDNotes/"
"Chaikins-Algorithm/Chaikins-Algorithm.html\">Chaikins-Algorithm</ulink> for "
"an explanation of the process. For each iteration the number of vertex "
"points will double. The function puts new vertex points at 1/4 of the line "
"before and after each point and removes the original point. To reduce the "
"number of points use one of the simplification functions on the result. The "
"new points gets interpolated values for all included dimensions, also z and "
"m."
msgstr ""
"チャイキンのアルゴリズムを使って、与えられたジオメトリの「平滑化された」もの"
"を返します。処理の説明については<ulink url=\"http://www.idav.ucdavis.edu/"
"education/CAGDNotes/Chaikins-Algorithm/Chaikins-Algorithm.html\">Chaikins-"
"Algorithm</ulink>をご覧下さい。繰り返しごとに頂点の数は倍になります。この関数"
"は新しい頂点を、各ポイントの前後に、ラインの1/4の位置に置き、元のポイントを削"
"除します。ポイント数を減らすには、結果に対して簡略化関数を使います。新しいポ"
"イントの、ZとMを含むジオメトリの全ての次元に補間値が付きます。"

#. Tag: para
#: reference_processing.xml:517
#, no-c-format
msgid "Second argument, number of iterations is limited to max 5 iterations"
msgstr "第2引数は繰り返し回数で最大5回です。"

#. Tag: para
#: reference_processing.xml:518
#, no-c-format
msgid ""
"Note third argument is only valid for polygons, and will be ignored for "
"linestrings"
msgstr "第3引数はポリゴンにのみ有効です。ラインストリングでは無視されます。"

#. Tag: para
#: reference_processing.xml:519 reference_processing.xml:2031
#, no-c-format
msgid ""
"This function handles 3D and the third dimension will affect the result."
msgstr "この関数は3次元を扱います。第3次元は結果に影響を与えます。"

#. Tag: para
#: reference_processing.xml:520
#, no-c-format
msgid ""
"Note that returned geometry will get more points than the original. To "
"reduce the number of points again use one of the simplification functions on "
"the result. (see <xref linkend=\"ST_Simplify\"/> and <xref "
"linkend=\"ST_SimplifyVW\"/>)"
msgstr ""
"返却ジオメトリが元のジオメトリより多くのポイントを得ることに注意して下さい。"
"再びポイント数を低減するには、単純化関数を使います (<xref "
"linkend=\"ST_Simplify\"/>と<xref linkend=\"ST_SimplifyVW\"/>参照)。"

#. Tag: para
#: reference_processing.xml:523 reference_processing.xml:849
#: reference_processing.xml:1303
#, no-c-format
msgid "Availability: 2.5.0"
msgstr "Availability: 2.5.0"

#. Tag: para
#: reference_processing.xml:528
#, no-c-format
msgid "A triangle is smoothed"
msgstr "トライアングルの平滑化"

#. Tag: programlisting
#: reference_processing.xml:529
#, no-c-format
msgid ""
"select ST_AsText(ST_ChaikinSmoothing(geom)) smoothed\n"
"FROM (SELECT  'POLYGON((0 0, 8 8, 0 16, 0 0))'::geometry geom) As foo;\n"
"┌───────────────────────────────────────────┐\n"
"│                 smoothed                  │\n"
"├───────────────────────────────────────────┤\n"
"│ POLYGON((2 2,6 6,6 10,2 14,0 12,0 4,2 2)) │\n"
"└───────────────────────────────────────────┘"
msgstr ""
"select ST_AsText(ST_ChaikinSmoothing(geom)) smoothed\n"
"FROM (SELECT  'POLYGON((0 0, 8 8, 0 16, 0 0))'::geometry geom) As foo;\n"
"┌───────────────────────────────────────────┐\n"
"│                 smoothed                  │\n"
"├───────────────────────────────────────────┤\n"
"│ POLYGON((2 2,6 6,6 10,2 14,0 12,0 4,2 2)) │\n"
"└───────────────────────────────────────────┘"

#. Tag: para
#: reference_processing.xml:533 reference_processing.xml:859
#, no-c-format
msgid ", <xref linkend=\"ST_SimplifyVW\"/>"
msgstr ", <xref linkend=\"ST_SimplifyVW\"/>"

#. Tag: refname
#: reference_processing.xml:540
#, no-c-format
msgid "ST_ConcaveHull"
msgstr "ST_ConcaveHull"

#. Tag: refpurpose
#: reference_processing.xml:541
#, no-c-format
msgid ""
"Computes a possibly concave geometry that encloses all input geometry "
"vertices"
msgstr ""
"全ての入力ジオメトリの頂点を囲むことができる凹多角形のジオメトリを計算しま"
"す。"

#. Tag: funcprototype
#: reference_processing.xml:546
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_ConcaveHull</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>param_geom</parameter></"
"paramdef> <paramdef><type>float </type> <parameter>param_pctconvex</"
"parameter></paramdef> <paramdef choice=\"opt\"><type>boolean </type> "
"<parameter>param_allow_holes = false</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_ConcaveHull</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>param_geom</parameter></"
"paramdef> <paramdef><type>float </type> <parameter>param_pctconvex</"
"parameter></paramdef> <paramdef choice=\"opt\"><type>boolean </type> "
"<parameter>param_allow_holes = false</parameter></paramdef>"

#. Tag: para
#: reference_processing.xml:558
#, no-c-format
msgid ""
"A concave hull of a geometry is a possibly concave geometry that encloses "
"the vertices of the input geometry. In the general case the concave hull is "
"a Polygon. The polygon will not contain holes unless the optional "
"<varname>param_allow_holes</varname> argument is specified as true. The "
"concave hull of two or more collinear points is a two-point LineString. The "
"concave hull of one or more identical points is a Point."
msgstr ""
"ジオメトリの凹包は入力ジオメトリの頂点を囲む凹のジオメトリです。一般的に凹包"
"はポリゴンになります。<varname>param_allow_holes</varname>がTRUEに指定されて"
"いない場合には、ポリゴンには穴がありません。二つ以上の共線点の凹包は2点のライ"
"ンストリングです。一つ以上の同一点の凹包はポイントです。"

#. Tag: para
#: reference_processing.xml:567
#, no-c-format
msgid ""
"One can think of a concave hull as \"shrink-wrapping\" a set of points. This "
"is different to the <link linkend=\"ST_ConvexHull\">convex hull</link>, "
"which is more like wrapping a rubber band around the points. The concave "
"hull generally has a smaller area and represents a more natural boundary for "
"the input points. Like the convex hull, the vertices of a concave hull are a "
"subset of the input points, and all other input points are contained within "
"it."
msgstr ""
"凹包はジオメトリの集合を「真空パック」したジオメトリと考えることができます。"
"輪ゴムで囲うのに似ている<link linkend=\"ST_ConvexHull\">凸包</link>と違いま"
"す。凹包は一般的に面積が小さく、また入力ポイントからなる境界が自然になりま"
"す。凸包のように凹包の頂点は入力ポイントの部分集合で、全ての他の入力ポイント"
"は、凹包内に含まれます。"

#. Tag: para
#: reference_processing.xml:575
#, no-c-format
msgid ""
"The <varname>param_pctconvex</varname> controls the concaveness of the "
"computed hull. A value of 1 produces the convex hull. A value of 0 produces "
"a hull of maximum concaveness (but still a single polygon). Values between 1 "
"and 0 produce hulls of increasing concaveness. Choosing a suitable value "
"depends on the nature of the input data, but often values between 0.3 and "
"0.1 produce reasonable results."
msgstr ""
"<varname>param_pctconvex</varname>は計算される凹包の凹度を制御するためのもの"
"です。1では凸包になります。0では最大の凹度の凹包になります (ただし単一ポリゴ"
"ンです)。1から0に変化させると凹度が増加していきます。適切な値は入力データ固有"
"のものですが、しばしば0.3と0.の間が適正な結果となります。"

#. Tag: para
#: reference_processing.xml:583
#, no-c-format
msgid ""
"Technically, the <varname>param_pctconvex</varname> determines a length as a "
"fraction of the difference between the longest and shortest edges in the "
"Delaunay Triangulation of the input points. Edges longer than this length "
"are \"eroded\" from the triangulation. The triangles remaining form the "
"concave hull."
msgstr ""
"技術的には<varname>param_pctconvex</varname>は、入力ポイントのドロネー三角分"
"割における最長エッジと最短エッジとの差の割合で示される長さを決定します。この"
"長さより長いエッジは、三角分割で「浸食」されます。残りの三角形は凹包を形成し"
"ます。"

#. Tag: para
#: reference_processing.xml:589
#, no-c-format
msgid ""
"For point and linear inputs, the hull will enclose all the points of the "
"inputs. For polygonal inputs, the hull will enclose all the points of the "
"input <emphasis>and also</emphasis> all the areas covered by the input. If "
"you want a point-wise hull of a polygonal input, convert it to points first, "
"using <xref linkend=\"ST_Points\"/>."
msgstr ""
"ポイントとラインの入力では、凹包は全ての入力ポイントを包みます。ポリゴン入力"
"では、凹包は全ての入力ポイントを含み、<emphasis>なおかつ</emphasis>入力ポリゴ"
"ンが及ぶ全ての面を含みます。ポリゴン入力でもポイントでみた凹包が欲しい場合に"
"は、<xref linkend=\"ST_Points\"/>を使って、まずポイントに変換して下さい。"

#. Tag: para
#: reference_processing.xml:591
#, no-c-format
msgid ""
"This is not an aggregate function. To compute the concave hull of a set of "
"geometries use <xref linkend=\"ST_Collect\"/> (e.g. "
"<code>ST_ConcaveHull( ST_Collect( geom ), 0.80)</code>."
msgstr ""
"これは集約関数ではありません。ジオメトリ集合の凹包の計算には<xref "
"linkend=\"ST_Collect\"/>を使います (例 "
"<code>ST_ConcaveHull( ST_Collect( geom ), 0.80)</code>)。"

#. Tag: para
#: reference_processing.xml:595 reference_processing.xml:1758
#, no-c-format
msgid "Availability: 2.0.0"
msgstr "Availability: 2.0.0"

#. Tag: para
#: reference_processing.xml:596
#, no-c-format
msgid "Enhanced: 3.3.0, GEOS native implementation enabled for GEOS 3.11+"
msgstr "Enhanced: 3.3.0, GEOS 3.11からGEOSネイティブ実装が有効になりました"

#. Tag: para
#: reference_processing.xml:608
#, no-c-format
msgid "Concave Hull of a MultiPoint"
msgstr "マルチポイントの凹包"

#. Tag: programlisting
#: reference_processing.xml:611
#, no-c-format
msgid ""
"SELECT ST_AsText( ST_ConcaveHull(\n"
"        'MULTIPOINT ((10 72), (53 76), (56 66), (63 58), (71 51), (81 48), "
"(91 46), (101 45), (111 46), (121 47), (131 50), (140 55), (145 64), (144 "
"74), (135 80), (125 83), (115 85), (105 87), (95 89), (85 91), (75 93), (65 "
"95), (55 98), (45 102), (37 107), (29 114), (22 122), (19 132), (18 142), "
"(21 151), (27 160), (35 167), (44 172), (54 175), (64 178), (74 180), (84 "
"181), (94 181), (104 181), (114 181), (124 181), (134 179), (144 177), (153 "
"173), (162 168), (171 162), (177 154), (182 145), (184 135), (139 132), (136 "
"142), (128 149), (119 153), (109 155), (99 155), (89 155), (79 153), (69 "
"150), (61 144), (63 134), (72 128), (82 125), (92 123), (102 121), (112 "
"119), (122 118), (132 116), (142 113), (151 110), (161 106), (170 102), (178 "
"96), (185 88), (189 78), (190 68), (189 58), (185 49), (179 41), (171 34), "
"(162 29), (153 25), (143 23), (133 21), (123 19), (113 19), (102 19), (92 "
"19), (82 19), (72 21), (62 22), (52 25), (43 29), (33 34), (25 41), (19 49), "
"(14 58), (21 73), (31 74), (42 74), (173 134), (161 134), (150 133), (97 "
"104), (52 117), (157 156), (94 171), (112 106), (169 73), (58 165), (149 "
"40), (70 33), (147 157), (48 153), (140 96), (47 129), (173 55), (144 86), "
"(159 67), (150 146), (38 136), (111 170), (124 94), (26 59), (60 41), (71 "
"162), (41 64), (88 110), (122 34), (151 97), (157 56), (39 146), (88 33), "
"(159 45), (47 56), (138 40), (129 165), (33 48), (106 31), (169 147), (37 "
"122), (71 109), (163 89), (37 156), (82 170), (180 72), (29 142), (46 41), "
"(59 155), (124 106), (157 80), (175 82), (56 50), (62 116), (113 95), (144 "
"167))',\n"
"         0.1 ) );\n"
"---st_astext--\n"
"POLYGON ((18 142, 21 151, 27 160, 35 167, 44 172, 54 175, 64 178, 74 180, 84 "
"181, 94 181, 104 181, 114 181, 124 181, 134 179, 144 177, 153 173, 162 168, "
"171 162, 177 154, 182 145, 184 135, 173 134, 161 134, 150 133, 139 132, 136 "
"142, 128 149, 119 153, 109 155, 99 155, 89 155, 79 153, 69 150, 61 144, 63 "
"134, 72 128, 82 125, 92 123, 102 121, 112 119, 122 118, 132 116, 142 113, "
"151 110, 161 106, 170 102, 178 96, 185 88, 189 78, 190 68, 189 58, 185 49, "
"179 41, 171 34, 162 29, 153 25, 143 23, 133 21, 123 19, 113 19, 102 19, 92 "
"19, 82 19, 72 21, 62 22, 52 25, 43 29, 33 34, 25 41, 19 49, 14 58, 10 72, 21 "
"73, 31 74, 42 74, 53 76, 56 66, 63 58, 71 51, 81 48, 91 46, 101 45, 111 46, "
"121 47, 131 50, 140 55, 145 64, 144 74, 135 80, 125 83, 115 85, 105 87, 95 "
"89, 85 91, 75 93, 65 95, 55 98, 45 102, 37 107, 29 114, 22 122, 19 132, 18 "
"142))"
msgstr ""
"SELECT ST_AsText( ST_ConcaveHull(\n"
"        'MULTIPOINT ((10 72), (53 76), (56 66), (63 58), (71 51), (81 48), "
"(91 46), (101 45), (111 46), (121 47), (131 50), (140 55), (145 64), (144 "
"74), (135 80), (125 83), (115 85), (105 87), (95 89), (85 91), (75 93), (65 "
"95), (55 98), (45 102), (37 107), (29 114), (22 122), (19 132), (18 142), "
"(21 151), (27 160), (35 167), (44 172), (54 175), (64 178), (74 180), (84 "
"181), (94 181), (104 181), (114 181), (124 181), (134 179), (144 177), (153 "
"173), (162 168), (171 162), (177 154), (182 145), (184 135), (139 132), (136 "
"142), (128 149), (119 153), (109 155), (99 155), (89 155), (79 153), (69 "
"150), (61 144), (63 134), (72 128), (82 125), (92 123), (102 121), (112 "
"119), (122 118), (132 116), (142 113), (151 110), (161 106), (170 102), (178 "
"96), (185 88), (189 78), (190 68), (189 58), (185 49), (179 41), (171 34), "
"(162 29), (153 25), (143 23), (133 21), (123 19), (113 19), (102 19), (92 "
"19), (82 19), (72 21), (62 22), (52 25), (43 29), (33 34), (25 41), (19 49), "
"(14 58), (21 73), (31 74), (42 74), (173 134), (161 134), (150 133), (97 "
"104), (52 117), (157 156), (94 171), (112 106), (169 73), (58 165), (149 "
"40), (70 33), (147 157), (48 153), (140 96), (47 129), (173 55), (144 86), "
"(159 67), (150 146), (38 136), (111 170), (124 94), (26 59), (60 41), (71 "
"162), (41 64), (88 110), (122 34), (151 97), (157 56), (39 146), (88 33), "
"(159 45), (47 56), (138 40), (129 165), (33 48), (106 31), (169 147), (37 "
"122), (71 109), (163 89), (37 156), (82 170), (180 72), (29 142), (46 41), "
"(59 155), (124 106), (157 80), (175 82), (56 50), (62 116), (113 95), (144 "
"167))',\n"
"         0.1 ) );\n"
"---st_astext--\n"
"POLYGON ((18 142, 21 151, 27 160, 35 167, 44 172, 54 175, 64 178, 74 180, 84 "
"181, 94 181, 104 181, 114 181, 124 181, 134 179, 144 177, 153 173, 162 168, "
"171 162, 177 154, 182 145, 184 135, 173 134, 161 134, 150 133, 139 132, 136 "
"142, 128 149, 119 153, 109 155, 99 155, 89 155, 79 153, 69 150, 61 144, 63 "
"134, 72 128, 82 125, 92 123, 102 121, 112 119, 122 118, 132 116, 142 113, "
"151 110, 161 106, 170 102, 178 96, 185 88, 189 78, 190 68, 189 58, 185 49, "
"179 41, 171 34, 162 29, 153 25, 143 23, 133 21, 123 19, 113 19, 102 19, 92 "
"19, 82 19, 72 21, 62 22, 52 25, 43 29, 33 34, 25 41, 19 49, 14 58, 10 72, 21 "
"73, 31 74, 42 74, 53 76, 56 66, 63 58, 71 51, 81 48, 91 46, 101 45, 111 46, "
"121 47, 131 50, 140 55, 145 64, 144 74, 135 80, 125 83, 115 85, 105 87, 95 "
"89, 85 91, 75 93, 65 95, 55 98, 45 102, 37 107, 29 114, 22 122, 19 132, 18 "
"142))"

#. Tag: para
#: reference_processing.xml:620
#, no-c-format
msgid "Concave Hull of a MultiPoint, allowing holes"
msgstr "穴を作れるマルチポイントの凹包"

#. Tag: programlisting
#: reference_processing.xml:623
#, no-c-format
msgid ""
"SELECT ST_AsText( ST_ConcaveHull(\n"
"        'MULTIPOINT ((132 64), (114 64), (99 64), (81 64), (63 64), (57 49), "
"(52 36), (46 20), (37 20), (26 20), (32 36), (39 55), (43 69), (50 84), (57 "
"100), (63 118), (68 133), (74 149), (81 164), (88 180), (101 180), (112 "
"180), (119 164), (126 149), (132 131), (139 113), (143 100), (150 84), (157 "
"69), (163 51), (168 36), (174 20), (163 20), (150 20), (143 36), (139 49), "
"(132 64), (99 151), (92 138), (88 124), (81 109), (74 93), (70 82), (83 82), "
"(99 82), (112 82), (126 82), (121 96), (114 109), (110 122), (103 138), (99 "
"151), (34 27), (43 31), (48 44), (46 58), (52 73), (63 73), (61 84), (72 "
"71), (90 69), (101 76), (123 71), (141 62), (166 27), (150 33), (159 36), "
"(146 44), (154 53), (152 62), (146 73), (134 76), (143 82), (141 91), (130 "
"98), (126 104), (132 113), (128 127), (117 122), (112 133), (119 144), (108 "
"147), (119 153), (110 171), (103 164), (92 171), (86 160), (88 142), (79 "
"140), (72 124), (83 131), (79 118), (68 113), (63 102), (68 93), (35 45))',\n"
"         0.15, true ) );\n"
"---st_astext--\n"
"POLYGON ((43 69, 50 84, 57 100, 63 118, 68 133, 74 149, 81 164, 88 180, 101 "
"180, 112 180, 119 164, 126 149, 132 131, 139 113, 143 100, 150 84, 157 69, "
"163 51, 168 36, 174 20, 163 20, 150 20, 143 36, 139 49, 132 64, 114 64, 99 "
"64, 81 64, 63 64, 57 49, 52 36, 46 20, 37 20, 26 20, 32 36, 35 45, 39 55, 43 "
"69), (88 124, 81 109, 74 93, 83 82, 99 82, 112 82, 121 96, 114 109, 110 122, "
"103 138, 92 138, 88 124))"
msgstr ""
"SELECT ST_AsText( ST_ConcaveHull(\n"
"        'MULTIPOINT ((132 64), (114 64), (99 64), (81 64), (63 64), (57 49), "
"(52 36), (46 20), (37 20), (26 20), (32 36), (39 55), (43 69), (50 84), (57 "
"100), (63 118), (68 133), (74 149), (81 164), (88 180), (101 180), (112 "
"180), (119 164), (126 149), (132 131), (139 113), (143 100), (150 84), (157 "
"69), (163 51), (168 36), (174 20), (163 20), (150 20), (143 36), (139 49), "
"(132 64), (99 151), (92 138), (88 124), (81 109), (74 93), (70 82), (83 82), "
"(99 82), (112 82), (126 82), (121 96), (114 109), (110 122), (103 138), (99 "
"151), (34 27), (43 31), (48 44), (46 58), (52 73), (63 73), (61 84), (72 "
"71), (90 69), (101 76), (123 71), (141 62), (166 27), (150 33), (159 36), "
"(146 44), (154 53), (152 62), (146 73), (134 76), (143 82), (141 91), (130 "
"98), (126 104), (132 113), (128 127), (117 122), (112 133), (119 144), (108 "
"147), (119 153), (110 171), (103 164), (92 171), (86 160), (88 142), (79 "
"140), (72 124), (83 131), (79 118), (68 113), (63 102), (68 93), (35 45))',\n"
"         0.15, true ) );\n"
"---st_astext--\n"
"POLYGON ((43 69, 50 84, 57 100, 63 118, 68 133, 74 149, 81 164, 88 180, 101 "
"180, 112 180, 119 164, 126 149, 132 131, 139 113, 143 100, 150 84, 157 69, "
"163 51, 168 36, 174 20, 163 20, 150 20, 143 36, 139 49, 132 64, 114 64, 99 "
"64, 81 64, 63 64, 57 49, 52 36, 46 20, 37 20, 26 20, 32 36, 35 45, 39 55, 43 "
"69), (88 124, 81 109, 74 93, 83 82, 99 82, 112 82, 121 96, 114 109, 110 122, "
"103 138, 92 138, 88 124))"

#. Tag: para
#: reference_processing.xml:626
#, no-c-format
msgid "Using with ST_Collect to compute the concave hull of a geometry set."
msgstr "ST_Collectの併用でジオメトリ集合の凹包の計算。"

#. Tag: programlisting
#: reference_processing.xml:628
#, no-c-format
msgid ""
"-- Compute estimate of infected area based on point observations\n"
"SELECT disease_type,\n"
"    ST_ConcaveHull( ST_Collect(obs_pnt), 0.3 ) AS geom\n"
"  FROM disease_obs\n"
"  GROUP BY disease_type;"
msgstr ""
"-- ポイントの観察に基づいた感染領域の見積もりの計算\n"
"SELECT disease_type,\n"
"    ST_ConcaveHull( ST_Collect(obs_pnt), 0.3 ) AS geom\n"
"  FROM disease_obs\n"
"  GROUP BY disease_type;"

#. Tag: para
#: reference_processing.xml:633
#, no-c-format
msgid ""
", <xref linkend=\"ST_Collect\"/>, <xref linkend=\"ST_AlphaShape\"/>, <xref "
"linkend=\"ST_OptimalAlphaShape\"/>"
msgstr ""
", <xref linkend=\"ST_Collect\"/>, <xref linkend=\"ST_AlphaShape\"/>, <xref "
"linkend=\"ST_OptimalAlphaShape\"/>"

#. Tag: refname
#: reference_processing.xml:639
#, no-c-format
msgid "ST_ConvexHull"
msgstr "ST_ConvexHull"

#. Tag: refpurpose
#: reference_processing.xml:640
#, no-c-format
msgid "Computes the convex hull of a geometry."
msgstr "ジオメトリの凸包を計算します。"

#. Tag: funcprototype
#: reference_processing.xml:645
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_ConvexHull</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_ConvexHull</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef>"

#. Tag: para
#: reference_processing.xml:654
#, no-c-format
msgid ""
"Computes the convex hull of a geometry. The convex hull is the smallest "
"convex geometry that encloses all geometries in the input."
msgstr ""
"ジオメトリの凸包を計算します。凸包は、入力ジオメトリのすべてを囲む最小の凸ジ"
"オメトリです。"

#. Tag: para
#: reference_processing.xml:658
#, no-c-format
msgid ""
"One can think of the convex hull as the geometry obtained by wrapping an "
"rubber band around a set of geometries. This is different from a <link "
"linkend=\"ST_ConcaveHull\">concave hull</link> which is analogous to "
"\"shrink-wrapping\" the geometries. A convex hull is often used to determine "
"an affected area based on a set of point observations."
msgstr ""
"凸包は、ジオメトリの集合に輪ゴムをかけて得られるジオメトリと見ることができま"
"す。これは「真空パック」に似ている<link linkend=\"ST_ConcaveHull\">凹包</"
"link>と異なります。凸包は観察ポイントの集合に基づいて、響を受けた領域を決定す"
"るために、しばしば使われます。"

#. Tag: para
#: reference_processing.xml:665
#, no-c-format
msgid ""
"In the general case the convex hull is a Polygon. The convex hull of two or "
"more collinear points is a two-point LineString. The convex hull of one or "
"more identical points is a Point."
msgstr ""
"凸包は一般的にポリゴンです。二つ以上の同一線上のポイントの凸包は、2点のライン"
"ストリングになります。一つ以上の同一ポイントの凸包はポイントです。"

#. Tag: para
#: reference_processing.xml:669
#, no-c-format
msgid ""
"This is not an aggregate function. To compute the convex hull of a set of "
"geometries, use <xref linkend=\"ST_Collect\"/> to aggregate them into a "
"geometry collection (e.g. <code>ST_ConvexHull(ST_Collect(geom))</code>."
msgstr ""
"集約関数ではありません。ジオメトリ集合の凸包を計算するには、ジオメトリ集合を"
"ジオメトリコレクションに集約する<xref linkend=\"ST_Collect\"/>を使います "
"(<code>ST_ConvexHull(ST_Collect(geom))</code>等)。"

#. Tag: para
#: reference_processing.xml:674
#, no-c-format
msgid "Performed by the GEOS module"
msgstr "GEOSモジュールで実現しています。"

#. Tag: para
#: reference_processing.xml:677
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM IEC 13249-3: 5.1.16"
msgstr "&sqlmm_compliant; SQL-MM IEC 13249-3: 5.1.16"

#. Tag: para
#: reference_processing.xml:678 reference_processing.xml:746
#: reference_processing.xml:974 reference_processing.xml:1520
#, no-c-format
msgid "&Z_support;"
msgstr "&Z_support;"

#. Tag: para
#: reference_processing.xml:690
#, no-c-format
msgid "Convex Hull of a MultiLinestring and a MultiPoint"
msgstr "マルチラインストリングとマルチポイントの凸包"

#. Tag: programlisting
#: reference_processing.xml:693
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_ConvexHull(\n"
"    ST_Collect(\n"
"        ST_GeomFromText('MULTILINESTRING((100 190,10 8),(150 10, 20 30))'),\n"
"            ST_GeomFromText('MULTIPOINT(50 5, 150 30, 50 10, 10 10)')\n"
"            )) );\n"
"---st_astext--\n"
"POLYGON((50 5,10 8,10 10,100 190,150 30,150 10,50 5))"
msgstr ""
"SELECT ST_AsText(ST_ConvexHull(\n"
"    ST_Collect(\n"
"        ST_GeomFromText('MULTILINESTRING((100 190,10 8),(150 10, 20 30))'),\n"
"            ST_GeomFromText('MULTIPOINT(50 5, 150 30, 50 10, 10 10)')\n"
"            )) );\n"
"---st_astext--\n"
"POLYGON((50 5,10 8,10 10,100 190,150 30,150 10,50 5))"

#. Tag: para
#: reference_processing.xml:696
#, no-c-format
msgid "Using with ST_Collect to compute the convex hulls of geometry sets."
msgstr "ST_Collectを使ってジオメトリ集合の凸包を計算します。"

#. Tag: programlisting
#: reference_processing.xml:698
#, no-c-format
msgid ""
"--Get estimate of infected area based on point observations\n"
"SELECT d.disease_type,\n"
"    ST_ConvexHull(ST_Collect(d.geom)) As geom\n"
"    FROM disease_obs As d\n"
"    GROUP BY d.disease_type;"
msgstr ""
"-- 観測ポイントに基づく感染面積の推定\n"
"SELECT d.disease_type,\n"
"    ST_ConvexHull(ST_Collect(d.geom)) As geom\n"
"    FROM disease_obs As d\n"
"    GROUP BY d.disease_type;"

#. Tag: para
#: reference_processing.xml:703
#, no-c-format
msgid ""
", <xref linkend=\"ST_ConcaveHull\"/>, <xref "
"linkend=\"ST_MinimumBoundingCircle\"/>"
msgstr ""
", <xref linkend=\"ST_ConcaveHull\"/>, <xref "
"linkend=\"ST_MinimumBoundingCircle\"/>"

#. Tag: refname
#: reference_processing.xml:709
#, no-c-format
msgid "ST_DelaunayTriangles"
msgstr "ST_DelaunayTriangles"

#. Tag: refpurpose
#: reference_processing.xml:711
#, no-c-format
msgid "Returns the Delaunay triangulation of the vertices of a geometry."
msgstr "ジオメトリの頂点のドローネ三角形を返します。"

#. Tag: funcprototype
#: reference_processing.xml:718
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_DelaunayTriangles</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>float </type> <parameter>tolerance = 0.0</"
"parameter></paramdef> <paramdef choice=\"opt\"><type>int4 </type> "
"<parameter>flags = 0</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_DelaunayTriangles</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>float </type> <parameter>tolerance = 0."
"0</parameter></paramdef> <paramdef choice=\"opt\"><type>int4 </type> "
"<parameter>flags = 0</parameter></paramdef>"

#. Tag: para
#: reference_processing.xml:730
#, no-c-format
msgid ""
"Computes the <ulink url=\"http://en.wikipedia.org/wiki/"
"Delaunay_triangulation\">Delaunay triangulation</ulink> of the vertices of "
"the input geometry. The optional <varname>tolerance</varname> can be used to "
"snap nearby input vertices together, which improves robustness in some "
"situations. The result geometry is bounded by the convex hull of the input "
"vertices. The result geometry representation is determined by the "
"<varname>flags</varname> code:"
msgstr ""
"入力ジオメトリの頂点の<ulink url=\"http://en.wikipedia.org/wiki/"
"Delaunay_triangulation\">ドロネー三角形</ulink>を計算します。任意引数<varname"
">tolerance</varname>は、入力頂点が近いとスナップする際に使います。ロバスト性"
"が増すことがあります。結果ジオメトリの境界は入力頂点の凸包と同じになります。"
"結果ジオメトリの表現は、次に示す<varname>flags</varname>コードによって変わり"
"ます。"

#. Tag: para
#: reference_processing.xml:739
#, no-c-format
msgid "<code>0</code> - a GEOMETRYCOLLECTION of triangular POLYGONs (default)"
msgstr "<code>0</code> - 三角形のPOLYGONからなるGEOMETRYCOLLECTION (デフォルト)"

#. Tag: para
#: reference_processing.xml:740
#, no-c-format
msgid "<code>1</code> - a MULTILINESTRING of the edges of the triangulation"
msgstr "<code>1</code> - 三角形の辺のMULTILINESTRING"

#. Tag: para
#: reference_processing.xml:741
#, no-c-format
msgid "<code>2</code> - A TIN of the triangulation"
msgstr "<code>2</code> - 三角形のTIN"

#. Tag: para
#: reference_processing.xml:745
#, no-c-format
msgid "Availability: 2.1.0"
msgstr "Availability: 2.1.0"

#. Tag: para
#: reference_processing.xml:747
#, no-c-format
msgid "&T_support;"
msgstr "&T_support;"

#. Tag: para
#: reference_processing.xml:760
#, no-c-format
msgid "Original polygons"
msgstr "元のポリゴン"

#. Tag: programlisting
#: reference_processing.xml:763
#, no-c-format
msgid ""
"-- our original geometry --\n"
"    ST_Union(ST_GeomFromText('POLYGON((175 150, 20 40,\n"
"            50 60, 125 100, 175 150))'),\n"
"        ST_Buffer(ST_GeomFromText('POINT(110 170)'), 20)\n"
"        )"
msgstr ""
"-- 元のジオメトリ --\n"
"    ST_Union(ST_GeomFromText('POLYGON((175 150, 20 40,\n"
"            50 60, 125 100, 175 150))'),\n"
"        ST_Buffer(ST_GeomFromText('POINT(110 170)'), 20)\n"
"        )"

#. Tag: para
#: reference_processing.xml:771
#, no-c-format
msgid ""
"ST_DelaunayTriangles of 2 polygons: delaunay triangle polygons each triangle "
"themed in different color"
msgstr ""
"二つのポリゴンのST_DelaunayTriangles: ポリゴンごとに異なる色をつけたドロネー"
"三角形ポリゴン"

#. Tag: programlisting
#: reference_processing.xml:774
#, no-c-format
msgid ""
"-- geometries overlaid multilinestring triangles\n"
"SELECT\n"
"    ST_DelaunayTriangles(\n"
"        ST_Union(ST_GeomFromText('POLYGON((175 150, 20 40,\n"
"            50 60, 125 100, 175 150))'),\n"
"        ST_Buffer(ST_GeomFromText('POINT(110 170)'), 20)\n"
"        ))\n"
"     As  dtriag;"
msgstr ""
"-- マルチラインストリングによる三角形を載せたジオメトリ\n"
"SELECT\n"
"    ST_DelaunayTriangles(\n"
"        ST_Union(ST_GeomFromText('POLYGON((175 150, 20 40,\n"
"            50 60, 125 100, 175 150))'),\n"
"        ST_Buffer(ST_GeomFromText('POINT(110 170)'), 20)\n"
"        ))\n"
"     As  dtriag;"

#. Tag: para
#: reference_processing.xml:781
#, no-c-format
msgid "-- delaunay triangles as multilinestring"
msgstr "マルチラインストリングにしたドロネー三角形"

#. Tag: programlisting
#: reference_processing.xml:784
#, no-c-format
msgid ""
"SELECT\n"
"    ST_DelaunayTriangles(\n"
"        ST_Union(ST_GeomFromText('POLYGON((175 150, 20 40,\n"
"            50 60, 125 100, 175 150))'),\n"
"        ST_Buffer(ST_GeomFromText('POINT(110 170)'), 20)\n"
"        ),0.001,1)\n"
"     As  dtriag;"
msgstr ""
"SELECT\n"
"    ST_DelaunayTriangles(\n"
"        ST_Union(ST_GeomFromText('POLYGON((175 150, 20 40,\n"
"            50 60, 125 100, 175 150))'),\n"
"        ST_Buffer(ST_GeomFromText('POINT(110 170)'), 20)\n"
"        ),0.001,1)\n"
"     As  dtriag;"

#. Tag: para
#: reference_processing.xml:792
#, no-c-format
msgid "-- delaunay triangles of 45 points as 55 triangle polygons"
msgstr "45個のポイントから生成した55個のドロネー三角形"

#. Tag: programlisting
#: reference_processing.xml:795
#, no-c-format
msgid ""
"-- this produces a table of 42 points that form an L shape\n"
"SELECT (ST_DumpPoints(ST_GeomFromText(\n"
"'MULTIPOINT(14 14,34 14,54 14,74 14,94 14,114 14,134 14,\n"
"150 14,154 14,154 6,134 6,114 6,94 6,74 6,54 6,34 6,\n"
"14 6,10 6,8 6,7 7,6 8,6 10,6 30,6 50,6 70,6 90,6 110,6 130,\n"
"6 150,6 170,6 190,6 194,14 194,14 174,14 154,14 134,14 114,\n"
"14 94,14 74,14 54,14 34,14 14)'))).geom\n"
"    INTO TABLE l_shape;\n"
"-- output as individual polygon triangles\n"
"SELECT ST_AsText((ST_Dump(geom)).geom) As wkt\n"
"FROM ( SELECT ST_DelaunayTriangles(ST_Collect(geom)) As geom\n"
"FROM l_shape) As foo;\n"
"\n"
"---wkt ---\n"
"POLYGON((6 194,6 190,14 194,6 194))\n"
"POLYGON((14 194,6 190,14 174,14 194))\n"
"POLYGON((14 194,14 174,154 14,14 194))\n"
"POLYGON((154 14,14 174,14 154,154 14))\n"
"POLYGON((154 14,14 154,150 14,154 14))\n"
"POLYGON((154 14,150 14,154 6,154 14))\n"
":\n"
":"
msgstr ""
"-- L字型に42個のポイントを持つテーブルを生成\n"
"SELECT (ST_DumpPoints(ST_GeomFromText(\n"
"'MULTIPOINT(14 14,34 14,54 14,74 14,94 14,114 14,134 14,\n"
"150 14,154 14,154 6,134 6,114 6,94 6,74 6,54 6,34 6,\n"
"14 6,10 6,8 6,7 7,6 8,6 10,6 30,6 50,6 70,6 90,6 110,6 130,\n"
"6 150,6 170,6 190,6 194,14 194,14 174,14 154,14 134,14 114,\n"
"14 94,14 74,14 54,14 34,14 14)'))).geom\n"
"    INTO TABLE l_shape;\n"
"-- 個別の三角形ポリゴンとして出力\n"
"SELECT ST_AsText((ST_Dump(geom)).geom) As wkt\n"
"FROM ( SELECT ST_DelaunayTriangles(ST_Collect(geom)) As geom\n"
"FROM l_shape) As foo;\n"
"\n"
"---wkt ---\n"
"POLYGON((6 194,6 190,14 194,6 194))\n"
"POLYGON((14 194,6 190,14 174,14 194))\n"
"POLYGON((14 194,14 174,154 14,14 194))\n"
"POLYGON((154 14,14 174,14 154,154 14))\n"
"POLYGON((154 14,14 154,150 14,154 14))\n"
"POLYGON((154 14,150 14,154 6,154 14))\n"
":\n"
":"

#. Tag: para
#: reference_processing.xml:803
#, no-c-format
msgid "Example using vertices with Z values."
msgstr "Z値を持つ頂点を使う例。"

#. Tag: programlisting
#: reference_processing.xml:804
#, no-c-format
msgid ""
"-- 3D multipoint --\n"
"SELECT ST_AsText(ST_DelaunayTriangles(ST_GeomFromText(\n"
"         'MULTIPOINT Z(14 14 10, 150 14 100,34 6 25, 20 10 150)'))) As wkt;\n"
"\n"
"-----wkt----\n"
"GEOMETRYCOLLECTION Z (POLYGON Z ((14 14 10,20 10 150,34 6 25,14 14 10))\n"
" ,POLYGON Z ((14 14 10,34 6 25,150 14 100,14 14 10)))"
msgstr ""
"-- 3D multipoint --\n"
"SELECT ST_AsText(ST_DelaunayTriangles(ST_GeomFromText(\n"
"         'MULTIPOINT Z(14 14 10, 150 14 100,34 6 25, 20 10 150)'))) As wkt;\n"
"\n"
"-- wkt --\n"
"GEOMETRYCOLLECTION Z (POLYGON Z ((14 14 10,20 10 150,34 6 25,14 14 10))\n"
" ,POLYGON Z ((14 14 10,34 6 25,150 14 100,14 14 10)))"

#. Tag: para
#: reference_processing.xml:809
#, no-c-format
msgid ""
", <xref linkend=\"ST_VoronoiLines\"/>, <xref linkend=\"ST_ConvexHull\"/>"
msgstr ""
", <xref linkend=\"ST_VoronoiLines\"/>, <xref linkend=\"ST_ConvexHull\"/>"

#. Tag: refname
#: reference_processing.xml:818
#, no-c-format
msgid "ST_FilterByM"
msgstr "ST_FilterByM"

#. Tag: refpurpose
#: reference_processing.xml:819
#, no-c-format
msgid "Removes vertices based on their M value"
msgstr "M値に基づいて頂点を削除します。"

#. Tag: funcprototype
#: reference_processing.xml:824
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_FilterByM</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>geom</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>min</parameter></"
"paramdef> <paramdef><type>double precision</type> <parameter>max = null</"
"parameter></paramdef> <paramdef><type>boolean</type> <parameter>returnM = "
"false</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_FilterByM</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>geom</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>min</parameter></"
"paramdef> <paramdef><type>double precision</type> <parameter>max = null</"
"parameter></paramdef> <paramdef><type>boolean</type> <parameter>returnM = "
"false</parameter></paramdef>"

#. Tag: para
#: reference_processing.xml:836
#, no-c-format
msgid ""
"Filters out vertex points based on their M-value. Returns a geometry with "
"only vertex points that have a M-value larger or equal to the min value and "
"smaller or equal to the max value. If max-value argument is left out only "
"min value is considered. If fourth argument is left out the m-value will not "
"be in the resulting geometry. If resulting geometry have too few vertex "
"points left for its geometry type an empty geometry will be returned. In a "
"geometry collection geometries without enough points will just be left out "
"silently."
msgstr ""
"M値に基づいた頂点ポイントのフィルタリングを行います。返されるジオメトリは最小"
"値(min値)以上かつ最大値(max値)以下のM値を持つポイントだけでできています。最大"
"値の引数が指定されていない場合には、最小値のみ考慮されます。第4引数が指定され"
"ていない場合には、M値は結果ジオメトリに存在しません。結果ジオメトリの頂点ポイ"
"ントの数が、ジオメトリを構成するに必要な数に達しない場合には、空ジオメトリが"
"返されます。ジオメトリコレクション内の、十分なポイントを持たないジオメトリ要"
"素は消えます。"

#. Tag: para
#: reference_processing.xml:842
#, no-c-format
msgid ""
"This function is mainly intended to be used in conjunction with "
"ST_SetEffectiveArea. ST_EffectiveArea sets the effective area of a vertex in "
"its m-value. With ST_FilterByM it then is possible to get a simplified "
"version of the geometry without any calculations, just by filtering"
msgstr ""
"この関数は主にST_SetEffectiveAreaとの併用を意図しています。"
"ST_SetEffectiveAreaは頂点の有効面積をM値に設定します。ST_FilterByMによるフィ"
"ルタリングだけで、他の計算なしに簡略化されたジオメトリを得られます。"

#. Tag: para
#: reference_processing.xml:845
#, no-c-format
msgid ""
"There is a difference in what ST_SimplifyVW returns when not enough points "
"meet the criteria compared to ST_FilterByM. ST_SimplifyVW returns the "
"geometry with enough points while ST_FilterByM returns an empty geometry"
msgstr ""
"ポイント数が基準を満たすのに十分でない時のST_SimplifyVWの返り値とST_FilterByM"
"の返り値とで違いがあります。ST_FilterByMは空ジオメトリを返し、ST_SimplifyVWは"
"十分なポイントを持つジオメトリを返します。"

#. Tag: para
#: reference_processing.xml:847
#, no-c-format
msgid "Note that the returned geometry might be invalid"
msgstr "返されるジオメトリは不正である場合があることに注意して下さい。"

#. Tag: para
#: reference_processing.xml:848
#, no-c-format
msgid "This function returns all dimensions, including the Z and M values"
msgstr "この関数は全ての次元を返し、Z値もM値も残ります。"

#. Tag: para
#: reference_processing.xml:854
#, no-c-format
msgid "A linestring is filtered"
msgstr "フィルタリングされたラインストリング"

#. Tag: programlisting
#: reference_processing.xml:855
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_FilterByM(geom,30)) simplified\n"
"FROM (SELECT  ST_SetEffectiveArea('LINESTRING(5 2, 3 8, 6 20, 7 25, 10 10)'::"
"geometry) geom) As foo;\n"
"-result\n"
"         simplified\n"
"----------------------------\n"
" LINESTRING(5 2,7 25,10 10)"
msgstr ""
"SELECT ST_AsText(ST_FilterByM(geom,30)) simplified\n"
"FROM (SELECT  ST_SetEffectiveArea('LINESTRING(5 2, 3 8, 6 20, 7 25, 10 10)'::"
"geometry) geom) As foo;\n"
"-- 結果 --\n"
"         simplified\n"
"----------------------------\n"
" LINESTRING(5 2,7 25,10 10)"

#. Tag: refname
#: reference_processing.xml:865
#, no-c-format
msgid "ST_GeneratePoints"
msgstr "ST_GeneratePoints"

#. Tag: refpurpose
#: reference_processing.xml:867
#, no-c-format
msgid "Generates random points contained in a Polygon or MultiPolygon."
msgstr "ポリゴン内やマルチポリゴン内にランダムなポイントを生成します。"

#. Tag: funcsynopsis
#: reference_processing.xml:871
#, no-c-format
msgid ""
"<funcprototype> <funcdef>geometry <function>ST_GeneratePoints</function></"
"funcdef> <paramdef> <parameter>g</parameter> <type>geometry</type> </"
"paramdef> <paramdef> <parameter>npoints</parameter> <type>integer</type> </"
"paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
"<function>ST_GeneratePoints</function></funcdef> <paramdef> <type>geometry</"
"type> <parameter>g</parameter> </paramdef> <paramdef> <type>integer</type> "
"<parameter>npoints</parameter> </paramdef> <paramdef> <type>integer</type> "
"<parameter>seed = 0</parameter> </paramdef> </funcprototype>"
msgstr ""
"<funcprototype> <funcdef>geometry <function>ST_GeneratePoints</function></"
"funcdef> <paramdef> <parameter>g</parameter> <type>geometry</type> </"
"paramdef> <paramdef> <parameter>npoints</parameter> <type>integer</type> </"
"paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
"<function>ST_GeneratePoints</function></funcdef> <paramdef> <type>geometry</"
"type> <parameter>g</parameter> </paramdef> <paramdef> <type>integer</type> "
"<parameter>npoints</parameter> </paramdef> <paramdef> <type>integer</type> "
"<parameter>seed = 0</parameter> </paramdef> </funcprototype>"

#. Tag: para
#: reference_processing.xml:896
#, no-c-format
msgid ""
"ST_GeneratePoints generates a given number of pseudo-random points which lie "
"within the input area. The optional <varname>seed</varname> is used to "
"regenerate a deterministic sequence of points, and must be greater than zero."
msgstr ""
"ST_GeneratePointsは、入力エリア内に、与えられた数の疑似乱数によってポイントを"
"生成します。決定的な点列を生成する場合には任意パラメータ<varname>seed</varnam"
"e>を使います。この際、0より大きい数を指定します。"

#. Tag: para
#: reference_processing.xml:903 reference_processing.xml:972
#: reference_processing.xml:2205 reference_processing.xml:2286
#, no-c-format
msgid "Availability: 2.3.0"
msgstr "Availability: 2.3.0"

#. Tag: para
#: reference_processing.xml:904
#, no-c-format
msgid "Enhanced: 3.0.0, added seed parameter"
msgstr "Enhanced: 3.0.0 seedパラメータの追加"

#. Tag: para
#: reference_processing.xml:915
#, no-c-format
msgid ""
"Generated 12 Points overlaid on top of original polygon using a random seed "
"value 1996"
msgstr "乱数シード値に1996を使った元のポリゴンの上に重なった12個のポイント生成"

#. Tag: programlisting
#: reference_processing.xml:918
#, no-c-format
msgid ""
"SELECT ST_GeneratePoints(geom, 12, 1996)\n"
"FROM (\n"
"    SELECT ST_Buffer(\n"
"        ST_GeomFromText(\n"
"        'LINESTRING(50 50,150 150,150 50)'),\n"
"        10, 'endcap=round join=round') AS geom\n"
") AS s;"
msgstr ""
"SELECT ST_GeneratePoints(geom, 12, 1996)\n"
"FROM (\n"
"    SELECT ST_Buffer(\n"
"        ST_GeomFromText(\n"
"        'LINESTRING(50 50,150 150,150 50)'),\n"
"        10, 'endcap=round join=round') AS geom\n"
") AS s;"

#. Tag: refname
#: reference_processing.xml:925
#, no-c-format
msgid "ST_GeometricMedian"
msgstr "ST_GeometricMedian"

#. Tag: refpurpose
#: reference_processing.xml:929
#, no-c-format
msgid "Returns the geometric median of a MultiPoint."
msgstr "マルチポイントの幾何学的中央値を返します。"

#. Tag: funcprototype
#: reference_processing.xml:936
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_GeometricMedian</function> </funcdef> "
"<paramdef> <type>geometry</type> <parameter>geom</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>float8</type> <parameter>tolerance = NULL</"
"parameter></paramdef> <paramdef choice=\"opt\"><type>int</type> "
"<parameter>max_iter = 10000</parameter></paramdef> <paramdef "
"choice=\"opt\"><type>boolean</type> <parameter>fail_if_not_converged = "
"false</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_GeometricMedian</function> </funcdef> "
"<paramdef> <type>geometry</type> <parameter>geom</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>float8</type> <parameter>tolerance = NULL</"
"parameter></paramdef> <paramdef choice=\"opt\"><type>int</type> "
"<parameter>max_iter = 10000</parameter></paramdef> <paramdef "
"choice=\"opt\"><type>boolean</type> <parameter>fail_if_not_converged = "
"false</parameter></paramdef>"

#. Tag: para
#: reference_processing.xml:951
#, no-c-format
msgid ""
"Computes the approximate geometric median of a MultiPoint geometry using the "
"Weiszfeld algorithm. The geometric median is the point minimizing the sum of "
"distances to the input points. It provides a centrality measure that is less "
"sensitive to outlier points than the centroid (center of mass)."
msgstr ""
"マルチポイントジオメトリの幾何中央値の近似値を、Weiszfeldアルゴリズムを使って"
"計算します。幾何中央値は、入力ポイントとの距離の合計を最小にするポイントで"
"す。幾何中央値によって、重心よりもはみ出しにくい中心測定ができます。"

#. Tag: para
#: reference_processing.xml:958
#, no-c-format
msgid ""
"The algorithm iterates until the distance change between successive "
"iterations is less than the supplied <varname>tolerance</varname> parameter. "
"If this condition has not been met after <varname>max_iterations</varname> "
"iterations, the function produces an error and exits, unless "
"<varname>fail_if_not_converged</varname> is set to <code>false</code> (the "
"default)."
msgstr ""
"このアルゴリズムでは、成功した回次の間の距離の変化が、<varname>tolerance</"
"varname>パラメータよりも小さくなるまで繰り返します。<varname>max_iterations</"
"varname>回を超えた場合には、関数は<varname>fail_if_not_converged</varname>を"
"<code>FALSE</code>に指定している (デフォルト)場合を除いて、エラーを生成して終"
"了します。"

#. Tag: para
#: reference_processing.xml:965
#, no-c-format
msgid ""
"If a <varname>tolerance</varname> argument is not provided, the tolerance "
"value is calculated based on the extent of the input geometry."
msgstr ""
"<varname>tolerance</varname>値が渡されていない場合には、デフォルトの許容値"
"は、入力ジオメトリの範囲を基に計算されます。"

#. Tag: para
#: reference_processing.xml:969
#, no-c-format
msgid ""
"If present, the input point M values are interpreted as their relative "
"weights."
msgstr "存在する場合には、入力ポイントのM値は相対的な重みに解釈されます。"

#. Tag: para
#: reference_processing.xml:973
#, no-c-format
msgid "Enhanced: 2.5.0 Added support for M as weight of points."
msgstr "Enhanced: 2.5.0 ポイントの重みとしてのM値の対応が追加されました。"

#. Tag: para
#: reference_processing.xml:975
#, no-c-format
msgid "&M_support;"
msgstr "&M_support;"

#. Tag: para
#: reference_processing.xml:987
#, no-c-format
msgid ""
"Comparison of the geometric median (red) and centroid (turquoise) of a "
"MultiPoint."
msgstr "マルチポイントの幾何的中央値 (赤)と重心 (青緑)との比較。"

#. Tag: programlisting
#: reference_processing.xml:995
#, no-c-format
msgid ""
"WITH test AS (\n"
"SELECT 'MULTIPOINT((10 10), (10 40), (40 10), (190 190))'::geometry geom)\n"
"SELECT\n"
"  ST_AsText(ST_Centroid(geom)) centroid,\n"
"  ST_AsText(ST_GeometricMedian(geom)) median\n"
"FROM test;\n"
"\n"
"      centroid      |                 median\n"
"--------------------+----------------------------------------\n"
"   POINT(62.5 62.5) | POINT(25.01778421249728 25.01778421249728)\n"
"(1 row)"
msgstr ""
"WITH test AS (\n"
"SELECT 'MULTIPOINT((10 10), (10 40), (40 10), (190 190))'::geometry geom)\n"
"SELECT\n"
"  ST_AsText(ST_Centroid(geom)) centroid,\n"
"  ST_AsText(ST_GeometricMedian(geom)) median\n"
"FROM test;\n"
"\n"
"      centroid      |                 median\n"
"--------------------+----------------------------------------\n"
"   POINT(62.5 62.5) | POINT(25.01778421249728 25.01778421249728)\n"
"(1 row)"

#. Tag: refname
#: reference_processing.xml:1008
#, no-c-format
msgid "ST_LineMerge"
msgstr "ST_LineMerge"

#. Tag: refpurpose
#: reference_processing.xml:1010
#, no-c-format
msgid "Return the lines formed by sewing together a MultiLineString."
msgstr "MULTILINESTRINGを縫い合わせて形成したラインを返します。"

#. Tag: funcsynopsis
#: reference_processing.xml:1015
#, no-c-format
msgid ""
"<funcprototype> <funcdef>geometry <function>ST_LineMerge</function></"
"funcdef> <paramdef><type>geometry </type> <parameter>amultilinestring</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
"<function>ST_LineMerge</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>amultilinestring</parameter></paramdef> <paramdef><type>boolean </"
"type> <parameter>directed</parameter></paramdef> </funcprototype>"
msgstr ""
"<funcprototype> <funcdef>geometry <function>ST_LineMerge</function></"
"funcdef> <paramdef><type>geometry </type> <parameter>amultilinestring</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
"<function>ST_LineMerge</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>amultilinestring</parameter></paramdef> <paramdef><type>boolean </"
"type> <parameter>directed</parameter></paramdef> </funcprototype>"

#. Tag: para
#: reference_processing.xml:1031
#, no-c-format
msgid ""
"Returns a LineString or MultiLineString formed by joining together the line "
"elements of a MultiLineString. Lines are joined at their endpoints at 2-way "
"intersections. Lines are not joined across intersections of 3-way or greater "
"degree."
msgstr ""
"MULTILINESTRINGの要素を結合して形成されたLINESTRINGまたはMULTILINESTRINGを返"
"します。ラインは2方向交点の終端で結合します。ラインは3方向以上の交点では結合"
"しません。"

#. Tag: para
#: reference_processing.xml:1037
#, no-c-format
msgid ""
"If <emphasis role=\"bold\">directed</emphasis> is TRUE, then ST_LineMerge "
"will not change point order within LineStrings, so lines with opposite "
"directions will not be merged"
msgstr ""
"<emphasis role=\"bold\">directed</emphasis>がTRUEの場合には、ST_LineMergeはラ"
"インストリグ内のポイントの順序を変更しないため、反対方向のラインはマージされ"
"ません。"

#. Tag: para
#: reference_processing.xml:1041
#, no-c-format
msgid ""
"Only use with MultiLineString/LineStrings. Other geometry types return an "
"empty GeometryCollection"
msgstr ""
"MULTILINESTRING/LINESTRINGでのみ使用します。他のジオメトリタイプでは空の"
"GEMETRYCOLLECTIONを返します。"

#. Tag: para
#: reference_processing.xml:1044
#, no-c-format
msgid ""
"Enhanced: 3.3.0 accept a directed parameter - requires GEOS &gt;= 3.11.0"
msgstr ""
"Enhanced: 3.3.0 directedパラメータを受け付けるようになりました - GEOS &gt;= "
"3.11.0 が必要です。"

#. Tag: para
#: reference_processing.xml:1046
#, no-c-format
msgid "This function strips the M dimension."
msgstr "この関数はM値を取り除きます。"

#. Tag: para
#: reference_processing.xml:1059
#, no-c-format
msgid "Merging lines with different orientation."
msgstr "異なる向きのラインのマージ。"

#. Tag: programlisting
#: reference_processing.xml:1065
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_LineMerge(\n"
"'MULTILINESTRING((10 160, 60 120), (120 140, 60 120), (120 140, 180 120))'\n"
"                ));\n"
"--------------------------------------------\n"
" LINESTRING(10 160,60 120,120 140,180 120)"
msgstr ""
"SELECT ST_AsText(ST_LineMerge(\n"
"'MULTILINESTRING((10 160, 60 120), (120 140, 60 120), (120 140, 180 120))'\n"
"                ));\n"
"--------------------------------------------\n"
" LINESTRING(10 160,60 120,120 140,180 120)"

#. Tag: para
#: reference_processing.xml:1075
#, no-c-format
msgid "Lines are not merged across intersections with degree > 2."
msgstr "2本以上インタセクトしたポイントをまたぐラインはマージされません。"

#. Tag: programlisting
#: reference_processing.xml:1081
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_LineMerge(\n"
"'MULTILINESTRING((10 160, 60 120), (120 140, 60 120), (120 140, 180 120), "
"(100 180, 120 140))'\n"
"                ));\n"
"--------------------------------------------\n"
" MULTILINESTRING((10 160,60 120,120 140),(100 180,120 140),(120 140,180 120))"
msgstr ""
"SELECT ST_AsText(ST_LineMerge(\n"
"'MULTILINESTRING((10 160, 60 120), (120 140, 60 120), (120 140, 180 120), "
"(100 180, 120 140))'\n"
"                ));\n"
"--------------------------------------------\n"
" MULTILINESTRING((10 160,60 120,120 140),(100 180,120 140),(120 140,180 120))"

#. Tag: para
#: reference_processing.xml:1083
#, no-c-format
msgid ""
"If merging is not possible due to non-touching lines, the original "
"MultiLineString is returned."
msgstr ""
"接触するラインが無くマージができない場合には、元のMULTILINESTRINGが返されま"
"す。"

#. Tag: programlisting
#: reference_processing.xml:1085
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_LineMerge(\n"
"'MULTILINESTRING((-29 -27,-30 -29.7,-36 -31,-45 -33),(-45.2 -33.2,-46 "
"-32))'\n"
"));\n"
"----------------\n"
"MULTILINESTRING((-45.2 -33.2,-46 -32),(-29 -27,-30 -29.7,-36 -31,-45 -33))"
msgstr ""
"SELECT ST_AsText(ST_LineMerge(\n"
"'MULTILINESTRING((-29 -27,-30 -29.7,-36 -31,-45 -33),(-45.2 -33.2,-46 "
"-32))'\n"
"));\n"
"----------------\n"
"MULTILINESTRING((-45.2 -33.2,-46 -32),(-29 -27,-30 -29.7,-36 -31,-45 -33))"

#. Tag: para
#: reference_processing.xml:1094
#, no-c-format
msgid "Lines with opposite directions are not merged if directed = TRUE."
msgstr "directed = TRUEの場合には、対応方向のラインはマージされません。"

#. Tag: programlisting
#: reference_processing.xml:1099
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_LineMerge(\n"
"'MULTILINESTRING((60 30, 10 70), (120 50, 60 30), (120 50, 180 30))',\n"
"TRUE));\n"
"-------------------------------------------------------\n"
" MULTILINESTRING((120 50,60 30,10 70),(120 50,180 30))"
msgstr ""
"SELECT ST_AsText(ST_LineMerge(\n"
"'MULTILINESTRING((60 30, 10 70), (120 50, 60 30), (120 50, 180 30))',\n"
"TRUE));\n"
"-------------------------------------------------------\n"
" MULTILINESTRING((120 50,60 30,10 70),(120 50,180 30))"

#. Tag: para
#: reference_processing.xml:1101
#, no-c-format
msgid "Example showing Z-dimension handling."
msgstr "Z値処理を示す例。"

#. Tag: programlisting
#: reference_processing.xml:1102
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_LineMerge(\n"
"      'MULTILINESTRING((-29 -27 11,-30 -29.7 10,-36 -31 5,-45 -33 6), (-29 "
"-27 12,-30 -29.7 5), (-45 -33 1,-46 -32 11))'\n"
"        ));\n"
"--------------------------------------------------------------------------------------------------\n"
"LINESTRING Z (-30 -29.7 5,-29 -27 11,-30 -29.7 10,-36 -31 5,-45 -33 1,-46 "
"-32 11)"
msgstr ""
"SELECT ST_AsText(ST_LineMerge(\n"
"      'MULTILINESTRING((-29 -27 11,-30 -29.7 10,-36 -31 5,-45 -33 6), (-29 "
"-27 12,-30 -29.7 5), (-45 -33 1,-46 -32 11))'\n"
"        ));\n"
"--------------------------------------------------------------------------------------------------\n"
"LINESTRING Z (-30 -29.7 5,-29 -27 11,-30 -29.7 10,-36 -31 5,-45 -33 1,-46 "
"-32 11)"

#. Tag: para
#: reference_processing.xml:1106
#, no-c-format
msgid ", <xref linkend=\"ST_LineSubstring\"/>"
msgstr ", <xref linkend=\"ST_LineSubstring\"/>"

#. Tag: refname
#: reference_processing.xml:1112
#, no-c-format
msgid "ST_MaximumInscribedCircle"
msgstr "ST_MaximumInscribedCircle"

#. Tag: refpurpose
#: reference_processing.xml:1113
#, no-c-format
msgid "Computes the largest circle contained within a geometry."
msgstr "ジオメトリに含まれる最大の円を計算します。"

#. Tag: funcprototype
#: reference_processing.xml:1118
#, no-c-format
msgid ""
"<funcdef>(geometry, geometry, double precision) "
"<function>ST_MaximumInscribedCircle</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geom</parameter></paramdef>"
msgstr ""
"<funcdef>(geometry, geometry, double precision) "
"<function>ST_MaximumInscribedCircle</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geom</parameter></paramdef>"

#. Tag: para
#: reference_processing.xml:1127
#, no-c-format
msgid ""
"Finds the largest circle that is contained within a (multi)polygon, or which "
"does not overlap any lines and points. Returns a record with fields:"
msgstr ""
"(MULTI)POLYGONに含まれるか、全てのラインとポイントをオーバラップしない最大の"
"円を探します。返されるレコードには次のフィールドがあります。"

#. Tag: para
#: reference_processing.xml:1132 reference_processing.xml:1254
#, no-c-format
msgid "<varname>center</varname> - center point of the circle"
msgstr "<varname>center</varname> - 円の中心点"

#. Tag: para
#: reference_processing.xml:1133
#, no-c-format
msgid ""
"<varname>nearest</varname> - a point on the geometry nearest to the center"
msgstr "<varname>nearest</varname> - 中心に最も近い、ジオメトリ上のポイント"

#. Tag: para
#: reference_processing.xml:1134 reference_processing.xml:1255
#, no-c-format
msgid "<varname>radius</varname> - radius of the circle"
msgstr "<varname>radius</varname> - 円の半径"

#. Tag: para
#: reference_processing.xml:1137
#, no-c-format
msgid ""
"For polygonal inputs, the circle is inscribed within the boundary rings, "
"using the internal rings as boundaries. For linear and point inputs, the "
"circle is inscribed within the convex hull of the input, using the input "
"lines and points as further boundaries."
msgstr ""
"ポリゴン系の入力の時は、内側のリングを境界として使用して、円は境界リングに内"
"接します。ラインやポイントの入力の時は、入力ラインとポイントを境界に使用し"
"て、円は入力の凸包に内接します。"

#. Tag: para
#: reference_processing.xml:1141 reference_processing.xml:1713
#, no-c-format
msgid "Availability: 3.1.0 - requires GEOS &gt;= 3.9.0."
msgstr "Availability: 3.1.0 - GEOS 3.9.0以上が必要です。"

#. Tag: para
#: reference_processing.xml:1156
#, no-c-format
msgid ""
"Maximum inscribed circle of a polygon. Center, nearest point, and radius are "
"returned."
msgstr "ポリゴンの最大の内接円。中心点、最近傍点、半径が返ります。"

#. Tag: programlisting
#: reference_processing.xml:1159
#, no-c-format
msgid ""
"SELECT radius, ST_AsText(center) AS center, ST_AsText(nearest) AS nearest\n"
"    FROM ST_MaximumInscribedCircle(\n"
"        'POLYGON ((40 180, 110 160, 180 180, 180 120, 140 90, 160 40, 80 10, "
"70 40, 20 50, 40 180),\n"
"        (60 140, 50 90, 90 140, 60 140))');\n"
"\n"
"     radius      |           center           |    nearest\n"
"-----------------+----------------------------+---------------\n"
" 45.165845650018 | POINT(96.953125 76.328125) | POINT(140 90)"
msgstr ""
"SELECT radius, ST_AsText(center) AS center, ST_AsText(nearest) AS nearest\n"
"    FROM ST_MaximumInscribedCircle(\n"
"        'POLYGON ((40 180, 110 160, 180 180, 180 120, 140 90, 160 40, 80 10, "
"70 40, 20 50, 40 180),\n"
"        (60 140, 50 90, 90 140, 60 140))');\n"
"\n"
"     radius      |           center           |    nearest\n"
"-----------------+----------------------------+---------------\n"
" 45.165845650018 | POINT(96.953125 76.328125) | POINT(140 90)"

#. Tag: para
#: reference_processing.xml:1166
#, no-c-format
msgid ""
"Maximum inscribed circle of a multi-linestring. Center, nearest point, and "
"radius are returned."
msgstr "マルチラインストリングの最大の内接円。中心点、最近点と半径が返ります。"

#. Tag: refname
#: reference_processing.xml:1179
#, no-c-format
msgid "ST_MinimumBoundingCircle"
msgstr "ST_MinimumBoundingCircle"

#. Tag: refpurpose
#: reference_processing.xml:1180
#, no-c-format
msgid ""
"<refpurpose>Returns the smallest circle polygon that contains a geometry.</"
"refpurpose>"
msgstr "<refpurpose>入力ジオメトリを含む最小の円を返します。</refpurpose>"

#. Tag: funcprototype
#: reference_processing.xml:1185
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_MinimumBoundingCircle</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>integer </type> "
"<parameter>num_segs_per_qt_circ=48</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MinimumBoundingCircle</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>integer </type> "
"<parameter>num_segs_per_qt_circ=48</parameter></paramdef>"

#. Tag: para
#: reference_processing.xml:1195
#, no-c-format
msgid ""
"<para>Returns the smallest circle polygon that contains a geometry.</para>"
msgstr "<para>入力ジオメトリを含む最小の円を返します。</para>"

#. Tag: para
#: reference_processing.xml:1197
#, no-c-format
msgid ""
"The bounding circle is approximated by a polygon with a default of 48 "
"segments per quarter circle. Because the polygon is an approximation of the "
"minimum bounding circle, some points in the input geometry may not be "
"contained within the polygon. The approximation can be improved by "
"increasing the number of segments. For applications where an approximation "
"is not suitable <xref linkend=\"ST_MinimumBoundingRadius\"/> may be used."
msgstr ""
"円はポリゴンで近似されます。デフォルトでは、1周の4分の1で48辺です。このポリゴ"
"ンは円の最小バウンディングボックスの近似であるので、入力ジオメトリのいくつか"
"の点はポリゴンに入らない可能性があります。この近似は辺の数を増やすことによっ"
"て改善され、辺の数を増やすことで得られる不利益は小さいです。ポリゴン近似が適"
"切でない場合のアプリケーションにおいては、<xref "
"linkend=\"ST_MinimumBoundingRadius\"/>を使います。"

#. Tag: para
#: reference_processing.xml:1202 reference_processing.xml:1258
#, no-c-format
msgid ""
"Use with <xref linkend=\"ST_Collect\"/> to get the minimum bounding circle "
"of a set of geometries."
msgstr ""
"ジオメトリの集合の最小境界円を得るには<xref linkend=\"ST_Collect\"/>と併用し"
"ます。"

#. Tag: para
#: reference_processing.xml:1204 reference_processing.xml:1260
#, no-c-format
msgid ""
"To compute two points lying on the mimimum circle (the \"maximum diameter\") "
"use <xref linkend=\"ST_LongestLine\"/>."
msgstr ""
"最小円 (最大対角線)上の二つのポイントを計算するには<xref "
"linkend=\"ST_MinimumBoundingCircle\"/>を使います。"

#. Tag: para
#: reference_processing.xml:1207
#, no-c-format
msgid ""
"The ratio of the area of a polygon divided by the area of its Minimum "
"Bounding Circle is referred to as the <emphasis>Reock compactness score</"
"emphasis>."
msgstr ""
"ポリゴンの面積を最小包含円の面積で割った比率は、 <emphasis>Reock コンパクト度"
"スコア</emphasis>と呼ばれます。"

#. Tag: para
#: reference_processing.xml:1210
#, no-c-format
msgid "Availability: 1.4.0"
msgstr "Availability: 1.4.0"

#. Tag: programlisting
#: reference_processing.xml:1216
#, no-c-format
msgid ""
"SELECT d.disease_type,\n"
"    ST_MinimumBoundingCircle(ST_Collect(d.geom)) As geom\n"
"    FROM disease_obs As d\n"
"    GROUP BY d.disease_type;"
msgstr ""
"SELECT d.disease_type,\n"
"    ST_MinimumBoundingCircle(ST_Collect(d.geom)) As geom\n"
"    FROM disease_obs As d\n"
"    GROUP BY d.disease_type;"

#. Tag: para
#: reference_processing.xml:1222
#, no-c-format
msgid ""
"Minimum bounding circle of a point and linestring. Using 8 segs to "
"approximate a quarter circle"
msgstr ""
"ポイントとラインストリングの最小包含円です。4分の1円の近似に8区分使用していま"
"す。"

#. Tag: programlisting
#: reference_processing.xml:1225
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_MinimumBoundingCircle(\n"
"        ST_Collect(\n"
"            ST_GeomFromText('LINESTRING(55 75,125 150)'),\n"
"                ST_Point(20, 80)), 8\n"
"                )) As wktmbc;\n"
"wktmbc\n"
"-----------\n"
"POLYGON((135.59714732062 115,134.384753327498 "
"102.690357210921,130.79416296937 90.8537670908995,124.963360620072 "
"79.9451031602111,117.116420743937 70.3835792560632,107.554896839789 "
"62.5366393799277,96.6462329091006 56.70583703063,84.8096427890789 "
"53.115246672502,72.5000000000001 51.9028526793802,60.1903572109213 "
"53.1152466725019,48.3537670908996 56.7058370306299,37.4451031602112 "
"62.5366393799276,27.8835792560632 70.383579256063,20.0366393799278 "
"79.9451031602109,14.20583703063 90.8537670908993,10.615246672502 "
"102.690357210921,9.40285267938019 115,10.6152466725019 "
"127.309642789079,14.2058370306299 139.1462329091,20.0366393799275 "
"150.054896839789,27.883579256063 159.616420743937,\n"
"37.4451031602108 167.463360620072,48.3537670908992 "
"173.29416296937,60.190357210921 176.884753327498,\n"
"72.4999999999998 178.09714732062,84.8096427890786 "
"176.884753327498,96.6462329091003 173.29416296937,107.554896839789 "
"167.463360620072,\n"
"117.116420743937 159.616420743937,124.963360620072 "
"150.054896839789,130.79416296937 139.146232909101,134.384753327498 "
"127.309642789079,135.59714732062 115))"
msgstr ""
"SELECT ST_AsText(ST_MinimumBoundingCircle(\n"
"        ST_Collect(\n"
"            ST_GeomFromText('LINESTRING(55 75,125 150)'),\n"
"                ST_Point(20, 80)), 8\n"
"                )) As wktmbc;\n"
"wktmbc\n"
"-----------\n"
"POLYGON((135.59714732062 115,134.384753327498 "
"102.690357210921,130.79416296937 90.8537670908995,124.963360620072 "
"79.9451031602111,117.116420743937 70.3835792560632,107.554896839789 "
"62.5366393799277,96.6462329091006 56.70583703063,84.8096427890789 "
"53.115246672502,72.5000000000001 51.9028526793802,60.1903572109213 "
"53.1152466725019,48.3537670908996 56.7058370306299,37.4451031602112 "
"62.5366393799276,27.8835792560632 70.383579256063,20.0366393799278 "
"79.9451031602109,14.20583703063 90.8537670908993,10.615246672502 "
"102.690357210921,9.40285267938019 115,10.6152466725019 "
"127.309642789079,14.2058370306299 139.1462329091,20.0366393799275 "
"150.054896839789,27.883579256063 159.616420743937,\n"
"37.4451031602108 167.463360620072,48.3537670908992 "
"173.29416296937,60.190357210921 176.884753327498,\n"
"72.4999999999998 178.09714732062,84.8096427890786 "
"176.884753327498,96.6462329091003 173.29416296937,107.554896839789 "
"167.463360620072,\n"
"117.116420743937 159.616420743937,124.963360620072 "
"150.054896839789,130.79416296937 139.146232909101,134.384753327498 "
"127.309642789079,135.59714732062 115))"

#. Tag: para
#: reference_processing.xml:1229
#, no-c-format
msgid ""
", <xref linkend=\"ST_MinimumBoundingRadius\"/>, <xref "
"linkend=\"ST_LongestLine\"/>"
msgstr ""
", <xref linkend=\"ST_MinimumBoundingRadius\"/>, <xref "
"linkend=\"ST_LongestLine\"/>"

#. Tag: refname
#: reference_processing.xml:1235
#, no-c-format
msgid "ST_MinimumBoundingRadius"
msgstr "ST_MinimumBoundingRadius"

#. Tag: refpurpose
#: reference_processing.xml:1236
#, no-c-format
msgid ""
"Returns the center point and radius of the smallest circle that contains a "
"geometry."
msgstr "ジオメトリを完全に包含する最小円の中心ポイントと半径を返します。"

#. Tag: funcprototype
#: reference_processing.xml:1241
#, no-c-format
msgid ""
"<funcdef>(geometry, double precision) <function>ST_MinimumBoundingRadius</"
"function></funcdef> <paramdef><type>geometry</type> <parameter>geom</"
"parameter></paramdef>"
msgstr ""
"<funcdef>(geometry, double precision) <function>ST_MinimumBoundingRadius</"
"function></funcdef> <paramdef><type>geometry</type> <parameter>geom</"
"parameter></paramdef>"

#. Tag: para
#: reference_processing.xml:1250
#, no-c-format
msgid ""
"Computes the center point and radius of the smallest circle that contains a "
"geometry. Returns a record with fields:"
msgstr ""
"ジオメトリを含む最小円の中心点と半径を計算します。返されるレコードには次の"
"フィールドがあります。"

#. Tag: para
#: reference_processing.xml:1263
#, no-c-format
msgid "Availability - 2.3.0"
msgstr "Availability: 2.3.0"

#. Tag: programlisting
#: reference_processing.xml:1268
#, no-c-format
msgid ""
"SELECT ST_AsText(center), radius FROM "
"ST_MinimumBoundingRadius('POLYGON((26426 65078,26531 65242,26075 65136,26096 "
"65427,26426 65078))');\n"
"\n"
"                st_astext                 |      radius\n"
"------------------------------------------+------------------\n"
" POINT(26284.8418027133 65267.1145090825) | 247.436045591407"
msgstr ""
"SELECT ST_AsText(center), radius FROM "
"ST_MinimumBoundingRadius('POLYGON((26426 65078,26531 65242,26075 65136,26096 "
"65427,26426 65078))');\n"
"\n"
"                st_astext                 |      radius\n"
"------------------------------------------+------------------\n"
" POINT(26284.8418027133 65267.1145090825) | 247.436045591407"

#. Tag: para
#: reference_processing.xml:1273
#, no-c-format
msgid ""
", <xref linkend=\"ST_MinimumBoundingCircle\"/>, <xref "
"linkend=\"ST_LongestLine\"/>"
msgstr ""
", <xref linkend=\"ST_MinimumBoundingCircle\"/>, <xref "
"linkend=\"ST_LongestLine\"/>"

#. Tag: refname
#: reference_processing.xml:1280
#, no-c-format
msgid "ST_OrientedEnvelope"
msgstr "ST_OrientedEnvelope"

#. Tag: refpurpose
#: reference_processing.xml:1281
#, no-c-format
msgid "Returns a minimum-area rectangle containing a geometry."
msgstr "ジオメトリを囲む最小の回転四角形を返します。"

#. Tag: funcprototype
#: reference_processing.xml:1286
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_OrientedEnvelope</function></funcdef> "
"<paramdef> <type>geometry</type> <parameter>geom</parameter> </paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_OrientedEnvelope</function></funcdef> "
"<paramdef> <type>geometry</type> <parameter>geom</parameter> </paramdef>"

#. Tag: para
#: reference_processing.xml:1298
#, no-c-format
msgid ""
"Returns the minimum-area rotated rectangle enclosing a geometry. Note that "
"more than one such rectangle may exist. May return a Point or LineString in "
"the case of degenerate inputs."
msgstr ""
"ジオメトリを囲む最小の回転四角形を返します。最小回転四角形が複数個存在するこ"
"とがあるので注意して下さい。入力が退化している場合には、ポイントまたはライン"
"ストリングを返すことがあります。"

#. Tag: programlisting
#: reference_processing.xml:1310
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_OrientedEnvelope('MULTIPOINT ((0 0), (-1 -1), (3 "
"2))'));\n"
"\n"
"                st_astext\n"
"                ------------------------------------------------\n"
"                POLYGON((3 2,2.88 2.16,-1.12 -0.84,-1 -1,3 2))"
msgstr ""
"SELECT ST_AsText(ST_OrientedEnvelope('MULTIPOINT ((0 0), (-1 -1), (3 "
"2))'));\n"
"\n"
"                st_astext\n"
"                ------------------------------------------------\n"
"                POLYGON((3 2,2.88 2.16,-1.12 -0.84,-1 -1,3 2))"

#. Tag: para
#: reference_processing.xml:1317
#, no-c-format
msgid "Oriented envelope of a point and linestring."
msgstr "ポイントとラインストリングの回転したエンベロープ。"

#. Tag: programlisting
#: reference_processing.xml:1320
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_OrientedEnvelope(\n"
"        ST_Collect(\n"
"            ST_GeomFromText('LINESTRING(55 75,125 150)'),\n"
"                ST_Point(20, 80))\n"
"                )) As wktenv;\n"
"wktenv\n"
"-----------\n"
"POLYGON((19.9999999999997 79.9999999999999,33.0769230769229 "
"60.3846153846152,138.076923076924 130.384615384616,125.000000000001 "
"150.000000000001,19.9999999999997 79.9999999999999))"
msgstr ""
"SELECT ST_AsText(ST_OrientedEnvelope(\n"
"        ST_Collect(\n"
"            ST_GeomFromText('LINESTRING(55 75,125 150)'),\n"
"                ST_Point(20, 80))\n"
"                )) As wktenv;\n"
"wktenv\n"
"-----------\n"
"POLYGON((19.9999999999997 79.9999999999999,33.0769230769229 "
"60.3846153846152,138.076923076924 130.384615384616,125.000000000001 "
"150.000000000001,19.9999999999997 79.9999999999999))"

#. Tag: refname
#: reference_processing.xml:1335
#, no-c-format
msgid "ST_OffsetCurve"
msgstr "ST_OffsetCurve"

#. Tag: refpurpose
#: reference_processing.xml:1337
#, no-c-format
msgid "Returns an offset line at a given distance and side from an input line."
msgstr "与えられた距離と方面に入力ラインをずらしたラインを返します。"

#. Tag: funcprototype
#: reference_processing.xml:1345
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_OffsetCurve</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>line</parameter></paramdef> "
"<paramdef><type>float </type> <parameter>signed_distance</parameter></"
"paramdef> <paramdef choice=\"opt\"><type>text </type> "
"<parameter>style_parameters=''</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_OffsetCurve</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>line</parameter></paramdef> "
"<paramdef><type>float </type> <parameter>signed_distance</parameter></"
"paramdef> <paramdef choice=\"opt\"><type>text </type> "
"<parameter>style_parameters=''</parameter></paramdef>"

#. Tag: para
#: reference_processing.xml:1358
#, no-c-format
msgid ""
"Return an offset line at a given distance and side from an input line. All "
"points of the returned geometries are not further than the given distance "
"from the input geometry. Useful for computing parallel lines about a center "
"line."
msgstr ""
"与えられた距離と方面に入力ラインをずらしたラインを返します。返されるジオメト"
"リの全てのポイントは、入力ジオメトリより与えられた距離以上には離れません。中"
"心線に対する平行線を計算するのに使用します。"

#. Tag: para
#: reference_processing.xml:1365
#, no-c-format
msgid ""
"For positive distance the offset is on the left side of the input line and "
"retains the same direction. For a negative distance it is on the right side "
"and in the opposite direction."
msgstr ""
"距離が正の場合には、入力ラインの左側にずらして、方向が保持されます。負の場合"
"には、右側にずらし、逆方向のラインになります。"

#. Tag: para
#: reference_processing.xml:1370
#, no-c-format
msgid ""
"Units of distance are measured in units of the spatial reference system."
msgstr "距離の単位は空間参照系の単位です。"

#. Tag: para
#: reference_processing.xml:1373
#, no-c-format
msgid ""
"Note that output may be a MULTILINESTRING or EMPTY for some jigsaw-shaped "
"input geometries."
msgstr ""
"入力ジオメトリがジグソーパズルのような形状の場合には、出力がMULTILINESTRINGま"
"たはEMPTYになることがあるので、注意して下さい。"

#. Tag: para
#: reference_processing.xml:1376
#, no-c-format
msgid ""
"The optional third parameter allows specifying a list of blank-separated "
"key=value pairs to tweak operations as follows:"
msgstr ""
"任意指定の第3引数では、空白区切りのkey=valueペアの一覧を指定して、次のような"
"操作をすることができます。"

#. Tag: para
#: reference_processing.xml:1381
#, no-c-format
msgid ""
"'quad_segs=#' : number of segments used to approximate a quarter circle "
"(defaults to 8)."
msgstr ""
"'quad_segs=#' : 4分の1円区分数に近づけるために使われる区分の数 (デフォルトは"
"8)。"

#. Tag: para
#: reference_processing.xml:1384
#, no-c-format
msgid ""
"'join=round|mitre|bevel' : join style (defaults to \"round\"). 'miter' is "
"also accepted as a synonym for 'mitre'."
msgstr ""
"'join=round|mitre|bevel' : 接続スタイル (デフォルトは"
"\"round\")。'miter'も'mitre'の同義語として受け付けます。"

#. Tag: para
#: reference_processing.xml:1387
#, no-c-format
msgid ""
"'mitre_limit=#.#' : mitre ratio limit (only affects mitred join style). "
"'miter_limit' is also accepted as a synonym for 'mitre_limit'."
msgstr ""
"'mitre_limit=#.#' : マイターの割合制限 (接続スタイルがマイターである場合のみ"
"影響が出ます)。'miter_limit'も'mitre_limit'の同義語として受け付けます。"

#. Tag: para
#: reference_processing.xml:1393
#, no-c-format
msgid "Availability: 2.0"
msgstr "Availability: 2.0"

#. Tag: para
#: reference_processing.xml:1394
#, no-c-format
msgid ""
"Enhanced: 2.5 - added support for GEOMETRYCOLLECTION and MULTILINESTRING"
msgstr "Enhanced: 2.5 - GEOMETRYCOLLECTIONとULTILINESTRINGへの対応追加"

#. Tag: para
#: reference_processing.xml:1403
#, no-c-format
msgid "Compute an open buffer around roads"
msgstr "道路の周りの開いたバッファの算出"

#. Tag: programlisting
#: reference_processing.xml:1404
#, no-c-format
msgid ""
"SELECT ST_Union(\n"
" ST_OffsetCurve(f.geom,  f.width/2, 'quad_segs=4 join=round'),\n"
" ST_OffsetCurve(f.geom, -f.width/2, 'quad_segs=4 join=round')\n"
") as track\n"
"FROM someroadstable;"
msgstr ""
"SELECT ST_Union(\n"
" ST_OffsetCurve(f.geom,  f.width/2, 'quad_segs=4 join=round'),\n"
" ST_OffsetCurve(f.geom, -f.width/2, 'quad_segs=4 join=round')\n"
") as track\n"
"FROM someroadstable;"

#. Tag: para
#: reference_processing.xml:1414
#, no-c-format
msgid "15, 'quad_segs=4 join=round' original line and its offset 15 units."
msgstr "15, 'quad_segs=4 join=round' 元のラインと15単位ずらしたライン。"

#. Tag: programlisting
#: reference_processing.xml:1418
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_OffsetCurve(ST_GeomFromText(\n"
"'LINESTRING(164 16,144 16,124 16,104 16,84 16,64 16,\n"
"    44 16,24 16,20 16,18 16,17 17,\n"
"    16 18,16 20,16 40,16 60,16 80,16 100,\n"
"    16 120,16 140,16 160,16 180,16 195)'),\n"
"    15, 'quad_segs=4 join=round'));\n"
"--output --\n"
"LINESTRING(164 1,18 1,12.2597485145237 2.1418070123307,\n"
"    7.39339828220179 5.39339828220179,\n"
"    5.39339828220179 7.39339828220179,\n"
"    2.14180701233067 12.2597485145237,1 18,1 195)"
msgstr ""
"SELECT ST_AsText(ST_OffsetCurve(ST_GeomFromText(\n"
"'LINESTRING(164 16,144 16,124 16,104 16,84 16,64 16,\n"
"    44 16,24 16,20 16,18 16,17 17,\n"
"    16 18,16 20,16 40,16 60,16 80,16 100,\n"
"    16 120,16 140,16 160,16 180,16 195)'),\n"
"    15, 'quad_segs=4 join=round'));\n"
"-- 出力 --\n"
"LINESTRING(164 1,18 1,12.2597485145237 2.1418070123307,\n"
"    7.39339828220179 5.39339828220179,\n"
"    5.39339828220179 7.39339828220179,\n"
"    2.14180701233067 12.2597485145237,1 18,1 195)"

#. Tag: para
#: reference_processing.xml:1425
#, no-c-format
msgid "-15, 'quad_segs=4 join=round' original line and its offset -15 units"
msgstr "-15, 'quad_segs=4 join=round' 元のラインと-15単位ずらしたライン。"

#. Tag: programlisting
#: reference_processing.xml:1429
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_OffsetCurve(geom,\n"
"    -15, 'quad_segs=4 join=round')) As notsocurvy\n"
"    FROM ST_GeomFromText(\n"
"'LINESTRING(164 16,144 16,124 16,104 16,84 16,64 16,\n"
"    44 16,24 16,20 16,18 16,17 17,\n"
"    16 18,16 20,16 40,16 60,16 80,16 100,\n"
"    16 120,16 140,16 160,16 180,16 195)') As geom;\n"
"-- notsocurvy --\n"
"LINESTRING(31 195,31 31,164 31)"
msgstr ""
"SELECT ST_AsText(ST_OffsetCurve(geom,\n"
"    -15, 'quad_segs=4 join=round')) As notsocurvy\n"
"    FROM ST_GeomFromText(\n"
"'LINESTRING(164 16,144 16,124 16,104 16,84 16,64 16,\n"
"    44 16,24 16,20 16,18 16,17 17,\n"
"    16 18,16 20,16 40,16 60,16 80,16 100,\n"
"    16 120,16 140,16 160,16 180,16 195)') As geom;\n"
"-- 曲線になりません --\n"
"LINESTRING(31 195,31 31,164 31)"

#. Tag: para
#: reference_processing.xml:1438
#, no-c-format
msgid ""
"double-offset to get more curvy, note the first reverses direction, so -30 + "
"15 = -15"
msgstr ""
"二重にずらして曲線を得ます。1回目で逆方向にしていて、-30 + 15 = -15としていま"
"す。"

#. Tag: programlisting
#: reference_processing.xml:1441
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_OffsetCurve(ST_OffsetCurve(geom,\n"
"    -30, 'quad_segs=4 join=round'), -15, 'quad_segs=4 join=round')) As "
"morecurvy\n"
"    FROM ST_GeomFromText(\n"
"'LINESTRING(164 16,144 16,124 16,104 16,84 16,64 16,\n"
"    44 16,24 16,20 16,18 16,17 17,\n"
"    16 18,16 20,16 40,16 60,16 80,16 100,\n"
"    16 120,16 140,16 160,16 180,16 195)') As geom;\n"
"-- morecurvy --\n"
"LINESTRING(164 31,46 31,40.2597485145236 32.1418070123307,\n"
"35.3933982822018 35.3933982822018,\n"
"32.1418070123307 40.2597485145237,31 46,31 195)"
msgstr ""
"SELECT ST_AsText(ST_OffsetCurve(ST_OffsetCurve(geom,\n"
"    -30, 'quad_segs=4 join=round'), -15, 'quad_segs=4 join=round')) As "
"morecurvy\n"
"    FROM ST_GeomFromText(\n"
"'LINESTRING(164 16,144 16,124 16,104 16,84 16,64 16,\n"
"    44 16,24 16,20 16,18 16,17 17,\n"
"    16 18,16 20,16 40,16 60,16 80,16 100,\n"
"    16 120,16 140,16 160,16 180,16 195)') As geom;\n"
"-- 曲線になります --\n"
"LINESTRING(164 31,46 31,40.2597485145236 32.1418070123307,\n"
"35.3933982822018 35.3933982822018,\n"
"32.1418070123307 40.2597485145237,31 46,31 195)"

#. Tag: para
#: reference_processing.xml:1448
#, no-c-format
msgid ""
"double-offset to get more curvy,combined with regular offset 15 to get "
"parallel lines. Overlaid with original."
msgstr ""
"二重にずらして曲線を得て、順方向に15ずらして平行線を得ます。元のラインを覆い"
"ます。"

#. Tag: programlisting
#: reference_processing.xml:1451
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_Collect(\n"
"    ST_OffsetCurve(geom, 15, 'quad_segs=4 join=round'),\n"
"    ST_OffsetCurve(ST_OffsetCurve(geom,\n"
"    -30, 'quad_segs=4 join=round'), -15, 'quad_segs=4 join=round')\n"
"    )\n"
") As parallel_curves\n"
"    FROM ST_GeomFromText(\n"
"'LINESTRING(164 16,144 16,124 16,104 16,84 16,64 16,\n"
"    44 16,24 16,20 16,18 16,17 17,\n"
"    16 18,16 20,16 40,16 60,16 80,16 100,\n"
"    16 120,16 140,16 160,16 180,16 195)') As geom;\n"
"-- parallel curves  --\n"
"MULTILINESTRING((164 1,18 1,12.2597485145237 2.1418070123307,\n"
"7.39339828220179 5.39339828220179,5.39339828220179 7.39339828220179,\n"
"2.14180701233067 12.2597485145237,1 18,1 195),\n"
"(164 31,46 31,40.2597485145236 32.1418070123307,35.3933982822018 "
"35.3933982822018,\n"
"32.1418070123307 40.2597485145237,31 46,31 195))"
msgstr ""
"SELECT ST_AsText(ST_Collect(\n"
"    ST_OffsetCurve(geom, 15, 'quad_segs=4 join=round'),\n"
"    ST_OffsetCurve(ST_OffsetCurve(geom,\n"
"    -30, 'quad_segs=4 join=round'), -15, 'quad_segs=4 join=round')\n"
"    )\n"
") As parallel_curves\n"
"    FROM ST_GeomFromText(\n"
"'LINESTRING(164 16,144 16,124 16,104 16,84 16,64 16,\n"
"    44 16,24 16,20 16,18 16,17 17,\n"
"    16 18,16 20,16 40,16 60,16 80,16 100,\n"
"    16 120,16 140,16 160,16 180,16 195)') As geom;\n"
"-- 平行曲線 --\n"
"MULTILINESTRING((164 1,18 1,12.2597485145237 2.1418070123307,\n"
"7.39339828220179 5.39339828220179,5.39339828220179 7.39339828220179,\n"
"2.14180701233067 12.2597485145237,1 18,1 195),\n"
"(164 31,46 31,40.2597485145236 32.1418070123307,35.3933982822018 "
"35.3933982822018,\n"
"32.1418070123307 40.2597485145237,31 46,31 195))"

#. Tag: para
#: reference_processing.xml:1460
#, no-c-format
msgid "15, 'quad_segs=4 join=bevel' shown with original line"
msgstr "15, 'quad_segs=4 join=bevel' と元のライン"

#. Tag: programlisting
#: reference_processing.xml:1463
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_OffsetCurve(ST_GeomFromText(\n"
"'LINESTRING(164 16,144 16,124 16,104 16,84 16,64 16,\n"
"    44 16,24 16,20 16,18 16,17 17,\n"
"    16 18,16 20,16 40,16 60,16 80,16 100,\n"
"    16 120,16 140,16 160,16 180,16 195)'),\n"
"        15, 'quad_segs=4 join=bevel'));\n"
"-- output --\n"
"LINESTRING(164 1,18 1,7.39339828220179 5.39339828220179,\n"
"    5.39339828220179 7.39339828220179,1 18,1 195)"
msgstr ""
"SELECT ST_AsText(ST_OffsetCurve(ST_GeomFromText(\n"
"'LINESTRING(164 16,144 16,124 16,104 16,84 16,64 16,\n"
"    44 16,24 16,20 16,18 16,17 17,\n"
"    16 18,16 20,16 40,16 60,16 80,16 100,\n"
"    16 120,16 140,16 160,16 180,16 195)'),\n"
"        15, 'quad_segs=4 join=bevel'));\n"
"-- 出力 --\n"
"LINESTRING(164 1,18 1,7.39339828220179 5.39339828220179,\n"
"    5.39339828220179 7.39339828220179,1 18,1 195)"

#. Tag: para
#: reference_processing.xml:1471
#, no-c-format
msgid "15,-15 collected, join=mitre mitre_limit=2.1"
msgstr ""
"join=mitre mitre_limit=2.1で、15ずらしたものと-15ずらしたものとを集めたもの。"

#. Tag: programlisting
#: reference_processing.xml:1474
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_Collect(\n"
"    ST_OffsetCurve(geom, 15, 'quad_segs=4 join=mitre mitre_limit=2.2'),\n"
"    ST_OffsetCurve(geom, -15, 'quad_segs=4 join=mitre mitre_limit=2.2')\n"
"    ) )\n"
"    FROM ST_GeomFromText(\n"
"'LINESTRING(164 16,144 16,124 16,104 16,84 16,64 16,\n"
"    44 16,24 16,20 16,18 16,17 17,\n"
"    16 18,16 20,16 40,16 60,16 80,16 100,\n"
"    16 120,16 140,16 160,16 180,16 195)') As geom;\n"
"-- output --\n"
"MULTILINESTRING((164 1,11.7867965644036 1,1 11.7867965644036,1 195),\n"
"    (31 195,31 31,164 31))"
msgstr ""
"SELECT ST_AsText(ST_Collect(\n"
"    ST_OffsetCurve(geom, 15, 'quad_segs=4 join=mitre mitre_limit=2.2'),\n"
"    ST_OffsetCurve(geom, -15, 'quad_segs=4 join=mitre mitre_limit=2.2')\n"
"    ) )\n"
"    FROM ST_GeomFromText(\n"
"'LINESTRING(164 16,144 16,124 16,104 16,84 16,64 16,\n"
"    44 16,24 16,20 16,18 16,17 17,\n"
"    16 18,16 20,16 40,16 60,16 80,16 100,\n"
"    16 120,16 140,16 160,16 180,16 195)') As geom;\n"
"-- 出力 --\n"
"MULTILINESTRING((164 1,11.7867965644036 1,1 11.7867965644036,1 195),\n"
"    (31 195,31 31,164 31))"

#. Tag: refname
#: reference_processing.xml:1491
#, no-c-format
msgid "ST_PointOnSurface"
msgstr "ST_PointOnSurface"

#. Tag: refpurpose
#: reference_processing.xml:1492
#, no-c-format
msgid "Computes a point guaranteed to lie in a polygon, or on a geometry."
msgstr "ポリゴン内またはジオメトリ上にあるのが保証されたポイントを返します。"

#. Tag: funcprototype
#: reference_processing.xml:1497
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_PointOnSurface</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_PointOnSurface</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef>"

#. Tag: para
#: reference_processing.xml:1509
#, no-c-format
msgid ""
"Returns a <varname>POINT</varname> which is guaranteed to lie in the "
"interior of a surface (POLYGON, MULTIPOLYGON, and CURVED POLYGON). In "
"PostGIS this function also works on line and point geometries."
msgstr ""
"サーフェス (POLYGON、MULTIPOLYGON、CURVED POLYGON)内部にあることが保証された"
"<varname>POINT</varname>を返します。PostGISでは、この関数はラインジオメトリと"
"ポイントジオメトリ上でも動作します。"

#. Tag: para
#: reference_processing.xml:1514
#, no-c-format
msgid "&sfs_compliant; s3.2.14.2 // s3.2.18.2"
msgstr "&sfs_compliant; s3.2.14.2 // s3.2.18.2"

#. Tag: para
#: reference_processing.xml:1515
#, no-c-format
msgid ""
"&sqlmm_compliant; SQL-MM 3: 8.1.5, 9.5.6. The specifications define "
"ST_PointOnSurface for surface geometries only. PostGIS extends the function "
"to support all common geometry types. Other databases (Oracle, DB2, ArcSDE) "
"seem to support this function only for surfaces. SQL Server 2008 supports "
"all common geometry types."
msgstr ""
"&sqlmm_compliant; SQL-MM 3: 8.1.5, 9.5.6. 仕様では、サーフェスジオメトリのみ"
"のST_PointOnSurfaceが定義されています。PostGISは、すべての一般的なジオメトリ"
"タイプに対応するよう拡張しています。他のデータベース (Oracle、DB2、ArcSDE)"
"は、サーフェスに対してのみこの機能をサポートしているようです。SQL Server 2008"
"では、すべての一般的なジオメトリタイプに対応しています。"

#. Tag: para
#: reference_processing.xml:1536
#, no-c-format
msgid "PointOnSurface of a <varname>MULTIPOINT</varname>"
msgstr "<varname>MULTIPOINT</varname>のPointOnSurface"

#. Tag: para
#: reference_processing.xml:1547
#, no-c-format
msgid "PointOnSurface of a <varname>LINESTRING</varname>"
msgstr "<varname>LINESTRING</varname>のPointOnSurface"

#. Tag: para
#: reference_processing.xml:1560
#, no-c-format
msgid "PointOnSurface of a <varname>POLYGON</varname>"
msgstr "<varname>POLYGON</varname>のPointOnSurface"

#. Tag: para
#: reference_processing.xml:1571
#, no-c-format
msgid "PointOnSurface of a <varname>GEOMETRYCOLLECTION</varname>"
msgstr "<varname>GEOMETRYCOLLECTION</varname>のPointOnSurface"

#. Tag: programlisting
#: reference_processing.xml:1580
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_PointOnSurface('POINT(0 5)'::geometry));\n"
"------------\n"
" POINT(0 5)\n"
"\n"
"SELECT ST_AsText(ST_PointOnSurface('LINESTRING(0 5, 0 10)'::geometry));\n"
"------------\n"
" POINT(0 5)\n"
"\n"
"SELECT ST_AsText(ST_PointOnSurface('POLYGON((0 0, 0 5, 5 5, 5 0, 0 0))'::"
"geometry));\n"
"----------------\n"
" POINT(2.5 2.5)\n"
"\n"
"SELECT ST_AsEWKT(ST_PointOnSurface(ST_GeomFromEWKT('LINESTRING(0 5 1, 0 0 1, "
"0 10 2)')));\n"
"----------------\n"
" POINT(0 0 1)"
msgstr ""
"SELECT ST_AsText(ST_PointOnSurface('POINT(0 5)'::geometry));\n"
"------------\n"
" POINT(0 5)\n"
"\n"
"SELECT ST_AsText(ST_PointOnSurface('LINESTRING(0 5, 0 10)'::geometry));\n"
"------------\n"
" POINT(0 5)\n"
"\n"
"SELECT ST_AsText(ST_PointOnSurface('POLYGON((0 0, 0 5, 5 5, 5 0, 0 0))'::"
"geometry));\n"
"----------------\n"
" POINT(2.5 2.5)\n"
"\n"
"SELECT ST_AsEWKT(ST_PointOnSurface(ST_GeomFromEWKT('LINESTRING(0 5 1, 0 0 1, "
"0 10 2)')));\n"
"----------------\n"
" POINT(0 0 1)"

#. Tag: para
#: reference_processing.xml:1582
#, no-c-format
msgid ""
"<emphasis role=\"bold\">Example:</emphasis> The result of ST_PointOnSurface "
"is guaranteed to lie within polygons, whereas the point computed by <xref "
"linkend=\"ST_Centroid\"/> may be outside."
msgstr ""
"<emphasis role=\"bold\">例:</emphasis> <xref linkend=\"ST_Centroid\"/>で計算"
"されたポイントはポリゴンの外になる場合があるのに対して、ST_PointOnSurfaceの結"
"果はポリゴン内に存在することが保証されます。"

#. Tag: para
#: reference_processing.xml:1592
#, no-c-format
msgid "Red: point on surface; Green: centroid"
msgstr "赤: サーフェス上のポイント、緑: 重心"

#. Tag: programlisting
#: reference_processing.xml:1596
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_PointOnSurface(geom)) AS pt_on_surf,\n"
"       ST_AsText(ST_Centroid(geom)) AS centroid\n"
"    FROM (SELECT 'POLYGON ((130 120, 120 190, 30 140, 50 20, 190 20,\n"
"                      170 100, 90 60, 90 130, 130 120))'::geometry AS geom) "
"AS t;\n"
"\n"
"   pt_on_surf    |                  centroid\n"
"-----------------+---------------------------------------------\n"
" POINT(62.5 110) | POINT(100.18264840182648 85.11415525114155)"
msgstr ""
"SELECT ST_AsText(ST_PointOnSurface(geom)) AS pt_on_surf,\n"
"       ST_AsText(ST_Centroid(geom)) AS centroid\n"
"    FROM (SELECT 'POLYGON ((130 120, 120 190, 30 140, 50 20, 190 20,\n"
"                      170 100, 90 60, 90 130, 130 120))'::geometry AS geom) "
"AS t;\n"
"\n"
"   pt_on_surf    |                  centroid\n"
"-----------------+---------------------------------------------\n"
" POINT(62.5 110) | POINT(100.18264840182648 85.11415525114155)"

#. Tag: para
#: reference_processing.xml:1601
#, no-c-format
msgid ", <xref linkend=\"ST_MaximumInscribedCircle\"/>"
msgstr ", <xref linkend=\"ST_MaximumInscribedCircle\"/>"

#. Tag: refname
#: reference_processing.xml:1607
#, no-c-format
msgid "ST_Polygonize"
msgstr "ST_Polygonize"

#. Tag: refpurpose
#: reference_processing.xml:1609
#, no-c-format
msgid ""
"Computes a collection of polygons formed from the linework of a set of "
"geometries."
msgstr ""
"ジオメトリ集合のラインから形成されるポリゴンのコレクションを計算します。"

#. Tag: funcsynopsis
#: reference_processing.xml:1614
#, no-c-format
msgid ""
"<funcprototype> <funcdef>geometry <function>ST_Polygonize</function></"
"funcdef> <paramdef><type>geometry set</type> <parameter>geomfield</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
"<function>ST_Polygonize</function></funcdef> <paramdef><type>geometry[]</"
"type> <parameter>geom_array</parameter></paramdef> </funcprototype>"
msgstr ""
"<funcprototype> <funcdef>geometry <function>ST_Polygonize</function></"
"funcdef> <paramdef><type>geometry set</type> <parameter>geomfield</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
"<function>ST_Polygonize</function></funcdef> <paramdef><type>geometry[]</"
"type> <parameter>geom_array</parameter></paramdef> </funcprototype>"

#. Tag: para
#: reference_processing.xml:1630
#, no-c-format
msgid ""
"Creates a GeometryCollection containing the polygons formed by the "
"constituent linework of a set of geometries. Input linework must be "
"correctly noded for this function to work properly."
msgstr ""
"ジオメトリ集合の構成要素であるラインから形成されるポリゴンを含むジオメトリコ"
"レクションを計算します。この関数が確実に動作するために、入力ラインは正しい"
"ノードを持たなければなりません。"

#. Tag: para
#: reference_processing.xml:1635
#, no-c-format
msgid ""
"To ensure input is fully noded use <xref linkend=\"ST_Node\"/> on the input "
"geometry before polygonizing."
msgstr ""
"入力が完全にノードを持っているようにするには、ポリゴン化の前に入力ジオメトリ"
"に対して<xref linkend=\"ST_Node\"/>を使います。"

#. Tag: para
#: reference_processing.xml:1642
#, no-c-format
msgid ""
"GeometryCollections are often difficult to deal with with third party tools. "
"Use <xref linkend=\"ST_Dump\"/> to convert the polygonize result into "
"separate polygons."
msgstr ""
"ジオメトリコレクションは、サードパーティ製ツールでは、しばしば取り扱いが難し"
"いとされることがあります。ポリゴン化の結果を個々のポリゴンに変換するには"
"<xref linkend=\"ST_Dump\"/>を使います。"

#. Tag: para
#: reference_processing.xml:1648
#, no-c-format
msgid "Availability: 1.0.0RC1"
msgstr "Availability: 1.0.0RC1"

#. Tag: title
#: reference_processing.xml:1652
#, no-c-format
msgid "Examples: Polygonizing single linestrings"
msgstr "例: 単一ラインストリングのポリゴン化"

#. Tag: programlisting
#: reference_processing.xml:1653
#, no-c-format
msgid ""
"SELECT ST_AsEWKT(ST_Polygonize(geom_4269)) As geomtextrep\n"
"FROM (SELECT geom_4269 FROM ma.suffolk_edges ORDER BY tlid LIMIT 45) As "
"foo;\n"
"\n"
"geomtextrep\n"
"-------------------------------------\n"
" SRID=4269;GEOMETRYCOLLECTION(POLYGON((-71.040878 42.285678,-71.040943 "
"42.2856,-71.04096 42.285752,-71.040878 42.285678)),\n"
" POLYGON((-71.17166 42.353675,-71.172026 42.354044,-71.17239 "
"42.354358,-71.171794 42.354971,-71.170511 42.354855,\n"
" -71.17112 42.354238,-71.17166 42.353675)))\n"
"(1 row)\n"
"\n"
"--Use ST_Dump to dump out the polygonize geoms into individual polygons\n"
"SELECT ST_AsEWKT((ST_Dump(foofoo.polycoll)).geom) As geomtextrep\n"
"FROM (SELECT ST_Polygonize(geom_4269) As polycoll\n"
"    FROM (SELECT geom_4269 FROM ma.suffolk_edges\n"
"        ORDER BY tlid LIMIT 45) As foo) As foofoo;\n"
"\n"
"geomtextrep\n"
"------------------------\n"
" SRID=4269;POLYGON((-71.040878 42.285678,-71.040943 42.2856,-71.04096 "
"42.285752,\n"
"-71.040878 42.285678))\n"
" SRID=4269;POLYGON((-71.17166 42.353675,-71.172026 42.354044,-71.17239 "
"42.354358\n"
",-71.171794 42.354971,-71.170511 42.354855,-71.17112 42.354238,-71.17166 "
"42.353675))\n"
"(2 rows)"
msgstr ""
"SELECT ST_AsEWKT(ST_Polygonize(geom_4269)) As geomtextrep\n"
"FROM (SELECT geom_4269 FROM ma.suffolk_edges ORDER BY tlid LIMIT 45) As "
"foo;\n"
"\n"
"geomtextrep\n"
"-------------------------------------\n"
" SRID=4269;GEOMETRYCOLLECTION(POLYGON((-71.040878 42.285678,-71.040943 "
"42.2856,-71.04096 42.285752,-71.040878 42.285678)),\n"
" POLYGON((-71.17166 42.353675,-71.172026 42.354044,-71.17239 "
"42.354358,-71.171794 42.354971,-71.170511 42.354855,\n"
" -71.17112 42.354238,-71.17166 42.353675)))\n"
"(1 row)\n"
"\n"
"-- ST_Dumpでポリゴン化されたジオメトリを個々のポリゴンにダンプします\n"
"SELECT ST_AsEWKT((ST_Dump(foofoo.polycoll)).geom) As geomtextrep\n"
"FROM (SELECT ST_Polygonize(geom_4269) As polycoll\n"
"    FROM (SELECT geom_4269 FROM ma.suffolk_edges\n"
"        ORDER BY tlid LIMIT 45) As foo) As foofoo;\n"
"\n"
"geomtextrep\n"
"------------------------\n"
" SRID=4269;POLYGON((-71.040878 42.285678,-71.040943 42.2856,-71.04096 "
"42.285752,\n"
"-71.040878 42.285678))\n"
" SRID=4269;POLYGON((-71.17166 42.353675,-71.172026 42.354044,-71.17239 "
"42.354358\n"
",-71.171794 42.354971,-71.170511 42.354855,-71.17112 42.354238,-71.17166 "
"42.353675))\n"
"(2 rows)"

#. Tag: para
#: reference_processing.xml:1658
#, no-c-format
msgid ", <xref linkend=\"ST_Dump\"/>"
msgstr ", <xref linkend=\"ST_Dump\"/>"

#. Tag: refname
#: reference_processing.xml:1667
#, no-c-format
msgid "ST_ReducePrecision"
msgstr "ST_ReducePrecision"

#. Tag: refpurpose
#: reference_processing.xml:1669
#, no-c-format
msgid "Returns a valid geometry with points rounded to a grid tolerance."
msgstr ""
"全ての与えられたグリッド許容値に丸められたポイントからなる妥当なジオメトリを"
"返します。"

#. Tag: funcprototype
#: reference_processing.xml:1674
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_ReducePrecision</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g</parameter></paramdef> "
"<paramdef><type>float8 </type> <parameter>gridsize</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_ReducePrecision</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g</parameter></paramdef> "
"<paramdef><type>float8 </type> <parameter>gridsize</parameter></paramdef>"

#. Tag: para
#: reference_processing.xml:1688
#, no-c-format
msgid ""
"Returns a valid geometry with all points rounded to the provided grid "
"tolerance, and features below the tolerance removed."
msgstr ""
"全ての与えられたグリッド許容値に丸められたポイントからなる妥当なジオメトリを"
"返します。許容値より下の地物は削除されます。"

#. Tag: para
#: reference_processing.xml:1690
#, no-c-format
msgid ""
"Unlike <xref linkend=\"ST_SnapToGrid\"/> the returned geometry will be "
"valid, with no ring self-intersections or collapsed components."
msgstr ""
"<xref linkend=\"ST_SnapToGrid\"/>と違い、返されるジオメトリは妥当で、自己交差"
"の環や崩壊した要素を伴いません。"

#. Tag: para
#: reference_processing.xml:1692
#, no-c-format
msgid "Precision reduction can be used to:"
msgstr "精度提言は次の場合に使います。"

#. Tag: para
#: reference_processing.xml:1695
#, no-c-format
msgid "match coordinate precision to the data accuracy"
msgstr "座標精度をデータ精度に合わせる"

#. Tag: para
#: reference_processing.xml:1698
#, no-c-format
msgid "reduce the number of coordinates needed to represent a geometry"
msgstr "ジオメトリを表現するのに必要な座標の数を減らす"

#. Tag: para
#: reference_processing.xml:1701
#, no-c-format
msgid ""
"ensure valid geometry output to formats which use lower precision (e.g. text "
"formats such as WKT, GeoJSON or KML when the number of output decimal places "
"is limited)."
msgstr ""
"低精度書式 (出力桁数が制限されるWKT, GeoJSON, KML等のテキスト書式)への出力ジ"
"オメトリの妥当性の確保。"

#. Tag: para
#: reference_processing.xml:1706
#, no-c-format
msgid ""
"export valid geometry to systems which use lower or limited precision (e.g. "
"SDE, Oracle tolerance value)"
msgstr ""
"妥当なジオメトリの低精度や制度制限のあるシステム (SDE, Oracle許容値等)へのエ"
"クスポート"

#. Tag: programlisting
#: reference_processing.xml:1719
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_ReducePrecision('POINT(1.412 19.323)', 0.1));\n"
"    st_astext\n"
"-----------------\n"
" POINT(1.4 19.3)\n"
"\n"
"SELECT ST_AsText(ST_ReducePrecision('POINT(1.412 19.323)', 1.0));\n"
"  st_astext\n"
"-------------\n"
" POINT(1 19)\n"
"\n"
"SELECT ST_AsText(ST_ReducePrecision('POINT(1.412 19.323)', 10));\n"
"  st_astext\n"
"-------------\n"
" POINT(0 20)"
msgstr ""
"SELECT ST_AsText(ST_ReducePrecision('POINT(1.412 19.323)', 0.1));\n"
"    st_astext\n"
"-----------------\n"
" POINT(1.4 19.3)\n"
"\n"
"SELECT ST_AsText(ST_ReducePrecision('POINT(1.412 19.323)', 1.0));\n"
"  st_astext\n"
"-------------\n"
" POINT(1 19)\n"
"\n"
"SELECT ST_AsText(ST_ReducePrecision('POINT(1.412 19.323)', 10));\n"
"  st_astext\n"
"-------------\n"
" POINT(0 20)"

#. Tag: para
#: reference_processing.xml:1721
#, no-c-format
msgid "Precision reduction can reduce number of vertices"
msgstr "精度を落とすことで頂点数を減らすことができます。"

#. Tag: programlisting
#: reference_processing.xml:1722
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_ReducePrecision('LINESTRING (10 10, 19.6 30.1, 20 30, "
"20.3 30, 40 40)', 1));\n"
"  st_astext\n"
"-------------\n"
" LINESTRING (10 10, 20 30, 40 40)"
msgstr ""
"SELECT ST_AsText(ST_ReducePrecision('LINESTRING (10 10, 19.6 30.1, 20 30, "
"20.3 30, 40 40)', 1));\n"
"  st_astext\n"
"-------------\n"
" LINESTRING (10 10, 20 30, 40 40)"

#. Tag: para
#: reference_processing.xml:1724
#, no-c-format
msgid "Precision reduction splits polygons if needed to ensure validity"
msgstr ""
"妥当性を確保するために必要な場合には、精度を落とす際にポリゴンを分割します。"

#. Tag: programlisting
#: reference_processing.xml:1725
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_ReducePrecision('POLYGON ((10 10, 60 60.1, 70 30, 40 40, "
"50 10, 10 10))', 10));\n"
"  st_astext\n"
"-------------\n"
" MULTIPOLYGON (((60 60, 70 30, 40 40, 60 60)), ((40 40, 50 10, 10 10, 40 "
"40)))"
msgstr ""
"SELECT ST_AsText(ST_ReducePrecision('POLYGON ((10 10, 60 60.1, 70 30, 40 40, "
"50 10, 10 10))', 10));\n"
"  st_astext\n"
"-------------\n"
" MULTIPOLYGON (((60 60, 70 30, 40 40, 60 60)), ((40 40, 50 10, 10 10, 40 "
"40)))"

#. Tag: para
#: reference_processing.xml:1731
#, no-c-format
msgid ", <xref linkend=\"ST_Simplify\"/>, <xref linkend=\"ST_SimplifyVW\"/>"
msgstr ", <xref linkend=\"ST_Simplify\"/>, <xref linkend=\"ST_SimplifyVW\"/>"

#. Tag: refname
#: reference_processing.xml:1737
#, no-c-format
msgid "ST_SharedPaths"
msgstr "ST_SharedPaths"

#. Tag: refpurpose
#: reference_processing.xml:1738
#, no-c-format
msgid ""
"Returns a collection containing paths shared by the two input linestrings/"
"multilinestrings."
msgstr ""
"二つのLINESTRING/MULTILINESTRINGの入力が共有するパスのコレクションを返しま"
"す。"

#. Tag: funcprototype
#: reference_processing.xml:1743
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_SharedPaths</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>lineal1</parameter></paramdef> "
"<paramdef><type>geometry</type> <parameter>lineal2</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_SharedPaths</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>lineal1</parameter></paramdef> "
"<paramdef><type>geometry</type> <parameter>lineal2</parameter></paramdef>"

#. Tag: para
#: reference_processing.xml:1753
#, no-c-format
msgid ""
"Returns a collection containing paths shared by the two input geometries. "
"Those going in the same direction are in the first element of the "
"collection, those going in the opposite direction are in the second element. "
"The paths themselves are given in the direction of the first geometry."
msgstr ""
"二つの入力ジオメトリが共有するパスのコレクションを返します。順方向に行くもの"
"はコレクションの一つ目の要素にあり、逆方向は二つ目の要素にあります。これらの"
"パス自体は一つ目のジオメトリの方向をもとにします。"

#. Tag: title
#: reference_processing.xml:1761
#, no-c-format
msgid "Examples: Finding shared paths"
msgstr "例: 共有パスの探索"

#. Tag: para
#: reference_processing.xml:1771
#, no-c-format
msgid "A multilinestring and a linestring"
msgstr "マルチラインストリングとラインストリング"

#. Tag: para
#: reference_processing.xml:1782
#, no-c-format
msgid ""
"The shared path of multilinestring and linestring overlaid with original "
"geometries."
msgstr "マルチラインストリングとラインストリングとの共有パスと元のジオメトリ。"

#. Tag: programlisting
#: reference_processing.xml:1785
#, no-c-format
msgid ""
"SELECT ST_AsText(\n"
"  ST_SharedPaths(\n"
"    ST_GeomFromText('MULTILINESTRING((26 125,26 200,126 200,126 125,26 "
"125),\n"
"       (51 150,101 150,76 175,51 150))'),\n"
"    ST_GeomFromText('LINESTRING(151 100,126 156.25,126 125,90 161, 76 "
"175)')\n"
"    )\n"
"  ) As wkt\n"
"\n"
"                                wkt\n"
"-------------------------------------------------------------\n"
"GEOMETRYCOLLECTION(MULTILINESTRING((126 156.25,126 125),\n"
" (101 150,90 161),(90 161,76 175)),MULTILINESTRING EMPTY)"
msgstr ""
"SELECT ST_AsText(\n"
"  ST_SharedPaths(\n"
"    ST_GeomFromText('MULTILINESTRING((26 125,26 200,126 200,126 125,26 "
"125),\n"
"       (51 150,101 150,76 175,51 150))'),\n"
"    ST_GeomFromText('LINESTRING(151 100,126 156.25,126 125,90 161, 76 "
"175)')\n"
"    )\n"
"  ) As wkt\n"
"\n"
"                                wkt\n"
"-------------------------------------------------------------\n"
"GEOMETRYCOLLECTION(MULTILINESTRING((126 156.25,126 125),\n"
" (101 150,90 161),(90 161,76 175)),MULTILINESTRING EMPTY)"

#. Tag: programlisting
#: reference_processing.xml:1791
#, no-c-format
msgid ""
"-- same example but linestring orientation flipped\n"
"SELECT ST_AsText(\n"
"  ST_SharedPaths(\n"
"   ST_GeomFromText('LINESTRING(76 175,90 161,126 125,126 156.25,151 100)'),\n"
"   ST_GeomFromText('MULTILINESTRING((26 125,26 200,126 200,126 125,26 125),\n"
"       (51 150,101 150,76 175,51 150))')\n"
"    )\n"
"  ) As wkt\n"
"\n"
"                                wkt\n"
"-------------------------------------------------------------\n"
"GEOMETRYCOLLECTION(MULTILINESTRING EMPTY,\n"
"MULTILINESTRING((76 175,90 161),(90 161,101 150),(126 125,126 156.25)))"
msgstr ""
"-- 同じ例ですがラインストリングの引数の順序を入れ替えています\n"
"SELECT ST_AsText(\n"
"  ST_SharedPaths(\n"
"   ST_GeomFromText('LINESTRING(76 175,90 161,126 125,126 156.25,151 100)'),\n"
"   ST_GeomFromText('MULTILINESTRING((26 125,26 200,126 200,126 125,26 125),\n"
"       (51 150,101 150,76 175,51 150))')\n"
"    )\n"
"  ) As wkt\n"
"\n"
"                                wkt\n"
"-------------------------------------------------------------\n"
"GEOMETRYCOLLECTION(MULTILINESTRING EMPTY,\n"
"MULTILINESTRING((76 175,90 161),(90 161,101 150),(126 125,126 156.25)))"

#. Tag: para
#: reference_processing.xml:1801
#, no-c-format
msgid ""
", <xref linkend=\"ST_GeometryN\"/>, <xref linkend=\"ST_NumGeometries\"/>"
msgstr ""
", <xref linkend=\"ST_GeometryN\"/>, <xref linkend=\"ST_NumGeometries\"/>"

#. Tag: refname
#: reference_processing.xml:1811
#, no-c-format
msgid "ST_Simplify"
msgstr "ST_Simplify"

#. Tag: refpurpose
#: reference_processing.xml:1812
#, no-c-format
msgid ""
"Returns a simplified version of a geometry, using the Douglas-Peucker "
"algorithm."
msgstr ""
"Douglas-Peukerアルゴリズムを使用して、与えられたジオメトリを簡略化したものを"
"返します。"

#. Tag: funcsynopsis
#: reference_processing.xml:1817
#, no-c-format
msgid ""
"<funcprototype> <funcdef>geometry <function>ST_Simplify</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>geomA</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>tolerance</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>geometry <function>ST_Simplify</"
"function></funcdef> <paramdef><type>geometry</type> <parameter>geomA</"
"parameter></paramdef> <paramdef><type>float</type> <parameter>tolerance</"
"parameter></paramdef> <paramdef><type>boolean</type> "
"<parameter>preserveCollapsed</parameter></paramdef> </funcprototype>"
msgstr ""
"<funcprototype> <funcdef>geometry <function>ST_Simplify</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>geomA</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>tolerance</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>geometry <function>ST_Simplify</"
"function></funcdef> <paramdef><type>geometry</type> <parameter>geomA</"
"parameter></paramdef> <paramdef><type>float</type> <parameter>tolerance</"
"parameter></paramdef> <paramdef><type>boolean</type> "
"<parameter>preserveCollapsed</parameter></paramdef> </funcprototype>"

#. Tag: para
#: reference_processing.xml:1834
#, no-c-format
msgid ""
"Returns a \"simplified\" version of the given geometry using the Douglas-"
"Peucker algorithm. Will actually do something only with (multi)lines and "
"(multi)polygons but you can safely call it with any kind of geometry. Since "
"simplification occurs on a object-by-object basis you can also feed a "
"GeometryCollection to this function."
msgstr ""
"与えられたジオメトリを「簡略化」したものを返します。Douglas-Peukerアルゴリズ"
"ムを使用します。(MULTI)LINEと(MULTI)POLYGONとで実際に動作をしますが、どのよう"
"な種類のジオメトリでも安全に呼ぶことができます。簡略化はオブジェクトごとに行"
"われるので、ジオメトリコレクションでこの関数を呼ぶことができます。"

#. Tag: para
#: reference_processing.xml:1841
#, no-c-format
msgid ""
"The \"preserve collapsed\" flag will retain objects that would otherwise be "
"too small given the tolerance. For example, a 1m long line simplified with a "
"10m tolerance. If <varname>preserveCollapsed</varname> argument is specified "
"as true, the line will not disappear. This flag is useful for rendering "
"engines, to avoid having large numbers of very small objects disappear from "
"a map leaving surprising gaps."
msgstr ""
"\"preserve collapsed\"フラグは、与えられた許容値としては小さ過ぎることになる"
"オブジェクトを保持します。たとえば、1ｍのラインを許容値10mで単純化する場合な"
"どです。<varname>preserveCollapsed</varname>引数がTRUEに指定されている場合に"
"は、ラインは消滅しません。このフラグは、多数の隙間を残している地図を描画する"
"際に、描画エンジンが多数の微細オブジェクトを消すことを避けるために使います。"

#. Tag: para
#: reference_processing.xml:1848 reference_processing.xml:2028
#: reference_processing.xml:2084
#, no-c-format
msgid ""
"Note that returned geometry might lose its simplicity (see <xref "
"linkend=\"ST_IsSimple\"/>)"
msgstr ""
"返されるジオメトリは単純性 (<xref linkend=\"ST_IsSimple\"/>参照)を失うことが"
"あります。"

#. Tag: para
#: reference_processing.xml:1850 reference_processing.xml:2030
#: reference_processing.xml:2086
#, no-c-format
msgid ""
"Note topology may not be preserved and may result in invalid geometries. Use "
"(see <xref linkend=\"ST_SimplifyPreserveTopology\"/>) to preserve topology."
msgstr ""
"トポロジは保存されているとは限らず、不正なジオメトリを返すことがあります。ト"
"ポロジを保存するには<xref linkend=\"ST_SimplifyPreserveTopology\"/>を使いま"
"す。"

#. Tag: para
#: reference_processing.xml:1852
#, no-c-format
msgid "Availability: 1.2.2"
msgstr "Availability: 1.2.2"

#. Tag: para
#: reference_processing.xml:1857
#, no-c-format
msgid "A circle simplified too much becomes a triangle, medium an octagon,"
msgstr "簡略化をやりすぎて三角形になった円、八角形になった円です。"

#. Tag: programlisting
#: reference_processing.xml:1858
#, no-c-format
msgid ""
"SELECT ST_Npoints(geom) AS np_before,\n"
"       ST_NPoints(ST_Simplify(geom,0.1)) AS np01_notbadcircle,\n"
"       ST_NPoints(ST_Simplify(geom,0.5)) AS np05_notquitecircle,\n"
"       ST_NPoints(ST_Simplify(geom,1)) AS np1_octagon,\n"
"       ST_NPoints(ST_Simplify(geom,10)) AS np10_triangle,\n"
"       (ST_Simplify(geom,100) is null) AS  np100_geometrygoesaway\n"
"  FROM\n"
"    (SELECT ST_Buffer('POINT(1 3)', 10,12) As geom) AS foo;\n"
"\n"
" np_before | np01_notbadcircle | np05_notquitecircle | np1_octagon | "
"np10_triangle | np100_geometrygoesaway\n"
"-----------+-------------------+---------------------+-------------"
"+---------------+------------------------\n"
"        49 |                33 |                  17 |           9 "
"|             4 | t"
msgstr ""
"SELECT ST_Npoints(geom) AS np_before,\n"
"       ST_NPoints(ST_Simplify(geom,0.1)) AS np01_notbadcircle,\n"
"       ST_NPoints(ST_Simplify(geom,0.5)) AS np05_notquitecircle,\n"
"       ST_NPoints(ST_Simplify(geom,1)) AS np1_octagon,\n"
"       ST_NPoints(ST_Simplify(geom,10)) AS np10_triangle,\n"
"       (ST_Simplify(geom,100) is null) AS  np100_geometrygoesaway\n"
"  FROM\n"
"    (SELECT ST_Buffer('POINT(1 3)', 10,12) As geom) AS foo;\n"
"\n"
" np_before | np01_notbadcircle | np05_notquitecircle | np1_octagon | "
"np10_triangle | np100_geometrygoesaway\n"
"-----------+-------------------+---------------------+-------------"
"+---------------+------------------------\n"
"        49 |                33 |                  17 |           9 "
"|             4 | t"

#. Tag: para
#: reference_processing.xml:1862
#, no-c-format
msgid ""
", <xref linkend=\"ST_SimplifyPreserveTopology\"/>, <xref "
"linkend=\"ST_SimplifyVW\"/>, Topology <xref linkend=\"TP_ST_Simplify\"/>"
msgstr ""
", <xref linkend=\"ST_SimplifyPreserveTopology\"/>, <xref "
"linkend=\"ST_SimplifyVW\"/>, Topology <xref linkend=\"TP_ST_Simplify\"/>"

#. Tag: refname
#: reference_processing.xml:1872
#, no-c-format
msgid "ST_SimplifyPreserveTopology"
msgstr "ST_SimplifyPreserveTopology"

#. Tag: refpurpose
#: reference_processing.xml:1873
#, no-c-format
msgid ""
"Returns a simplified and valid version of a geometry, using the Douglas-"
"Peucker algorithm."
msgstr ""
"Douglas-Peukerアルゴリズムを使用して、与えられたジオメトリを簡略化したものを"
"返します。"

#. Tag: funcprototype
#: reference_processing.xml:1879
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_SimplifyPreserveTopology</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>geomA</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>tolerance</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_SimplifyPreserveTopology</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>geomA</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>tolerance</parameter></paramdef>"

#. Tag: para
#: reference_processing.xml:1889
#, no-c-format
msgid ""
"Returns a \"simplified\" version of the given geometry using the Douglas-"
"Peucker algorithm. Will avoid creating derived geometries (polygons in "
"particular) that are invalid. Will actually do something only with "
"(multi)lines and (multi)polygons but you can safely call it with any kind of "
"geometry. Since simplification occurs on a object-by-object basis you can "
"also feed a GeometryCollection to this function."
msgstr ""
"与えられたジオメトリを「簡略化」したものを返します。Douglas-Peukerアルゴリズ"
"ムを使用します。不正な派生ジオメトリ (特にポリゴン)の生成を回避します。"
"(MULTI)LINEと(MULTI)POLYGONとで実際に動作をしますが、どのような種類のジオメト"
"リでも安全に呼ぶことができます。簡略化はオブジェクトごとに行われるので、ジオ"
"メトリコレクションでこの関数を呼ぶことができます。"

#. Tag: para
#: reference_processing.xml:1898
#, no-c-format
msgid "Availability: 1.3.3"
msgstr "Availability: 1.3.3"

#. Tag: para
#: reference_processing.xml:1903
#, no-c-format
msgid ""
"Same example as Simplify, but we see Preserve Topology prevents "
"oversimplification. The circle can at most become a square."
msgstr ""
"Simplyfyと同じ例ですが、トポロジ保存で簡略化の行きすぎを阻止します。円は最低"
"でも四角形になります。"

#. Tag: programlisting
#: reference_processing.xml:1904
#, no-c-format
msgid ""
"SELECT ST_Npoints(geom) As np_before, "
"ST_NPoints(ST_SimplifyPreserveTopology(geom,0.1)) As np01_notbadcircle, "
"ST_NPoints(ST_SimplifyPreserveTopology(geom,0.5)) As np05_notquitecircle,\n"
"ST_NPoints(ST_SimplifyPreserveTopology(geom,1)) As np1_octagon, "
"ST_NPoints(ST_SimplifyPreserveTopology(geom,10)) As np10_square,\n"
"ST_NPoints(ST_SimplifyPreserveTopology(geom,100)) As  np100_stillsquare\n"
"FROM (SELECT ST_Buffer('POINT(1 3)', 10,12) As geom) As foo;\n"
"\n"
"--result--\n"
" np_before | np01_notbadcircle | np05_notquitecircle | np1_octagon | "
"np10_square | np100_stillsquare\n"
"-----------+-------------------+---------------------+-------------"
"+---------------+-------------------\n"
"        49 |                33 |                  17 |           9 "
"|             5 |                 5"
msgstr ""
"SELECT ST_Npoints(geom) As np_before, "
"ST_NPoints(ST_SimplifyPreserveTopology(geom,0.1)) As np01_notbadcircle, "
"ST_NPoints(ST_SimplifyPreserveTopology(geom,0.5)) As np05_notquitecircle,\n"
"ST_NPoints(ST_SimplifyPreserveTopology(geom,1)) As np1_octagon, "
"ST_NPoints(ST_SimplifyPreserveTopology(geom,10)) As np10_square,\n"
"ST_NPoints(ST_SimplifyPreserveTopology(geom,100)) As  np100_stillsquare\n"
"FROM (SELECT ST_Buffer('POINT(1 3)', 10,12) As geom) As foo;\n"
"\n"
"-- 結果 --\n"
" np_before | np01_notbadcircle | np05_notquitecircle | np1_octagon | "
"np10_square | np100_stillsquare\n"
"-----------+-------------------+---------------------+-------------"
"+---------------+-------------------\n"
"        49 |                33 |                  17 |           9 "
"|             5 |                 5"

#. Tag: refname
#: reference_processing.xml:1915
#, no-c-format
msgid "ST_SimplifyPolygonHull"
msgstr "ST_SimplifyPolygonHull"

#. Tag: refpurpose
#: reference_processing.xml:1916
#, no-c-format
msgid ""
"Computes a simplifed topology-preserving outer or inner hull of a polygonal "
"geometry."
msgstr ""
"ポリゴンジオメトリに対してトポロジを保存した状態で簡略化した外側または内側の"
"凹包を計算します。"

#. Tag: funcprototype
#: reference_processing.xml:1921
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_SimplifyPolygonHull</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>param_geom</parameter></"
"paramdef> <paramdef><type>float </type> <parameter>vertex_fraction</"
"parameter></paramdef> <paramdef choice=\"opt\"><type>boolean </type> "
"<parameter>is_outer = true</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_SimplifyPolygonHull</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>param_geom</parameter></"
"paramdef> <paramdef><type>float </type> <parameter>vertex_fraction</"
"parameter></paramdef> <paramdef choice=\"opt\"><type>boolean </type> "
"<parameter>is_outer = true</parameter></paramdef>"

#. Tag: para
#: reference_processing.xml:1933
#, no-c-format
msgid ""
"Computes a simplified topology-preserving outer or inner hull of a polygonal "
"geometry. An outer hull completely covers the input geometry. An inner hull "
"is completely covered by the input geometry. The result is a polygonal "
"geometry formed by a subset of the input vertices. MultiPolygons and holes "
"are handled and produce a result with the same structure as the input."
msgstr ""
"ポリゴンジオメトリに対してトポロジを保存した状態で簡略化した外側または内側の"
"凹包を計算します。外側の凹包は入力ジオメトリを完全に覆います。内側の凹包は完"
"全に入力ジオメトリに覆われます。返される結果は、入力ポリゴンの頂点の部分集合"
"から形成されるポリゴンジオメトリです。MULTIPOLUGONと穴は処理され、結果は入力"
"ジオメトリと同じ構造になります。"

#. Tag: para
#: reference_processing.xml:1940
#, no-c-format
msgid ""
"The reduction in vertex count is controlled by the <varname>vertex_fraction</"
"varname> parameter, which is a number in the range 0 to 1. Lower values "
"produce simpler results, with smaller vertex count and less concaveness. For "
"both outer and inner hulls a vertex fraction of 1.0 produces the orginal "
"geometry. For outer hulls a value of 0.0 produces the convex hull (for a "
"single polygon); for inner hulls it produces a triangle."
msgstr ""
"頂点数の減少は<varname>vertex_fraction</varname>パラメータで制御できます。0か"
"ら1の範囲を取ります。小さい値では簡略化が進み、頂点数が減り、凹性が下がりま"
"す。外側の凹包も内側の凹包も、vertex_fraction値が1.0では、元のジオメトリが生"
"成されます。0.0では、外側の凹包については凸包 (単一ポリゴンの場合)が生成さ"
"れ、内側の凹包については三角形が生成されます。"

#. Tag: para
#: reference_processing.xml:1947
#, no-c-format
msgid ""
"The simplification process operates by progressively removing concave "
"corners that contain the least amount of area, until the vertex count target "
"is reached. It prevents edges from crossing, so the result is always a valid "
"polygonal geometry."
msgstr ""
"単純化処理では、頂点数が目標に達するまで、最も少ない面積を持つ凹の角を徐々に"
"削除しています。これによりエッジがクロスするのを防ぎ、常に妥当なポリゴンジオ"
"メトリを返します。"

#. Tag: para
#: reference_processing.xml:1952
#, no-c-format
msgid ""
"To get better results with geometries that contain relatively long line "
"segments, it might be necessary to \"segmentize\" the input, as shown below."
msgstr ""
"相対的に辺が長いジオメトリでより良い結果を得るには、次のように、辺の分割を行"
"います。"

#. Tag: para
#: reference_processing.xml:1955
#, no-c-format
msgid "Availability: 3.3.0 - requires GEOS &gt;= 3.11.0"
msgstr "Availability: 3.3.0 - GEOS &gt;= 3.11.0 が必要です。"

#. Tag: para
#: reference_processing.xml:1967
#, no-c-format
msgid "Outer hull of a Polygon"
msgstr "ポリゴンの外側の凹包"

#. Tag: programlisting
#: reference_processing.xml:1970
#, no-c-format
msgid ""
"SELECT ST_SimplifyPolygonHull(\n"
"  'POLYGON ((131 158, 136 163, 161 165, 173 156, 179 148, 169 140, 186 144, "
"190 137, 185 131, 174 128, 174 124, 166 119, 158 121, 158 115, 165 107, 161 "
"97, 166 88, 166 79, 158 57, 145 57, 112 53, 111 47, 93 43, 90 48, 88 40, 80 "
"39, 68 32, 51 33, 40 31, 39 34, 49 38, 34 38, 25 34, 28 39, 36 40, 44 46, 24 "
"41, 17 41, 14 46, 19 50, 33 54, 21 55, 13 52, 11 57, 22 60, 34 59, 41 68, 75 "
"72, 62 77, 56 70, 46 72, 31 69, 46 76, 52 82, 47 84, 56 90, 66 90, 64 94, 56 "
"91, 33 97, 36 100, 23 100, 22 107, 29 106, 31 112, 46 116, 36 118, 28 131, "
"53 132, 59 127, 62 131, 76 130, 80 135, 89 137, 87 143, 73 145, 80 150, 88 "
"150, 85 157, 99 162, 116 158, 115 165, 123 165, 122 170, 134 164, 131 "
"158))',\n"
"    0.3);"
msgstr ""
"SELECT ST_SimplifyPolygonHull(\n"
"  'POLYGON ((131 158, 136 163, 161 165, 173 156, 179 148, 169 140, 186 144, "
"190 137, 185 131, 174 128, 174 124, 166 119, 158 121, 158 115, 165 107, 161 "
"97, 166 88, 166 79, 158 57, 145 57, 112 53, 111 47, 93 43, 90 48, 88 40, 80 "
"39, 68 32, 51 33, 40 31, 39 34, 49 38, 34 38, 25 34, 28 39, 36 40, 44 46, 24 "
"41, 17 41, 14 46, 19 50, 33 54, 21 55, 13 52, 11 57, 22 60, 34 59, 41 68, 75 "
"72, 62 77, 56 70, 46 72, 31 69, 46 76, 52 82, 47 84, 56 90, 66 90, 64 94, 56 "
"91, 33 97, 36 100, 23 100, 22 107, 29 106, 31 112, 46 116, 36 118, 28 131, "
"53 132, 59 127, 62 131, 76 130, 80 135, 89 137, 87 143, 73 145, 80 150, 88 "
"150, 85 157, 99 162, 116 158, 115 165, 123 165, 122 170, 134 164, 131 "
"158))',\n"
"    0.3);"

#. Tag: para
#: reference_processing.xml:1979
#, no-c-format
msgid "Inner hull of a Polygon"
msgstr "ポリゴンの内側の凹包"

#. Tag: programlisting
#: reference_processing.xml:1982
#, no-c-format
msgid ""
"SELECT ST_SimplifyPolygonHull(\n"
"  'POLYGON ((131 158, 136 163, 161 165, 173 156, 179 148, 169 140, 186 144, "
"190 137, 185 131, 174 128, 174 124, 166 119, 158 121, 158 115, 165 107, 161 "
"97, 166 88, 166 79, 158 57, 145 57, 112 53, 111 47, 93 43, 90 48, 88 40, 80 "
"39, 68 32, 51 33, 40 31, 39 34, 49 38, 34 38, 25 34, 28 39, 36 40, 44 46, 24 "
"41, 17 41, 14 46, 19 50, 33 54, 21 55, 13 52, 11 57, 22 60, 34 59, 41 68, 75 "
"72, 62 77, 56 70, 46 72, 31 69, 46 76, 52 82, 47 84, 56 90, 66 90, 64 94, 56 "
"91, 33 97, 36 100, 23 100, 22 107, 29 106, 31 112, 46 116, 36 118, 28 131, "
"53 132, 59 127, 62 131, 76 130, 80 135, 89 137, 87 143, 73 145, 80 150, 88 "
"150, 85 157, 99 162, 116 158, 115 165, 123 165, 122 170, 134 164, 131 "
"158))',\n"
"    0.3, false);"
msgstr ""
"SELECT ST_SimplifyPolygonHull(\n"
"  'POLYGON ((131 158, 136 163, 161 165, 173 156, 179 148, 169 140, 186 144, "
"190 137, 185 131, 174 128, 174 124, 166 119, 158 121, 158 115, 165 107, 161 "
"97, 166 88, 166 79, 158 57, 145 57, 112 53, 111 47, 93 43, 90 48, 88 40, 80 "
"39, 68 32, 51 33, 40 31, 39 34, 49 38, 34 38, 25 34, 28 39, 36 40, 44 46, 24 "
"41, 17 41, 14 46, 19 50, 33 54, 21 55, 13 52, 11 57, 22 60, 34 59, 41 68, 75 "
"72, 62 77, 56 70, 46 72, 31 69, 46 76, 52 82, 47 84, 56 90, 66 90, 64 94, 56 "
"91, 33 97, 36 100, 23 100, 22 107, 29 106, 31 112, 46 116, 36 118, 28 131, "
"53 132, 59 127, 62 131, 76 130, 80 135, 89 137, 87 143, 73 145, 80 150, 88 "
"150, 85 157, 99 162, 116 158, 115 165, 123 165, 122 170, 134 164, 131 "
"158))',\n"
"    0.3, false);"

#. Tag: para
#: reference_processing.xml:1991
#, no-c-format
msgid "Outer hull simplification of a MultiPolygon, with segmentization"
msgstr "中間点を挿入したマルチポリゴンの外側の凹包による簡略化"

#. Tag: programlisting
#: reference_processing.xml:1994
#, no-c-format
msgid ""
"SELECT ST_SimplifyPolygonHull(\n"
"  ST_Segmentize(ST_Letters('xt'), 2.0),\n"
"    0.1);"
msgstr ""
"SELECT ST_SimplifyPolygonHull(\n"
"  ST_Segmentize(ST_Letters('xt'), 2.0),\n"
"    0.1);"

#. Tag: para
#: reference_processing.xml:2001
#, no-c-format
msgid ""
", <xref linkend=\"ST_SimplifyVW\"/>, <xref linkend=\"ST_ConcaveHull\"/>, "
"<xref linkend=\"ST_Segmentize\"/>"
msgstr ""
", <xref linkend=\"ST_SimplifyVW\"/>, <xref linkend=\"ST_ConcaveHull\"/>, "
"<xref linkend=\"ST_Segmentize\"/>"

#. Tag: refname
#: reference_processing.xml:2008
#, no-c-format
msgid "ST_SimplifyVW"
msgstr "ST_SimplifyVW"

#. Tag: refpurpose
#: reference_processing.xml:2009
#, no-c-format
msgid ""
"Returns a simplified version of a geometry, using the Visvalingam-Whyatt "
"algorithm"
msgstr ""
"Visvalingam-Whyattアルゴリズムを使用して、入力ジオメトリを簡略化したジオメト"
"リを返します。"

#. Tag: funcprototype
#: reference_processing.xml:2014
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_SimplifyVW</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>geomA</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>tolerance</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_SimplifyVW</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>geomA</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>tolerance</parameter></paramdef>"

#. Tag: para
#: reference_processing.xml:2024
#, no-c-format
msgid ""
"Returns a \"simplified\" version of the given geometry using the Visvalingam-"
"Whyatt algorithm. Will actually do something only with (multi)lines and "
"(multi)polygons but you can safely call it with any kind of geometry. Since "
"simplification occurs on a object-by-object basis you can also feed a "
"GeometryCollection to this function."
msgstr ""
"Visvalingam-Whyattアルゴリズムを用いて、入力ジオメトリを「簡略化」したジオメ"
"トリを返します。(マルチ)ラインと(マルチ)ポリゴンでのみ動作しますが、どの種類"
"のジオメトリでも安全に呼ぶことができます。(MULTI)LINEと(MULTI)POLYGONとで実際"
"に動作をしますが、どのような種類のジオメトリでも安全に呼ぶことができます。簡"
"略化はオブジェクトごとに行われるので、ジオメトリコレクションでこの関数を呼ぶ"
"ことができます。"

#. Tag: para
#: reference_processing.xml:2032 reference_processing.xml:2089
#, no-c-format
msgid "Availability: 2.2.0"
msgstr "Availability: 2.2.0"

#. Tag: para
#: reference_processing.xml:2037
#, no-c-format
msgid "A LineString is simplified with a minimum area threshold of 30."
msgstr "ラインストリングを最小範囲のしきい値を30で簡略化しています。"

#. Tag: programlisting
#: reference_processing.xml:2038
#, no-c-format
msgid ""
"select ST_AsText(ST_SimplifyVW(geom,30)) simplified\n"
"FROM (SELECT  'LINESTRING(5 2, 3 8, 6 20, 7 25, 10 10)'::geometry geom) As "
"foo;\n"
"-result\n"
" simplified\n"
"------------------------------\n"
"LINESTRING(5 2,7 25,10 10)"
msgstr ""
"select ST_AsText(ST_SimplifyVW(geom,30)) simplified\n"
"FROM (SELECT  'LINESTRING(5 2, 3 8, 6 20, 7 25, 10 10)'::geometry geom) As "
"foo;\n"
"-result\n"
" simplified\n"
"------------------------------\n"
"LINESTRING(5 2,7 25,10 10)"

#. Tag: para
#: reference_processing.xml:2042
#, no-c-format
msgid ""
", <xref linkend=\"ST_Simplify\"/>, <xref "
"linkend=\"ST_SimplifyPreserveTopology\"/>, Topology <xref "
"linkend=\"TP_ST_Simplify\"/>"
msgstr ""
", <xref linkend=\"ST_Simplify\"/>, <xref "
"linkend=\"ST_SimplifyPreserveTopology\"/>, Topology <xref "
"linkend=\"TP_ST_Simplify\"/>"

#. Tag: refname
#: reference_processing.xml:2048
#, no-c-format
msgid "ST_SetEffectiveArea"
msgstr "ST_SetEffectiveArea"

#. Tag: refpurpose
#: reference_processing.xml:2049
#, no-c-format
msgid ""
"Sets the effective area for each vertex, using the Visvalingam-Whyatt "
"algorithm."
msgstr ""
"Visvalingam-Whyattアルゴリズムを使って有効範囲となる個々の頂点を置きます。"

#. Tag: funcprototype
#: reference_processing.xml:2056
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_SetEffectiveArea</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>geomA</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>threshold = 0</parameter></paramdef> "
"<paramdef><type>integer</type> <parameter>set_area = 1</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_SetEffectiveArea</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>geomA</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>threshold = 0</parameter></paramdef> "
"<paramdef><type>integer</type> <parameter>set_area = 1</parameter></paramdef>"

#. Tag: para
#: reference_processing.xml:2067
#, no-c-format
msgid ""
"Sets the effective area for each vertex, using the Visvalingam-Whyatt "
"algorithm. The effective area is stored as the M-value of the vertex. If the "
"optional \"theshold\" parameter is used, a simplified geometry will be "
"returned, containing only vertices with an effective area greater than or "
"equal to the threshold value."
msgstr ""
"Visvalingam-Whyattアルゴリズムから有効範囲となる個々の頂点を置きます。有効範"
"囲はジオメトリのM値として格納されます。任意引数である第2引数を使うと、しきい"
"値以上の有効範囲となる頂点だけで構築されるジオメトリを返します。"

#. Tag: para
#: reference_processing.xml:2072
#, no-c-format
msgid ""
"This function can be used for server-side simplification when a threshold is "
"specified. Another option is to use a threshold value of zero. In this case, "
"the full geometry will be returned with effective areas as M-values, which "
"can be used by the client to simplify very quickly."
msgstr ""
"この関数は、しきい値を使うことでサーバサイド簡略化に使えます。もう一つの任意"
"引数はしきい値を0にする際に使用します。この場合、完全なジオメトリを得ますが、"
"クライアントが非常に高速に簡略化するために使うM値として格納している有効範囲を"
"持っています。"

#. Tag: para
#: reference_processing.xml:2075
#, no-c-format
msgid ""
"Will actually do something only with (multi)lines and (multi)polygons but "
"you can safely call it with any kind of geometry. Since simplification "
"occurs on a object-by-object basis you can also feed a GeometryCollection to "
"this function."
msgstr ""
"(MULTI)LINEと(MULTI)POLYGONとで実際に動作をしますが、どのような種類のジオメト"
"リでも安全に呼ぶことができます。簡略化はオブジェクトごとに行われるので、ジオ"
"メトリコレクションでこの関数を呼ぶことができます。"

#. Tag: para
#: reference_processing.xml:2087
#, no-c-format
msgid "The output geometry will lose all previous information in the M-values"
msgstr "出力ジオメトリは、入力時に持っていたM値の情報の全てを失います。"

#. Tag: para
#: reference_processing.xml:2088
#, no-c-format
msgid ""
"This function handles 3D and the third dimension will affect the effective "
"area"
msgstr "この関数は3次元を扱います。第3次元は結果に影響を与えます。"

#. Tag: para
#: reference_processing.xml:2094
#, no-c-format
msgid ""
"Calculating the effective area of a LineString. Because we use a threshold "
"value of zero, all vertices in the input geometry are returned."
msgstr ""
"ラインストリングの有効範囲の計算。しきい値を0にしているので、入力ジオメトリの"
"全ての頂点が返ります。"

#. Tag: programlisting
#: reference_processing.xml:2097
#, no-c-format
msgid ""
"select ST_AsText(ST_SetEffectiveArea(geom)) all_pts, "
"ST_AsText(ST_SetEffectiveArea(geom,30) ) thrshld_30\n"
"FROM (SELECT  'LINESTRING(5 2, 3 8, 6 20, 7 25, 10 10)'::geometry geom) As "
"foo;\n"
"-result\n"
" all_pts | thrshld_30\n"
"-----------+-------------------+\n"
"LINESTRING M (5 2 3.40282346638529e+38,3 8 29,6 20 1.5,7 25 49.5,10 10 "
"3.40282346638529e+38) | LINESTRING M (5 2 3.40282346638529e+38,7 25 49.5,10 "
"10 3.40282346638529e+38)"
msgstr ""
"select ST_AsText(ST_SetEffectiveArea(geom)) all_pts, "
"ST_AsText(ST_SetEffectiveArea(geom,30) ) thrshld_30\n"
"FROM (SELECT  'LINESTRING(5 2, 3 8, 6 20, 7 25, 10 10)'::geometry geom) As "
"foo;\n"
"-- 結果 --\n"
" all_pts | thrshld_30\n"
"-----------+-------------------+\n"
"LINESTRING M (5 2 3.40282346638529e+38,3 8 29,6 20 1.5,7 25 49.5,10 10 "
"3.40282346638529e+38) | LINESTRING M (5 2 3.40282346638529e+38,7 25 49.5,10 "
"10 3.40282346638529e+38)"

#. Tag: refname
#: reference_processing.xml:2107
#, no-c-format
msgid "ST_TriangulatePolygon"
msgstr "ST_TriangulatePolygon"

#. Tag: refpurpose
#: reference_processing.xml:2108
#, no-c-format
msgid "Computes the constrained Delaunay triangulation of polygons"
msgstr "ポリゴンの制約付きドロネー三角分割を計算します。"

#. Tag: funcprototype
#: reference_processing.xml:2113
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_TriangulatePolygon</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>geom</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_TriangulatePolygon</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>geom</parameter></paramdef>"

#. Tag: para
#: reference_processing.xml:2122
#, no-c-format
msgid ""
"Computes the constrained Delaunay triangulation of polygons. Holes and "
"Multipolygons are supported."
msgstr ""
"ポリゴンの制約付きドロネー三角分割を計算します。穴やMULTIPOLYGONに対応してい"
"ます。"

#. Tag: para
#: reference_processing.xml:2125
#, no-c-format
msgid ""
"The \"constrained Delaunay triangulation\" of a polygon is a set of "
"triangles formed from the vertices of the polygon, and covering it exactly, "
"with the maximum total interior angle over all possible triangulations. It "
"provides the \"best quality\" triangulation of the polygon."
msgstr ""
"ポリゴンの「制約付きドロネー三角分割」は、ポリゴンの頂点から形成された三角形"
"の集合で、ポリゴンを確実に覆い、内角和が考えられる三角分割の中で最大になりま"
"す。この関数によって、ポリゴンの「最高品質」の三角分割が得られます。"

#. Tag: para
#: reference_processing.xml:2130
#, no-c-format
msgid "Availability: 3.3.0"
msgstr "Availability: 3.3.0"

#. Tag: title
#: reference_processing.xml:2134 reference_processing.xml:2139
#, no-c-format
msgid "Example"
msgstr "例"

#. Tag: para
#: reference_processing.xml:2135
#, no-c-format
msgid "Triangulation of a square."
msgstr "正方形の三角分割。"

#. Tag: programlisting
#: reference_processing.xml:2136
#, no-c-format
msgid ""
"SELECT ST_AsText(\n"
"    ST_TriangulatePolygon('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))'));\n"
"\n"
"                                 st_astext\n"
"---------------------------------------------------------------------------\n"
" GEOMETRYCOLLECTION(POLYGON((0 0,0 1,1 1,0 0)),POLYGON((1 1,1 0,0 0,1 1)))"
msgstr ""
"SELECT ST_AsText(\n"
"    ST_TriangulatePolygon('POLYGON((0 0, 0 1, 1 1, 1 0, 0 0))'));\n"
"\n"
"                                 st_astext\n"
"---------------------------------------------------------------------------\n"
" GEOMETRYCOLLECTION(POLYGON((0 0,0 1,1 1,0 0)),POLYGON((1 1,1 0,0 0,1 1)))"

#. Tag: para
#: reference_processing.xml:2140
#, no-c-format
msgid "Triangulation of the letter P."
msgstr "文字Pの三角分割。"

#. Tag: programlisting
#: reference_processing.xml:2141
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_TriangulatePolygon(\n"
"    'POLYGON ((26 17, 31 19, 34 21, 37 24, 38 29, 39 43, 39 161, 38 172, 36 "
"176, 34 179, 30 181, 25 183, 10 185, 10 190, 100 190, 121 189, 139 187, 154 "
"182, 167 177, 177 169, 184 161, 189 152, 190 141, 188 128, 186 123, 184 117, "
"180 113, 176 108, 170 104, 164 101, 151 96, 136 92, 119 89, 100 89, 86 89, "
"73 89, 73 39, 74 32, 75 27, 77 23, 79 20, 83 18, 89 17, 106 15, 106 10, 10 "
"10, 10 15, 26 17), (152 147, 151 152, 149 157, 146 162, 142 166, 137 169, "
"132 172, 126 175, 118 177, 109 179, 99 180, 89 180, 80 179, 76 178, 74 176, "
"73 171, 73 100, 85 99, 91 99, 102 99, 112 100, 121 102, 128 104, 134 107, "
"139 110, 143 114, 147 118, 149 123, 151 128, 153 141, 152 147))'\n"
"    ));"
msgstr ""
"SELECT ST_AsText(ST_TriangulatePolygon(\n"
"    'POLYGON ((26 17, 31 19, 34 21, 37 24, 38 29, 39 43, 39 161, 38 172, 36 "
"176, 34 179, 30 181, 25 183, 10 185, 10 190, 100 190, 121 189, 139 187, 154 "
"182, 167 177, 177 169, 184 161, 189 152, 190 141, 188 128, 186 123, 184 117, "
"180 113, 176 108, 170 104, 164 101, 151 96, 136 92, 119 89, 100 89, 86 89, "
"73 89, 73 39, 74 32, 75 27, 77 23, 79 20, 83 18, 89 17, 106 15, 106 10, 10 "
"10, 10 15, 26 17), (152 147, 151 152, 149 157, 146 162, 142 166, 137 169, "
"132 172, 126 175, 118 177, 109 179, 99 180, 89 180, 80 179, 76 178, 74 176, "
"73 171, 73 100, 85 99, 91 99, 102 99, 112 100, 121 102, 128 104, 134 107, "
"139 110, 143 114, 147 118, 149 123, 151 128, 153 141, 152 147))'\n"
"    ));"

#. Tag: para
#: reference_processing.xml:2147
#, no-c-format
msgid "Polygon Triangulation"
msgstr "ポリゴンの三角分割"

#. Tag: para
#: reference_processing.xml:2154
#, no-c-format
msgid ""
", <xref linkend=\"ST_ConstrainedDelaunayTriangles\"/>, <xref "
"linkend=\"ST_Tesselate\"/>"
msgstr ""
", <xref linkend=\"ST_ConstrainedDelaunayTriangles\"/>, <xref "
"linkend=\"ST_Tesselate\"/>"

#. Tag: refname
#: reference_processing.xml:2160
#, no-c-format
msgid "ST_VoronoiLines"
msgstr "ST_VoronoiLines"

#. Tag: refpurpose
#: reference_processing.xml:2162
#, no-c-format
msgid ""
"Returns the boundaries of the Voronoi diagram of the vertices of a geometry."
msgstr "ジオメトリの頂点からボロノイ図のセルを返します。"

#. Tag: funcprototype
#: reference_processing.xml:2167
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_VoronoiLines</function></funcdef> <paramdef> "
"<type>geometry</type> <parameter>geom</parameter> </paramdef> <paramdef "
"choice=\"opt\"> <type>float8</type> <parameter>tolerance = 0.0</parameter> </"
"paramdef> <paramdef choice=\"opt\"> <type>geometry</type> "
"<parameter>extend_to = NULL</parameter> </paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_VoronoiLines</function></funcdef> <paramdef> "
"<type>geometry</type> <parameter>geom</parameter> </paramdef> <paramdef "
"choice=\"opt\"> <type>float8</type> <parameter>tolerance = 0.0</parameter> </"
"paramdef> <paramdef choice=\"opt\"> <type>geometry</type> "
"<parameter>extend_to = NULL</parameter> </paramdef>"

#. Tag: para
#: reference_processing.xml:2185
#, no-c-format
msgid ""
"Computes a two-dimensional <ulink url=\"https://en.wikipedia.org/wiki/"
"Voronoi_diagram\">Voronoi diagram</ulink> from the vertices of the supplied "
"geometry and returns the boundaries between cells in the diagram as a "
"MultiLineString. Returns null if input geometry is null. Returns an empty "
"geometry collection if the input geometry contains only one vertex. Returns "
"an empty geometry collection if the <varname>extend_to</varname> envelope "
"has zero area."
msgstr ""
"与えられたジオメトリの頂点から2次元<ulink url=\"https://ja.wikipedia.org/"
"wiki/ボロノイ図\">ボロノイ図</ulink>を生成し、ボロノイ図のサイト間の境界をMUL"
"TILIESTRINGで返します。入力ジオメトリがNULLの場合にはNULLを返します。入力ジオ"
"メトリの頂点が一つの場合には空ジオメトリを返します。<varname>extend_to</varna"
"me>で作られるエンベロープの面積が0の場合には空ジオメトリを返します。"

#. Tag: para
#: reference_processing.xml:2191 reference_processing.xml:2272
#, no-c-format
msgid "Optional parameters:"
msgstr "任意パラメータ:"

#. Tag: para
#: reference_processing.xml:2195 reference_processing.xml:2276
#, no-c-format
msgid ""
"<varname>tolerance</varname>: The distance within which vertices will be "
"considered equivalent. Robustness of the algorithm can be improved by "
"supplying a nonzero tolerance distance. (default = 0.0)"
msgstr ""
"<varname>tolerance</varname>: 複数の頂点を同一のものと捉える距離。"
"0でない値を許容距離として与えるとアルゴリズムのロバスト性が改善します "
"(デフォルトは0.0)。"

#. Tag: para
#: reference_processing.xml:2198 reference_processing.xml:2279
#, no-c-format
msgid ""
"<varname>extend_to</varname>: If present, the diagram is extended to cover "
"the envelope of the supplied geometry, unless smaller than the default "
"envelope (default = NULL, default envelope is the bounding box of the input "
"expanded by about 50%)."
msgstr ""
"<varname>extend_to</varname>: これが与えられている場合には、与えられたジオメ"
"トリのエンベロープを覆うように図が拡張されます。"
"デフォルト値以上でないと有効ではありません (デフォルトはNULLで、デフォルトの"
"エンベロープは入力ジオメトリのバウンディングボックスから50%拡張したものです)"
"。"

#. Tag: para
#: reference_processing.xml:2217
#, no-c-format
msgid "Voronoi diagram lines, with tolerance of 30 units"
msgstr "30単位の許容距離を持つボロノイ図のライン"

#. Tag: programlisting
#: reference_processing.xml:2220
#, no-c-format
msgid ""
"SELECT ST_VoronoiLines(\n"
"            'MULTIPOINT (50 30, 60 30, 100 100,10 150, 110 120)'::geometry,\n"
"            30) AS geom;"
msgstr ""
"SELECT ST_VoronoiLines(\n"
"            'MULTIPOINT (50 30, 60 30, 100 100,10 150, 110 120)'::geometry,\n"
"            30) AS geom;"

#. Tag: screen
#: reference_processing.xml:2221
#, no-c-format
msgid ""
"-- ST_AsText output\n"
"MULTILINESTRING((135.555555555556 270,36.8181818181818 92.2727272727273),"
"(36.8181818181818 92.2727272727273,-110 43.3333333333333),(230 "
"-45.7142857142858,36.8181818181818 92.2727272727273))"
msgstr ""
"-- ST_AsText 出力\n"
"MULTILINESTRING((135.555555555556 270,36.8181818181818 92.2727272727273),"
"(36.8181818181818 92.2727272727273,-110 43.3333333333333),(230 "
"-45.7142857142858,36.8181818181818 92.2727272727273))"

#. Tag: para
#: reference_processing.xml:2229
#, no-c-format
msgid ", <xref linkend=\"ST_VoronoiPolygons\"/>"
msgstr ", <xref linkend=\"ST_VoronoiPolygons\"/>"

#. Tag: refname
#: reference_processing.xml:2238
#, no-c-format
msgid "ST_VoronoiPolygons"
msgstr "ST_VoronoiPolygons"

#. Tag: refpurpose
#: reference_processing.xml:2240
#, no-c-format
msgid "Returns the cells of the Voronoi diagram of the vertices of a geometry."
msgstr "ジオメトリの頂点からボロノイ図のセルを返します。"

#. Tag: funcprototype
#: reference_processing.xml:2245
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_VoronoiPolygons</function></funcdef> "
"<paramdef> <type>geometry</type> <parameter>geom</parameter> </paramdef> "
"<paramdef choice=\"opt\"> <type>float8</type> <parameter>tolerance = 0.0</"
"parameter> </paramdef> <paramdef choice=\"opt\"> <type>geometry</type> "
"<parameter>extend_to = NULL</parameter> </paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_VoronoiPolygons</function></funcdef> "
"<paramdef> <type>geometry</type> <parameter>geom</parameter> </paramdef> "
"<paramdef choice=\"opt\"> <type>float8</type> <parameter>tolerance = 0.0</"
"parameter> </paramdef> <paramdef choice=\"opt\"> <type>geometry</type> "
"<parameter>extend_to = NULL</parameter> </paramdef>"

#. Tag: para
#: reference_processing.xml:2264
#, no-c-format
msgid ""
"Computes a two-dimensional <ulink url=\"https://en.wikipedia.org/wiki/"
"Voronoi_diagram\">Voronoi diagram</ulink> from the vertices of the supplied "
"geometry. The result is a GEOMETRYCOLLECTION of POLYGONs that covers an "
"envelope larger than the extent of the input vertices. Returns null if input "
"geometry is null. Returns an empty geometry collection if the input geometry "
"contains only one vertex. Returns an empty geometry collection if the "
"<varname>extend_to</varname> envelope has zero area."
msgstr ""
"与えられたジオメトリの頂点から2次元<ulink url=\"https://ja.wikipedia.org/"
"wiki/ボロノイ図\">ボロノイ図</ulink>を生成します。結果はPOLYGONのGEOMETRYCOLL"
"ECTIONで、、入力の頂点の範囲以上のエンベロープを覆います。入力ジオメトリがNUL"
"Lの場合にはNULLを返します。入力ジオメトリの頂点が一つの場合には空ジオメトリを"
"返します。<varname>extend_to</varname>で作られるエンベロープの面積が0の場合に"
"は空ジオメトリを返します。"

#. Tag: para
#: reference_processing.xml:2298
#, no-c-format
msgid "Points overlaid on top of Voronoi diagram"
msgstr "ボロノイ図の上にポイントを置いた図"

#. Tag: programlisting
#: reference_processing.xml:2301
#, no-c-format
msgid ""
"SELECT ST_VoronoiPolygons(\n"
"                'MULTIPOINT (50 30, 60 30, 100 100,10 150, 110 120)'::"
"geometry\n"
"            ) AS geom;"
msgstr ""
"SELECT ST_VoronoiPolygons(\n"
"                'MULTIPOINT (50 30, 60 30, 100 100,10 150, 110 120)'::"
"geometry\n"
"            ) AS geom;"

#. Tag: screen
#: reference_processing.xml:2302
#, no-c-format
msgid ""
"-- ST_AsText output\n"
"GEOMETRYCOLLECTION(POLYGON((-110 43.3333333333333,-110 270,100.5 "
"270,59.3478260869565 132.826086956522,36.8181818181818 92.2727272727273,-110 "
"43.3333333333333)),\n"
"POLYGON((55 -90,-110 -90,-110 43.3333333333333,36.8181818181818 "
"92.2727272727273,55 79.2857142857143,55 -90)),\n"
"POLYGON((230 47.5,230 -20.7142857142857,55 79.2857142857143,36.8181818181818 "
"92.2727272727273,59.3478260869565 132.826086956522,230 47.5)),POLYGON((230 "
"-20.7142857142857,230 -90,55 -90,55 79.2857142857143,230 "
"-20.7142857142857)),\n"
"POLYGON((100.5 270,230 270,230 47.5,59.3478260869565 132.826086956522,100.5 "
"270)))"
msgstr ""
"-- ST_AsText 出力 --\n"
"GEOMETRYCOLLECTION(POLYGON((-110 43.3333333333333,-110 270,100.5 "
"270,59.3478260869565 132.826086956522,36.8181818181818 92.2727272727273,-110 "
"43.3333333333333)),\n"
"POLYGON((55 -90,-110 -90,-110 43.3333333333333,36.8181818181818 "
"92.2727272727273,55 79.2857142857143,55 -90)),\n"
"POLYGON((230 47.5,230 -20.7142857142857,55 79.2857142857143,36.8181818181818 "
"92.2727272727273,59.3478260869565 132.826086956522,230 47.5)),POLYGON((230 "
"-20.7142857142857,230 -90,55 -90,55 79.2857142857143,230 "
"-20.7142857142857)),\n"
"POLYGON((100.5 270,230 270,230 47.5,59.3478260869565 132.826086956522,100.5 "
"270)))"

#. Tag: para
#: reference_processing.xml:2309
#, no-c-format
msgid "Voronoi diagram, with tolerance of 30 units"
msgstr "許容距離30単位のボロノイ図"

#. Tag: programlisting
#: reference_processing.xml:2312
#, no-c-format
msgid ""
"SELECT ST_VoronoiPolygons(\n"
"            'MULTIPOINT (50 30, 60 30, 100 100,10 150, 110 120)'::geometry,\n"
"            30) AS geom;"
msgstr ""
"SELECT ST_VoronoiPolygons(\n"
"            'MULTIPOINT (50 30, 60 30, 100 100,10 150, 110 120)'::geometry,\n"
"            30) AS geom;"

#. Tag: screen
#: reference_processing.xml:2313
#, no-c-format
msgid ""
"-- ST_AsText output\n"
"GEOMETRYCOLLECTION(POLYGON((-110 43.3333333333333,-110 270,100.5 "
"270,59.3478260869565 132.826086956522,36.8181818181818 92.2727272727273,-110 "
"43.3333333333333)),\n"
"POLYGON((230 47.5,230 -45.7142857142858,36.8181818181818 "
"92.2727272727273,59.3478260869565 132.826086956522,230 47.5)),POLYGON((230 "
"-45.7142857142858,230 -90,-110 -90,-110 43.3333333333333,36.8181818181818 "
"92.2727272727273,230 -45.7142857142858)),\n"
"POLYGON((100.5 270,230 270,230 47.5,59.3478260869565 132.826086956522,100.5 "
"270)))"
msgstr ""
"-- ST_AsText 出力\n"
"GEOMETRYCOLLECTION(POLYGON((-110 43.3333333333333,-110 270,100.5 "
"270,59.3478260869565 132.826086956522,36.8181818181818 92.2727272727273,-110 "
"43.3333333333333)),\n"
"POLYGON((230 47.5,230 -45.7142857142858,36.8181818181818 "
"92.2727272727273,59.3478260869565 132.826086956522,230 47.5)),POLYGON((230 "
"-45.7142857142858,230 -90,-110 -90,-110 43.3333333333333,36.8181818181818 "
"92.2727272727273,230 -45.7142857142858)),\n"
"POLYGON((100.5 270,230 270,230 47.5,59.3478260869565 132.826086956522,100.5 "
"270)))"

#. Tag: para
#: reference_processing.xml:2321
#, no-c-format
msgid ", <xref linkend=\"ST_VoronoiLines\"/>"
msgstr ", <xref linkend=\"ST_VoronoiLines\"/>"

#, no-c-format
#~ msgid ""
#~ "<funcdef>geometry <function>ST_ChaikinSmoothing</function></funcdef> "
#~ "<paramdef><type>geometry</type> <parameter>geom</parameter></paramdef> "
#~ "<paramdef><type>integer</type> <parameter>nIterations = 1</parameter></"
#~ "paramdef> <paramdef><type>boolean</type> <parameter>preserveEndPoints = "
#~ "false</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_ChaikinSmoothing</function></funcdef> "
#~ "<paramdef><type>geometry</type> <parameter>geom</parameter></paramdef> "
#~ "<paramdef><type>integer</type> <parameter>nIterations = 1</parameter></"
#~ "paramdef> <paramdef><type>boolean</type> <parameter>preserveEndPoints = "
#~ "false</parameter></paramdef>"

#, no-c-format
#~ msgid ""
#~ "<funcdef>geometry <function>ST_DelaunayTriangles</function></funcdef> "
#~ "<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
#~ "<paramdef><type>float </type> <parameter>tolerance</parameter></paramdef> "
#~ "<paramdef><type>int4 </type> <parameter>flags</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_DelaunayTriangles</function></funcdef> "
#~ "<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
#~ "<paramdef><type>float </type> <parameter>tolerance</parameter></paramdef> "
#~ "<paramdef><type>int4 </type> <parameter>flags</parameter></paramdef>"

#, no-c-format
#~ msgid ""
#~ "Return the <ulink url=\"http://en.wikipedia.org/wiki/"
#~ "Delaunay_triangulation\">Delaunay triangulation</ulink> of the vertices "
#~ "of the input geometry. Output is a COLLECTION of polygons (for flags=0) "
#~ "or a MULTILINESTRING (for flags=1) or TIN (for flags=2). The tolerance, "
#~ "if any, is used to snap input vertices together."
#~ msgstr ""
#~ "入力ジオメトリの頂点の周りの<ulink url=\"http://ja.wikipedia.org/wiki/"
#~ "%E3%83%89%E3%83%AD%E3%83%8D%E3%83%BC%E5%9B%B3\">ドロネー三角形</ulink>を返"
#~ "します。出力はポリゴンのコレクション (flags=0の場合)、MULTILINESTRING "
#~ "(flags=1の場合)、TIN(flags=2の場合)のいずれかになります。いずれの場合も、"
#~ "入力の頂点を一緒にスナップするために許容誤差が使われます。"

#, no-c-format
#~ msgid "2D Examples"
#~ msgstr "2次元の例"

#, no-c-format
#~ msgid "Example 1"
#~ msgstr "例 1"

#, no-c-format
#~ msgid ""
#~ "-- 3D multipoint --\n"
#~ "SELECT ST_AsText(ST_DelaunayTriangles(ST_GeomFromText(\n"
#~ "'MULTIPOINT Z(14 14 10,\n"
#~ "150 14 100,34 6 25, 20 10 150)'))) As wkt;\n"
#~ "\n"
#~ "-----wkt----\n"
#~ "GEOMETRYCOLLECTION Z (POLYGON Z ((14 14 10,20 10 150,34 6 25,14 14 10))\n"
#~ " ,POLYGON Z ((14 14 10,34 6 25,150 14 100,14 14 10)))"
#~ msgstr ""
#~ "-- 3次元マルチポイント --\n"
#~ "SELECT ST_AsText(ST_DelaunayTriangles(ST_GeomFromText(\n"
#~ "'MULTIPOINT Z(14 14 10,\n"
#~ "150 14 100,34 6 25, 20 10 150)'))) As wkt;\n"
#~ "\n"
#~ "----- WKT ----\n"
#~ "GEOMETRYCOLLECTION Z (POLYGON Z ((14 14 10,20 10 150,34 6 25,14 14 10))\n"
#~ " ,POLYGON Z ((14 14 10,34 6 25,150 14 100,14 14 10)))"

#, no-c-format
#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_GeneratePoints</function></"
#~ "funcdef> <paramdef> <parameter>g</parameter> <type>geometry</type> </"
#~ "paramdef> <paramdef> <parameter>npoints</parameter> <type>integer</type> "
#~ "</paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_GeneratePoints</function></funcdef> <paramdef> "
#~ "<type>geometry</type> <parameter>g</parameter> </paramdef> <paramdef> "
#~ "<type>integer</type> <parameter>npoints</parameter> </paramdef> "
#~ "<paramdef> <type>integer</type> <parameter>seed</parameter> </paramdef> </"
#~ "funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_GeneratePoints</function></"
#~ "funcdef> <paramdef> <parameter>g</parameter> <type>geometry</type> </"
#~ "paramdef> <paramdef> <parameter>npoints</parameter> <type>integer</type> "
#~ "</paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_GeneratePoints</function></funcdef> <paramdef> "
#~ "<type>geometry</type> <parameter>g</parameter> </paramdef> <paramdef> "
#~ "<type>integer</type> <parameter>npoints</parameter> </paramdef> "
#~ "<paramdef> <type>integer</type> <parameter>seed</parameter> </paramdef> </"
#~ "funcprototype>"

#, no-c-format
#~ msgid ""
#~ "ST_GeneratePoints generates a given number of pseudo-random points which "
#~ "lie within the input area. The optional <code>seed</code> is used to "
#~ "regenerate a deterministic sequence of points, and must be greater than "
#~ "zero."
#~ msgstr ""
#~ "ST_GeneratePointsは、入力の面内に指定した個数のポイントが出現するまで疑似"
#~ "乱数によるポイントを生成します。任意引数の<code>seed</code>は、ポイント列"
#~ "の再生成が決定的にするために使い、0より大きい数でなければなりません。"

#, no-c-format
#~ msgid ""
#~ "<funcdef>geometry <function>ST_VoronoiLines</function></funcdef> "
#~ "<paramdef> <parameter>g1</parameter> <type>geometry</type> </paramdef> "
#~ "<paramdef choice=\"opt\"> <parameter>tolerance</parameter> <type>float8</"
#~ "type> </paramdef> <paramdef choice=\"opt\"> <parameter>extend_to</"
#~ "parameter> <type>geometry</type> </paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_VoronoiLines</function></funcdef> "
#~ "<paramdef> <parameter>g1</parameter> <type>geometry</type> </paramdef> "
#~ "<paramdef choice=\"opt\"> <parameter>tolerance</parameter> <type>float8</"
#~ "type> </paramdef> <paramdef choice=\"opt\"> <parameter>extend_to</"
#~ "parameter> <type>geometry</type> </paramdef>"

#, no-c-format
#~ msgid ""
#~ "ST_VoronoiLines computes a two-dimensional <ulink url=\"https://en."
#~ "wikipedia.org/wiki/Voronoi_diagram\">Voronoi diagram</ulink> from the "
#~ "vertices of the supplied geometry and returns the boundaries between "
#~ "cells in that diagram as a MultiLineString. Returns null if input "
#~ "geometry is null. Returns an empty geometry collection if the input "
#~ "geometry contains only one vertex. Returns an empty geometry collection "
#~ "if the extend_to envelope has zero area."
#~ msgstr ""
#~ "ST_VoronoiLinesは、与えられたジオメトリの頂点から、2次元<ulink "
#~ "url=\"https://ja.wikipedia.org/wiki/"
#~ "%E3%83%9C%E3%83%AD%E3%83%8E%E3%82%A4%E5%9B%B3\">ボロノイ図</ulink>を計算し"
#~ "ます。図の細胞間の境界をMULTILINESTRINGで返します。入力ジオメトリがNULLの"
#~ "場合には、NULLを返します。入力ジオメトリに頂点が一つだけしか無い場合には、"
#~ "空ジオメトリコレクションを返します。extend_toのエンベロープの面積が0の場合"
#~ "には、空ジオメトリコレクションを返します。"

#, no-c-format
#~ msgid ""
#~ "'tolerance' : The distance within which vertices will be considered "
#~ "equivalent. Robustness of the algorithm can be improved by supplying a "
#~ "nonzero tolerance distance. (default = 0.0)"
#~ msgstr ""
#~ "'tolerance' : この距離以内の点は等価とします。0でない許容距離を指定するこ"
#~ "とで、アルゴリズムのロバスト性が改善します。デフォルトは0.0です。"

#, no-c-format
#~ msgid ""
#~ "'extend_to' : If a geometry is supplied as the \"extend_to\" parameter, "
#~ "the diagram will be extended to cover the envelope of the \"extend_to\" "
#~ "geometry, unless that envelope is smaller than the default envelope "
#~ "(default = NULL, default envelope is boundingbox of input geometry "
#~ "extended by about 50% in each direction)."
#~ msgstr ""
#~ "'extend_to': ジオメトリが\"extend_to\"パラメータとして渡された場合には、エ"
#~ "ンベロープがデフォルトエンベロープより小さい場合を除いて、ボロノイ図は"
#~ "\"extend_to\"ジオメトリのエンベロープを覆う範囲になります (デフォルトは"
#~ "NULLで、デフォルトのエンベロープは入力ジオメトリのバウンディングボックスか"
#~ "ら各方向に50%ずつ拡張したものです)。"

#, no-c-format
#~ msgid "Voronoi lines with tolerance of 30 units"
#~ msgstr "許容範囲を30単位としたボロノイ図"

#, no-c-format
#~ msgid ""
#~ "SELECT ST_VoronoiLines(geom, 30) As geom\n"
#~ "FROM (SELECT 'MULTIPOINT (50 30, 60 30, 100 100,10 150, 110 120)'::"
#~ "geometry As geom ) As g"
#~ msgstr ""
#~ "SELECT ST_VoronoiLines(geom, 30) As geom\n"
#~ "FROM (SELECT 'MULTIPOINT (50 30, 60 30, 100 100,10 150, 110 120)'::"
#~ "geometry As geom ) As g"

#, no-c-format
#~ msgid ""
#~ ", <xref linkend=\"ST_VoronoiPolygons\"/>, <xref linkend=\"ST_Collect\"/>"
#~ msgstr ""
#~ ", <xref linkend=\"ST_VoronoiPolygons\"/>, <xref linkend=\"ST_Collect\"/>"

#, no-c-format
#~ msgid ""
#~ "<funcdef>geometry <function>ST_VoronoiPolygons</function></funcdef> "
#~ "<paramdef> <parameter>g1</parameter> <type>geometry</type> </paramdef> "
#~ "<paramdef choice=\"opt\"> <parameter>tolerance</parameter> <type>float8</"
#~ "type> </paramdef> <paramdef choice=\"opt\"> <parameter>extend_to</"
#~ "parameter> <type>geometry</type> </paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_VoronoiPolygons</function></funcdef> "
#~ "<paramdef> <parameter>g1</parameter> <type>geometry</type> </paramdef> "
#~ "<paramdef choice=\"opt\"> <parameter>tolerance</parameter> <type>float8</"
#~ "type> </paramdef> <paramdef choice=\"opt\"> <parameter>extend_to</"
#~ "parameter> <type>geometry</type> </paramdef>"

#, no-c-format
#~ msgid ""
#~ "ST_VoronoiPolygons computes a two-dimensional <ulink url=\"https://en."
#~ "wikipedia.org/wiki/Voronoi_diagram\">Voronoi diagram</ulink> from the "
#~ "vertices of the supplied geometry. The result is a GeometryCollection of "
#~ "Polygons that covers an envelope larger than the extent of the input "
#~ "vertices. Returns null if input geometry is null. Returns an empty "
#~ "geometry collection if the input geometry contains only one vertex. "
#~ "Returns an empty geometry collection if the extend_to envelope has zero "
#~ "area."
#~ msgstr ""
#~ "ST_VoronoiPolygonsは、与えられたジオメトリの頂点から、2次元<ulink "
#~ "url=\"https://ja.wikipedia.org/wiki/"
#~ "%E3%83%9C%E3%83%AD%E3%83%8E%E3%82%A4%E5%9B%B3\">ボロノイ図</ulink>を計算し"
#~ "ます。結果は、入力頂点の範囲より大きいエンベロープを覆うポリゴンのジオメト"
#~ "リコレクションです。入力ジオメトリがNULLの場合には、NULLを返します。入力ジ"
#~ "オメトリに頂点が一つだけしか無い場合には、空ジオメトリコレクションを返しま"
#~ "す。extend_toのエンベロープの面積が0の場合には、空ジオメトリコレクションを"
#~ "返します。"

#, no-c-format
#~ msgid ""
#~ "SELECT\n"
#~ "    ST_VoronoiPolygons(geom) As geom\n"
#~ "FROM (SELECT 'MULTIPOINT (50 30, 60 30, 100 100,10 150, 110 120)'::"
#~ "geometry As geom ) As g;"
#~ msgstr ""
#~ "SELECT\n"
#~ "    ST_VoronoiPolygons(geom) As geom\n"
#~ "FROM (SELECT 'MULTIPOINT (50 30, 60 30, 100 100,10 150, 110 120)'::"
#~ "geometry As geom ) As g;"

#, no-c-format
#~ msgid "Voronoi with tolerance of 30 units"
#~ msgstr "許容範囲を30単位としたボロノイ図"

#, no-c-format
#~ msgid ""
#~ "SELECT ST_VoronoiPolygons(geom, 30) As geom\n"
#~ "FROM (SELECT 'MULTIPOINT (50 30, 60 30, 100 100,10 150, 110 120)'::"
#~ "geometry As geom ) As g;"
#~ msgstr ""
#~ "SELECT ST_VoronoiPolygons(geom, 30) As geom\n"
#~ "FROM (SELECT 'MULTIPOINT (50 30, 60 30, 100 100,10 150, 110 120)'::"
#~ "geometry As geom ) As g;"

#, no-c-format
#~ msgid "Voronoi with tolerance of 30 units as MultiLineString"
#~ msgstr "許容範囲を30単位とした、マルチラインストリングのボロノイ図"

#, no-c-format
#~ msgid ""
#~ ", <xref linkend=\"ST_VoronoiLines\"/>, <xref linkend=\"ST_Collect\"/>"
#~ msgstr ""
#~ ", <xref linkend=\"ST_VoronoiLines\"/>, <xref linkend=\"ST_Collect\"/>"

#, no-c-format
#~ msgid ""
#~ "This function is not an aggregate. It can be used with <xref "
#~ "linkend=\"ST_Collect\"/> to get the minimum bounding circle of a set of "
#~ "geometries."
#~ msgstr ""
#~ "この関数は集約関数ではありません。ジオメトリの集合の最小包含円を得るには"
#~ "<xref linkend=\"ST_Collect\"/>と併用します。"

#, no-c-format
#~ msgid ", <xref linkend=\"ST_MinimumBoundingRadius\"/>"
#~ msgstr ", <xref linkend=\"ST_MinimumBoundingRadius\"/>"

#, no-c-format
#~ msgid ""
#~ "Use in conjunction with <xref linkend=\"ST_Collect\"/> to get the minimum "
#~ "bounding circle of a set of geometries."
#~ msgstr ""
#~ "ジオメトリの集合の最小包含円を得るには<xref linkend=\"ST_Collect\"/>と併用"
#~ "します。"

#, no-c-format
#~ msgid ", <xref linkend=\"ST_MinimumBoundingCircle\"/>"
#~ msgstr ", <xref linkend=\"ST_MinimumBoundingCircle\"/>"

#, no-c-format
#~ msgid "&sqlmm_compliant; SQL-MM 3: 5.1.17"
#~ msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.17"

#, no-c-format
#~ msgid "&sqlmm_compliant; SQL-MM 3: 5.1.16"
#~ msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.16"

#~ msgid ""
#~ "Finds the largest circle that is fully contained within a geometry. "
#~ "Returns a record with the center point of the circle, a point on the "
#~ "geometry that is nearest to the center, and the radius of the circle."
#~ msgstr ""
#~ "完全にジオメトリ内に含まれる最大の円を探します。円の中心点、中心に最も近い"
#~ "ジオメトリ、円の半径からなるレコードを返します。"

#~ msgid ""
#~ "It is often used with MULTI and Geometry Collections. Although it is not "
#~ "an aggregate - you can use it in conjunction with ST_Collect to get the "
#~ "minimum bounding circle of a set of geometries. "
#~ "ST_MinimumBoundingCircle(ST_Collect(somepointfield))."
#~ msgstr ""
#~ "しばしば、MULTI系とジオメトリコレクションで使用します。しかし、集約関数で"
#~ "はありません。ST_Collectと併用して、ジオメトリの集合の最小包含円を得ます。"
#~ "ST_MinimumBoundingCircle(ST_Collect(somepointfield))とします。"

#~ msgid ""
#~ "Returns a record containing the center point and radius of the smallest "
#~ "circle that contains a geometry."
#~ msgstr "ジオメトリを完全に包含する最小円の中心ポイントと半径を返します。"

#~ msgid "3D Examples"
#~ msgstr "3次元の例"

#~ msgid ""
#~ ", <xref linkend=\"ST_ConcaveHull\"/>, <xref linkend=\"ST_Dump\"/>, <xref "
#~ "linkend=\"ST_Tesselate\"/>"
#~ msgstr ""
#~ ", <xref linkend=\"ST_ConcaveHull\"/>, <xref linkend=\"ST_Dump\"/>, <xref "
#~ "linkend=\"ST_Tesselate\"/>"

#~ msgid ""
#~ "<funcdef>geometry <function>ST_LineMerge</function></funcdef> "
#~ "<paramdef><type>geometry </type> <parameter>amultilinestring</parameter></"
#~ "paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_LineMerge</function></funcdef> "
#~ "<paramdef><type>geometry </type> <parameter>amultilinestring</parameter></"
#~ "paramdef>"

#~ msgid ""
#~ "Returns a LineString or MultiLineString formed by joining together the "
#~ "constituent line work of a MultiLineString. Lines are joined at their "
#~ "endpoints at 2-way intersections. Lines are not joined across "
#~ "intersections of 3-way or greater degree."
#~ msgstr ""
#~ "MULTILINESTRINGを構成するラインを結合して形成されたLINESTRINGまたは"
#~ "MULTILINESTRINGを返します。ラインは2方向交点の終端で結合します。ラインは3"
#~ "方向以上の交点では結合しません。"

#~ msgid ""
#~ "Only use with MultiLineString/LineStrings. If you pass a Polygon or "
#~ "GeometryCollection into this function, it returns an empty "
#~ "GeometryCollection"
#~ msgstr ""
#~ "MULTILINESTRING/LINESTRINGでのみ使います。POLYGONまたはGEOMETRYCOLLECTION"
#~ "をこの関数に渡した場合には、EMPTY GEOMETRYCOLLECTIONが返ります。"

#~ msgid "This function will strip the M dimension."
#~ msgstr "この関数はM値を取り除きます。"

#~ msgid ""
#~ "SELECT ST_AsText(ST_LineMerge(\n"
#~ "'MULTILINESTRING((-29 -27,-30 -29.7,-36 -31,-45 -33),(-45 -33,-46 -32))'\n"
#~ "                ));\n"
#~ "st_astext\n"
#~ "--------------------------------------------------------------------------------------------------\n"
#~ "LINESTRING(-29 -27,-30 -29.7,-36 -31,-45 -33,-46 -32)"
#~ msgstr ""
#~ "SELECT ST_AsText(ST_LineMerge(\n"
#~ "'MULTILINESTRING((-29 -27,-30 -29.7,-36 -31,-45 -33),(-45 -33,-46 -32))'\n"
#~ "                ));\n"
#~ "st_astext\n"
#~ "--------------------------------------------------------------------------------------------------\n"
#~ "LINESTRING(-29 -27,-30 -29.7,-36 -31,-45 -33,-46 -32)"

#~ msgid ""
#~ "SELECT ST_AsText(ST_LineMerge(\n"
#~ "'MULTILINESTRING((-29 -27,-30 -29.7,-36 -31,-45 -33),(-45.2 -33.2,-46 "
#~ "-32))'\n"
#~ "));\n"
#~ "st_astext\n"
#~ "----------------\n"
#~ "MULTILINESTRING((-45.2 -33.2,-46 -32),(-29 -27,-30 -29.7,-36 -31,-45 -33))"
#~ msgstr ""
#~ "SELECT ST_AsText(ST_LineMerge(\n"
#~ "'MULTILINESTRING((-29 -27,-30 -29.7,-36 -31,-45 -33),(-45.2 -33.2,-46 "
#~ "-32))'\n"
#~ "));\n"
#~ "st_astext\n"
#~ "----------------\n"
#~ "MULTILINESTRING((-45.2 -33.2,-46 -32),(-29 -27,-30 -29.7,-36 -31,-45 -33))"

#~ msgid ""
#~ "SELECT ST_AsText(ST_LineMerge(\n"
#~ "      'MULTILINESTRING((-29 -27 11,-30 -29.7 10,-36 -31 5,-45 -33 6), "
#~ "(-29 -27 12,-30 -29.7 5), (-45 -33 1,-46 -32 11))'\n"
#~ "        ));\n"
#~ "st_astext\n"
#~ "--------------------------------------------------------------------------------------------------\n"
#~ "LINESTRING Z (-30 -29.7 5,-29 -27 11,-30 -29.7 10,-36 -31 5,-45 -33 1,-46 "
#~ "-32 11)"
#~ msgstr ""
#~ "SELECT ST_AsText(ST_LineMerge(\n"
#~ "      'MULTILINESTRING((-29 -27 11,-30 -29.7 10,-36 -31 5,-45 -33 6), "
#~ "(-29 -27 12,-30 -29.7 5), (-45 -33 1,-46 -32 11))'\n"
#~ "        ));\n"
#~ "st_astext\n"
#~ "--------------------------------------------------------------------------------------------------\n"
#~ "LINESTRING Z (-30 -29.7 5,-29 -27 11,-30 -29.7 10,-36 -31 5,-45 -33 1,-46 "
#~ "-32 11)"

#, fuzzy
#~ msgid ", <xref linkend=\"ST_Collect\"/>"
#~ msgstr ", <xref linkend=\"ST_Dump\"/>"

#~ msgid ""
#~ "Computes a a POLYGON or MULTIPOLYGON that represents all points whose "
#~ "distance from a geometry/geography is less than or equal to a given "
#~ "distance. A negative distance shrinks the geometry rather than expanding "
#~ "it. A negative distance may shrink a polygon completely, in which case "
#~ "POLYGON EMPTY is returned. For points and lines negative distances always "
#~ "return empty results."
#~ msgstr ""
#~ "あるジオメトリ/ジオグラフィからの距離が指定された距離以下となる全ての点を"
#~ "表現するPOLYGONまたはMULTIPOLYGONを計算します。距離に負数を指定すると、ジ"
#~ "オメトリは拡大されずに縮小されます。負の距離はポリゴンを完全に縮退させる可"
#~ "能性があり、その場合には、POLYGON EMPTYが返ります。ポイントとラインの負の"
#~ "距離は常に空を返します。"

#~ msgid ""
#~ "In the following illustrations the green dot is the centroid of the "
#~ "source geometry."
#~ msgstr "次に示す図では、緑点が入力ジオメトリの重心です。"

#~ msgid ""
#~ "SELECT ST_AsText(ST_PointOnSurface('POINT(0 5)'::geometry));\n"
#~ " st_astext\n"
#~ "------------\n"
#~ " POINT(0 5)\n"
#~ "\n"
#~ "SELECT ST_AsText(ST_PointOnSurface('LINESTRING(0 5, 0 10)'::geometry));\n"
#~ " st_astext\n"
#~ "------------\n"
#~ " POINT(0 5)\n"
#~ "\n"
#~ "SELECT ST_AsText(ST_PointOnSurface('POLYGON((0 0, 0 5, 5 5, 5 0, 0 0))'::"
#~ "geometry));\n"
#~ "   st_astext\n"
#~ "----------------\n"
#~ " POINT(2.5 2.5)\n"
#~ "\n"
#~ "SELECT ST_AsEWKT(ST_PointOnSurface(ST_GeomFromEWKT('LINESTRING(0 5 1, 0 0 "
#~ "1, 0 10 2)')));\n"
#~ "   st_asewkt\n"
#~ "----------------\n"
#~ " POINT(0 0 1)"
#~ msgstr ""
#~ "SELECT ST_AsText(ST_PointOnSurface('POINT(0 5)'::geometry));\n"
#~ " st_astext\n"
#~ "------------\n"
#~ " POINT(0 5)\n"
#~ "\n"
#~ "SELECT ST_AsText(ST_PointOnSurface('LINESTRING(0 5, 0 10)'::geometry));\n"
#~ " st_astext\n"
#~ "------------\n"
#~ " POINT(0 5)\n"
#~ "\n"
#~ "SELECT ST_AsText(ST_PointOnSurface('POLYGON((0 0, 0 5, 5 5, 5 0, 0 0))'::"
#~ "geometry));\n"
#~ "   st_astext\n"
#~ "----------------\n"
#~ " POINT(2.5 2.5)\n"
#~ "\n"
#~ "SELECT ST_AsEWKT(ST_PointOnSurface(ST_GeomFromEWKT('LINESTRING(0 5 1, 0 0 "
#~ "1, 0 10 2)')));\n"
#~ "   st_asewkt\n"
#~ "----------------\n"
#~ " POINT(0 0 1)"

#~ msgid ""
#~ "<funcdef>geometry <function>ST_Simplify</function></funcdef> "
#~ "<paramdef><type>geometry</type> <parameter>geomA</parameter></paramdef> "
#~ "<paramdef><type>float</type> <parameter>tolerance</parameter></paramdef> "
#~ "<paramdef><type>boolean</type> <parameter>preserveCollapsed</parameter></"
#~ "paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_Simplify</function></funcdef> "
#~ "<paramdef><type>geometry</type> <parameter>geomA</parameter></paramdef> "
#~ "<paramdef><type>float</type> <parameter>tolerance</parameter></paramdef> "
#~ "<paramdef><type>boolean</type> <parameter>preserveCollapsed</parameter></"
#~ "paramdef>"

#~ msgid ""
#~ "The \"preserve collapsed\" flag will retain objects that would otherwise "
#~ "be too small given the tolerance. For example, a 1m long line simplified "
#~ "with a 10m tolerance. If the preserve flag is given, the line will not "
#~ "disappear. This flag is useful for rendering engines, to avoid having "
#~ "large numbers of very small objects disappear from a map leaving "
#~ "surprising gaps."
#~ msgstr ""
#~ "\"preserve collapsed\"フラグによって、許容範囲より非常に小さいオブジェクト"
#~ "が保持されます。例えば、1メートル長のラインを10メートルの許容範囲で簡略化"
#~ "する場合です。\"preserve\"フラグを与えると、ラインは消去されません。このフ"
#~ "ラグは、多数の非常に小さいオブジェクトを持っていて、これらが想定外の隙間を"
#~ "残して地図から消えることを避けるのに使えます。"

#~ msgid ""
#~ ", <xref linkend=\"ST_SimplifyPreserveTopology\"/>, Topology <xref "
#~ "linkend=\"TP_ST_Simplify\"/>"
#~ msgstr ""
#~ ", <xref linkend=\"ST_SimplifyPreserveTopology\"/>, Topology <xref "
#~ "linkend=\"TP_ST_Simplify\"/>"

#~ msgid ""
#~ "<funcdef>geometry <function>ST_ConcaveHull</function></funcdef> "
#~ "<paramdef><type>geometry </type> <parameter>geom</parameter></paramdef> "
#~ "<paramdef><type>float </type> <parameter>target_percent</parameter></"
#~ "paramdef> <paramdef choice=\"opt\"><type>boolean </type> "
#~ "<parameter>allow_holes = false</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_ConcaveHull</function></funcdef> "
#~ "<paramdef><type>geometry </type> <parameter>geom</parameter></paramdef> "
#~ "<paramdef><type>float </type> <parameter>target_percent</parameter></"
#~ "paramdef> <paramdef choice=\"opt\"><type>boolean </type> "
#~ "<parameter>allow_holes = false</parameter></paramdef>"

#, fuzzy
#~ msgid ""
#~ "A concave hull of a geometry is a possibly concave geometry that encloses "
#~ "the vertices of the input geometry. In the general case the concave hull "
#~ "is a Polygon. The polygon will not contain holes unless the optional "
#~ "<varname>allow_holes</varname> argument is specified as true. The concave "
#~ "hull of two or more collinear points is a two-point LineString. The "
#~ "concave hull of one or more identical points is a Point."
#~ msgstr ""
#~ "ジオメトリの凹包は入力ジオメトリを囲む凹多角形のジオメトリを表現します。返"
#~ "り値は単一のポリゴン、ラインストリングまたはポイントです。任意引数"
#~ "<varname>allow_holes</varname>をTRUEに指定しない限り、穴を持ちません。"

#~ msgid "Original Polygon"
#~ msgstr "元のポリゴン"

#~ msgid ""
#~ "Comparison of the centroid (turquoise point) and geometric median (red "
#~ "point) of a four-point MultiPoint (yellow points)."
#~ msgstr ""
#~ "4点のマルチポイント (黄色の点)から得た重心 (青緑色の点)と幾何学的中央値 "
#~ "(赤色の点)との比較。"

#~ msgid ""
#~ "WITH test AS (\n"
#~ "SELECT 'MULTIPOINT((0 0), (1 1), (2 2), (200 200))'::geometry geom)\n"
#~ "SELECT\n"
#~ "  ST_AsText(ST_Centroid(geom)) centroid,\n"
#~ "  ST_AsText(ST_GeometricMedian(geom)) median\n"
#~ "FROM test;\n"
#~ "      centroid      |                 median\n"
#~ "--------------------+----------------------------------------\n"
#~ " POINT(50.75 50.75) | POINT(1.9761550281255 1.9761550281255)\n"
#~ "(1 row)"
#~ msgstr ""
#~ "WITH test AS (\n"
#~ "SELECT 'MULTIPOINT((0 0), (1 1), (2 2), (200 200))'::geometry geom)\n"
#~ "SELECT\n"
#~ "  ST_AsText(ST_Centroid(geom)) centroid,\n"
#~ "  ST_AsText(ST_GeometricMedian(geom)) median\n"
#~ "FROM test;\n"
#~ "      centroid      |                 median\n"
#~ "--------------------+----------------------------------------\n"
#~ " POINT(50.75 50.75) | POINT(1.9761550281255 1.9761550281255)\n"
#~ "(1 row)"

#~ msgid ""
#~ "SELECT radius, ST_AsText(center) AS center, ST_AsText(nearest) AS "
#~ "nearest\n"
#~ "    FROM ST_MaximumInscribedCircle('POLYGON ((50 50, 150 50, 150 150, 50 "
#~ "150, 50 50))')\n"
#~ "\n"
#~ " radius |     center     |    nearest\n"
#~ "--------+----------------+---------------\n"
#~ "     50 | POINT(100 100) | POINT(100 50)"
#~ msgstr ""
#~ "SELECT radius, ST_AsText(center) AS center, ST_AsText(nearest) AS "
#~ "nearest\n"
#~ "    FROM ST_MaximumInscribedCircle('POLYGON ((50 50, 150 50, 150 150, 50 "
#~ "150, 50 50))')\n"
#~ "\n"
#~ " radius |     center     |    nearest\n"
#~ "--------+----------------+---------------\n"
#~ "     50 | POINT(100 100) | POINT(100 50)"

#~ msgid ""
#~ "Maximum inscribed circle of a triangle polygon. Center, nearest point, "
#~ "and radius are returned."
#~ msgstr "三角形ポリゴンの最大の内接円。中心点、最近点、半径が返ります。"

#~ msgid ""
#~ "The <varname>target_percent</varname> is the percentage of area of the "
#~ "convex hull the solution tries to approach. A target_percent of 1 gives "
#~ "the same result as the convex hull. A target_percent between 0 and 0.99 "
#~ "produces a result that should have a smaller area than the convex hull."
#~ msgstr ""
#~ "<varname>target_percent</varname>は、この関数が漸近を試みる、凸包の面積の"
#~ "百分率です。target_percentに1を与えると、凸包と同じ結果が得られます。 "
#~ "target_percentが0から0.99の間では、凸包より小さい面積の結果を返します。"

#~ msgid ""
#~ "The smaller the target percent, the longer it takes to process the "
#~ "concave hull, and the more likely to run into topological exceptions. "
#~ "Also the more floating points and number of points you accrue. First try "
#~ "0.99 which does a single pass, is usually very fast, sometimes as fast as "
#~ "computing the convex hull, and usually gives much better than 99% of "
#~ "shrink since it almost always overshoots. Second hope of 0.98 is slower, "
#~ "others get slower usually quadratically. To reduce precision and float "
#~ "points, use <xref linkend=\"ST_SimplifyPreserveTopology\"/> or <xref "
#~ "linkend=\"ST_SnapToGrid\"/> after ST_ConcaveHull. ST_SnapToGrid is a bit "
#~ "faster, but could result in invalid geometries whereas "
#~ "ST_SimplifyPreserveTopology almost always preserves the validity of the "
#~ "geometry."
#~ msgstr ""
#~ "目標割合を小さくすると、凹包処理が長くなり、トポロジ例外が発生しやすくなり"
#~ "ます。蓄積される浮動小数点数とポイントの数もまた多くなります。最初に0.99で"
#~ "実行してみて下さい。普通は非常に速く、時々凸包と同じ速さです。99%縮小では"
#~ "ほとんどの場合行き過ぎになるので、通常は99%縮小より良い結果になります。次"
#~ "に0.98で実行すると、2乗のオーダーで遅くなります。ST_ConcaveHull実行後に、"
#~ "精度と浮動小数点数を減らすために、<xref "
#~ "linkend=\"ST_SimplifyPreserveTopology\"/>または<xref "
#~ "linkend=\"ST_SnapToGrid\"/>を使用します。ST_SnapToGridは少し早くなります"
#~ "が、不正なジオメトリが得られることがあります。ST_SimplifyPreserveTopology"
#~ "は常にジオメトリの妥当性を確保します。"

#~ msgid ""
#~ "For use with sets of points or linestrings use <code>ST_Collect</code>. "
#~ "Use <code>ST_Union</code> for polygons, since it may fail with invalid "
#~ "geometries."
#~ msgstr ""
#~ "ポイントまたはラインストリングの集合を使うには<code>ST_Collect</code>を使"
#~ "います。ポリゴンの集合を使うには、無効なジオメトリで失敗する可能性があるた"
#~ "め<code>ST_Union</code>を使います。"

#~ msgid ""
#~ "More real world examples and brief explanation of the technique are shown "
#~ "<ulink url=\"http://www.bostongis.com/postgis_concavehull."
#~ "snippet\">http://www.bostongis.com/postgis_concavehull.snippet</ulink>"
#~ msgstr ""
#~ "現実世界の例と技術面でのしっかりした説明は、<ulink url=\"http://www."
#~ "bostongis.com/postgis_concavehull.snippet\">http://www.bostongis.com/"
#~ "postgis_concavehull.snippet</ulink>にあります。"

#~ msgid ""
#~ "Also check out Simon Greener's article on demonstrating ConcaveHull "
#~ "introduced in Oracle 11G R2. <ulink url=\"http://www.spatialdbadvisor.com/"
#~ "oracle_spatial_tips_tricks/172/concave-hull-geometries-in-"
#~ "oracle-11gr2\">http://www.spatialdbadvisor.com/"
#~ "oracle_spatial_tips_tricks/172/concave-hull-geometries-in-oracle-11gr2</"
#~ "ulink>. The solution we get at 0.75 target percent of convex hull is "
#~ "similar to the shape Simon gets with Oracle SDO_CONCAVEHULL_BOUNDARY."
#~ msgstr ""
#~ "Oracle 11G R2で導入された凹包のデモンストレーションに関するSimon Greenerさ"
#~ "んの記事も見てください。<ulink url=\"http://www.spatialdbadvisor.com/"
#~ "oracle_spatial_tips_tricks/172/concave-hull-geometries-in-"
#~ "oracle-11gr2\">http://www.spatialdbadvisor.com/"
#~ "oracle_spatial_tips_tricks/172/concave-hull-geometries-in-oracle-11gr2</"
#~ "ulink>にあります。凸包に対する目標割合を0.75にした際の形状がSimonさん"
#~ "OracleのSDO_CONCAVEHULL_BOUNDARYで得た形状と似ています。"

#~ msgid ""
#~ "ST_ConcaveHull of 2 polygons encased in target 100% shrink concave hull"
#~ msgstr " 縮小目標割合100%にした場合の2ポリゴンのST_ConcaveHull"

#~ msgid ""
#~ "-- geometries overlaid with concavehull\n"
#~ "-- at target 100% shrink (this is the same as convex hull - since no "
#~ "shrink)\n"
#~ "SELECT\n"
#~ "    ST_ConcaveHull(\n"
#~ "        ST_Union(ST_GeomFromText('POLYGON((175 150, 20 40,\n"
#~ "            50 60, 125 100, 175 150))'),\n"
#~ "        ST_Buffer(ST_GeomFromText('POINT(110 170)'), 20)\n"
#~ "        ), 1)\n"
#~ "     As convexhull;"
#~ msgstr ""
#~ "-- 目標縮小率を100%にした (凸包と同じとなり、縮小していません)場合の凹包"
#~ "で\n"
#~ "-- 覆ったジオメトリ\n"
#~ "SELECT\n"
#~ "    ST_ConcaveHull(\n"
#~ "        ST_Union(ST_GeomFromText('POLYGON((175 150, 20 40,\n"
#~ "            50 60, 125 100, 175 150))'),\n"
#~ "        ST_Buffer(ST_GeomFromText('POINT(110 170)'), 20)\n"
#~ "        ), 1)\n"
#~ "     As convexhull;"

#~ msgid ""
#~ "-- geometries overlaid with concavehull at target 90% of convex hull area"
#~ msgstr "凸包に対する縮小目標割合を90%にした凹包で覆われるジオメトリ"

#~ msgid ""
#~ "-- geometries overlaid with concavehull at target 90% shrink\n"
#~ "SELECT\n"
#~ "    ST_ConcaveHull(\n"
#~ "        ST_Union(ST_GeomFromText('POLYGON((175 150, 20 40,\n"
#~ "            50 60, 125 100, 175 150))'),\n"
#~ "        ST_Buffer(ST_GeomFromText('POINT(110 170)'), 20)\n"
#~ "        ), 0.9)\n"
#~ "     As target_90;"
#~ msgstr ""
#~ "-- 目標縮小率を90%にした 場合の凹包で覆ったジオメトリ\n"
#~ "SELECT\n"
#~ "    ST_ConcaveHull(\n"
#~ "        ST_Union(ST_GeomFromText('POLYGON((175 150, 20 40,\n"
#~ "            50 60, 125 100, 175 150))'),\n"
#~ "        ST_Buffer(ST_GeomFromText('POINT(110 170)'), 20)\n"
#~ "        ), 0.9)\n"
#~ "     As target_90;"

#~ msgid "L Shape points overlaid with convex hull"
#~ msgstr "凸包で覆われたL字型のポイント群"

#~ msgid ""
#~ "-- this produces a table of 42 points that form an L shape\n"
#~ "SELECT (ST_DumpPoints(ST_GeomFromText(\n"
#~ "'MULTIPOINT(14 14,34 14,54 14,74 14,94 14,114 14,134 14,\n"
#~ "150 14,154 14,154 6,134 6,114 6,94 6,74 6,54 6,34 6,\n"
#~ "14 6,10 6,8 6,7 7,6 8,6 10,6 30,6 50,6 70,6 90,6 110,6 130,\n"
#~ "6 150,6 170,6 190,6 194,14 194,14 174,14 154,14 134,14 114,\n"
#~ "14 94,14 74,14 54,14 34,14 14)'))).geom\n"
#~ "    INTO TABLE l_shape;\n"
#~ "\n"
#~ "SELECT ST_ConvexHull(ST_Collect(geom))\n"
#~ "FROM l_shape;"
#~ msgstr ""
#~ "-- 42ポイントでL字型を形成するテーブルを生成\n"
#~ "SELECT (ST_DumpPoints(ST_GeomFromText(\n"
#~ "'MULTIPOINT(14 14,34 14,54 14,74 14,94 14,114 14,134 14,\n"
#~ "150 14,154 14,154 6,134 6,114 6,94 6,74 6,54 6,34 6,\n"
#~ "14 6,10 6,8 6,7 7,6 8,6 10,6 30,6 50,6 70,6 90,6 110,6 130,\n"
#~ "6 150,6 170,6 190,6 194,14 194,14 174,14 154,14 134,14 114,\n"
#~ "14 94,14 74,14 54,14 34,14 14)'))).geom\n"
#~ "    INTO TABLE l_shape;\n"
#~ "\n"
#~ "SELECT ST_ConvexHull(ST_Collect(geom))\n"
#~ "FROM l_shape;"

#~ msgid "ST_ConcaveHull of L points at target 99% of convex hull"
#~ msgstr "凸包に対する縮小目標割合を99%としたL字型のポイント群の凹包"

#~ msgid ""
#~ "SELECT ST_ConcaveHull(ST_Collect(geom), 0.99)\n"
#~ "    FROM l_shape;"
#~ msgstr ""
#~ "SELECT ST_ConcaveHull(ST_Collect(geom), 0.99)\n"
#~ "    FROM l_shape;"

#~ msgid "Concave Hull of L points at target 80% convex hull area"
#~ msgstr "凸包に対する縮小目標割合を80%としたL字型のポイント群の凹包"

#~ msgid ""
#~ "-- Concave Hull L shape points\n"
#~ "    -- at target 80% of convexhull\n"
#~ "    SELECT ST_ConcaveHull(ST_Collect(geom), 0.80)\n"
#~ "    FROM l_shape;"
#~ msgstr ""
#~ "-- 凸包に対する縮小目標割合を80%としたL字型のポイント群の凹包\n"
#~ "    SELECT ST_ConcaveHull(ST_Collect(geom), 0.80)\n"
#~ "    FROM l_shape;"

#~ msgid "multilinestring overlaid with Convex hull"
#~ msgstr "凸包に覆われたマルチラインストリング"

#~ msgid ""
#~ "multilinestring with overlaid with Concave hull of linestrings at 99% "
#~ "target -- first hop"
#~ msgstr ""
#~ "凸包に対する縮小目標割合を99% (第1段階)とした凹包に覆われたマルチラインス"
#~ "トリング"

#~ msgid ""
#~ "SELECT ST_ConcaveHull(ST_GeomFromText('MULTILINESTRING((106 164,30 112,74 "
#~ "70,82 112,130 94,\n"
#~ "    130 62,122 40,156 32,162 76,172 88),\n"
#~ "(132 178,134 148,128 136,96 128,132 108,150 130,\n"
#~ "170 142,174 110,156 96,158 90,158 88),\n"
#~ "(22 64,66 28,94 38,94 68,114 76,112 30,\n"
#~ "132 10,168 18,178 34,186 52,184 74,190 100,\n"
#~ "190 122,182 148,178 170,176 184,156 164,146 178,\n"
#~ "132 186,92 182,56 158,36 150,62 150,76 128,88 118))'),0.99)"
#~ msgstr ""
#~ "SELECT ST_ConcaveHull(ST_GeomFromText('MULTILINESTRING((106 164,30 112,74 "
#~ "70,82 112,130 94,\n"
#~ "    130 62,122 40,156 32,162 76,172 88),\n"
#~ "(132 178,134 148,128 136,96 128,132 108,150 130,\n"
#~ "170 142,174 110,156 96,158 90,158 88),\n"
#~ "(22 64,66 28,94 38,94 68,114 76,112 30,\n"
#~ "132 10,168 18,178 34,186 52,184 74,190 100,\n"
#~ "190 122,182 148,178 170,176 184,156 164,146 178,\n"
#~ "132 186,92 182,56 158,36 150,62 150,76 128,88 118))'),0.99)"

#~ msgid ""
#~ ", <xref linkend=\"ST_ConvexHull\"/>, <xref "
#~ "linkend=\"ST_SimplifyPreserveTopology\"/>, <xref "
#~ "linkend=\"ST_SnapToGrid\"/>"
#~ msgstr ""
#~ ", <xref linkend=\"ST_ConvexHull\"/>, <xref "
#~ "linkend=\"ST_SimplifyPreserveTopology\"/>, <xref "
#~ "linkend=\"ST_SnapToGrid\"/>"
