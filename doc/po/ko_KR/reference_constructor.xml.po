# SOME DESCRIPTIVE TITLE.
#
# Translators:
# Kwon.Yongchan <ruvyn@naver.com>, 2016
# Kwon.Yongchan <ruvyn@naver.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: PostGIS\n"
"Report-Msgid-Bugs-To: https://bugs.kde.org\n"
"POT-Creation-Date: 2022-02-06 07:55+0000\n"
"PO-Revision-Date: 2018-07-23 18:01+0000\n"
"Last-Translator: Regina Obe\n"
"Language-Team: Korean (Korea) (http://www.transifex.com/postgis/postgis/"
"language/ko_KR/)\n"
"Language: ko_KR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. Tag: title
#: reference_constructor.xml:3
#, no-c-format
msgid "Geometry Constructors"
msgstr "도형 작성자(constructor)"

#. Tag: refname
#: reference_constructor.xml:7
#, fuzzy, no-c-format
msgid "ST_Collect"
msgstr "ST_GeomCollFromText"

#. Tag: refpurpose
#: reference_constructor.xml:8
#, no-c-format
msgid ""
"Creates a GeometryCollection or Multi* geometry from a set of geometries."
msgstr ""

#. Tag: funcsynopsis
#: reference_constructor.xml:12
#, fuzzy, no-c-format
msgid ""
"<funcprototype> <funcdef>geometry <function>ST_Collect</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>geometry</type> <parameter>g2</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>geometry <function>ST_Collect</"
"function></funcdef> <paramdef><type>geometry[]</type> <parameter>g1_array</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
"<function>ST_Collect</function></funcdef> <paramdef><type>geometry set</"
"type> <parameter>g1field</parameter></paramdef> </funcprototype>"
msgstr ""
"<funcprototype> <funcdef>geometry <function>ST_MakeLine</function></funcdef> "
"<paramdef><type>geometry set</type> <parameter>geoms</parameter></paramdef> "
"</funcprototype> <funcprototype> <funcdef>geometry <function>ST_MakeLine</"
"function></funcdef> <paramdef><type>geometry</type> <parameter>geom1</"
"parameter></paramdef> <paramdef><type>geometry</type> <parameter>geom2</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
"<function>ST_MakeLine</function></funcdef> <paramdef><type>geometry[]</type> "
"<parameter>geoms_array</parameter></paramdef> </funcprototype>"

#. Tag: title
#: reference_constructor.xml:30 reference_constructor.xml:109
#: reference_constructor.xml:154 reference_constructor.xml:203
#: reference_constructor.xml:313 reference_constructor.xml:359
#: reference_constructor.xml:413 reference_constructor.xml:506
#: reference_constructor.xml:566 reference_constructor.xml:602
#: reference_constructor.xml:640 reference_constructor.xml:674
#: reference_constructor.xml:733 reference_constructor.xml:772
#: reference_constructor.xml:844 reference_constructor.xml:881
#: reference_constructor.xml:946 reference_constructor.xml:984
#, no-c-format
msgid "Description"
msgstr "설명"

#. Tag: para
#: reference_constructor.xml:31
#, no-c-format
msgid ""
"Collects geometries into a geometry collection. The result is either a "
"Multi* or a GeometryCollection, depending on whether the input geometries "
"have the same or different types (homogeneous or heterogeneous). The input "
"geometries are left unchanged within the collection."
msgstr ""

#. Tag: para
#: reference_constructor.xml:38 reference_constructor.xml:208
#, no-c-format
msgid ""
"<emphasis role=\"bold\">Variant 1:</emphasis> accepts two input geometries"
msgstr ""

#. Tag: para
#: reference_constructor.xml:39 reference_constructor.xml:209
#, no-c-format
msgid ""
"<emphasis role=\"bold\">Variant 2:</emphasis> accepts an array of geometries"
msgstr ""

#. Tag: para
#: reference_constructor.xml:40
#, no-c-format
msgid ""
"<emphasis role=\"bold\">Variant 3:</emphasis> aggregate function accepting a "
"rowset of geometries."
msgstr ""

#. Tag: para
#: reference_constructor.xml:42
#, no-c-format
msgid ""
"If any of the input geometries are collections (Multi* or "
"GeometryCollection) ST_Collect returns a GeometryCollection (since that is "
"the only type which can contain nested collections). To prevent this, use "
"<xref linkend=\"ST_Dump\"/> in a subquery to expand the input collections to "
"their atomic elements (see example below)."
msgstr ""

#. Tag: para
#: reference_constructor.xml:50
#, no-c-format
msgid ""
"ST_Collect and <xref linkend=\"ST_Union\"/> appear similar, but in fact "
"operate quite differently. ST_Collect aggregates geometries into a "
"collection without changing them in any way. ST_Union geometrically merges "
"geometries where they overlap, and splits linestrings at intersections. It "
"may return single geometries when it dissolves boundaries."
msgstr ""

#. Tag: para
#: reference_constructor.xml:57
#, fuzzy, no-c-format
msgid ""
"Availability: 1.4.0 - ST_Collect(geomarray) was introduced. ST_Collect was "
"enhanced to handle more geometries faster."
msgstr ""
"1.4.0 버전부터 사용할 수 있습니다. 이 버전부터 ST_MakeLine가 도형 배열을 입력"
"받을 수 있습니다. 더 많은 포인트를 더 빨리 처리하기 위해 ST_MakeLine 합산 함"
"수를 개선했습니다."

#. Tag: para
#: reference_constructor.xml:58 reference_constructor.xml:115
#: reference_constructor.xml:220 reference_constructor.xml:327
#: reference_constructor.xml:427 reference_constructor.xml:691
#, no-c-format
msgid "&Z_support;"
msgstr "&Z_support;"

#. Tag: para
#: reference_constructor.xml:59
#, no-c-format
msgid "&curve_support;"
msgstr "&curve_support;"

#. Tag: title
#: reference_constructor.xml:63
#, fuzzy, no-c-format
msgid "Examples - Two-input variant"
msgstr "예시: XLink 사용"

#. Tag: para
#: reference_constructor.xml:64
#, no-c-format
msgid "Collect 2D points."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:65
#, no-c-format
msgid ""
"SELECT ST_AsText( ST_Collect( ST_GeomFromText('POINT(1 2)'),\n"
"        ST_GeomFromText('POINT(-2 3)') ));\n"
"\n"
"st_astext\n"
"----------\n"
"MULTIPOINT(1 2,-2 3)"
msgstr ""

#. Tag: para
#: reference_constructor.xml:67
#, no-c-format
msgid "Collect 3D points."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:68
#, no-c-format
msgid ""
"SELECT ST_AsEWKT( ST_Collect( ST_GeomFromEWKT('POINT(1 2 3)'),\n"
"                ST_GeomFromEWKT('POINT(1 2 4)') ) );\n"
"\n"
"                st_asewkt\n"
"-------------------------\n"
" MULTIPOINT(1 2 3,1 2 4)"
msgstr ""

#. Tag: para
#: reference_constructor.xml:70
#, no-c-format
msgid "Collect curves."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:71
#, no-c-format
msgid ""
"SELECT ST_AsText( ST_Collect( 'CIRCULARSTRING(220268 150415,220227 "
"150505,220227 150406)',\n"
"                'CIRCULARSTRING(220227 150406,2220227 150407,220227 "
"150406)'));\n"
"\n"
"                st_astext\n"
"------------------------------------------------------------------------------------\n"
"MULTICURVE(CIRCULARSTRING(220268 150415,220227 150505,220227 150406),\n"
" CIRCULARSTRING(220227 150406,2220227 150407,220227 150406))"
msgstr ""

#. Tag: title
#: reference_constructor.xml:74
#, fuzzy, no-c-format
msgid "Examples - Array variant"
msgstr "예시: 배열 버전 사용하기"

#. Tag: para
#: reference_constructor.xml:75
#, no-c-format
msgid "Using an array constructor for a subquery."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:76
#, no-c-format
msgid "SELECT ST_Collect( ARRAY( SELECT geom FROM sometable ) );"
msgstr ""

#. Tag: para
#: reference_constructor.xml:77
#, no-c-format
msgid "Using an array constructor for values."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:78
#, no-c-format
msgid ""
"SELECT ST_AsText(  ST_Collect(\n"
"                ARRAY[ ST_GeomFromText('LINESTRING(1 2, 3 4)'),\n"
"                        ST_GeomFromText('LINESTRING(3 4, 4 5)') ] )) As "
"wktcollect;\n"
"\n"
"--wkt collect --\n"
"MULTILINESTRING((1 2,3 4),(3 4,4 5))"
msgstr ""

#. Tag: title
#: reference_constructor.xml:81
#, fuzzy, no-c-format
msgid "Examples - Aggregate variant"
msgstr "예시: 공간 합산 버전"

#. Tag: para
#: reference_constructor.xml:82
#, no-c-format
msgid "Creating multiple collections by grouping geometries in a table."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:83
#, no-c-format
msgid ""
"SELECT stusps, ST_Collect(f.geom) as geom\n"
"         FROM (SELECT stusps, (ST_Dump(geom)).geom As geom\n"
"                                FROM\n"
"                                somestatetable ) As f\n"
"        GROUP BY stusps"
msgstr ""

#. Tag: title
#: reference_constructor.xml:87 reference_constructor.xml:127
#: reference_constructor.xml:170 reference_constructor.xml:266
#: reference_constructor.xml:335 reference_constructor.xml:384
#: reference_constructor.xml:472 reference_constructor.xml:540
#: reference_constructor.xml:578 reference_constructor.xml:614
#: reference_constructor.xml:652 reference_constructor.xml:706
#: reference_constructor.xml:748 reference_constructor.xml:819
#: reference_constructor.xml:859 reference_constructor.xml:919
#: reference_constructor.xml:961 reference_constructor.xml:1011
#, no-c-format
msgid "See Also"
msgstr "참고"

#. Tag: para
#: reference_constructor.xml:88
#, fuzzy, no-c-format
msgid ", <xref linkend=\"ST_Union\"/>"
msgstr ", <xref linkend=\"ST_AsBinary\"/>"

#. Tag: refname
#: reference_constructor.xml:94
#, no-c-format
msgid "ST_LineFromMultiPoint"
msgstr "ST_LineFromMultiPoint"

#. Tag: refpurpose
#: reference_constructor.xml:96
#, no-c-format
msgid ""
"<refpurpose>Creates a LineString from a MultiPoint geometry.</refpurpose>"
msgstr ""
"<refpurpose>멀티포인트 도형으로부터 라인스트링을 생성합니다.</refpurpose>"

#. Tag: funcprototype
#: reference_constructor.xml:101
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_LineFromMultiPoint</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>aMultiPoint</parameter></"
"paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_LineFromMultiPoint</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>aMultiPoint</parameter></"
"paramdef>"

#. Tag: para
#: reference_constructor.xml:111
#, no-c-format
msgid "<para>Creates a LineString from a MultiPoint geometry.</para>"
msgstr "<para>멀티포인트 도형으로부터 라인스트링을 생성합니다.</para>"

#. Tag: para
#: reference_constructor.xml:113
#, no-c-format
msgid ""
"Use <xref linkend=\"ST_MakeLine\"/> to create lines from Point or LineString "
"inputs."
msgstr ""

#. Tag: title
#: reference_constructor.xml:120 reference_constructor.xml:331
#: reference_constructor.xml:370 reference_constructor.xml:571
#: reference_constructor.xml:607 reference_constructor.xml:645
#: reference_constructor.xml:696
#, no-c-format
msgid "Examples"
msgstr "예시"

#. Tag: para
#: reference_constructor.xml:121
#, fuzzy, no-c-format
msgid "Create a 3D line string from a 3D MultiPoint"
msgstr "멀티포인트 도형으로부터 라인스트링을 생성합니다."

#. Tag: programlisting
#: reference_constructor.xml:122
#, fuzzy, no-c-format
msgid ""
"SELECT ST_AsEWKT(  ST_LineFromMultiPoint('MULTIPOINT(1 2 3, 4 5 6, 7 8 "
"9)')  ));\n"
"\n"
"--result--\n"
"LINESTRING(1 2 3,4 5 6,7 8 9)"
msgstr ""
"-- 3D 멀티포인트로부터 3D 라인스트링 생성하기\n"
"SELECT ST_AsEWKT(ST_LineFromMultiPoint(ST_GeomFromEWKT('MULTIPOINT(1 2 3, 4 "
"5 6, 7 8 9)')));\n"
"-- 결과 --\n"
"LINESTRING(1 2 3,4 5 6,7 8 9)"

#. Tag: para
#: reference_constructor.xml:129
#, fuzzy, no-c-format
msgid ", <xref linkend=\"ST_MakeLine\"/>"
msgstr ", <xref linkend=\"ST_AsKML\"/>"

#. Tag: refname
#: reference_constructor.xml:135
#, no-c-format
msgid "ST_MakeEnvelope"
msgstr "ST_MakeEnvelope"

#. Tag: refpurpose
#: reference_constructor.xml:137
#, fuzzy, no-c-format
msgid "Creates a rectangular Polygon from minimum and maximum coordinates."
msgstr ""
"주어진 최소값과 최대값으로 형성된 직사각형 폴리곤을 생성합니다. 입력값이 SRID"
"로 지정된 SRS를 가지고 있어야 합니다."

#. Tag: funcprototype
#: reference_constructor.xml:142
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_MakeEnvelope</function></funcdef> "
"<paramdef><type>float</type> <parameter>xmin</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>ymin</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>xmax</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>ymax</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>integer</type> <parameter>srid=unknown</"
"parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakeEnvelope</function></funcdef> "
"<paramdef><type>double precision</type> <parameter>xmin</parameter></"
"paramdef> <paramdef><type>double precision</type> <parameter>ymin</"
"parameter></paramdef> <paramdef><type>double precision</type> "
"<parameter>xmax</parameter></paramdef> <paramdef><type>double precision</"
"type> <parameter>ymax</parameter></paramdef> <paramdef choice=\"opt"
"\"><type>integer </type> <parameter>srid=unknown</parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:156
#, fuzzy, no-c-format
msgid ""
"Creates a rectangular Polygon from the minimum and maximum values for X and "
"Y. Input values must be in the spatial reference system specified by the "
"SRID. If no SRID is specified the unknown spatial reference system (SRID 0) "
"is used."
msgstr ""
"최소값과 최대값으로 형성된 직사각형 폴리곤을 생성합니다. 입력값이 SRID로 지정"
"된 SRS를 가지고 있어야 합니다. 지정된 SRID가 없을 경우 알려지지 않은 공간 참"
"조 시스템을 쓴다고 가정합니다."

#. Tag: para
#: reference_constructor.xml:160
#, no-c-format
msgid "Availability: 1.5"
msgstr "1.5 버전부터 사용할 수 있습니다."

#. Tag: para
#: reference_constructor.xml:161
#, no-c-format
msgid ""
"Enhanced: 2.0: Ability to specify an envelope without specifying an SRID was "
"introduced."
msgstr ""
"개선 사항: 2.0 버전부터 SRID를 지정하지 않고도 직사각형(envelope)을 설정할 "
"수 있는 기능이 추가됐습니다."

#. Tag: title
#: reference_constructor.xml:166
#, no-c-format
msgid "Example: Building a bounding box polygon"
msgstr "예시: 경계 상자 폴리곤을 빌드하기"

#. Tag: programlisting
#: reference_constructor.xml:167
#, fuzzy, no-c-format
msgid ""
"SELECT ST_AsText( ST_MakeEnvelope(10, 10, 11, 11, 4326) );\n"
"\n"
"st_asewkt\n"
"-----------\n"
"POLYGON((10 10, 10 11, 11 11, 11 10, 10 10))"
msgstr ""
"SELECT ST_AsText(ST_MakeEnvelope(10, 10, 11, 11, 4326));\n"
"\n"
"st_asewkt\n"
"-----------\n"
"POLYGON((10 10, 10 11, 11 11, 11 10, 10 10))"

#. Tag: para
#: reference_constructor.xml:171
#, fuzzy, no-c-format
msgid ""
", <xref linkend=\"ST_MakeLine\"/>, <xref linkend=\"ST_MakePolygon\"/>, <xref "
"linkend=\"ST_TileEnvelope\"/>"
msgstr ""
", <xref linkend=\"ST_MakePoint\"/>, <xref linkend=\"ST_Point\"/>, <xref "
"linkend=\"ST_SRID\"/>"

#. Tag: refname
#: reference_constructor.xml:177
#, no-c-format
msgid "ST_MakeLine"
msgstr "ST_MakeLine"

#. Tag: refpurpose
#: reference_constructor.xml:179
#, fuzzy, no-c-format
msgid "Creates a LineString from Point, MultiPoint, or LineString geometries."
msgstr "포인트, 멀티포인트 또는 라인 도형으로부터 라인스트링을 생성합니다."

#. Tag: funcsynopsis
#: reference_constructor.xml:183
#, fuzzy, no-c-format
msgid ""
"<funcprototype> <funcdef>geometry <function>ST_MakeLine</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>geom1</parameter></paramdef> "
"<paramdef><type>geometry</type> <parameter>geom2</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>geometry <function>ST_MakeLine</"
"function></funcdef> <paramdef><type>geometry[]</type> "
"<parameter>geoms_array</parameter></paramdef> </funcprototype> "
"<funcprototype> <funcdef>geometry <function>ST_MakeLine</function></funcdef> "
"<paramdef><type>geometry set</type> <parameter>geoms</parameter></paramdef> "
"</funcprototype>"
msgstr ""
"<funcprototype> <funcdef>geometry <function>ST_MakeLine</function></funcdef> "
"<paramdef><type>geometry set</type> <parameter>geoms</parameter></paramdef> "
"</funcprototype> <funcprototype> <funcdef>geometry <function>ST_MakeLine</"
"function></funcdef> <paramdef><type>geometry</type> <parameter>geom1</"
"parameter></paramdef> <paramdef><type>geometry</type> <parameter>geom2</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
"<function>ST_MakeLine</function></funcdef> <paramdef><type>geometry[]</type> "
"<parameter>geoms_array</parameter></paramdef> </funcprototype>"

#. Tag: para
#: reference_constructor.xml:205
#, no-c-format
msgid ""
"Creates a LineString containing the points of Point, MultiPoint, or "
"LineString geometries. Other geometry types cause an error."
msgstr ""

#. Tag: para
#: reference_constructor.xml:210
#, no-c-format
msgid ""
"<emphasis role=\"bold\">Variant 3:</emphasis> aggregate function accepting a "
"rowset of geometries. To ensure the order of the input geometries use "
"<varname>ORDER BY</varname> in the function call, or a subquery with an "
"<varname>ORDER BY</varname> clause."
msgstr ""

#. Tag: para
#: reference_constructor.xml:214
#, no-c-format
msgid ""
"Repeated nodes at the beginning of input LineStrings are collapsed to a "
"single point. Repeated points in Point and MultiPoint inputs are not "
"collapsed. <xref linkend=\"ST_RemoveRepeatedPoints\"/> can be used to "
"collapse repeated points from the output LineString."
msgstr ""

#. Tag: para
#: reference_constructor.xml:222
#, fuzzy, no-c-format
msgid ""
"Availability: 2.3.0 - Support for MultiPoint input elements was introduced"
msgstr "2.0.0 버전부터 라인스트링 구성 요소 입력을 지원하기 시작했습니다."

#. Tag: para
#: reference_constructor.xml:223
#, fuzzy, no-c-format
msgid ""
"Availability: 2.0.0 - Support for LineString input elements was introduced"
msgstr "2.0.0 버전부터 라인스트링 구성 요소 입력을 지원하기 시작했습니다."

#. Tag: para
#: reference_constructor.xml:224
#, no-c-format
msgid ""
"Availability: 1.4.0 - ST_MakeLine(geomarray) was introduced. ST_MakeLine "
"aggregate functions was enhanced to handle more points faster."
msgstr ""
"1.4.0 버전부터 사용할 수 있습니다. 이 버전부터 ST_MakeLine가 도형 배열을 입력"
"받을 수 있습니다. 더 많은 포인트를 더 빨리 처리하기 위해 ST_MakeLine 합산 함"
"수를 개선했습니다."

#. Tag: title
#: reference_constructor.xml:229
#, fuzzy, no-c-format
msgid "Examples: Two-input variant"
msgstr "예시: 배열 버전 사용하기"

#. Tag: para
#: reference_constructor.xml:231
#, no-c-format
msgid "Create a line composed of two points."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:232
#, fuzzy, no-c-format
msgid ""
"SELECT ST_AsText( ST_MakeLine(ST_Point(1,2), ST_Point(3,4)) );\n"
"\n"
"          st_astext\n"
"---------------------\n"
" LINESTRING(1 2,3 4)"
msgstr ""
"SELECT ST_MakeLine(ARRAY(SELECT ST_Centroid(the_geom) FROM visit_locations "
"ORDER BY visit_time));\n"
"\n"
"-- 3D 포인트 3개로 3D 라인 만들기\n"
"SELECT ST_AsEWKT(ST_MakeLine(ARRAY[ST_MakePoint(1,2,3),\n"
"                                ST_MakePoint(3,4,5), "
"ST_MakePoint(6,6,6)]));\n"
"                st_asewkt\n"
"-------------------------\n"
"LINESTRING(1 2 3,3 4 5,6 6 6)"

#. Tag: para
#: reference_constructor.xml:234
#, fuzzy, no-c-format
msgid "Create a 3D line from two 3D points."
msgstr "주어진 3D 포인트 도형 2개로 정의되는 BOX3D를 생성합니다."

#. Tag: programlisting
#: reference_constructor.xml:235
#, no-c-format
msgid ""
"SELECT ST_AsEWKT( ST_MakeLine(ST_MakePoint(1,2,3), ST_MakePoint(3,4,5) ));\n"
"\n"
"                st_asewkt\n"
"-------------------------\n"
" LINESTRING(1 2 3,3 4 5)"
msgstr ""

#. Tag: para
#: reference_constructor.xml:237
#, fuzzy, no-c-format
msgid "Create a line from two disjoint LineStrings."
msgstr "포인트, 멀티포인트 또는 라인 도형으로부터 라인스트링을 생성합니다."

#. Tag: programlisting
#: reference_constructor.xml:238
#, no-c-format
msgid ""
"select ST_AsText( ST_MakeLine( 'LINESTRING(0 0, 1 1)', 'LINESTRING(2 2, 3 "
"3)' ) );\n"
"\n"
"          st_astext\n"
"-----------------------------\n"
" LINESTRING(0 0,1 1,2 2,3 3)"
msgstr ""

#. Tag: title
#: reference_constructor.xml:242
#, fuzzy, no-c-format
msgid "Examples: Array variant"
msgstr "예시: 배열 버전 사용하기"

#. Tag: para
#: reference_constructor.xml:244
#, no-c-format
msgid "Create a line from an array formed by a subquery with ordering."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:245
#, no-c-format
msgid ""
"SELECT ST_MakeLine( ARRAY( SELECT ST_Centroid(geom) FROM visit_locations "
"ORDER BY visit_time) );"
msgstr ""

#. Tag: para
#: reference_constructor.xml:247
#, no-c-format
msgid "Create a 3D line from an array of 3D points"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:248
#, fuzzy, no-c-format
msgid ""
"SELECT ST_AsEWKT( ST_MakeLine(\n"
"          ARRAY[ ST_MakePoint(1,2,3), ST_MakePoint(3,4,5), "
"ST_MakePoint(6,6,6) ]  ));\n"
"\n"
"                st_asewkt\n"
"-------------------------\n"
"LINESTRING(1 2 3,3 4 5,6 6 6)"
msgstr ""
"SELECT ST_MakeLine(ARRAY(SELECT ST_Centroid(the_geom) FROM visit_locations "
"ORDER BY visit_time));\n"
"\n"
"-- 3D 포인트 3개로 3D 라인 만들기\n"
"SELECT ST_AsEWKT(ST_MakeLine(ARRAY[ST_MakePoint(1,2,3),\n"
"                                ST_MakePoint(3,4,5), "
"ST_MakePoint(6,6,6)]));\n"
"                st_asewkt\n"
"-------------------------\n"
"LINESTRING(1 2 3,3 4 5,6 6 6)"

#. Tag: title
#: reference_constructor.xml:252
#, fuzzy, no-c-format
msgid "Examples: Aggregate variant"
msgstr "예시: 공간 합산 버전"

#. Tag: para
#: reference_constructor.xml:253
#, fuzzy, no-c-format
msgid ""
"This example queries time-based sequences of GPS points from a set of tracks "
"and creates one record for each track. The result geometries are LineStrings "
"composed of the GPS track points in the order of travel."
msgstr ""
"이 예시는 GPS 포인트 배열을 입력받아, 도형 항목이 이동 순서대로의 GPS 포인트"
"들로 이루어진 라인스트링인 GPS 이동 하나당 한 개의 레코드를 생성합니다."

#. Tag: para
#: reference_constructor.xml:257
#, no-c-format
msgid ""
"Using aggregate <varname>ORDER BY</varname> provides a correctly-ordered "
"LineString."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:258
#, no-c-format
msgid ""
"SELECT gps.track_id, ST_MakeLine(gps.geom ORDER BY gps_time) As geom\n"
"        FROM gps_points As gps\n"
"        GROUP BY track_id;"
msgstr ""

#. Tag: para
#: reference_constructor.xml:260
#, no-c-format
msgid ""
"Prior to PostgreSQL 9, ordering in a subquery can be used. However, "
"sometimes the query plan may not respect the order of the subquery."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:262
#, no-c-format
msgid ""
"SELECT gps.track_id, ST_MakeLine(gps.geom) As geom\n"
"        FROM ( SELECT track_id, gps_time, geom\n"
"                        FROM gps_points ORDER BY track_id, gps_time ) As "
"gps\n"
"        GROUP BY track_id;"
msgstr ""

#. Tag: para
#: reference_constructor.xml:267
#, fuzzy, no-c-format
msgid ""
", <xref linkend=\"ST_AsEWKT\"/>, <xref linkend=\"ST_AsText\"/>, <xref "
"linkend=\"ST_GeomFromText\"/>, <xref linkend=\"ST_MakePoint\"/>, <xref "
"linkend=\"ST_Point\"/>"
msgstr ""
", <xref linkend=\"ST_AsText\"/>, <xref linkend=\"ST_GeomFromText\"/>, <xref "
"linkend=\"ST_MakePoint\"/>"

#. Tag: refname
#: reference_constructor.xml:280
#, no-c-format
msgid "ST_MakePoint"
msgstr "ST_MakePoint"

#. Tag: refpurpose
#: reference_constructor.xml:282
#, no-c-format
msgid "Creates a 2D, 3DZ or 4D Point."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:287
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_Point</function></funcdef> "
"<paramdef><type>float </type> <parameter>x_lon</parameter></paramdef> "
"<paramdef><type>float </type> <parameter>y_lat</parameter></paramdef>"

#. Tag: funcprototype
#: reference_constructor.xml:294
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>z</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakePointM</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>m</parameter></paramdef>"

#. Tag: funcprototype
#: reference_constructor.xml:302
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>z</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>m</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
"<paramdef><type>double precision</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>z</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>m</parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:315
#, fuzzy, no-c-format
msgid "Creates a 2D, 3D Z or 4D ZM Point geometry."
msgstr "주어진 포인트 도형들로 정의되는 BOX2D를 생성합니다."

#. Tag: para
#: reference_constructor.xml:317
#, no-c-format
msgid ""
"Use <xref linkend=\"ST_MakePointM\"/> to make points with XYM coordinates."
msgstr ""

#. Tag: para
#: reference_constructor.xml:319
#, no-c-format
msgid ""
"While not OGC-compliant, <varname>ST_MakePoint</varname> is faster and more "
"precise than <xref linkend=\"ST_GeomFromText\"/> and <xref linkend="
"\"ST_PointFromText\"/>. It is also easier to use for numeric coordinate "
"values."
msgstr ""

#. Tag: para
#: reference_constructor.xml:325 reference_constructor.xml:365
#: reference_constructor.xml:510
#, no-c-format
msgid ""
"For geodetic coordinates, <varname>X</varname> is longitude and <varname>Y</"
"varname> is latitude"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:332
#, no-c-format
msgid ""
"--Return point with unknown SRID\n"
"SELECT ST_MakePoint(-71.1043443253471, 42.3150676015829);\n"
"\n"
"--Return point marked as WGS 84 long lat\n"
"SELECT ST_SetSRID(ST_MakePoint(-71.1043443253471, 42.3150676015829),4326);\n"
"\n"
"--Return a 3D point (e.g. has altitude)\n"
"SELECT ST_MakePoint(1, 2,1.5);\n"
"\n"
"--Get z of point\n"
"SELECT ST_Z(ST_MakePoint(1, 2,1.5));\n"
"result\n"
"-------\n"
"1.5"
msgstr ""
"-- 알려지지 않은 SRID를 가진 포인트를 반환\n"
"SELECT ST_MakePoint(-71.1043443253471, 42.3150676015829);\n"
"\n"
"-- WGS84 경위도로 표시된 포인트를 반환\n"
"SELECT ST_SetSRID(ST_MakePoint(-71.1043443253471, 42.3150676015829),4326);\n"
"\n"
"-- 3D (예를 들자면 고도를 가진) 포인트를 반환\n"
"SELECT ST_MakePoint(1, 2,1.5);\n"
"\n"
"-- 포인트의 z를 얻어오기\n"
"SELECT ST_Z(ST_MakePoint(1, 2,1.5));\n"
"result\n"
"-------\n"
"1.5"

#. Tag: para
#: reference_constructor.xml:336
#, no-c-format
msgid ""
", <xref linkend=\"ST_PointFromText\"/>, <xref linkend=\"ST_SetSRID\"/>, "
"<xref linkend=\"ST_MakePointM\"/>"
msgstr ""
", <xref linkend=\"ST_PointFromText\"/>, <xref linkend=\"ST_SetSRID\"/>, "
"<xref linkend=\"ST_MakePointM\"/>"

#. Tag: refname
#: reference_constructor.xml:342
#, no-c-format
msgid "ST_MakePointM"
msgstr "ST_MakePointM"

#. Tag: refpurpose
#: reference_constructor.xml:344
#, fuzzy, no-c-format
msgid "Creates a Point from X, Y and M values."
msgstr "x, y 좌표 및 단위를 가진 포인트를 생성합니다."

#. Tag: funcprototype
#: reference_constructor.xml:349
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_MakePointM</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>m</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakePointM</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>m</parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:361
#, fuzzy, no-c-format
msgid "Creates a point with X, Y and M (measure) coordinates."
msgstr "x, y 좌표 및 단위를 가진 포인트를 생성합니다."

#. Tag: para
#: reference_constructor.xml:363
#, no-c-format
msgid ""
"Use <xref linkend=\"ST_MakePoint\"/> to make points with XY, XYZ, or XYZM "
"coordinates."
msgstr ""

#. Tag: para
#: reference_constructor.xml:371
#, no-c-format
msgid ""
"is used for text output because <xref linkend=\"ST_AsText\"/> does not "
"support M values."
msgstr ""

#. Tag: para
#: reference_constructor.xml:374
#, no-c-format
msgid "Create point with unknown SRID."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:375
#, no-c-format
msgid ""
"SELECT ST_AsEWKT(  ST_MakePointM(-71.1043443253471, 42.3150676015829, "
"10)  );\n"
"\n"
"                                   st_asewkt\n"
"-----------------------------------------------\n"
" POINTM(-71.1043443253471 42.3150676015829 10)"
msgstr ""

#. Tag: para
#: reference_constructor.xml:377
#, fuzzy, no-c-format
msgid "Create point with a measure in the WGS 84 geodetic coordinate system."
msgstr "x, y 좌표 및 단위를 가진 포인트를 생성합니다."

#. Tag: programlisting
#: reference_constructor.xml:378
#, no-c-format
msgid ""
"SELECT ST_AsEWKT( ST_SetSRID(  ST_MakePointM(-71.104, 42.315, 10),  4326));\n"
"\n"
"                                                st_asewkt\n"
"---------------------------------------------------------\n"
"SRID=4326;POINTM(-71.104 42.315 10)"
msgstr ""

#. Tag: para
#: reference_constructor.xml:380
#, no-c-format
msgid "Get measure of created point."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:381
#, no-c-format
msgid ""
"SELECT ST_M(  ST_MakePointM(-71.104, 42.315, 10)  );\n"
"\n"
"result\n"
"-------\n"
"10"
msgstr ""

#. Tag: para
#: reference_constructor.xml:385
#, no-c-format
msgid ", <xref linkend=\"ST_MakePoint\"/>, <xref linkend=\"ST_SetSRID\"/>"
msgstr ", <xref linkend=\"ST_MakePoint\"/>, <xref linkend=\"ST_SetSRID\"/>"

#. Tag: refname
#: reference_constructor.xml:391
#, no-c-format
msgid "ST_MakePolygon"
msgstr "ST_MakePolygon"

#. Tag: refpurpose
#: reference_constructor.xml:393
#, no-c-format
msgid "Creates a Polygon from a shell and optional list of holes."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:398
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_MakePolygon</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>linestring</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakePolygon</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>linestring</parameter></paramdef>"

#. Tag: funcprototype
#: reference_constructor.xml:404
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_MakePolygon</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>outerlinestring</parameter></"
"paramdef> <paramdef><type>geometry[]</type> <parameter>interiorlinestrings</"
"parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakePolygon</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>outerlinestring</parameter></"
"paramdef> <paramdef><type>geometry[]</type> <parameter>interiorlinestrings</"
"parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:415
#, fuzzy, no-c-format
msgid ""
"Creates a Polygon formed by the given shell and optional array of holes. "
"Input geometries must be closed LineStrings (rings)."
msgstr ""
"주어진 외부 구조(shell)로 형성된 폴리곤을 생성합니다. 입력 도형이 닫힌 라인스"
"트링이어야 합니다."

#. Tag: para
#: reference_constructor.xml:418
#, no-c-format
msgid ""
"<emphasis role=\"bold\">Variant 1:</emphasis> Accepts one shell LineString."
msgstr ""

#. Tag: para
#: reference_constructor.xml:419
#, no-c-format
msgid ""
"<emphasis role=\"bold\">Variant 2:</emphasis> Accepts a shell LineString and "
"an array of inner (hole) LineStrings. A geometry array can be constructed "
"using the PostgreSQL array_agg(), ARRAY[] or ARRAY() constructs."
msgstr ""

#. Tag: para
#: reference_constructor.xml:423 reference_constructor.xml:685
#, fuzzy, no-c-format
msgid ""
"This function does not accept MultiLineStrings. Use <xref linkend="
"\"ST_LineMerge\"/> to generate a LineString, or <xref linkend=\"ST_Dump\"/> "
"to extract LineStrings."
msgstr ""
"이 함수에 멀티라인스트링을 입력할 수는 없습니다. 라인스트링을 생성하려면 "
"<xref linkend=\"ST_LineMerge\"/> 또는 <xref linkend=\"ST_Dump\"/> 를 이용하십"
"시오."

#. Tag: title
#: reference_constructor.xml:431
#, fuzzy, no-c-format
msgid "Examples: Single input variant"
msgstr "예시: 배열 버전 사용하기"

#. Tag: para
#: reference_constructor.xml:432
#, fuzzy, no-c-format
msgid "Create a Polygon from a 2D LineString."
msgstr "인코딩된 폴리라인 스트링으로부터 라인스트링을 생성합니다."

#. Tag: programlisting
#: reference_constructor.xml:433
#, fuzzy, no-c-format
msgid ""
"SELECT ST_MakePolygon( ST_GeomFromText('LINESTRING(75 29,77 29,77 29, 75 "
"29)'));"
msgstr "SELECT ST_MLineFromText('MULTILINESTRING((1 2, 3 4), (4 5, 6 7))');"

#. Tag: para
#: reference_constructor.xml:435
#, no-c-format
msgid ""
"Create a Polygon from an open LineString, using <xref linkend=\"ST_StartPoint"
"\"/> and <xref linkend=\"ST_AddPoint\"/> to close it."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:437
#, no-c-format
msgid ""
"SELECT ST_MakePolygon( ST_AddPoint(foo.open_line, ST_StartPoint(foo."
"open_line)) )\n"
"FROM (\n"
"  SELECT ST_GeomFromText('LINESTRING(75 29,77 29,77 29, 75 29)') As "
"open_line) As foo;"
msgstr ""

#. Tag: para
#: reference_constructor.xml:439
#, fuzzy, no-c-format
msgid "Create a Polygon from a 3D LineString"
msgstr "인코딩된 폴리라인 스트링으로부터 라인스트링을 생성합니다."

#. Tag: programlisting
#: reference_constructor.xml:440
#, no-c-format
msgid ""
"SELECT ST_AsEWKT( ST_MakePolygon( 'LINESTRING(75.15 29.53 1,77 29 1,77.6 "
"29.5 1, 75.15 29.53 1)'));\n"
"\n"
"st_asewkt\n"
"-----------\n"
"POLYGON((75.15 29.53 1,77 29 1,77.6 29.5 1,75.15 29.53 1))"
msgstr ""

#. Tag: para
#: reference_constructor.xml:441
#, no-c-format
msgid "Create a Polygon from a LineString with measures"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:442
#, no-c-format
msgid ""
"SELECT ST_AsEWKT( ST_MakePolygon( 'LINESTRINGM(75.15 29.53 1,77 29 1,77.6 "
"29.5 2, 75.15 29.53 2)' ));\n"
"\n"
"st_asewkt\n"
"----------\n"
"POLYGONM((75.15 29.53 1,77 29 1,77.6 29.5 2,75.15 29.53 2))"
msgstr ""

#. Tag: title
#: reference_constructor.xml:445
#, fuzzy, no-c-format
msgid "Examples: Outer shell with inner holes variant"
msgstr "예시: 내곽 구조를 가진 외곽 구조"

#. Tag: para
#: reference_constructor.xml:447
#, fuzzy, no-c-format
msgid "Create a donut Polygon with an extra hole"
msgstr "개미 구멍을 가진 도넛을 빌드해봅시다."

#. Tag: programlisting
#: reference_constructor.xml:448
#, fuzzy, no-c-format
msgid ""
"SELECT ST_MakePolygon( ST_ExteriorRing( ST_Buffer(ring.line,10)),\n"
"        ARRAY[  ST_Translate(ring.line, 1, 1),\n"
"                ST_ExteriorRing(ST_Buffer(ST_Point(20,20),1)) ]\n"
"        )\n"
"FROM (SELECT ST_ExteriorRing(\n"
"        ST_Buffer(ST_Point(10,10),10,10)) AS line ) AS ring;"
msgstr ""
"SELECT ST_MakePolygon(\n"
"                ST_ExteriorRing(ST_Buffer(foo.line,10)),\n"
"        ARRAY[ST_Translate(foo.line,1,1),\n"
"                ST_ExteriorRing(ST_Buffer(ST_MakePoint(20,20),1)) ]\n"
"        )\n"
"FROM\n"
"        (SELECT ST_ExteriorRing(ST_Buffer(ST_MakePoint(10,10),10,10))\n"
"                As line )\n"
"                As foo;"

#. Tag: para
#: reference_constructor.xml:449
#, no-c-format
msgid ""
"Create a set of province boundaries with holes representing lakes. The input "
"is a table of province Polygons/MultiPolygons and a table of water "
"linestrings. Lines forming lakes are determined by using <xref linkend="
"\"ST_IsClosed\"/>. The province linework is extracted by using <xref linkend="
"\"ST_Boundary\"/>. As required by <code>ST_MakePolygon</code>, the boundary "
"is forced to be a single LineString by using <xref linkend=\"ST_LineMerge\"/"
">. (However, note that if a province has more than one region or has islands "
"this will produce an invalid polygon.) Using a LEFT JOIN ensures all "
"provinces are included even if they have no lakes."
msgstr ""

#. Tag: para
#: reference_constructor.xml:462
#, fuzzy, no-c-format
msgid ""
"The CASE construct is used because passing a null array into ST_MakePolygon "
"results in a NULL return value."
msgstr ""
"NULL 배열을 ST_MakePolygon에 입력하면 NULL을 반환하기 때문에 CASE 구조를 활용"
"합니다."

#. Tag: programlisting
#: reference_constructor.xml:465
#, no-c-format
msgid ""
"SELECT p.gid, p.province_name,\n"
"        CASE WHEN array_agg(w.geom) IS NULL\n"
"        THEN p.geom\n"
"        ELSE  ST_MakePolygon( ST_LineMerge(ST_Boundary(p.geom)),\n"
"                        array_agg(w.geom)) END\n"
"FROM\n"
"        provinces p LEFT JOIN waterlines w\n"
"                ON (ST_Within(w.geom, p.geom) AND ST_IsClosed(w.geom))\n"
"GROUP BY p.gid, p.province_name, p.geom;"
msgstr ""

#. Tag: para
#: reference_constructor.xml:467
#, no-c-format
msgid ""
"Another technique is to utilize a correlated subquery and the ARRAY() "
"constructor that converts a row set to an array."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:469
#, fuzzy, no-c-format
msgid ""
"SELECT p.gid,  p.province_name,\n"
"    CASE WHEN EXISTS( SELECT w.geom\n"
"        FROM waterlines w\n"
"        WHERE ST_Within(w.geom, p.geom)\n"
"        AND ST_IsClosed(w.geom))\n"
"    THEN ST_MakePolygon(\n"
"        ST_LineMerge(ST_Boundary(p.geom)),\n"
"        ARRAY( SELECT w.geom\n"
"            FROM waterlines w\n"
"            WHERE ST_Within(w.geom, p.geom)\n"
"            AND ST_IsClosed(w.geom)))\n"
"    ELSE p.geom\n"
"    END AS geom\n"
"FROM provinces p;"
msgstr ""
"SELECT p.gid, p.province_name,\n"
"                CASE WHEN\n"
"                        ST_Accum(w.the_geom) IS NULL THEN p.the_geom\n"
"                ELSE  ST_MakePolygon(ST_LineMerge(ST_Boundary(p.the_geom)), "
"ST_Accum(w.the_geom)) END\n"
"        FROM\n"
"                provinces p LEFT JOIN waterlines w\n"
"                        ON (ST_Within(w.the_geom, p.the_geom) AND "
"ST_IsClosed(w.the_geom))\n"
"        GROUP BY p.gid, p.province_name, p.the_geom;\n"
"\n"
"-- 앞과 동일한 예시이지만, 상관 하위 쿼리와\n"
"-- 행의 집합을 배열로 변환하는 PostgreSQL 내장 ARRAY() 함수를 활용합니다.\n"
"\n"
"        SELECT p.gid,  p.province_name, CASE WHEN\n"
"                EXISTS(SELECT w.the_geom\n"
"                        FROM waterlines w\n"
"                        WHERE ST_Within(w.the_geom, p.the_geom)\n"
"                        AND ST_IsClosed(w.the_geom))\n"
"                THEN\n"
"                ST_MakePolygon(ST_LineMerge(ST_Boundary(p.the_geom)),\n"
"                        ARRAY(SELECT w.the_geom\n"
"                                FROM waterlines w\n"
"                                WHERE ST_Within(w.the_geom, p.the_geom)\n"
"                                AND ST_IsClosed(w.the_geom)))\n"
"                ELSE p.the_geom END As the_geom\n"
"        FROM\n"
"                provinces p;"

#. Tag: refname
#: reference_constructor.xml:482
#, no-c-format
msgid "ST_Point"
msgstr "ST_Point"

#. Tag: refpurpose
#: reference_constructor.xml:484
#, fuzzy, no-c-format
msgid ""
"Creates a Point with the given coordinate values. Alias for ST_MakePoint."
msgstr ""
"주어진 좌표값을 가진 ST_Point를 반환합니다. ST_MakePoint와 동일한 OGC 함수입"
"니다."

#. Tag: funcprototype
#: reference_constructor.xml:489
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_Point</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_Point</function></funcdef> "
"<paramdef><type>float </type> <parameter>x_lon</parameter></paramdef> "
"<paramdef><type>float </type> <parameter>y_lat</parameter></paramdef>"

#. Tag: funcprototype
#: reference_constructor.xml:496
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_Point</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>integer</type> <parameter>srid=unknown</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakePointM</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>m</parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:508
#, fuzzy, no-c-format
msgid ""
"Returns an Point with the given X and Y coordinate values. This is the SQL-"
"MM alias for <xref linkend=\"ST_MakePoint\"/> that takes just X and Y."
msgstr ""
"주어진 좌표값을 가진 ST_Point를 반환합니다. MM을 준수하며 x, y만을 입력받는, "
"ST_MakePoint와 동일한 함수입니다."

#. Tag: para
#: reference_constructor.xml:512
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 6.1.2"
msgstr "&sqlmm_compliant; SQL-MM 3: 6.1.2"

#. Tag: title
#: reference_constructor.xml:518
#, no-c-format
msgid "Examples: Geometry"
msgstr "예시: 도형"

#. Tag: programlisting
#: reference_constructor.xml:520
#, fuzzy, no-c-format
msgid "SELECT ST_SetSRID( ST_Point( -71.104, 42.315), 4326)"
msgstr "SELECT ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326)"

#. Tag: title
#: reference_constructor.xml:524
#, no-c-format
msgid "Examples: Geography"
msgstr "예시: 지리형"

#. Tag: programlisting
#: reference_constructor.xml:526
#, fuzzy, no-c-format
msgid ""
"SELECT CAST(ST_SetSRID( ST_Point( -71.104, 42.315), 4326) AS geography);"
msgstr ""
"SELECT CAST(ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326) "
"As geography);"

#. Tag: para
#: reference_constructor.xml:528
#, no-c-format
msgid ""
"PostgreSQL also provides the <varname>::</varname> short-hand for casting"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:529
#, fuzzy, no-c-format
msgid "SELECT ST_SetSRID( ST_Point( -71.104, 42.315), 4326)::geography;"
msgstr ""
"SELECT CAST(ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326) "
"As geography);"

#. Tag: para
#: reference_constructor.xml:531
#, no-c-format
msgid ""
"If the point coordinates are not in a geodetic coordinate system (such as "
"WGS84), then they must be reprojected before casting to a geography. In this "
"example a point in Pennsylvania State Plane feet (SRID 2273) is projected to "
"WGS84 (SRID 4326)."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:535
#, fuzzy, no-c-format
msgid ""
"SELECT ST_Transform(ST_SetSRID( ST_Point( 3637510, 3014852 ), 2273), 4326)::"
"geography;"
msgstr ""
"SELECT CAST(ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326) "
"As geography);"

#. Tag: para
#: reference_constructor.xml:542
#, no-c-format
msgid ""
", <xref linkend=\"ST_MakePoint\"/>, <xref linkend=\"ST_SetSRID\"/>, <xref "
"linkend=\"ST_Transform\"/>, <xref linkend=\"ST_PointZ\"/>, <xref linkend="
"\"ST_PointM\"/>, <xref linkend=\"ST_PointZM\"/>"
msgstr ""
", <xref linkend=\"ST_MakePoint\"/>, <xref linkend=\"ST_SetSRID\"/>, <xref "
"linkend=\"ST_Transform\"/>, <xref linkend=\"ST_PointZ\"/>, <xref linkend="
"\"ST_PointM\"/>, <xref linkend=\"ST_PointZM\"/>"

#. Tag: refname
#: reference_constructor.xml:549
#, fuzzy, no-c-format
msgid "ST_PointZ"
msgstr "ST_Point"

#. Tag: refpurpose
#: reference_constructor.xml:550 reference_constructor.xml:586
#: reference_constructor.xml:623
#, fuzzy, no-c-format
msgid "Creates a Point with the given coordinate and SRID values."
msgstr ""
"주어진 좌표값을 가진 ST_Point를 반환합니다. ST_MakePoint와 동일한 OGC 함수입"
"니다."

#. Tag: funcprototype
#: reference_constructor.xml:555
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_PointZ</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>z</parameter></paramdef> <paramdef "
"choice=\"opt\"><type>integer</type> <parameter>srid=unknown</parameter></"
"paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
"<paramdef><type>double precision</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>z</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>m</parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:567
#, fuzzy, no-c-format
msgid ""
"Returns an Point with the given X, Y and Z coordinate values, and optionally "
"an SRID number."
msgstr ""
"주어진 좌표값을 가진 ST_Point를 반환합니다. ST_MakePoint와 동일한 OGC 함수입"
"니다."

#. Tag: programlisting
#: reference_constructor.xml:572
#, fuzzy, no-c-format
msgid "SELECT ST_PointZ(-71.104, 42.315, 3.4, 4326)"
msgstr "SELECT ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326)"

#. Tag: programlisting
#: reference_constructor.xml:573
#, fuzzy, no-c-format
msgid "SELECT ST_PointZ(-71.104, 42.315, 3.4, srid => 4326)"
msgstr "SELECT ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326)"

#. Tag: programlisting
#: reference_constructor.xml:574
#, fuzzy, no-c-format
msgid "SELECT ST_PointZ(-71.104, 42.315, 3.4)"
msgstr "SELECT ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326)"

#. Tag: para
#: reference_constructor.xml:579
#, fuzzy, no-c-format
msgid ""
", <xref linkend=\"ST_Point\"/>, <xref linkend=\"ST_PointM\"/>, <xref linkend="
"\"ST_PointZM\"/>"
msgstr ""
", <xref linkend=\"ST_PointFromText\"/>, <xref linkend=\"ST_SetSRID\"/>, "
"<xref linkend=\"ST_MakePointM\"/>"

#. Tag: refname
#: reference_constructor.xml:585
#, fuzzy, no-c-format
msgid "ST_PointM"
msgstr "ST_Point"

#. Tag: funcprototype
#: reference_constructor.xml:591
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_PointZ</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>m</parameter></paramdef> <paramdef "
"choice=\"opt\"><type>integer</type> <parameter>srid=unknown</parameter></"
"paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
"<paramdef><type>double precision</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>z</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>m</parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:603
#, fuzzy, no-c-format
msgid ""
"Returns an Point with the given X, Y and M coordinate values, and optionally "
"an SRID number."
msgstr ""
"주어진 좌표값을 가진 ST_Point를 반환합니다. ST_MakePoint와 동일한 OGC 함수입"
"니다."

#. Tag: programlisting
#: reference_constructor.xml:608
#, fuzzy, no-c-format
msgid "SELECT ST_PointM(-71.104, 42.315, 3.4, 4326)"
msgstr "SELECT ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326)"

#. Tag: programlisting
#: reference_constructor.xml:609
#, fuzzy, no-c-format
msgid "SELECT ST_PointM(-71.104, 42.315, 3.4, srid => 4326)"
msgstr "SELECT ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326)"

#. Tag: programlisting
#: reference_constructor.xml:610
#, fuzzy, no-c-format
msgid "SELECT ST_PointM(-71.104, 42.315, 3.4)"
msgstr "SELECT ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326)"

#. Tag: para
#: reference_constructor.xml:615
#, fuzzy, no-c-format
msgid ""
", <xref linkend=\"ST_Point\"/>, <xref linkend=\"ST_PointZ\"/>, <xref linkend="
"\"ST_PointZM\"/>"
msgstr ""
", <xref linkend=\"ST_PointFromText\"/>, <xref linkend=\"ST_SetSRID\"/>, "
"<xref linkend=\"ST_MakePointM\"/>"

#. Tag: refname
#: reference_constructor.xml:622
#, fuzzy, no-c-format
msgid "ST_PointZM"
msgstr "ST_Point"

#. Tag: funcprototype
#: reference_constructor.xml:628
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_PointZM</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>z</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>m</parameter></paramdef> <paramdef "
"choice=\"opt\"><type>integer</type> <parameter>srid=unknown</parameter></"
"paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakeEnvelope</function></funcdef> "
"<paramdef><type>double precision</type> <parameter>xmin</parameter></"
"paramdef> <paramdef><type>double precision</type> <parameter>ymin</"
"parameter></paramdef> <paramdef><type>double precision</type> "
"<parameter>xmax</parameter></paramdef> <paramdef><type>double precision</"
"type> <parameter>ymax</parameter></paramdef> <paramdef choice=\"opt"
"\"><type>integer </type> <parameter>srid=unknown</parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:641
#, fuzzy, no-c-format
msgid ""
"Returns an Point with the given X, Y, Z and M coordinate values, and "
"optionally an SRID number."
msgstr ""
"주어진 좌표값을 가진 ST_Point를 반환합니다. ST_MakePoint와 동일한 OGC 함수입"
"니다."

#. Tag: programlisting
#: reference_constructor.xml:646
#, fuzzy, no-c-format
msgid "SELECT ST_PointZM(-71.104, 42.315, 3.4, 4.5, 4326)"
msgstr "SELECT ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326)"

#. Tag: programlisting
#: reference_constructor.xml:647
#, fuzzy, no-c-format
msgid "SELECT ST_PointZM(-71.104, 42.315, 3.4, 4.5, srid => 4326)"
msgstr "SELECT ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326)"

#. Tag: programlisting
#: reference_constructor.xml:648
#, fuzzy, no-c-format
msgid "SELECT ST_PointZM(-71.104, 42.315, 3.4, 4.5)"
msgstr "SELECT ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326)"

#. Tag: para
#: reference_constructor.xml:653
#, fuzzy, no-c-format
msgid ""
", <xref linkend=\"ST_Point\"/>, <xref linkend=\"ST_PointM\"/>, <xref linkend="
"\"ST_PointZ\"/>"
msgstr ""
", <xref linkend=\"ST_PointFromText\"/>, <xref linkend=\"ST_SetSRID\"/>, "
"<xref linkend=\"ST_MakePointM\"/>"

#. Tag: refname
#: reference_constructor.xml:659
#, no-c-format
msgid "ST_Polygon"
msgstr "ST_Polygon"

#. Tag: refpurpose
#: reference_constructor.xml:660
#, no-c-format
msgid "Creates a Polygon from a LineString with a specified SRID."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:665
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_Polygon</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>lineString</parameter></"
"paramdef> <paramdef><type>integer </type> <parameter>srid</parameter></"
"paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_Polygon</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>aLineString</parameter></"
"paramdef> <paramdef><type>integer </type> <parameter>srid</parameter></"
"paramdef>"

#. Tag: para
#: reference_constructor.xml:676
#, no-c-format
msgid ""
"Returns a polygon built from the given LineString and sets the spatial "
"reference system from the <varname>srid</varname>."
msgstr ""

#. Tag: para
#: reference_constructor.xml:679
#, no-c-format
msgid ""
"ST_Polygon is similar to <xref linkend=\"ST_MakePolygon\"/> Variant 1 with "
"the addition of setting the SRID."
msgstr ""

#. Tag: para
#: reference_constructor.xml:681
#, fuzzy, no-c-format
msgid ""
"To create polygons with holes use <xref linkend=\"ST_MakePolygon\"/> Variant "
"2 and then <xref linkend=\"ST_SetSRID\"/>."
msgstr ", <xref linkend=\"ST_MakePoint\"/>, <xref linkend=\"ST_SetSRID\"/>"

#. Tag: para
#: reference_constructor.xml:689
#, no-c-format
msgid "&sfs_compliant;"
msgstr "&sfs_compliant;"

#. Tag: para
#: reference_constructor.xml:690
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 8.3.2"
msgstr "&sqlmm_compliant; SQL-MM 3: 8.3.2"

#. Tag: para
#: reference_constructor.xml:698
#, no-c-format
msgid "Create a 2D polygon."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:699
#, no-c-format
msgid ""
"SELECT ST_AsText( ST_Polygon('LINESTRING(75 29, 77 29, 77 29, 75 29)'::"
"geometry, 4326) );\n"
"\n"
"-- result --\n"
"POLYGON((75 29, 77 29, 77 29, 75 29))"
msgstr ""

#. Tag: para
#: reference_constructor.xml:700
#, no-c-format
msgid "Create a 3D polygon."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:701
#, no-c-format
msgid ""
"SELECT ST_AsEWKT( ST_Polygon( ST_GeomFromEWKT('LINESTRING(75 29 1, 77 29 2, "
"77 29 3, 75 29 1)'), 4326) );\n"
"\n"
"-- result --\n"
"SRID=4326;POLYGON((75 29 1, 77 29 2, 77 29 3, 75 29 1))"
msgstr ""

#. Tag: para
#: reference_constructor.xml:708
#, no-c-format
msgid ""
", <xref linkend=\"ST_AsText\"/>, <xref linkend=\"ST_GeomFromEWKT\"/>, <xref "
"linkend=\"ST_GeomFromText\"/>, <xref linkend=\"ST_LineMerge\"/>, <xref "
"linkend=\"ST_MakePolygon\"/>"
msgstr ""
", <xref linkend=\"ST_AsText\"/>, <xref linkend=\"ST_GeomFromEWKT\"/>, <xref "
"linkend=\"ST_GeomFromText\"/>, <xref linkend=\"ST_LineMerge\"/>, <xref "
"linkend=\"ST_MakePolygon\"/>"

#. Tag: refname
#: reference_constructor.xml:715
#, fuzzy, no-c-format
msgid "ST_TileEnvelope"
msgstr "ST_MakeEnvelope"

#. Tag: refpurpose
#: reference_constructor.xml:716
#, no-c-format
msgid ""
"Creates a rectangular Polygon in <ulink url=\"https://en.wikipedia.org/wiki/"
"Web_Mercator_projection\">Web Mercator</ulink> (SRID:3857) using the <ulink "
"url=\"https://en.wikipedia.org/wiki/Tiled_web_map\">XYZ tile system</ulink>."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:721
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_TileEnvelope</function></funcdef> "
"<paramdef><type>integer</type> <parameter>tileZoom</parameter></paramdef> "
"<paramdef><type>integer</type> <parameter>tileX</parameter></paramdef> "
"<paramdef><type>integer</type> <parameter>tileY</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>geometry</type> <parameter>bounds=SRID=3857;"
"LINESTRING(-20037508.342789 -20037508.342789,20037508.342789 "
"20037508.342789)</parameter></paramdef> <paramdef choice=\"opt"
"\"><type>float</type> <parameter>margin=0.0</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
"<paramdef><type>double precision</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>z</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>m</parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:735
#, no-c-format
msgid ""
"Creates a rectangular Polygon in <ulink url=\"https://en.wikipedia.org/wiki/"
"Web_Mercator_projection\">Web Mercator</ulink> (SRID:3857) using the <ulink "
"url=\"https://en.wikipedia.org/wiki/Tiled_web_map\">XYZ tile system</ulink>. "
"By default, the bounds are the in EPSG:3857 using the standard range of the "
"Web Mercator system (-20037508.342789, 20037508.342789). The optional bounds "
"parameter can be used to generate envelopes for any tiling scheme: provide a "
"geometry that has the SRID and extent of the initial \"zoom level zero\" "
"square within which the tile system is to be inscribed."
msgstr ""

#. Tag: para
#: reference_constructor.xml:737
#, no-c-format
msgid ""
"The optional margin parameter can be used to grow a tile by the given "
"percentage, e.g. margin=0.125 grows the tile by 12.5%, which is equivalent "
"to buffer=512 when extent is 4096, as used in <xref linkend=\"ST_AsMVTGeom\"/"
">. This is useful to create a tile buffer -- to include data lying outside "
"of the tile's visible area, but whose existence affects current tile's "
"rendering. For example, a city name (a geopoint) could be near an edge of a "
"tile, but the text would need to render on two tiles, even though the "
"geopoint is located in the visible area of just one tile. Using an expanded "
"tile in a search would include the city geopoint for both tiles. Use "
"negative value to shrink the tile instead. Values less than -0.5 are "
"prohibited because that would eliminate the tile completely. Do not use "
"margin with ST_AsMVTGeom(). See example in <xref linkend=\"ST_AsMVT\"/>."
msgstr ""

#. Tag: para
#: reference_constructor.xml:739
#, fuzzy, no-c-format
msgid "Enhanced: 3.1.0 Added margin parameter."
msgstr "개선 사항: 2.0.0 버전에서 선택적인 기본 SRID 파라미터가 추가됐습니다."

#. Tag: para
#: reference_constructor.xml:740
#, fuzzy, no-c-format
msgid "Availability: 3.0.0"
msgstr "2.1.0 버전부터 사용할 수 있습니다."

#. Tag: title
#: reference_constructor.xml:744
#, fuzzy, no-c-format
msgid "Example: Building a tile envelope"
msgstr "예시: 경계 상자 폴리곤을 빌드하기"

#. Tag: programlisting
#: reference_constructor.xml:745
#, no-c-format
msgid ""
"SELECT ST_AsText( ST_TileEnvelope(2, 1, 1) );\n"
"\n"
" st_astext\n"
"------------------------------\n"
" POLYGON((-10018754.1713945 0,-10018754.1713945 10018754.1713945,0 "
"10018754.1713945,0 0,-10018754.1713945 0))\n"
"\n"
"SELECT ST_AsText( ST_TileEnvelope(3, 1, 1, ST_MakeEnvelope(-180, -90, 180, "
"90, 4326) ) );\n"
"\n"
"                      st_astext\n"
"------------------------------------------------------\n"
" POLYGON((-135 45,-135 67.5,-90 67.5,-90 45,-135 45))"
msgstr ""

#. Tag: refname
#: reference_constructor.xml:757
#, no-c-format
msgid "ST_HexagonGrid"
msgstr ""

#. Tag: refpurpose
#: reference_constructor.xml:758
#, no-c-format
msgid ""
"Returns a set of hexagons and cell indices that completely cover the bounds "
"of the geometry argument."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:763
#, fuzzy, no-c-format
msgid ""
"<funcdef>setof record <function>ST_HexagonGrid</function></funcdef> "
"<paramdef><type>float8</type> <parameter>size</parameter></paramdef> "
"<paramdef><type>geometry</type> <parameter>bounds</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_Point</function></funcdef> "
"<paramdef><type>float </type> <parameter>x_lon</parameter></paramdef> "
"<paramdef><type>float </type> <parameter>y_lat</parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:774
#, no-c-format
msgid ""
"Starts with the concept of a hexagon tiling of the plane. (Not a hexagon "
"tiling of the globe, this is not the <ulink url=\"https://github.com/uber/"
"h3\">H3</ulink> tiling scheme.) For a given planar SRS, and a given edge "
"size, starting at the origin of the SRS, there is one unique hexagonal "
"tiling of the plane, Tiling(SRS, Size). This function answers the question: "
"what hexagons in a given Tiling(SRS, Size) overlap with a given bounds."
msgstr ""

#. Tag: para
#: reference_constructor.xml:786
#, no-c-format
msgid ""
"The SRS for the output hexagons is the SRS provided by the bounds geometry."
msgstr ""

#. Tag: para
#: reference_constructor.xml:787
#, no-c-format
msgid ""
"Doubling or tripling the edge size of the hexagon generates a new parent "
"tiling that fits with the origin tiling. Unfortunately, it is not possible "
"to generate parent hexagon tilings that the child tiles perfectly fit inside."
msgstr ""

#. Tag: para
#: reference_constructor.xml:795 reference_constructor.xml:851
#: reference_constructor.xml:894 reference_constructor.xml:953
#, fuzzy, no-c-format
msgid "Availability: 3.1.0"
msgstr "2.1.0 버전부터 사용할 수 있습니다."

#. Tag: title
#: reference_constructor.xml:800
#, fuzzy, no-c-format
msgid "Example: Counting points in hexagons"
msgstr "예시: 배열 버전 사용하기"

#. Tag: para
#: reference_constructor.xml:801
#, no-c-format
msgid ""
"To do a point summary against a hexagonal tiling, generate a hexagon grid "
"using the extent of the points as the bounds, then spatially join to that "
"grid."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:803
#, no-c-format
msgid ""
"SELECT COUNT(*), hexes.geom\n"
"FROM\n"
"    ST_HexagonGrid(\n"
"        10000,\n"
"        ST_SetSRID(ST_EstimatedExtent('pointtable', 'geom'), 3857)\n"
"    ) AS hexes\n"
"    INNER JOIN\n"
"    pointtable AS pts\n"
"    ON ST_Intersects(pts.geom, hexes.geom)\n"
"GROUP BY hexes.geom;"
msgstr ""

#. Tag: title
#: reference_constructor.xml:806
#, fuzzy, no-c-format
msgid "Example: Generating hex coverage of polygons"
msgstr "예시: 경계 상자 폴리곤을 빌드하기"

#. Tag: para
#: reference_constructor.xml:807
#, no-c-format
msgid ""
"If we generate a set of hexagons for each polygon boundary and filter out "
"those that do not intersect their hexagons, we end up with a tiling for each "
"polygon."
msgstr ""

#. Tag: para
#: reference_constructor.xml:813
#, no-c-format
msgid ""
"Tiling states results in a hexagon coverage of each state, and multiple "
"hexagons overlapping at the borders between states."
msgstr ""

#. Tag: para
#: reference_constructor.xml:815
#, no-c-format
msgid ""
"The LATERAL keyword is implied for set-returning functions when referring to "
"a prior table in the FROM list. So CROSS JOIN LATERAL, CROSS JOIN, or just "
"plain , are equivalent constructs for this example."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:816
#, no-c-format
msgid ""
"SELECT admin1.gid, hex.geom\n"
"FROM\n"
"    admin1\n"
"    CROSS JOIN\n"
"    ST_HexagonGrid(100000, admin1.geom) AS hex\n"
"WHERE\n"
"    adm0_a3 = 'USA'\n"
"    AND\n"
"    ST_Intersects(admin1.geom, hex.geom)"
msgstr ""

#. Tag: para
#: reference_constructor.xml:820
#, fuzzy, no-c-format
msgid ""
", <xref linkend=\"ST_SetSRID\"/>, <xref linkend=\"ST_SquareGrid\"/>, <xref "
"linkend=\"ST_TileEnvelope\"/>"
msgstr ""
", <xref linkend=\"ST_MakePoint\"/>, <xref linkend=\"ST_Point\"/>, <xref "
"linkend=\"ST_SRID\"/>"

#. Tag: refname
#: reference_constructor.xml:826
#, no-c-format
msgid "ST_Hexagon"
msgstr ""

#. Tag: refpurpose
#: reference_constructor.xml:827
#, no-c-format
msgid ""
"Returns a single hexagon, using the provided edge size and cell coordinate "
"within the hexagon grid space."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:833
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_Hexagon</function></funcdef> "
"<paramdef><type>float8</type> <parameter>size</parameter></paramdef> "
"<paramdef><type>integer</type> <parameter>cell_i</parameter></paramdef> "
"<paramdef><type>integer</type> <parameter>cell_j</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>geometry</type> <parameter>origin</"
"parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
"<paramdef><type>double precision</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>z</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>m</parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:846
#, no-c-format
msgid ""
"Uses the same hexagon tiling concept as <xref linkend=\"ST_HexagonGrid\"/>, "
"but generates just one hexagon at the desired cell coordinate. Optionally, "
"can adjust origin coordinate of the tiling, the default origin is at 0,0."
msgstr ""

#. Tag: para
#: reference_constructor.xml:849
#, no-c-format
msgid ""
"Hexagons are generated with no SRID set, so use <xref linkend=\"ST_SetSRID\"/"
"> to set the SRID to the one you expect."
msgstr ""

#. Tag: title
#: reference_constructor.xml:855
#, no-c-format
msgid "Example: Creating a hexagon at the origin"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:856
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_SetSRID(ST_Hexagon(1.0, 0, 0), 3857));\n"
"\n"
"POLYGON((-1 0,-0.5\n"
"         -0.866025403784439,0.5\n"
"         -0.866025403784439,1\n"
"         0,0.5\n"
"         0.866025403784439,-0.5\n"
"         0.866025403784439,-1 0))"
msgstr ""

#. Tag: para
#: reference_constructor.xml:860
#, fuzzy, no-c-format
msgid ", <xref linkend=\"ST_HexagonGrid\"/>, <xref linkend=\"ST_Square\"/>"
msgstr ", <xref linkend=\"ST_MakePoint\"/>, <xref linkend=\"ST_SetSRID\"/>"

#. Tag: refname
#: reference_constructor.xml:866
#, no-c-format
msgid "ST_SquareGrid"
msgstr ""

#. Tag: refpurpose
#: reference_constructor.xml:867
#, no-c-format
msgid ""
"Returns a set of grid squares and cell indices that completely cover the "
"bounds of the geometry argument."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:872
#, fuzzy, no-c-format
msgid ""
"<funcdef>setof record <function>ST_SquareGrid</function></funcdef> "
"<paramdef><type>float8</type> <parameter>size</parameter></paramdef> "
"<paramdef><type>geometry</type> <parameter>bounds</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_Point</function></funcdef> "
"<paramdef><type>float </type> <parameter>x_lon</parameter></paramdef> "
"<paramdef><type>float </type> <parameter>y_lat</parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:883
#, no-c-format
msgid ""
"Starts with the concept of a square tiling of the plane. For a given planar "
"SRS, and a given edge size, starting at the origin of the SRS, there is one "
"unique square tiling of the plane, Tiling(SRS, Size). This function answers "
"the question: what grids in a given Tiling(SRS, Size) overlap with a given "
"bounds."
msgstr ""

#. Tag: para
#: reference_constructor.xml:889
#, no-c-format
msgid ""
"The SRS for the output squares is the SRS provided by the bounds geometry."
msgstr ""

#. Tag: para
#: reference_constructor.xml:890
#, no-c-format
msgid ""
"Doubling or edge size of the square generates a new parent tiling that "
"perfectly fits with the original tiling. Standard web map tilings in "
"mercator are just powers-of-two square grids in the mercator plane."
msgstr ""

#. Tag: title
#: reference_constructor.xml:899
#, fuzzy, no-c-format
msgid "Example: Generating a 1 degree grid for a country"
msgstr "예시: 경계 상자 폴리곤을 빌드하기"

#. Tag: para
#: reference_constructor.xml:900
#, no-c-format
msgid ""
"The grid will fill the whole bounds of the country, so if you want just "
"squares that touch the country you will have to filter afterwards with "
"ST_Intersects."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:902
#, no-c-format
msgid ""
"WITH grid AS (\n"
"SELECT (ST_SquareGrid(1, ST_Transform(geom,4326))).*\n"
"FROM admin0 WHERE name = 'Canada'\n"
")\n"
"  SELEcT ST_AsText(geom)\n"
"  FROM grid"
msgstr ""

#. Tag: title
#: reference_constructor.xml:906
#, fuzzy, no-c-format
msgid "Example: Counting points in squares (using single chopped grid)"
msgstr "예시: 배열 버전 사용하기"

#. Tag: para
#: reference_constructor.xml:907
#, no-c-format
msgid ""
"To do a point summary against a square tiling, generate a square grid using "
"the extent of the points as the bounds, then spatially join to that grid. "
"Note the estimated extent might be off from actual extent, so be cautious "
"and at very least make sure you've analyzed your table."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:909
#, no-c-format
msgid ""
"SELECT COUNT(*), squares.geom\n"
"    FROM\n"
"    pointtable AS pts\n"
"    INNER JOIN\n"
"    ST_SquareGrid(\n"
"        1000,\n"
"        ST_SetSRID(ST_EstimatedExtent('pointtable', 'geom'), 3857)\n"
"    ) AS squares\n"
"    ON ST_Intersects(pts.geom, squares.geom)\n"
"    GROUP BY squares.geom"
msgstr ""

#. Tag: title
#: reference_constructor.xml:913
#, fuzzy, no-c-format
msgid "Example: Counting points in squares using set of grid per point"
msgstr "예시: 배열 버전 사용하기"

#. Tag: para
#: reference_constructor.xml:914
#, no-c-format
msgid ""
"This yields the same result as the first example but will be slower for a "
"large number of points"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:915
#, no-c-format
msgid ""
"SELECT COUNT(*), squares.geom\n"
"    FROM\n"
"    pointtable AS pts\n"
"    INNER JOIN\n"
"    ST_SquareGrid(\n"
"        1000,\n"
"       pts.geom\n"
"    ) AS squares\n"
"    ON ST_Intersects(pts.geom, squares.geom)\n"
"    GROUP BY squares.geom"
msgstr ""

#. Tag: para
#: reference_constructor.xml:920
#, fuzzy, no-c-format
msgid ""
", <xref linkend=\"ST_HexagonGrid\"/> , <xref linkend=\"ST_EstimatedExtent\"/"
"> , <xref linkend=\"ST_SetSRID\"/>"
msgstr ""
", <xref linkend=\"ST_Point\"/>, <xref linkend=\"ST_SetSRID\"/>, <xref "
"linkend=\"ST_SRID\"/>"

#. Tag: refname
#: reference_constructor.xml:928
#, no-c-format
msgid "ST_Square"
msgstr ""

#. Tag: refpurpose
#: reference_constructor.xml:929
#, no-c-format
msgid ""
"Returns a single square, using the provided edge size and cell coordinate "
"within the square grid space."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:935
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_Square</function></funcdef> "
"<paramdef><type>float8</type> <parameter>size</parameter></paramdef> "
"<paramdef><type>integer</type> <parameter>cell_i</parameter></paramdef> "
"<paramdef><type>integer</type> <parameter>cell_j</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>geometry</type> <parameter>origin</"
"parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
"<paramdef><type>double precision</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>z</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>m</parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:948
#, no-c-format
msgid ""
"Uses the same square tiling concept as <xref linkend=\"ST_SquareGrid\"/>, "
"but generates just one square at the desired cell coordinate. Optionally, "
"can adjust origin coordinate of the tiling, the default origin is at 0,0."
msgstr ""

#. Tag: para
#: reference_constructor.xml:951
#, no-c-format
msgid ""
"Squares are generated with no SRID set, so use <xref linkend=\"ST_SetSRID\"/"
"> to set the SRID to the one you expect."
msgstr ""

#. Tag: title
#: reference_constructor.xml:957
#, no-c-format
msgid "Example: Creating a square at the origin"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:958
#, fuzzy, no-c-format
msgid ""
"SELECT ST_AsText(ST_SetSRID(ST_Square(1.0, 0, 0), 3857));\n"
"\n"
" POLYGON((0 0,0 1,1 1,1 0,0 0))"
msgstr ""
"SELECT ST_AsText(ST_MakeEnvelope(10, 10, 11, 11, 4326));\n"
"\n"
"st_asewkt\n"
"-----------\n"
"POLYGON((10 10, 10 11, 11 11, 11 10, 10 10))"

#. Tag: para
#: reference_constructor.xml:962
#, fuzzy, no-c-format
msgid ", <xref linkend=\"ST_SquareGrid\"/>, <xref linkend=\"ST_Hexagon\"/>"
msgstr ", <xref linkend=\"ST_MakeLine\"/>, <xref linkend=\"ST_MakePolygon\"/>"

#. Tag: refname
#: reference_constructor.xml:970
#, no-c-format
msgid "ST_Letters"
msgstr ""

#. Tag: refpurpose
#: reference_constructor.xml:971
#, no-c-format
msgid ""
"Returns the input letters rendered as geometry with a default start position "
"at the origin and default text height of 100."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:975
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_Letters</function></funcdef> "
"<paramdef><type>text</type> <parameter> letters</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>json</type> <parameter> font</parameter></"
"paramdef>"
msgstr ""

#. Tag: para
#: reference_constructor.xml:986
#, no-c-format
msgid ""
"Uses a built-in font to render out a string as a multipolygon geometry. The "
"default text height is 100.0, the distance from the bottom of a descender to "
"the top of a capital. The default start position places the start of the "
"baseline at the origin. Over-riding the font involves passing in a json map, "
"with a character as the key, and base64 encoded TWKB for the font shape, "
"with the fonts having a height of 1000 units from the bottom of the "
"descenders to the tops of the capitals."
msgstr ""

#. Tag: para
#: reference_constructor.xml:989
#, no-c-format
msgid ""
"The text is generated at the origin by default, so to reposition and resize "
"the text, first apply the <code>ST_Scale</code> function and then apply the "
"<code>ST_Translate</code> function."
msgstr ""

#. Tag: para
#: reference_constructor.xml:991
#, fuzzy, no-c-format
msgid "Availability: 3.3.0"
msgstr "2.1.0 버전부터 사용할 수 있습니다."

#. Tag: title
#: reference_constructor.xml:995
#, fuzzy, no-c-format
msgid "Example: Generating the word 'Yo'"
msgstr "예시: 경계 상자 폴리곤을 빌드하기"

#. Tag: programlisting
#: reference_constructor.xml:996
#, no-c-format
msgid "SELECT ST_AsText(ST_Letters('Yo'), 1);"
msgstr ""

#. Tag: para
#: reference_constructor.xml:1002
#, no-c-format
msgid "Letters generated by ST_Letters"
msgstr ""

#. Tag: title
#: reference_constructor.xml:1007
#, no-c-format
msgid "Example: Scaling and moving words"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:1008
#, no-c-format
msgid "SELECT ST_Translate(ST_Scale(ST_Letters('Yo'), 10, 10), 100,100);"
msgstr ""

#. Tag: para
#: reference_constructor.xml:1012
#, no-c-format
msgid ", <xref linkend=\"ST_Scale\"/>, <xref linkend=\"ST_Translate\"/>"
msgstr ""

#, fuzzy
#~ msgid ""
#~ "<funcdef>geometry <function>ST_Letters</function></funcdef> "
#~ "<paramdef><type>text</type> <parameter> letters</parameter></paramdef> "
#~ "<paramdef choice=\"opt\"><type>double precision</type> <parameter> "
#~ "text_height=100.0</parameter></paramdef> <paramdef choice=\"opt"
#~ "\"><type>geometry</type> <parameter> start_position=POINT(0 0)</"
#~ "parameter></paramdef> <paramdef choice=\"opt\"><type>json</type> "
#~ "<parameter> font</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
#~ "<paramdef><type>double precision</type> <parameter>x</parameter></"
#~ "paramdef> <paramdef><type>double precision</type> <parameter>y</"
#~ "parameter></paramdef> <paramdef><type>double precision</type> "
#~ "<parameter>z</parameter></paramdef> <paramdef><type>double precision</"
#~ "type> <parameter>m</parameter></paramdef>"

#~ msgid ""
#~ ", <xref linkend=\"ST_MakePoint\"/>, <xref linkend=\"ST_SetSRID\"/>, <xref "
#~ "linkend=\"ST_Transform\"/>"
#~ msgstr ""
#~ ", <xref linkend=\"ST_MakePoint\"/>, <xref linkend=\"ST_SetSRID\"/>, <xref "
#~ "linkend=\"ST_Transform\"/>"

#, fuzzy
#~ msgid ""
#~ "Create a set of province boundaries with holes representing lakes. The "
#~ "input is a table of province Polygons/MultiPolygons and a table of water "
#~ "linestrings. Using a LEFT JOIN ensures all provinces are included even if "
#~ "they have no lakes."
#~ msgstr ""
#~ "지역 폴리곤/멀티폴리곤과 수변 라인스트링의 집합으로부터 지역 내에 있는 호"
#~ "수를 표현하는 구멍들을 가진 지역 경계선을 빌드해봅시다. 이 예시에서는 "
#~ "PostGIS ST_Accum 함수를 사용합니다."

#, fuzzy
#~ msgid "Availability: 3.1"
#~ msgstr "2.1.0 버전부터 사용할 수 있습니다."

#, fuzzy
#~ msgid ", <xref linkend=\"ST_SquareGrid\"/>"
#~ msgstr ", <xref linkend=\"ST_AsKML\"/>"

#, fuzzy
#~ msgid ", <xref linkend=\"ST_HexagonGrid\"/>"
#~ msgstr ", <xref linkend=\"ST_AsBinary\"/>"

#~ msgid "ST_BdPolyFromText"
#~ msgstr "ST_BdPolyFromText"

#~ msgid ""
#~ "<refpurpose>Construct a Polygon given an arbitrary collection of closed "
#~ "linestrings as a MultiLineString Well-Known text representation.</"
#~ "refpurpose>"
#~ msgstr ""
#~ "<refpurpose>멀티라인스트링 WKT 텍스트 표현식으로 주어진 임의의 폐쇄형 라인"
#~ "스트링 집합으로 폴리곤을 작성합니다.</refpurpose>"

#~ msgid ""
#~ "<funcdef>geometry <function>ST_BdPolyFromText</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>WKT</parameter></paramdef> "
#~ "<paramdef><type>integer </type> <parameter>srid</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_BdPolyFromText</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>WKT</parameter></paramdef> "
#~ "<paramdef><type>integer </type> <parameter>srid</parameter></paramdef>"

#~ msgid ""
#~ "<para>Construct a Polygon given an arbitrary collection of closed "
#~ "linestrings as a MultiLineString Well-Known text representation.</para>"
#~ msgstr ""
#~ "<para>멀티라인스트링 WKT 텍스트 표현식으로 주어진 임의의 폐쇄형 라인스트"
#~ "링 집합으로 폴리곤을 작성합니다.</para>"

#~ msgid ""
#~ "Throws an error if WKT is not a MULTILINESTRING. Throws an error if "
#~ "output is a MULTIPOLYGON; use ST_BdMPolyFromText in that case, or see "
#~ "ST_BuildArea() for a postgis-specific approach."
#~ msgstr ""
#~ "WKT가 멀티라인스트링이 아닐 경우 오류가 발생합니다. 출력물이 멀티폴리곤일 "
#~ "경우 오류가 발생하는데 이런 경우 ST_BdMPolyFromText를 사용하거나, 또는 "
#~ "PostGIS 특화 접근법을 사용하려면 ST_BuildArea()를 참조하십시오."

#~ msgid "&sfs_compliant; s3.2.6.2"
#~ msgstr "&sfs_compliant; s3.2.6.2"

#~ msgid "Availability: 1.1.0 - requires GEOS &gt;= 2.1.0."
#~ msgstr ""
#~ "1.1.0 버전부터 사용할 수 있습니다. GEOS 2.1.0 이상 버전이 필요합니다."

#~ msgid "Forthcoming"
#~ msgstr "작성중"

#~ msgid ", <xref linkend=\"ST_BdMPolyFromText\"/>"
#~ msgstr ", <xref linkend=\"ST_BdMPolyFromText\"/>"

#~ msgid "ST_BdMPolyFromText"
#~ msgstr "ST_BdMPolyFromText"

#~ msgid ""
#~ "Construct a MultiPolygon given an arbitrary collection of closed "
#~ "linestrings as a MultiLineString text representation Well-Known text "
#~ "representation."
#~ msgstr ""
#~ "멀티라인스트링 WKT 텍스트 표현식으로 주어진 임의의 폐쇄형 라인스트링 집합"
#~ "으로 멀티폴리곤을 작성합니다."

#~ msgid ""
#~ "<funcdef>geometry <function>ST_BdMPolyFromText</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>WKT</parameter></paramdef> "
#~ "<paramdef><type>integer </type> <parameter>srid</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_BdMPolyFromText</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>WKT</parameter></paramdef> "
#~ "<paramdef><type>integer </type> <parameter>srid</parameter></paramdef>"

#~ msgid ""
#~ "Construct a Polygon given an arbitrary collection of closed linestrings, "
#~ "polygons, MultiLineStrings as Well-Known text representation."
#~ msgstr ""
#~ "멀티라인스트링 WKT 텍스트 표현식으로 주어진 임의의 폐쇄형 라인스트링 집합"
#~ "으로 멀티폴리곤을 작성합니다."

#~ msgid ""
#~ "Throws an error if WKT is not a MULTILINESTRING. Forces MULTIPOLYGON "
#~ "output even when result is really only composed by a single POLYGON; use "
#~ "<link linkend=\"ST_BdPolyFromText\">ST_BdPolyFromText</link> if you're "
#~ "sure a single POLYGON will result from operation, or see <link linkend="
#~ "\"ST_BuildArea\">ST_BuildArea()</link> for a postgis-specific approach."
#~ msgstr ""
#~ "WKT가 멀티라인스트링이 아닐 경우 오류가 발생합니다. 출력물이 단일 폴리곤으"
#~ "로 이루어졌을 경우에도 멀티폴리곤으로 강제합니다. 해당 연산시 단일 폴리곤"
#~ "을 출력할 것이라고 확신한다면 <link linkend=\"ST_BdPolyFromText"
#~ "\">ST_BdPolyFromText</link> 를 사용하거나, 또는 PostGIS 특화 접근법을 사용"
#~ "하려 할 경우 <link linkend=\"ST_BuildArea\">ST_BuildArea()</link> 를 참조"
#~ "하십시오."

#~ msgid ", <xref linkend=\"ST_BdPolyFromText\"/>"
#~ msgstr ", <xref linkend=\"ST_BdPolyFromText\"/>"

#~ msgid "ST_Box2dFromGeoHash"
#~ msgstr "ST_Box2dFromGeoHash"

#~ msgid "<refpurpose>Return a BOX2D from a GeoHash string.</refpurpose>"
#~ msgstr "<refpurpose>GeoHash 스트링으로부터 BOX2D를 반환합니다.</refpurpose>"

#~ msgid ""
#~ "<funcdef>box2d <function>ST_Box2dFromGeoHash</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>geohash</parameter></paramdef> "
#~ "<paramdef choice=\"opt\"><type>integer </type> "
#~ "<parameter>precision=full_precision_of_geohash</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>box2d <function>ST_Box2dFromGeoHash</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>geohash</parameter></paramdef> "
#~ "<paramdef choice=\"opt\"><type>integer </type> "
#~ "<parameter>precision=full_precision_of_geohash</parameter></paramdef>"

#~ msgid "<para>Return a BOX2D from a GeoHash string.</para>"
#~ msgstr "<para>GeoHash 스트링으로부터 BOX2D를 반환합니다.</para>"

#~ msgid ""
#~ "If no <varname>precision</varname> is specficified ST_Box2dFromGeoHash "
#~ "returns a BOX2D based on full precision of the input GeoHash string."
#~ msgstr ""
#~ "<varname>precision</varname> 을 설정하지 않은 경우, ST_Box2dFromGeoHash가 "
#~ "입력 GeoHash 스트링의 전체 정확도를 기반으로 BOX2D를 반환합니다."

#~ msgid ""
#~ "If <varname>precision</varname> is specified ST_Box2dFromGeoHash will use "
#~ "that many characters from the GeoHash to create the BOX2D. Lower "
#~ "precision values results in larger BOX2Ds and larger values increase the "
#~ "precision."
#~ msgstr ""
#~ "<varname>precision</varname> 을 설정한 경우, ST_Box2dFromGeoHash가 GeoHash"
#~ "에서 나온 그만큼의 문자를 이용해서 BOX2D를 생성합니다. 정확도 값이 낮을수"
#~ "록 BOX2D의 용량이 커지고 값이 높을수록 정확도가 올라갑니다."

#~ msgid ""
#~ "<![CDATA[SELECT ST_Box2dFromGeoHash('9qqj7nmxncgyy4d0dbxqz0');\n"
#~ "\n"
#~ "                st_geomfromgeohash\n"
#~ "--------------------------------------------------\n"
#~ " BOX(-115.172816 36.114646,-115.172816 36.114646)\n"
#~ "\n"
#~ "SELECT ST_Box2dFromGeoHash('9qqj7nmxncgyy4d0dbxqz0', 0);\n"
#~ "\n"
#~ " st_box2dfromgeohash\n"
#~ "----------------------\n"
#~ " BOX(-180 -90,180 90)\n"
#~ "\n"
#~ " SELECT ST_Box2dFromGeoHash('9qqj7nmxncgyy4d0dbxqz0', 10);\n"
#~ "                            st_box2dfromgeohash\n"
#~ "---------------------------------------------------------------------------\n"
#~ " BOX(-115.17282128334 36.1146408319473,-115.172810554504 "
#~ "36.1146461963654)\n"
#~ "                ]]>"
#~ msgstr ""
#~ "<![CDATA[SELECT ST_Box2dFromGeoHash('9qqj7nmxncgyy4d0dbxqz0');\n"
#~ "\n"
#~ "                st_geomfromgeohash\n"
#~ "--------------------------------------------------\n"
#~ " BOX(-115.172816 36.114646,-115.172816 36.114646)\n"
#~ "\n"
#~ "SELECT ST_Box2dFromGeoHash('9qqj7nmxncgyy4d0dbxqz0', 0);\n"
#~ "\n"
#~ " st_box2dfromgeohash\n"
#~ "----------------------\n"
#~ " BOX(-180 -90,180 90)\n"
#~ "\n"
#~ " SELECT ST_Box2dFromGeoHash('9qqj7nmxncgyy4d0dbxqz0', 10);\n"
#~ "                            st_box2dfromgeohash\n"
#~ "---------------------------------------------------------------------------\n"
#~ " BOX(-115.17282128334 36.1146408319473,-115.172810554504 "
#~ "36.1146461963654)\n"
#~ "                ]]>"

#~ msgid ""
#~ ", <xref linkend=\"ST_GeomFromGeoHash\"/>, <xref linkend="
#~ "\"ST_PointFromGeoHash\"/>"
#~ msgstr ""
#~ ", <xref linkend=\"ST_GeomFromGeoHash\"/>, <xref linkend="
#~ "\"ST_PointFromGeoHash\"/>"

#~ msgid "ST_GeogFromText"
#~ msgstr "ST_GeogFromText"

#~ msgid ""
#~ "Return a specified geography value from Well-Known Text representation or "
#~ "extended (WKT)."
#~ msgstr "WKT (확장) 표현식으로부터 지정된 지리형 값을 반환합니다."

#~ msgid ""
#~ "<funcdef>geography <function>ST_GeogFromText</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>EWKT</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geography <function>ST_GeogFromText</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>EWKT</parameter></paramdef>"

#~ msgid ""
#~ "Returns a geography object from the well-known text or extended well-"
#~ "known representation. SRID 4326 is assumed if unspecified. This is an "
#~ "alias for ST_GeographyFromText. Points are always expressed in long lat "
#~ "form."
#~ msgstr ""
#~ "WKT 표현식 또는 확장 WKT 표현식으로부터 지리형 객체를 반환합니다.  투영체"
#~ "를 따로 설정하지 않은 경우 SRID 4326으로 가정합니다. 이 함수는 "
#~ "ST_GeographyFromText와 동일합니다. 포인트는 항상 경위도 형식으로 표현됩니"
#~ "다."

#~ msgid ""
#~ "--- converting lon lat coords to geography\n"
#~ "ALTER TABLE sometable ADD COLUMN geog geography(POINT,4326);\n"
#~ "UPDATE sometable SET geog = ST_GeogFromText('SRID=4326;POINT(' || lon || "
#~ "' ' || lat || ')');\n"
#~ "\n"
#~ "--- specify a geography point using EPSG:4267, NAD27\n"
#~ "SELECT ST_AsEWKT(ST_GeogFromText('SRID=4267;POINT(-77.0092 38.889588)'));"
#~ msgstr ""
#~ "--- 경위도 좌표를 지리형으로 변환하기\n"
#~ "ALTER TABLE sometable ADD COLUMN geog geography(POINT,4326);\n"
#~ "UPDATE sometable SET geog = ST_GeogFromText('SRID=4326;POINT(' || lon || "
#~ "' ' || lat || ')');\n"
#~ "\n"
#~ "--- EPSG:4267, NAD27을 이용해서 지리형 포인트를 지정하기\n"
#~ "SELECT ST_AsEWKT(ST_GeogFromText('SRID=4267;POINT(-77.0092 38.889588)'));"

#~ msgid ", <xref linkend=\"ST_GeographyFromText\"/>"
#~ msgstr ", <xref linkend=\"ST_GeographyFromText\"/>"

#~ msgid "ST_GeographyFromText"
#~ msgstr "ST_GeographyFromText"

#~ msgid ""
#~ "<funcdef>geography <function>ST_GeographyFromText</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>EWKT</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geography <function>ST_GeographyFromText</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>EWKT</parameter></paramdef>"

#~ msgid ""
#~ "Returns a geography object from the well-known text representation. SRID "
#~ "4326 is assumed if unspecified."
#~ msgstr ""
#~ "WKT 표현식으로부터 지리형 객체를 반환합니다.  투영체를 따로 설정하지 않은 "
#~ "경우 SRID 4326으로 가정합니다."

#~ msgid ", <xref linkend=\"ST_AsText\"/>"
#~ msgstr ", <xref linkend=\"ST_AsText\"/>"

#~ msgid "ST_GeogFromWKB"
#~ msgstr "ST_GeogFromWKB"

#~ msgid ""
#~ "Creates a geography instance from a Well-Known Binary geometry "
#~ "representation (WKB) or extended Well Known Binary (EWKB)."
#~ msgstr ""
#~ "WKB 도형 표현식 또는 EWKB(확장 WKB)로부터 지리형 인스턴스를 생성합니다."

#~ msgid ""
#~ "<funcdef>geography <function>ST_GeogFromWKB</function></funcdef> "
#~ "<paramdef><type>bytea </type> <parameter>wkb</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geography <function>ST_GeogFromWKB</function></funcdef> "
#~ "<paramdef><type>bytea </type> <parameter>wkb</parameter></paramdef>"

#~ msgid ""
#~ "The <varname>ST_GeogFromWKB</varname> function, takes a well-known binary "
#~ "representation (WKB) of a geometry or PostGIS Extended WKB and creates an "
#~ "instance of the appropriate geography type. This function plays the role "
#~ "of the Geometry Factory in SQL."
#~ msgstr ""
#~ "<varname>ST_GeogFromWKB</varname> 함수는 도형의 WKB 표현식 또는 PostGIS 확"
#~ "장 WKB를 받아 적절한 지리형 유형의 인스턴스를 생성합니다. 이 함수는 SQL에"
#~ "서 도형 공장(Geometry Factory) 역할을 합니다."

#~ msgid "If SRID is not specified, it defaults to 4326 (WGS 84 long lat)."
#~ msgstr "SRID를 설정하지 않은 경우, 기본값으로 4326(WGS84 경위도)을 씁니다."

#~ msgid ""
#~ "--Although bytea rep contains single \\, these need to be escaped when "
#~ "inserting into a table\n"
#~ "SELECT ST_AsText(\n"
#~ "ST_GeogFromWKB(E'\\\\001\\\\002\\\\000\\\\000\\\\000\\\\002\\\\000\\"
#~ "\\000\\\\000\\\\037\\\\205\\\\353Q\\\\270~\\\\\\\\\\\\300\\\\323Mb\\\\020X"
#~ "\\\\231C@\\\\020X9\\\\264\\\\310~\\\\\\\\\\\\300)\\\\\\\\\\\\217\\\\302\\"
#~ "\\365\\\\230C@')\n"
#~ ");\n"
#~ "                                          st_astext\n"
#~ "------------------------------------------------------\n"
#~ " LINESTRING(-113.98 39.198,-113.981 39.195)\n"
#~ "(1 row)"
#~ msgstr ""
#~ "-- bytea 표현식이 단일한 역슬래시(\\)를 포함하긴 해도, 테이블 삽입시에는 "
#~ "빼놓아야 합니다.\n"
#~ "SELECT ST_AsText(\n"
#~ "ST_GeogFromWKB(E'\\\\001\\\\002\\\\000\\\\000\\\\000\\\\002\\\\000\\"
#~ "\\000\\\\000\\\\037\\\\205\\\\353Q\\\\270~\\\\\\\\\\\\300\\\\323Mb\\\\020X"
#~ "\\\\231C@\\\\020X9\\\\264\\\\310~\\\\\\\\\\\\300)\\\\\\\\\\\\217\\\\302\\"
#~ "\\365\\\\230C@')\n"
#~ ");\n"
#~ "                                          st_astext\n"
#~ "------------------------------------------------------\n"
#~ " LINESTRING(-113.98 39.198,-113.981 39.195)\n"
#~ "(1 row)"

#~ msgid "ST_GeomFromTWKB"
#~ msgstr "ST_GeomFromTWKB"

#~ msgid ""
#~ "Creates a geometry instance from a TWKB (\"<ulink url=\"https://github."
#~ "com/TWKB/Specification/blob/master/twkb.md\">Tiny Well-Known Binary</"
#~ "ulink>\") geometry representation."
#~ msgstr ""
#~ "TWKB(\"<ulink url=\"https://github.com/TWKB/Specification/blob/master/"
#~ "twkb.md\">Tiny Well-Known Binary</ulink>\") 도형 표현식으로부터 도형 인스"
#~ "턴스를 생성합니다."

#~ msgid ""
#~ "<funcdef>geometry <function>ST_GeomFromTWKB</function></funcdef> "
#~ "<paramdef><type>bytea </type> <parameter>twkb</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_GeomFromTWKB</function></funcdef> "
#~ "<paramdef><type>bytea </type> <parameter>twkb</parameter></paramdef>"

#~ msgid ""
#~ "The <varname>ST_GeomFromTWKB</varname> function, takes a a TWKB (\"<ulink "
#~ "url=\"https://github.com/TWKB/Specification/blob/master/twkb.md\">Tiny "
#~ "Well-Known Binary</ulink>\") geometry representation (WKB) and creates an "
#~ "instance of the appropriate geometry type."
#~ msgstr ""
#~ "<varname>ST_GeomFromTWKB</varname> 함수는 TWKB(\"<ulink url=\"https://"
#~ "github.com/TWKB/Specification/blob/master/twkb.md\">Tiny Well-Known "
#~ "Binary</ulink>\") 도형 표현식(WKB)을 받아 적절한 도형 유형의 인스턴스를 생"
#~ "성합니다."

#~ msgid ""
#~ "SELECT ST_AsText(ST_GeomFromTWKB(ST_AsTWKB('LINESTRING(126 34, 127 35)'::"
#~ "geometry)));\n"
#~ "\n"
#~ "         st_astext\n"
#~ "-----------------------------\n"
#~ " LINESTRING(126 34, 127 35)\n"
#~ "(1 row)\n"
#~ "\n"
#~ "\n"
#~ "SELECT ST_AsEWKT(\n"
#~ "  ST_GeomFromTWKB(E'\\\\x620002f7f40dbce4040105')\n"
#~ ");\n"
#~ "                                          st_asewkt\n"
#~ "------------------------------------------------------\n"
#~ "LINESTRING(-113.98 39.198,-113.981 39.195)\n"
#~ "(1 row)"
#~ msgstr ""
#~ "SELECT ST_AsText(ST_GeomFromTWKB(ST_AsTWKB('LINESTRING(126 34, 127 35)'::"
#~ "geometry)));\n"
#~ "\n"
#~ "         st_astext\n"
#~ "-----------------------------\n"
#~ " LINESTRING(126 34, 127 35)\n"
#~ "(1 row)\n"
#~ "\n"
#~ "\n"
#~ "SELECT ST_AsEWKT(\n"
#~ "  ST_GeomFromTWKB(E'\\\\x620002f7f40dbce4040105')\n"
#~ ");\n"
#~ "                                          st_asewkt\n"
#~ "------------------------------------------------------\n"
#~ "LINESTRING(-113.98 39.198,-113.981 39.195)\n"
#~ "(1 row)"

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_GeomCollFromText</"
#~ "function></funcdef> <paramdef><type>text </type> <parameter>WKT</"
#~ "parameter></paramdef> <paramdef><type>integer </type> <parameter>srid</"
#~ "parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_GeomCollFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_GeomCollFromText</"
#~ "function></funcdef> <paramdef><type>text </type> <parameter>WKT</"
#~ "parameter></paramdef> <paramdef><type>integer </type> <parameter>srid</"
#~ "parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_GeomCollFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> </funcprototype>"

#~ msgid "OGC SPEC 3.2.6.2 - option SRID is from the conformance suite"
#~ msgstr ""
#~ "OGC 사양 3.2.6.2 - 선택적인 SRID를 적합성 스위트(conformance suite)로부터 "
#~ "가져오십시오."

#~ msgid "Returns null if the WKT is not a GEOMETRYCOLLECTION"
#~ msgstr "WKT가 도형 집합(GEOMETRYCOLLECTION)이 아닌 경우 null을 반환합니다."

#~ msgid ""
#~ "If you are absolutely sure all your WKT geometries are collections, don't "
#~ "use this function. It is slower than ST_GeomFromText since it adds an "
#~ "additional validation step."
#~ msgstr ""
#~ "사용자 WKT 도형이 모두 집합이라고 확신한다면, 이 함수를 사용하지 마십시"
#~ "오. 이 함수는 추가적인 유효성 검사 단계를 거치므로 ST_GeomFromText보다 느"
#~ "립니다."

#~ msgid "&sqlmm_compliant;"
#~ msgstr "&sqlmm_compliant;"

#~ msgid ""
#~ "SELECT ST_GeomCollFromText('GEOMETRYCOLLECTION(POINT(1 2),LINESTRING(1 2, "
#~ "3 4))');"
#~ msgstr ""
#~ "SELECT ST_GeomCollFromText('GEOMETRYCOLLECTION(POINT(1 2),LINESTRING(1 2, "
#~ "3 4))');"

#~ msgid ", <xref linkend=\"ST_SRID\"/>"
#~ msgstr ", <xref linkend=\"ST_SRID\"/>"

#~ msgid "ST_GeomFromEWKB"
#~ msgstr "ST_GeomFromEWKB"

#~ msgid ""
#~ "Return a specified ST_Geometry value from Extended Well-Known Binary "
#~ "representation (EWKB)."
#~ msgstr ""
#~ "EWKB(Extended Well-Known Binary)로부터 지정된 ST_Geometry 값을 반환합니다."

#~ msgid ""
#~ "<funcdef>geometry <function>ST_GeomFromEWKB</function></funcdef> "
#~ "<paramdef><type>bytea </type> <parameter>EWKB</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_GeomFromEWKB</function></funcdef> "
#~ "<paramdef><type>bytea </type> <parameter>EWKB</parameter></paramdef>"

#~ msgid ""
#~ "Constructs a PostGIS ST_Geometry object from the OGC Extended Well-Known "
#~ "binary (EWKT) representation."
#~ msgstr ""
#~ "OGC EWKB(Extended Well-Known Binary) 표현식으로부터 PostGIS ST_Geometry 객"
#~ "체를 작성합니다."

#~ msgid ""
#~ "The EWKB format is not an OGC standard, but a PostGIS specific format "
#~ "that includes the spatial reference system (SRID) identifier"
#~ msgstr ""
#~ "EWKB 형식이 OGC 표준은 아니지만, SRID(공간 참조 시스템 식별자)를 포함하는 "
#~ "PostGIS 특화 형식입니다."

#~ msgid ""
#~ "Enhanced: 2.0.0 support for Polyhedral surfaces and TIN was introduced."
#~ msgstr ""
#~ "개선 사항: 2.0.0 버전부터 다면체 표면(polyhedral surface) 및 TIN을 지원합"
#~ "니다."

#~ msgid "&P_support;"
#~ msgstr "&P_support;"

#~ msgid "&T_support;"
#~ msgstr "&T_support;"

#~ msgid ""
#~ "line string binary rep 0f LINESTRING(-71.160281 42.258729,-71.160837 "
#~ "42.259113,-71.161144 42.25932) in NAD 83 long lat (4269)."
#~ msgstr ""
#~ "NAD83 경위도(SRID 4269)로 투영된 LINESTRING(-71.160281 "
#~ "42.258729,-71.160837 42.259113,-71.161144 42.25932)의 라인스트링 바이너리 "
#~ "표현식"

#~ msgid ""
#~ "NOTE: Even though byte arrays are delimited with \\ and may have ', we "
#~ "need to escape both out with \\ and '' if standard_conforming_strings is "
#~ "off. So it does not look exactly like its AsEWKB representation."
#~ msgstr ""
#~ "주의: 바이트 배열이 역슬래시(\\)로 구분되고 작은따옴표(')를 가지고 있을 수"
#~ "도 있지만, standard_conforming_strings가 비활성화돼 있을 경우 \\ 및 \" 둘 "
#~ "다 빼놓아야 합니다. 그래야만 AsEWKB 표현식과 똑같이 보이지 않기 때문입니"
#~ "다."

#~ msgid ""
#~ "SELECT ST_GeomFromEWKB(E'\\\\001\\\\002\\\\000\\\\000 \\\\255\\\\020\\"
#~ "\\000\\\\000\\\\003\\\\000\\\\000\\\\000\\\\344J=\n"
#~ "\\\\013B\\\\312Q\\\\300n\\\\303(\\\\010\\\\036!E@''\\\\277E''K\n"
#~ "\\\\312Q\\\\300\\\\366{b\\\\235*!E@\\\\225|\\\\354.P\\\\312Q\n"
#~ "\\\\300p\\\\231\\\\323e1!E@');"
#~ msgstr ""
#~ "SELECT ST_GeomFromEWKB(E'\\\\001\\\\002\\\\000\\\\000 \\\\255\\\\020\\"
#~ "\\000\\\\000\\\\003\\\\000\\\\000\\\\000\\\\344J=\n"
#~ "\\\\013B\\\\312Q\\\\300n\\\\303(\\\\010\\\\036!E@''\\\\277E''K\n"
#~ "\\\\312Q\\\\300\\\\366{b\\\\235*!E@\\\\225|\\\\354.P\\\\312Q\n"
#~ "\\\\300p\\\\231\\\\323e1!E@');"

#~ msgid ""
#~ "set standard_conforming_strings = on;\n"
#~ "SELECT ST_GeomFromEWKB('\\001\\002\\000\\000 "
#~ "\\255\\020\\000\\000\\003\\000\\000\\000\\344J=\\012\\013B\n"
#~ "    \\312Q\\300n\\303(\\010\\036!E@''\\277E''K\\012\\312Q\\300\\366{b"
#~ "\\235*!E@\\225|\\354.P\\312Q\\012\\300p\\231\\323e1')"
#~ msgstr ""
#~ "set standard_conforming_strings = on;\n"
#~ "SELECT ST_GeomFromEWKB('\\001\\002\\000\\000 "
#~ "\\255\\020\\000\\000\\003\\000\\000\\000\\344J=\\012\\013B\n"
#~ "\\312Q\\300n\\303(\\010\\036!E@''\\277E''K\\012\\312Q\\300\\366{b\\235*!E@"
#~ "\\225|\\354.P\\312Q\\012\\300p\\231\\323e1')"

#~ msgid ", <xref linkend=\"ST_AsEWKB\"/>, <xref linkend=\"ST_GeomFromWKB\"/>"
#~ msgstr ", <xref linkend=\"ST_AsEWKB\"/>, <xref linkend=\"ST_GeomFromWKB\"/>"

#~ msgid "ST_GeomFromEWKT"
#~ msgstr "ST_GeomFromEWKT"

#~ msgid ""
#~ "Return a specified ST_Geometry value from Extended Well-Known Text "
#~ "representation (EWKT)."
#~ msgstr ""
#~ "EWKT(Extended Well-Known Text)로부터 지정된 ST_Geometry 값을 반환합니다."

#~ msgid ""
#~ "<funcdef>geometry <function>ST_GeomFromEWKT</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>EWKT</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_GeomFromEWKT</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>EWKT</parameter></paramdef>"

#~ msgid ""
#~ "Constructs a PostGIS ST_Geometry object from the OGC Extended Well-Known "
#~ "text (EWKT) representation."
#~ msgstr ""
#~ "OGC EWKT(Extended Well-Known Text) 표현식으로부터 PostGIS ST_Geometry 객체"
#~ "를 작성합니다."

#~ msgid ""
#~ "The EWKT format is not an OGC standard, but an PostGIS specific format "
#~ "that includes the spatial reference system (SRID) identifier"
#~ msgstr ""
#~ "EWKT 형식이 OGC 표준은 아니지만, SRID(공간 참조 시스템 식별자)를 포함하는 "
#~ "PostGIS 특화 형식입니다."

#~ msgid ""
#~ "SELECT ST_GeomFromEWKT('SRID=4269;LINESTRING(-71.160281 "
#~ "42.258729,-71.160837 42.259113,-71.161144 42.25932)');\n"
#~ "SELECT ST_GeomFromEWKT('SRID=4269;MULTILINESTRING((-71.160281 "
#~ "42.258729,-71.160837 42.259113,-71.161144 42.25932))');\n"
#~ "\n"
#~ "SELECT ST_GeomFromEWKT('SRID=4269;POINT(-71.064544 42.28787)');\n"
#~ "\n"
#~ "SELECT ST_GeomFromEWKT('SRID=4269;POLYGON((-71.1776585052917 "
#~ "42.3902909739571,-71.1776820268866 42.3903701743239,\n"
#~ "-71.1776063012595 42.3903825660754,-71.1775826583081 "
#~ "42.3903033653531,-71.1776585052917 42.3902909739571))');\n"
#~ "\n"
#~ "SELECT ST_GeomFromEWKT('SRID=4269;MULTIPOLYGON(((-71.1031880899493 "
#~ "42.3152774590236,\n"
#~ "-71.1031627617667 42.3152960829043,-71.102923838298 42.3149156848307,\n"
#~ "-71.1023097974109 42.3151969047397,-71.1019285062273 42.3147384934248,\n"
#~ "-71.102505233663 42.3144722937587,-71.10277487471 42.3141658254797,\n"
#~ "-71.103113945163 42.3142739188902,-71.10324876416 42.31402489987,\n"
#~ "-71.1033002961013 42.3140393340215,-71.1033488797549 42.3139495090772,\n"
#~ "-71.103396240451 42.3138632439557,-71.1041521907712 42.3141153348029,\n"
#~ "-71.1041411411543 42.3141545014533,-71.1041287795912 42.3142114839058,\n"
#~ "-71.1041188134329 42.3142693656241,-71.1041112482575 42.3143272556118,\n"
#~ "-71.1041072845732 42.3143851580048,-71.1041057218871 42.3144430686681,\n"
#~ "-71.1041065602059 42.3145009876017,-71.1041097995362 42.3145589148055,\n"
#~ "-71.1041166403905 42.3146168544148,-71.1041258822717 42.3146748022936,\n"
#~ "-71.1041375307579 42.3147318674446,-71.1041492906949 42.3147711126569,\n"
#~ "-71.1041598612795 42.314808571739,-71.1042515013869 42.3151287620809,\n"
#~ "-71.1041173835118 42.3150739481917,-71.1040809891419 42.3151344119048,\n"
#~ "-71.1040438678912 42.3151191367447,-71.1040194562988 42.3151832057859,\n"
#~ "-71.1038734225584 42.3151140942995,-71.1038446938243 42.3151006300338,\n"
#~ "-71.1038315271889 42.315094347535,-71.1037393329282 42.315054824985,\n"
#~ "-71.1035447555574 42.3152608696313,-71.1033436658644 42.3151648370544,\n"
#~ "-71.1032580383161 42.3152269126061,-71.103223066939 42.3152517403219,\n"
#~ "-71.1031880899493 42.3152774590236)),\n"
#~ "((-71.1043632495873 42.315113108546,-71.1043583974082 42.3151211109857,\n"
#~ "-71.1043443253471 42.3150676015829,-71.1043850704575 "
#~ "42.3150793250568,-71.1043632495873 42.315113108546)))');"
#~ msgstr ""
#~ "SELECT ST_GeomFromEWKT('SRID=4269;LINESTRING(-71.160281 "
#~ "42.258729,-71.160837 42.259113,-71.161144 42.25932)');\n"
#~ "SELECT ST_GeomFromEWKT('SRID=4269;MULTILINESTRING((-71.160281 "
#~ "42.258729,-71.160837 42.259113,-71.161144 42.25932))');\n"
#~ "\n"
#~ "SELECT ST_GeomFromEWKT('SRID=4269;POINT(-71.064544 42.28787)');\n"
#~ "\n"
#~ "SELECT ST_GeomFromEWKT('SRID=4269;POLYGON((-71.1776585052917 "
#~ "42.3902909739571,-71.1776820268866 42.3903701743239,\n"
#~ "-71.1776063012595 42.3903825660754,-71.1775826583081 "
#~ "42.3903033653531,-71.1776585052917 42.3902909739571))');\n"
#~ "\n"
#~ "SELECT ST_GeomFromEWKT('SRID=4269;MULTIPOLYGON(((-71.1031880899493 "
#~ "42.3152774590236,\n"
#~ "-71.1031627617667 42.3152960829043,-71.102923838298 42.3149156848307,\n"
#~ "-71.1023097974109 42.3151969047397,-71.1019285062273 42.3147384934248,\n"
#~ "-71.102505233663 42.3144722937587,-71.10277487471 42.3141658254797,\n"
#~ "-71.103113945163 42.3142739188902,-71.10324876416 42.31402489987,\n"
#~ "-71.1033002961013 42.3140393340215,-71.1033488797549 42.3139495090772,\n"
#~ "-71.103396240451 42.3138632439557,-71.1041521907712 42.3141153348029,\n"
#~ "-71.1041411411543 42.3141545014533,-71.1041287795912 42.3142114839058,\n"
#~ "-71.1041188134329 42.3142693656241,-71.1041112482575 42.3143272556118,\n"
#~ "-71.1041072845732 42.3143851580048,-71.1041057218871 42.3144430686681,\n"
#~ "-71.1041065602059 42.3145009876017,-71.1041097995362 42.3145589148055,\n"
#~ "-71.1041166403905 42.3146168544148,-71.1041258822717 42.3146748022936,\n"
#~ "-71.1041375307579 42.3147318674446,-71.1041492906949 42.3147711126569,\n"
#~ "-71.1041598612795 42.314808571739,-71.1042515013869 42.3151287620809,\n"
#~ "-71.1041173835118 42.3150739481917,-71.1040809891419 42.3151344119048,\n"
#~ "-71.1040438678912 42.3151191367447,-71.1040194562988 42.3151832057859,\n"
#~ "-71.1038734225584 42.3151140942995,-71.1038446938243 42.3151006300338,\n"
#~ "-71.1038315271889 42.315094347535,-71.1037393329282 42.315054824985,\n"
#~ "-71.1035447555574 42.3152608696313,-71.1033436658644 42.3151648370544,\n"
#~ "-71.1032580383161 42.3152269126061,-71.103223066939 42.3152517403219,\n"
#~ "-71.1031880899493 42.3152774590236)),\n"
#~ "((-71.1043632495873 42.315113108546,-71.1043583974082 42.3151211109857,\n"
#~ "-71.1043443253471 42.3150676015829,-71.1043850704575 "
#~ "42.3150793250568,-71.1043632495873 42.315113108546)))');"

#~ msgid ""
#~ "--3d circular string\n"
#~ "SELECT ST_GeomFromEWKT('CIRCULARSTRING(220268 150415 1,220227 150505 "
#~ "2,220227 150406 3)');"
#~ msgstr ""
#~ "-- 3D 원형 스트링\n"
#~ "SELECT ST_GeomFromEWKT('CIRCULARSTRING(220268 150415 1,220227 150505 "
#~ "2,220227 150406 3)');"

#~ msgid ""
#~ "--Polyhedral Surface example\n"
#~ "SELECT ST_GeomFromEWKT('POLYHEDRALSURFACE(\n"
#~ "        ((0 0 0, 0 0 1, 0 1 1, 0 1 0, 0 0 0)),\n"
#~ "        ((0 0 0, 0 1 0, 1 1 0, 1 0 0, 0 0 0)),\n"
#~ "        ((0 0 0, 1 0 0, 1 0 1, 0 0 1, 0 0 0)),\n"
#~ "        ((1 1 0, 1 1 1, 1 0 1, 1 0 0, 1 1 0)),\n"
#~ "        ((0 1 0, 0 1 1, 1 1 1, 1 1 0, 0 1 0)),\n"
#~ "        ((0 0 1, 1 0 1, 1 1 1, 0 1 1, 0 0 1))\n"
#~ ")');"
#~ msgstr ""
#~ "-- 다면체 표면 예시\n"
#~ "SELECT ST_GeomFromEWKT('POLYHEDRALSURFACE(\n"
#~ "        ((0 0 0, 0 0 1, 0 1 1, 0 1 0, 0 0 0)),\n"
#~ "        ((0 0 0, 0 1 0, 1 1 0, 1 0 0, 0 0 0)),\n"
#~ "        ((0 0 0, 1 0 0, 1 0 1, 0 0 1, 0 0 0)),\n"
#~ "        ((1 1 0, 1 1 1, 1 0 1, 1 0 0, 1 1 0)),\n"
#~ "        ((0 1 0, 0 1 1, 1 1 1, 1 1 0, 0 1 0)),\n"
#~ "        ((0 0 1, 1 0 1, 1 1 1, 0 1 1, 0 0 1))\n"
#~ ")');"

#~ msgid ""
#~ ", <xref linkend=\"ST_GeomFromText\"/>, <xref linkend=\"ST_GeomFromEWKT\"/>"
#~ msgstr ""
#~ ", <xref linkend=\"ST_GeomFromText\"/>, <xref linkend=\"ST_GeomFromEWKT\"/>"

#~ msgid "ST_GeometryFromText"
#~ msgstr "ST_GeometryFromText"

#~ msgid ""
#~ "Return a specified ST_Geometry value from Well-Known Text representation "
#~ "(WKT). This is an alias name for ST_GeomFromText"
#~ msgstr ""
#~ "WKT(Well-Known Text)로부터 지정된 ST_Geometry 값을 반환합니다. 이 함수는 "
#~ "ST_GeomFromText 함수와 동일합니다."

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_GeometryFromText</"
#~ "function></funcdef> <paramdef><type>text </type> <parameter>WKT</"
#~ "parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_GeometryFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_GeometryFromText</"
#~ "function></funcdef> <paramdef><type>text </type> <parameter>WKT</"
#~ "parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_GeometryFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"

#~ msgid "&sqlmm_compliant; SQL-MM 3: 5.1.40"
#~ msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.40"

#~ msgid "ST_GeomFromGeoHash"
#~ msgstr "ST_GeomFromGeoHash"

#~ msgid "Return a geometry from a GeoHash string."
#~ msgstr "GeoHash 스트링으로부터 도형을 반환합니다."

#~ msgid ""
#~ "<funcdef>geometry <function>ST_GeomFromGeoHash</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>geohash</parameter></paramdef> "
#~ "<paramdef choice=\"opt\"><type>integer </type> "
#~ "<parameter>precision=full_precision_of_geohash</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_GeomFromGeoHash</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>geohash</parameter></paramdef> "
#~ "<paramdef choice=\"opt\"><type>integer </type> "
#~ "<parameter>precision=full_precision_of_geohash</parameter></paramdef>"

#~ msgid ""
#~ "Return a geometry from a GeoHash string. The geometry will be a polygon "
#~ "representing the GeoHash bounds."
#~ msgstr ""
#~ "GeoHash 스트링으로부터 도형을 반환합니다. 해당 도형은 GeoHash 범위를 표현"
#~ "하는 폴리곤이 될 것입니다."

#~ msgid ""
#~ "If no <varname>precision</varname> is specified ST_GeomFromGeoHash "
#~ "returns a polygon based on full precision of the input GeoHash string."
#~ msgstr ""
#~ "<varname>precision</varname> 을 설정하지 않은 경우, ST_GeomFromGeoHash가 "
#~ "입력 GeoHash 스트링의 전체 정확도를 기반으로 폴리곤을 반환합니다."

#~ msgid ""
#~ "If <varname>precision</varname> is specified ST_GeomFromGeoHash will use "
#~ "that many characters from the GeoHash to create the polygon."
#~ msgstr ""
#~ "<varname>precision</varname> 을 설정한 경우, ST_GeomFromGeoHash가 GeoHash"
#~ "에서 나온 그만큼의 문자를 이용해서 폴리곤을 생성합니다."

#~ msgid ""
#~ "<![CDATA[SELECT ST_AsText(ST_GeomFromGeoHash('9qqj7nmxncgyy4d0dbxqz0'));\n"
#~ "                                                        st_astext\n"
#~ "--------------------------------------------------------------------------------------------------------------------------\n"
#~ " POLYGON((-115.172816 36.114646,-115.172816 36.114646,-115.172816 "
#~ "36.114646,-115.172816 36.114646,-115.172816 36.114646))\n"
#~ "\n"
#~ "SELECT ST_AsText(ST_GeomFromGeoHash('9qqj7nmxncgyy4d0dbxqz0', 4));\n"
#~ "                                                          st_astext\n"
#~ "------------------------------------------------------------------------------------------------------------------------------\n"
#~ " POLYGON((-115.3125 36.03515625,-115.3125 36.2109375,-114.9609375 "
#~ "36.2109375,-114.9609375 36.03515625,-115.3125 36.03515625))\n"
#~ "\n"
#~ "SELECT ST_AsText(ST_GeomFromGeoHash('9qqj7nmxncgyy4d0dbxqz0', 10));\n"
#~ "                                                                                       st_astext\n"
#~ "----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n"
#~ " POLYGON((-115.17282128334 36.1146408319473,-115.17282128334 "
#~ "36.1146461963654,-115.172810554504 36.1146461963654,-115.172810554504 "
#~ "36.1146408319473,-115.17282128334 36.1146408319473))\n"
#~ "                ]]>"
#~ msgstr ""
#~ "<![CDATA[SELECT ST_AsText(ST_GeomFromGeoHash('9qqj7nmxncgyy4d0dbxqz0'));\n"
#~ "                                                        st_astext\n"
#~ "--------------------------------------------------------------------------------------------------------------------------\n"
#~ " POLYGON((-115.172816 36.114646,-115.172816 36.114646,-115.172816 "
#~ "36.114646,-115.172816 36.114646,-115.172816 36.114646))\n"
#~ "\n"
#~ "SELECT ST_AsText(ST_GeomFromGeoHash('9qqj7nmxncgyy4d0dbxqz0', 4));\n"
#~ "                                                          st_astext\n"
#~ "------------------------------------------------------------------------------------------------------------------------------\n"
#~ " POLYGON((-115.3125 36.03515625,-115.3125 36.2109375,-114.9609375 "
#~ "36.2109375,-114.9609375 36.03515625,-115.3125 36.03515625))\n"
#~ "\n"
#~ "SELECT ST_AsText(ST_GeomFromGeoHash('9qqj7nmxncgyy4d0dbxqz0', 10));\n"
#~ "                                                                                       st_astext\n"
#~ "----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n"
#~ " POLYGON((-115.17282128334 36.1146408319473,-115.17282128334 "
#~ "36.1146461963654,-115.172810554504 36.1146461963654,-115.172810554504 "
#~ "36.1146408319473,-115.17282128334 36.1146408319473))\n"
#~ "                ]]>"

#~ msgid ""
#~ ",<xref linkend=\"ST_Box2dFromGeoHash\"/>, <xref linkend="
#~ "\"ST_PointFromGeoHash\"/>"
#~ msgstr ""
#~ ",<xref linkend=\"ST_Box2dFromGeoHash\"/>, <xref linkend="
#~ "\"ST_PointFromGeoHash\"/>"

#~ msgid "ST_GeomFromGML"
#~ msgstr "ST_GeomFromGML"

#~ msgid ""
#~ "Takes as input GML representation of geometry and outputs a PostGIS "
#~ "geometry object"
#~ msgstr "도형의 GML 표현식을 입력받아 PostGIS 도형 객체를 출력합니다."

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_GeomFromGML</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>geomgml</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_GeomFromGML</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>geomgml</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_GeomFromGML</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>geomgml</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_GeomFromGML</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>geomgml</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"

#~ msgid ""
#~ "Constructs a PostGIS ST_Geometry object from the OGC GML representation."
#~ msgstr "OGC GML 표현식으로부터 PostGIS ST_Geometry 객체를 작성합니다."

#~ msgid ""
#~ "ST_GeomFromGML works only for GML Geometry fragments. It throws an error "
#~ "if you try to use it on a whole GML document."
#~ msgstr ""
#~ "ST_GeomFromGML은 GML 도형 조각(geometry fragment)에 대해서만 작동합니다. "
#~ "완전한 GML 문서를 사용하려 할 경우 오류가 발생합니다."

#~ msgid ""
#~ "OGC GML versions supported: <itemizedlist> <listitem> <para>GML 3.2.1 "
#~ "Namespace</para> </listitem> <listitem> <para>GML 3.1.1 Simple Features "
#~ "profile SF-2 (with GML 3.1.0 and 3.0.0 backward compatibility)</para> </"
#~ "listitem> <listitem> <para>GML 2.1.2</para> </listitem> </itemizedlist> "
#~ "OGC GML standards, cf: <ulink url=\"http://www.opengeospatial.org/"
#~ "standards/gml\">http://www.opengeospatial.org/standards/gml</ulink>:"
#~ msgstr ""
#~ "지원하는 OGC GML 버전은 다음과 같습니다: <itemizedlist> <listitem> "
#~ "<para>GML 3.2.1 네임스페이스</para> </listitem> <listitem> <para>GML "
#~ "3.1.1 단순 피처 프로파일 SF-2 (GML 3.1.0 및 3.0.0 하위 호환)</para> </"
#~ "listitem> <listitem> <para>GML 2.1.2</para> </listitem> </itemizedlist> "
#~ "OGC GML 표준: <ulink url=\"http://www.opengeospatial.org/standards/gml"
#~ "\">http://www.opengeospatial.org/standards/gml</ulink>"

#~ msgid "Availability: 1.5, requires libxml2 1.6+"
#~ msgstr ""
#~ "1.5 버전부터 사용할 수 있습니다. LibXML2 1.6 이상 버전이 필요합니다."

#~ msgid ""
#~ "GML allow mixed dimensions (2D and 3D inside the same MultiGeometry for "
#~ "instance). As PostGIS geometries don't, ST_GeomFromGML convert the whole "
#~ "geometry to 2D if a missing Z dimension is found once."
#~ msgstr ""
#~ "GML은 혼합 차원을 (예를 들어 동일한 멀티 도형(MultiGeometry) 안에서 2D와 "
#~ "3D를 함께) 쓸 수 있습니다. PostGIS 도형은 그렇지 않기 때문에, 사라진 Z 차"
#~ "원을 찾은 경우 ST_GeomFromGML이 전체 도형을 2D로 변환합니다."

#~ msgid ""
#~ "GML support mixed SRS inside the same MultiGeometry. As PostGIS "
#~ "geometries don't, ST_GeomFromGML, in this case, reproject all "
#~ "subgeometries to the SRS root node. If no srsName attribute available for "
#~ "the GML root node, the function throw an error."
#~ msgstr ""
#~ "GML은 동일한 멀티 도형 안에서 혼합 SRS를 지원합니다. PostGIS 도형은 그렇"
#~ "지 않기 때문에, 이 경우 ST_GeomFromGML이 모든 하위 도형들을 SRS 루트 노드"
#~ "로 재투영합니다. GML 루트 노드로 쓸 수 있는 srsName 속성이 없을 경우, 오류"
#~ "가 발생합니다."

#~ msgid ""
#~ "ST_GeomFromGML function is not pedantic about an explicit GML namespace. "
#~ "You could avoid to mention it explicitly for common usages. But you need "
#~ "it if you want to use XLink feature inside GML."
#~ msgstr ""
#~ "ST_GeomFromGML은 분명한 GML 네임스페이스를 꼼꼼히 따지지 않습니다. 일반적"
#~ "인 사용시에는 네임스페이스를 명시적으로 언급하지 않아도 됩니다. 하지만 "
#~ "GML 내부에 XLink 피처를 사용하고 싶다면 그래야 합니다."

#~ msgid "ST_GeomFromGML function not support SQL/MM curves geometries."
#~ msgstr "ST_GeomFromGML 함수는 SQL/MM 만곡 도형을 지원하지 않습니다."

#~ msgid "Examples - A single geometry with srsName"
#~ msgstr "예시: srsName을 가진 단일 도형"

#~ msgid ""
#~ "SELECT ST_GeomFromGML('<![CDATA[\n"
#~ "                <gml:LineString srsName=\"EPSG:4269\">\n"
#~ "                        <gml:coordinates>\n"
#~ "                                -71.16028,42.258729 -71.160837,42.259112 "
#~ "-71.161143,42.25932\n"
#~ "                        </gml:coordinates>\n"
#~ "                </gml:LineString>']]>);"
#~ msgstr ""
#~ "SELECT ST_GeomFromGML('<![CDATA[\n"
#~ "                <gml:LineString srsName=\"EPSG:4269\">\n"
#~ "                        <gml:coordinates>\n"
#~ "                                -71.16028,42.258729 -71.160837,42.259112 "
#~ "-71.161143,42.25932\n"
#~ "                        </gml:coordinates>\n"
#~ "                </gml:LineString>']]>);"

#~ msgid ""
#~ "SELECT <![CDATA[ST_GeomFromGML('\n"
#~ "                <gml:LineString xmlns:gml=\"http://www.opengis.net/gml\"\n"
#~ "                                xmlns:xlink=\"http://www.w3.org/1999/xlink"
#~ "\"\n"
#~ "                                srsName=\"urn:ogc:def:crs:EPSG::4269\">\n"
#~ "                        <gml:pointProperty>\n"
#~ "                                <gml:Point gml:id=\"p1\"><gml:"
#~ "pos>42.258729 -71.16028</gml:pos></gml:Point>\n"
#~ "                        </gml:pointProperty>\n"
#~ "                        <gml:pos>42.259112 -71.160837</gml:pos>\n"
#~ "                        <gml:pointProperty>\n"
#~ "                                <gml:Point xlink:type=\"simple\" xlink:"
#~ "href=\"#p1\"/>\n"
#~ "                        </gml:pointProperty>\n"
#~ "                </gml:LineString>');]]>);"
#~ msgstr ""
#~ "SELECT <![CDATA[ST_GeomFromGML('\n"
#~ "                <gml:LineString xmlns:gml=\"http://www.opengis.net/gml\"\n"
#~ "                                xmlns:xlink=\"http://www.w3.org/1999/xlink"
#~ "\"\n"
#~ "                                srsName=\"urn:ogc:def:crs:EPSG::4269\">\n"
#~ "                        <gml:pointProperty>\n"
#~ "                                <gml:Point gml:id=\"p1\"><gml:"
#~ "pos>42.258729 -71.16028</gml:pos></gml:Point>\n"
#~ "                        </gml:pointProperty>\n"
#~ "                        <gml:pos>42.259112 -71.160837</gml:pos>\n"
#~ "                        <gml:pointProperty>\n"
#~ "                                <gml:Point xlink:type=\"simple\" xlink:"
#~ "href=\"#p1\"/>\n"
#~ "                        </gml:pointProperty>\n"
#~ "                </gml:LineString>');]]>);"

#~ msgid "Examples - Polyhedral Surface"
#~ msgstr "예시: 다면체 표면"

#~ msgid ""
#~ "SELECT ST_AsEWKT(<![CDATA[ST_GeomFromGML('\n"
#~ "<gml:PolyhedralSurface>\n"
#~ "<gml:polygonPatches>\n"
#~ "  <gml:PolygonPatch>\n"
#~ "    <gml:exterior>\n"
#~ "      <gml:LinearRing><gml:posList srsDimension=\"3\">0 0 0 0 0 1 0 1 1 0 "
#~ "1 0 0 0 0</gml:posList></gml:LinearRing>\n"
#~ "    </gml:exterior>\n"
#~ "  </gml:PolygonPatch>\n"
#~ "  <gml:PolygonPatch>\n"
#~ "    <gml:exterior>\n"
#~ "        <gml:LinearRing><gml:posList srsDimension=\"3\">0 0 0 0 1 0 1 1 0 "
#~ "1 0 0 0 0 0</gml:posList></gml:LinearRing>\n"
#~ "    </gml:exterior>\n"
#~ "  </gml:PolygonPatch>\n"
#~ "  <gml:PolygonPatch>\n"
#~ "    <gml:exterior>\n"
#~ "        <gml:LinearRing><gml:posList srsDimension=\"3\">0 0 0 1 0 0 1 0 1 "
#~ "0 0 1 0 0 0</gml:posList></gml:LinearRing>\n"
#~ "    </gml:exterior>\n"
#~ "  </gml:PolygonPatch>\n"
#~ "  <gml:PolygonPatch>\n"
#~ "    <gml:exterior>\n"
#~ "        <gml:LinearRing><gml:posList srsDimension=\"3\">1 1 0 1 1 1 1 0 1 "
#~ "1 0 0 1 1 0</gml:posList></gml:LinearRing>\n"
#~ "    </gml:exterior>\n"
#~ "  </gml:PolygonPatch>\n"
#~ "  <gml:PolygonPatch>\n"
#~ "    <gml:exterior>\n"
#~ "        <gml:LinearRing><gml:posList srsDimension=\"3\">0 1 0 0 1 1 1 1 1 "
#~ "1 1 0 0 1 0</gml:posList></gml:LinearRing>\n"
#~ "    </gml:exterior>\n"
#~ "  </gml:PolygonPatch>\n"
#~ "  <gml:PolygonPatch>\n"
#~ "    <gml:exterior>\n"
#~ "        <gml:LinearRing><gml:posList srsDimension=\"3\">0 0 1 1 0 1 1 1 1 "
#~ "0 1 1 0 0 1</gml:posList></gml:LinearRing>\n"
#~ "    </gml:exterior>\n"
#~ "  </gml:PolygonPatch>\n"
#~ "</gml:polygonPatches>\n"
#~ "</gml:PolyhedralSurface>']]>));\n"
#~ "\n"
#~ "-- result --\n"
#~ " POLYHEDRALSURFACE(((0 0 0,0 0 1,0 1 1,0 1 0,0 0 0)),\n"
#~ " ((0 0 0,0 1 0,1 1 0,1 0 0,0 0 0)),\n"
#~ " ((0 0 0,1 0 0,1 0 1,0 0 1,0 0 0)),\n"
#~ " ((1 1 0,1 1 1,1 0 1,1 0 0,1 1 0)),\n"
#~ " ((0 1 0,0 1 1,1 1 1,1 1 0,0 1 0)),\n"
#~ " ((0 0 1,1 0 1,1 1 1,0 1 1,0 0 1)))"
#~ msgstr ""
#~ "SELECT ST_AsEWKT(<![CDATA[ST_GeomFromGML('\n"
#~ "<gml:PolyhedralSurface>\n"
#~ "<gml:polygonPatches>\n"
#~ "  <gml:PolygonPatch>\n"
#~ "    <gml:exterior>\n"
#~ "      <gml:LinearRing><gml:posList srsDimension=\"3\">0 0 0 0 0 1 0 1 1 0 "
#~ "1 0 0 0 0</gml:posList></gml:LinearRing>\n"
#~ "    </gml:exterior>\n"
#~ "  </gml:PolygonPatch>\n"
#~ "  <gml:PolygonPatch>\n"
#~ "    <gml:exterior>\n"
#~ "        <gml:LinearRing><gml:posList srsDimension=\"3\">0 0 0 0 1 0 1 1 0 "
#~ "1 0 0 0 0 0</gml:posList></gml:LinearRing>\n"
#~ "    </gml:exterior>\n"
#~ "  </gml:PolygonPatch>\n"
#~ "  <gml:PolygonPatch>\n"
#~ "    <gml:exterior>\n"
#~ "        <gml:LinearRing><gml:posList srsDimension=\"3\">0 0 0 1 0 0 1 0 1 "
#~ "0 0 1 0 0 0</gml:posList></gml:LinearRing>\n"
#~ "    </gml:exterior>\n"
#~ "  </gml:PolygonPatch>\n"
#~ "  <gml:PolygonPatch>\n"
#~ "    <gml:exterior>\n"
#~ "        <gml:LinearRing><gml:posList srsDimension=\"3\">1 1 0 1 1 1 1 0 1 "
#~ "1 0 0 1 1 0</gml:posList></gml:LinearRing>\n"
#~ "    </gml:exterior>\n"
#~ "  </gml:PolygonPatch>\n"
#~ "  <gml:PolygonPatch>\n"
#~ "    <gml:exterior>\n"
#~ "        <gml:LinearRing><gml:posList srsDimension=\"3\">0 1 0 0 1 1 1 1 1 "
#~ "1 1 0 0 1 0</gml:posList></gml:LinearRing>\n"
#~ "    </gml:exterior>\n"
#~ "  </gml:PolygonPatch>\n"
#~ "  <gml:PolygonPatch>\n"
#~ "    <gml:exterior>\n"
#~ "        <gml:LinearRing><gml:posList srsDimension=\"3\">0 0 1 1 0 1 1 1 1 "
#~ "0 1 1 0 0 1</gml:posList></gml:LinearRing>\n"
#~ "    </gml:exterior>\n"
#~ "  </gml:PolygonPatch>\n"
#~ "</gml:polygonPatches>\n"
#~ "</gml:PolyhedralSurface>']]>));\n"
#~ "\n"
#~ "-- 결과 --\n"
#~ " POLYHEDRALSURFACE(((0 0 0,0 0 1,0 1 1,0 1 0,0 0 0)),\n"
#~ " ((0 0 0,0 1 0,1 1 0,1 0 0,0 0 0)),\n"
#~ " ((0 0 0,1 0 0,1 0 1,0 0 1,0 0 0)),\n"
#~ " ((1 1 0,1 1 1,1 0 1,1 0 0,1 1 0)),\n"
#~ " ((0 1 0,0 1 1,1 1 1,1 1 0,0 1 0)),\n"
#~ " ((0 0 1,1 0 1,1 1 1,0 1 1,0 0 1)))"

#~ msgid ", <xref linkend=\"ST_AsGML\"/>, <xref linkend=\"ST_GMLToSQL\"/>"
#~ msgstr ", <xref linkend=\"ST_AsGML\"/>, <xref linkend=\"ST_GMLToSQL\"/>"

#~ msgid "ST_GeomFromGeoJSON"
#~ msgstr "ST_GeomFromGeoJSON"

#~ msgid ""
#~ "Takes as input a geojson representation of a geometry and outputs a "
#~ "PostGIS geometry object"
#~ msgstr "GeoJSON 표현식을 입력받아 PostGIS 도형 객체를 출력합니다."

#~ msgid ""
#~ "Constructs a PostGIS geometry object from the GeoJSON representation."
#~ msgstr "GeoJSON 표현식으로부터 PostGIS 도형 객체를 작성합니다."

#~ msgid ""
#~ "ST_GeomFromGeoJSON works only for JSON Geometry fragments. It throws an "
#~ "error if you try to use it on a whole JSON document."
#~ msgstr ""
#~ "ST_GeomFromGML은 JSON 도형 조각(geometry fragment)에 대해서만 작동합니다. "
#~ "완전한 JSON 문서를 사용하려 할 경우 오류가 발생합니다."

#~ msgid "Availability: 2.0.0 requires - JSON-C &gt;= 0.9"
#~ msgstr ""
#~ "2.0.0 버전부터 사용할 수 있습니다. JSON-C 0.9 이상 버전이 필요합니다."

#~ msgid ""
#~ "If you do not have JSON-C enabled, support you will get an error notice "
#~ "instead of seeing an output. To enable JSON-C, run configure --with-"
#~ "jsondir=/path/to/json-c. See <xref linkend=\"installation_configuration\"/"
#~ "> for details."
#~ msgstr ""
#~ "JSON-C 지원을 활성화시키지 않았다면, 출력물 대신 오류 메시지를 보게 될 것"
#~ "입니다. JSON-C를 활성화하려면, \"--with-jsondir=/path/to/json-c\" 인자와 "
#~ "함께 설정하십시오. 자세한 내용은 <xref linkend="
#~ "\"installation_configuration\"/> 을 참조하십시오."

#~ msgid ""
#~ "SELECT ST_AsText(ST_GeomFromGeoJSON('{\"type\":\"Point\",\"coordinates\":"
#~ "[-48.23456,20.12345]}')) As wkt;\n"
#~ "wkt\n"
#~ "------\n"
#~ "POINT(-48.23456 20.12345)"
#~ msgstr ""
#~ "SELECT ST_AsText(ST_GeomFromGeoJSON('{\"type\":\"Point\",\"coordinates\":"
#~ "[-48.23456,20.12345]}')) As wkt;\n"
#~ "wkt\n"
#~ "------\n"
#~ "POINT(-48.23456 20.12345)"

#~ msgid ""
#~ "-- a 3D linestring\n"
#~ "SELECT ST_AsText(ST_GeomFromGeoJSON('{\"type\":\"LineString\","
#~ "\"coordinates\":[[1,2,3],[4,5,6],[7,8,9]]}')) As wkt;\n"
#~ "\n"
#~ "wkt\n"
#~ "-------------------\n"
#~ "LINESTRING(1 2,4 5,7 8)"
#~ msgstr ""
#~ "-- a 3D linestring\n"
#~ "SELECT ST_AsText(ST_GeomFromGeoJSON('{\"type\":\"LineString\","
#~ "\"coordinates\":[[1,2,3],[4,5,6],[7,8,9]]}')) As wkt;\n"
#~ "\n"
#~ "wkt\n"
#~ "-------------------\n"
#~ "LINESTRING(1 2,4 5,7 8)"

#~ msgid ""
#~ ", <xref linkend=\"ST_AsGeoJSON\"/>, <xref linkend="
#~ "\"installation_configuration\"/>"
#~ msgstr ""
#~ ", <xref linkend=\"ST_AsGeoJSON\"/>, <xref linkend="
#~ "\"installation_configuration\"/>"

#~ msgid "ST_GeomFromKML"
#~ msgstr "ST_GeomFromKML"

#~ msgid ""
#~ "Takes as input KML representation of geometry and outputs a PostGIS "
#~ "geometry object"
#~ msgstr "도형의 KML 표현식을 입력받아 PostGIS 도형 객체를 출력합니다."

#~ msgid ""
#~ "<funcdef>geometry <function>ST_GeomFromKML</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>geomkml</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_GeomFromKML</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>geomkml</parameter></paramdef>"

#~ msgid ""
#~ "Constructs a PostGIS ST_Geometry object from the OGC KML representation."
#~ msgstr "OGC KML 표현식으로부터 PostGIS ST_Geometry 객체를 작성합니다."

#~ msgid ""
#~ "ST_GeomFromKML works only for KML Geometry fragments. It throws an error "
#~ "if you try to use it on a whole KML document."
#~ msgstr ""
#~ "ST_GeomFromKML은 KML 도형 조각(geometry fragment)에 대해서만 작동합니다. "
#~ "완전한 KML 문서를 사용하려 할 경우 오류가 발생합니다."

#~ msgid ""
#~ "OGC KML versions supported: <itemizedlist> <listitem> <para>KML 2.2.0 "
#~ "Namespace</para> </listitem> </itemizedlist> OGC KML standards, cf: "
#~ "<ulink url=\"http://www.opengeospatial.org/standards/kml\">http://www."
#~ "opengeospatial.org/standards/kml</ulink>:"
#~ msgstr ""
#~ "지원하는 OGC KML 버전은 다음과 같습니다: <itemizedlist> <listitem> "
#~ "<para>KML 2.2.0 네임스페이스</para> </listitem> </itemizedlist> OGC KML 표"
#~ "준: <ulink url=\"http://www.opengeospatial.org/standards/kml\">http://www."
#~ "opengeospatial.org/standards/kml</ulink>"

#~ msgid "Availability: 1.5,libxml2 2.6+"
#~ msgstr ""
#~ "1.5 버전부터 사용할 수 있습니다. LibXML2 2.6 이상 버전이 필요합니다."

#~ msgid "ST_GeomFromKML function not support SQL/MM curves geometries."
#~ msgstr "ST_GeomFromKML 함수는 SQL/MM 만곡 도형을 지원하지 않습니다."

#~ msgid ""
#~ "SELECT ST_GeomFromKML('<![CDATA[\n"
#~ "                <LineString>\n"
#~ "                        <coordinates>-71.1663,42.2614\n"
#~ "                                -71.1667,42.2616</coordinates>\n"
#~ "                </LineString>']]>);"
#~ msgstr ""
#~ "SELECT ST_GeomFromKML('<![CDATA[\n"
#~ "                <LineString>\n"
#~ "                        <coordinates>-71.1663,42.2614\n"
#~ "                                -71.1667,42.2616</coordinates>\n"
#~ "                </LineString>']]>);"

#~ msgid "ST_GMLToSQL"
#~ msgstr "ST_GMLToSQL"

#~ msgid ""
#~ "Return a specified ST_Geometry value from GML representation. This is an "
#~ "alias name for ST_GeomFromGML"
#~ msgstr ""
#~ "GML로부터 지정된 ST_Geometry 값을 반환합니다. 이 함수는 ST_GeomFromGML 함"
#~ "수와 동일합니다."

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_GMLToSQL</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>geomgml</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_GMLToSQL</function></funcdef> <paramdef><type>text </type> "
#~ "<parameter>geomgml</parameter></paramdef> <paramdef><type>integer </type> "
#~ "<parameter>srid</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_GMLToSQL</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>geomgml</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_GMLToSQL</function></funcdef> <paramdef><type>text </type> "
#~ "<parameter>geomgml</parameter></paramdef> <paramdef><type>integer </type> "
#~ "<parameter>srid</parameter></paramdef> </funcprototype>"

#~ msgid "&sqlmm_compliant; SQL-MM 3: 5.1.50 (except for curves support)."
#~ msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.50 (만곡 도형 지원 제외)"

#~ msgid ", <xref linkend=\"ST_GeomFromGML\"/>, <xref linkend=\"ST_AsGML\"/>"
#~ msgstr ", <xref linkend=\"ST_GeomFromGML\"/>, <xref linkend=\"ST_AsGML\"/>"

#~ msgid "ST_GeomFromText"
#~ msgstr "ST_GeomFromText"

#~ msgid ""
#~ "Return a specified ST_Geometry value from Well-Known Text representation "
#~ "(WKT)."
#~ msgstr "WKT 표현식으로부터 지정된 ST_Geometry 값을 반환합니다."

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_GeomFromText</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>WKT</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_GeomFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_GeomFromText</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>WKT</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_GeomFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"

#~ msgid ""
#~ "Constructs a PostGIS ST_Geometry object from the OGC Well-Known text "
#~ "representation."
#~ msgstr ""
#~ "OGC WKT(Well-Known Text) 표현식으로부터 PostGIS ST_Geometry 객체를 작성합"
#~ "니다."

#~ msgid ""
#~ "There are two variants of ST_GeomFromText function. The first takes no "
#~ "SRID and returns a geometry with no defined spatial reference system "
#~ "(SRID=0). The second takes a SRID as the second argument and returns a "
#~ "geometry that includes this SRID as part of its metadata."
#~ msgstr ""
#~ "ST_GeomFromText 함수의 변종이 2개 있는데, 첫 번째는 SRID를 입력받지 않고 "
#~ "공간 참조 시스템이 정의되지 않은(SRID=0) 도형을 반환합니다. 두 번째는 SRID"
#~ "를 두 번째 인수로 입력받아 해당 SRID를 자체 메타데이터의 일부로 포함하는 "
#~ "도형을 반환합니다."

#~ msgid ""
#~ "&sfs_compliant; s3.2.6.2 - option SRID is from the conformance suite."
#~ msgstr ""
#~ "&sfs_compliant; 사양 3.2.6.2 - 선택적인 SRID를 적합성 스위트(conformance "
#~ "suite)로부터 가져오십시오."

#~ msgid ""
#~ "Changed: 2.0.0 In prior versions of PostGIS "
#~ "ST_GeomFromText('GEOMETRYCOLLECTION(EMPTY)') was allowed. This is now "
#~ "illegal in PostGIS 2.0.0 to better conform with SQL/MM standards. This "
#~ "should now be written as ST_GeomFromText('GEOMETRYCOLLECTION EMPTY')"
#~ msgstr ""
#~ "변경 사항: PostGIS 2.0.0 미만 버전에서는 "
#~ "ST_GeomFromText('GEOMETRYCOLLECTION(EMPTY)') 를 사용할 수 있었습니다. "
#~ "PostGIS 2.0.0 버전부터, SQL/MM 표준을 더 잘 준수하기 위해 이런 사용법은 금"
#~ "지됐습니다. 이제는 ST_GeomFromText('GEOMETRYCOLLECTION EMPTY') 라고 작성해"
#~ "야 합니다."

#~ msgid ""
#~ "SELECT ST_GeomFromText('LINESTRING(-71.160281 42.258729,-71.160837 "
#~ "42.259113,-71.161144 42.25932)');\n"
#~ "SELECT ST_GeomFromText('LINESTRING(-71.160281 42.258729,-71.160837 "
#~ "42.259113,-71.161144 42.25932)',4269);\n"
#~ "\n"
#~ "SELECT ST_GeomFromText('MULTILINESTRING((-71.160281 42.258729,-71.160837 "
#~ "42.259113,-71.161144 42.25932))');\n"
#~ "\n"
#~ "SELECT ST_GeomFromText('POINT(-71.064544 42.28787)');\n"
#~ "\n"
#~ "SELECT ST_GeomFromText('POLYGON((-71.1776585052917 "
#~ "42.3902909739571,-71.1776820268866 42.3903701743239,\n"
#~ "-71.1776063012595 42.3903825660754,-71.1775826583081 "
#~ "42.3903033653531,-71.1776585052917 42.3902909739571))');\n"
#~ "\n"
#~ "SELECT ST_GeomFromText('MULTIPOLYGON(((-71.1031880899493 "
#~ "42.3152774590236,\n"
#~ "-71.1031627617667 42.3152960829043,-71.102923838298 42.3149156848307,\n"
#~ "-71.1023097974109 42.3151969047397,-71.1019285062273 42.3147384934248,\n"
#~ "-71.102505233663 42.3144722937587,-71.10277487471 42.3141658254797,\n"
#~ "-71.103113945163 42.3142739188902,-71.10324876416 42.31402489987,\n"
#~ "-71.1033002961013 42.3140393340215,-71.1033488797549 42.3139495090772,\n"
#~ "-71.103396240451 42.3138632439557,-71.1041521907712 42.3141153348029,\n"
#~ "-71.1041411411543 42.3141545014533,-71.1041287795912 42.3142114839058,\n"
#~ "-71.1041188134329 42.3142693656241,-71.1041112482575 42.3143272556118,\n"
#~ "-71.1041072845732 42.3143851580048,-71.1041057218871 42.3144430686681,\n"
#~ "-71.1041065602059 42.3145009876017,-71.1041097995362 42.3145589148055,\n"
#~ "-71.1041166403905 42.3146168544148,-71.1041258822717 42.3146748022936,\n"
#~ "-71.1041375307579 42.3147318674446,-71.1041492906949 42.3147711126569,\n"
#~ "-71.1041598612795 42.314808571739,-71.1042515013869 42.3151287620809,\n"
#~ "-71.1041173835118 42.3150739481917,-71.1040809891419 42.3151344119048,\n"
#~ "-71.1040438678912 42.3151191367447,-71.1040194562988 42.3151832057859,\n"
#~ "-71.1038734225584 42.3151140942995,-71.1038446938243 42.3151006300338,\n"
#~ "-71.1038315271889 42.315094347535,-71.1037393329282 42.315054824985,\n"
#~ "-71.1035447555574 42.3152608696313,-71.1033436658644 42.3151648370544,\n"
#~ "-71.1032580383161 42.3152269126061,-71.103223066939 42.3152517403219,\n"
#~ "-71.1031880899493 42.3152774590236)),\n"
#~ "((-71.1043632495873 42.315113108546,-71.1043583974082 42.3151211109857,\n"
#~ "-71.1043443253471 42.3150676015829,-71.1043850704575 "
#~ "42.3150793250568,-71.1043632495873 42.315113108546)))',4326);\n"
#~ "\n"
#~ "SELECT ST_GeomFromText('CIRCULARSTRING(220268 150415,220227 150505,220227 "
#~ "150406)');"
#~ msgstr ""
#~ "SELECT ST_GeomFromText('LINESTRING(-71.160281 42.258729,-71.160837 "
#~ "42.259113,-71.161144 42.25932)');\n"
#~ "SELECT ST_GeomFromText('LINESTRING(-71.160281 42.258729,-71.160837 "
#~ "42.259113,-71.161144 42.25932)',4269);\n"
#~ "\n"
#~ "SELECT ST_GeomFromText('MULTILINESTRING((-71.160281 42.258729,-71.160837 "
#~ "42.259113,-71.161144 42.25932))');\n"
#~ "\n"
#~ "SELECT ST_GeomFromText('POINT(-71.064544 42.28787)');\n"
#~ "\n"
#~ "SELECT ST_GeomFromText('POLYGON((-71.1776585052917 "
#~ "42.3902909739571,-71.1776820268866 42.3903701743239,\n"
#~ "-71.1776063012595 42.3903825660754,-71.1775826583081 "
#~ "42.3903033653531,-71.1776585052917 42.3902909739571))');\n"
#~ "\n"
#~ "SELECT ST_GeomFromText('MULTIPOLYGON(((-71.1031880899493 "
#~ "42.3152774590236,\n"
#~ "-71.1031627617667 42.3152960829043,-71.102923838298 42.3149156848307,\n"
#~ "-71.1023097974109 42.3151969047397,-71.1019285062273 42.3147384934248,\n"
#~ "-71.102505233663 42.3144722937587,-71.10277487471 42.3141658254797,\n"
#~ "-71.103113945163 42.3142739188902,-71.10324876416 42.31402489987,\n"
#~ "-71.1033002961013 42.3140393340215,-71.1033488797549 42.3139495090772,\n"
#~ "-71.103396240451 42.3138632439557,-71.1041521907712 42.3141153348029,\n"
#~ "-71.1041411411543 42.3141545014533,-71.1041287795912 42.3142114839058,\n"
#~ "-71.1041188134329 42.3142693656241,-71.1041112482575 42.3143272556118,\n"
#~ "-71.1041072845732 42.3143851580048,-71.1041057218871 42.3144430686681,\n"
#~ "-71.1041065602059 42.3145009876017,-71.1041097995362 42.3145589148055,\n"
#~ "-71.1041166403905 42.3146168544148,-71.1041258822717 42.3146748022936,\n"
#~ "-71.1041375307579 42.3147318674446,-71.1041492906949 42.3147711126569,\n"
#~ "-71.1041598612795 42.314808571739,-71.1042515013869 42.3151287620809,\n"
#~ "-71.1041173835118 42.3150739481917,-71.1040809891419 42.3151344119048,\n"
#~ "-71.1040438678912 42.3151191367447,-71.1040194562988 42.3151832057859,\n"
#~ "-71.1038734225584 42.3151140942995,-71.1038446938243 42.3151006300338,\n"
#~ "-71.1038315271889 42.315094347535,-71.1037393329282 42.315054824985,\n"
#~ "-71.1035447555574 42.3152608696313,-71.1033436658644 42.3151648370544,\n"
#~ "-71.1032580383161 42.3152269126061,-71.103223066939 42.3152517403219,\n"
#~ "-71.1031880899493 42.3152774590236)),\n"
#~ "((-71.1043632495873 42.315113108546,-71.1043583974082 42.3151211109857,\n"
#~ "-71.1043443253471 42.3150676015829,-71.1043850704575 "
#~ "42.3150793250568,-71.1043632495873 42.315113108546)))',4326);\n"
#~ "\n"
#~ "SELECT ST_GeomFromText('CIRCULARSTRING(220268 150415,220227 150505,220227 "
#~ "150406)');"

#~ msgid ", <xref linkend=\"ST_GeomFromWKB\"/>, <xref linkend=\"ST_SRID\"/>"
#~ msgstr ", <xref linkend=\"ST_GeomFromWKB\"/>, <xref linkend=\"ST_SRID\"/>"

#~ msgid "ST_GeomFromWKB"
#~ msgstr "ST_GeomFromWKB"

#~ msgid ""
#~ "Creates a geometry instance from a Well-Known Binary geometry "
#~ "representation (WKB) and optional SRID."
#~ msgstr ""
#~ "WKB(Well-Known Binary) 도형 표현식과 선택적인 SRID로부터 도형 인스턴스를 "
#~ "생성합니다."

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_GeomFromWKB</function></"
#~ "funcdef> <paramdef><type>bytea </type> <parameter>geom</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_GeomFromWKB</function></funcdef> <paramdef><type>bytea </"
#~ "type> <parameter>geom</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_GeomFromWKB</function></"
#~ "funcdef> <paramdef><type>bytea </type> <parameter>geom</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_GeomFromWKB</function></funcdef> <paramdef><type>bytea </"
#~ "type> <parameter>geom</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"

#~ msgid ""
#~ "The <varname>ST_GeomFromWKB</varname> function, takes a well-known binary "
#~ "representation of a geometry and a Spatial Reference System ID "
#~ "(<varname>SRID</varname>) and creates an instance of the appropriate "
#~ "geometry type. This function plays the role of the Geometry Factory in "
#~ "SQL. This is an alternate name for ST_WKBToSQL."
#~ msgstr ""
#~ "<varname>ST_GeogFromWKB</varname> 함수는 도형의 WKB 표현식과 "
#~ "<varname>SRID</varname>(공간 참조 시스템 ID)를 받아 적절한 도형 유형의 인"
#~ "스턴스를 생성합니다. 이 함수는 SQL에서 도형 공장(Geometry Factory) 역할을 "
#~ "합니다. 이 함수는 ST_WKBToSQL 함수를 대체할 수 있습니다."

#~ msgid "If SRID is not specified, it defaults to 0 (Unknown)."
#~ msgstr "SRID를 설정하지 않은 경우, 기본값으로 0(unkown)을 씁니다."

#~ msgid ""
#~ "&sfs_compliant; s3.2.7.2 - the optional SRID is from the conformance suite"
#~ msgstr ""
#~ "&sfs_compliant; s3.2.7.2 - 선택적인 SRID를 적합성 스위트(conformance "
#~ "suite)로부터 가져오십시오."

#~ msgid "&sqlmm_compliant; SQL-MM 3: 5.1.41"
#~ msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.41"

#~ msgid ""
#~ "--Although bytea rep contains single \\, these need to be escaped when "
#~ "inserting into a table\n"
#~ "                -- unless standard_conforming_strings is set to on.\n"
#~ "SELECT ST_AsEWKT(\n"
#~ "ST_GeomFromWKB(E'\\\\001\\\\002\\\\000\\\\000\\\\000\\\\002\\\\000\\"
#~ "\\000\\\\000\\\\037\\\\205\\\\353Q\\\\270~\\\\\\\\\\\\300\\\\323Mb\\\\020X"
#~ "\\\\231C@\\\\020X9\\\\264\\\\310~\\\\\\\\\\\\300)\\\\\\\\\\\\217\\\\302\\"
#~ "\\365\\\\230C@',4326)\n"
#~ ");\n"
#~ "                                          st_asewkt\n"
#~ "------------------------------------------------------\n"
#~ " SRID=4326;LINESTRING(-113.98 39.198,-113.981 39.195)\n"
#~ "(1 row)\n"
#~ "\n"
#~ "SELECT\n"
#~ "  ST_AsText(\n"
#~ "        ST_GeomFromWKB(\n"
#~ "          ST_AsEWKB('POINT(2 5)'::geometry)\n"
#~ "        )\n"
#~ "  );\n"
#~ " st_astext\n"
#~ "------------\n"
#~ " POINT(2 5)\n"
#~ "(1 row)"
#~ msgstr ""
#~ "-- standard_conforming_strings이 활성화돼 있지 않은 경우\n"
#~ "                -- bytea 표현식이 단일한 역슬래시(\\)를 포함하긴 해도, 테"
#~ "이블 삽입시에는 빼놓아야 합니다.\n"
#~ "SELECT ST_AsEWKT(\n"
#~ "ST_GeomFromWKB(E'\\\\001\\\\002\\\\000\\\\000\\\\000\\\\002\\\\000\\"
#~ "\\000\\\\000\\\\037\\\\205\\\\353Q\\\\270~\\\\\\\\\\\\300\\\\323Mb\\\\020X"
#~ "\\\\231C@\\\\020X9\\\\264\\\\310~\\\\\\\\\\\\300)\\\\\\\\\\\\217\\\\302\\"
#~ "\\365\\\\230C@',4326)\n"
#~ ");\n"
#~ "                                          st_asewkt\n"
#~ "------------------------------------------------------\n"
#~ " SRID=4326;LINESTRING(-113.98 39.198,-113.981 39.195)\n"
#~ "(1 row)\n"
#~ "\n"
#~ "SELECT\n"
#~ "  ST_AsText(\n"
#~ "        ST_GeomFromWKB(\n"
#~ "          ST_AsEWKB('POINT(2 5)'::geometry)\n"
#~ "        )\n"
#~ "  );\n"
#~ " st_astext\n"
#~ "------------\n"
#~ " POINT(2 5)\n"
#~ "(1 row)"

#~ msgid ""
#~ ", <xref linkend=\"ST_AsBinary\"/>, <xref linkend=\"ST_GeomFromEWKB\"/>"
#~ msgstr ""
#~ ", <xref linkend=\"ST_AsBinary\"/>, <xref linkend=\"ST_GeomFromEWKB\"/>"

#~ msgid "ST_LineFromEncodedPolyline"
#~ msgstr "ST_LineFromEncodedPolyline"

#~ msgid "Creates a LineString from an Encoded Polyline."
#~ msgstr "인코딩된 폴리라인(polyline)으로부터 라인스트링을 생성합니다."

#~ msgid ""
#~ "<funcdef>geometry <function>ST_LineFromEncodedPolyline</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>polyline</parameter></"
#~ "paramdef> <paramdef choice=\"opt\"><type>integer </type> "
#~ "<parameter>precision=5</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_LineFromEncodedPolyline</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>polyline</parameter></"
#~ "paramdef> <paramdef choice=\"opt\"><type>integer </type> "
#~ "<parameter>precision=5</parameter></paramdef>"

#~ msgid ""
#~ "See http://developers.google.com/maps/documentation/utilities/"
#~ "polylinealgorithm"
#~ msgstr ""
#~ "참조: http://developers.google.com/maps/documentation/utilities/"
#~ "polylinealgorithm"

#~ msgid "Availability: 2.2.0"
#~ msgstr "2.2.0 버전부터 사용할 수 있습니다."

#~ msgid ", <xref linkend=\"ST_Collect\"/>, <xref linkend=\"ST_MakeLine\"/>"
#~ msgstr ", <xref linkend=\"ST_Collect\"/>, <xref linkend=\"ST_MakeLine\"/>"

#~ msgid "ST_LineFromText"
#~ msgstr "ST_LineFromText"

#~ msgid ""
#~ "Makes a Geometry from WKT representation with the given SRID. If SRID is "
#~ "not given, it defaults to 0."
#~ msgstr ""
#~ "주어진 SRID와 함께 WKT 표현식으로부터 도형을 만듭니다. SRID가 주어지지 않"
#~ "은 경우, 기본값인 0을 씁니다."

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_LineFromText</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>WKT</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_LineFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_LineFromText</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>WKT</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_LineFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"

#~ msgid "OGC SPEC 3.2.6.2 - option SRID is from the conformance suite."
#~ msgstr ""
#~ "OGC 사양 3.2.6.2 - 선택적인 SRID를 적합성 스위트(conformance suite)로부터 "
#~ "가져오십시오."

#~ msgid ""
#~ "If you know all your geometries are LINESTRINGS, its more efficient to "
#~ "just use ST_GeomFromText. This just calls ST_GeomFromText and adds "
#~ "additional validation that it returns a linestring."
#~ msgstr ""
#~ "사용자 도형이 모두 라인스트링이란 걸 알고 있다면, 그냥 ST_GeomFromText 함"
#~ "수를 쓰는 편이 더 효율적입니다. 이 함수는 ST_GeomFromText만 호출하고, 라인"
#~ "스트링을 반환한다는 유효성 검사를 추가합니다."

#~ msgid "&sqlmm_compliant; SQL-MM 3: 7.2.8"
#~ msgstr "&sqlmm_compliant; SQL-MM 3: 7.2.8"

#~ msgid ""
#~ "SELECT ST_LineFromText('LINESTRING(1 2, 3 4)') AS aline, "
#~ "ST_LineFromText('POINT(1 2)') AS null_return;\n"
#~ "aline                            | null_return\n"
#~ "------------------------------------------------\n"
#~ "010200000002000000000000000000F ... | t"
#~ msgstr ""
#~ "SELECT ST_LineFromText('LINESTRING(1 2, 3 4)') AS aline, "
#~ "ST_LineFromText('POINT(1 2)') AS null_return;\n"
#~ "aline                            | null_return\n"
#~ "------------------------------------------------\n"
#~ "010200000002000000000000000000F ... | t"

#~ msgid "ST_LineFromWKB"
#~ msgstr "ST_LineFromWKB"

#~ msgid "Makes a <varname>LINESTRING</varname> from WKB with the given SRID"
#~ msgstr ""
#~ "주어진 SRID와 함께 WKB로부터 <varname>LINESTRING</varname> 을 만듭니다."

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_LineFromWKB</function></"
#~ "funcdef> <paramdef><type>bytea </type> <parameter>WKB</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_LineFromWKB</function></funcdef> <paramdef><type>bytea </"
#~ "type> <parameter>WKB</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_LineFromWKB</function></"
#~ "funcdef> <paramdef><type>bytea </type> <parameter>WKB</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_LineFromWKB</function></funcdef> <paramdef><type>bytea </"
#~ "type> <parameter>WKB</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"

#~ msgid ""
#~ "The <varname>ST_LineFromWKB</varname> function, takes a well-known binary "
#~ "representation of geometry and a Spatial Reference System ID "
#~ "(<varname>SRID</varname>) and creates an instance of the appropriate "
#~ "geometry type - in this case, a <varname>LINESTRING</varname> geometry. "
#~ "This function plays the role of the Geometry Factory in SQL."
#~ msgstr ""
#~ "<varname>ST_LineFromWKB</varname> 함수는 도형의 WKB 표현식과 "
#~ "<varname>SRID</varname>(공간 참조 시스템 ID)를 받아 적절한 도형 유형의 인"
#~ "스턴스 - 이 경우, <varname>LINESTRING</varname> 도형 - 를 생성합니다. 이 "
#~ "함수는 SQL에서 도형 공장(Geometry Factory) 역할을 합니다."

#~ msgid ""
#~ "If an SRID is not specified, it defaults to 0. <varname>NULL</varname> is "
#~ "returned if the input <varname>bytea</varname> does not represent a "
#~ "<varname>LINESTRING</varname>."
#~ msgstr ""
#~ "SRID를 설정하지 않은 경우, 기본값인 0을 씁니다. 입력된 <varname>bytea</"
#~ "varname>가 라인스트링이 아닌 경우, <varname>NULL</varname>을 반환합니다."

#~ msgid ""
#~ "If you know all your geometries are <varname>LINESTRING</varname>s, its "
#~ "more efficient to just use <xref linkend=\"ST_GeomFromWKB\"/>. This "
#~ "function just calls <xref linkend=\"ST_GeomFromWKB\"/> and adds "
#~ "additional validation that it returns a linestring."
#~ msgstr ""
#~ "사용자 도형이 모두 <varname>LINESTRING</varname>이란 걸 알고 있다면, 그냥 "
#~ "<xref linkend=\"ST_GeomFromWKB\"/> 함수를 쓰는 편이 더 효율적입니다. 이 함"
#~ "수는 <xref linkend=\"ST_GeomFromWKB\"/> 만 호출하고, 라인스트링을 반환한다"
#~ "는 유효성 검사를 추가합니다."

#~ msgid "&sqlmm_compliant; SQL-MM 3: 7.2.9"
#~ msgstr "&sqlmm_compliant; SQL-MM 3: 7.2.9"

#~ msgid ""
#~ "SELECT ST_LineFromWKB(ST_AsBinary(ST_GeomFromText('LINESTRING(1 2, 3 "
#~ "4)'))) AS aline,\n"
#~ "                ST_LineFromWKB(ST_AsBinary(ST_GeomFromText('POINT(1 "
#~ "2)'))) IS NULL AS null_return;\n"
#~ "aline                            | null_return\n"
#~ "------------------------------------------------\n"
#~ "010200000002000000000000000000F ... | t"
#~ msgstr ""
#~ "SELECT ST_LineFromWKB(ST_AsBinary(ST_GeomFromText('LINESTRING(1 2, 3 "
#~ "4)'))) AS aline,\n"
#~ "                ST_LineFromWKB(ST_AsBinary(ST_GeomFromText('POINT(1 "
#~ "2)'))) IS NULL AS null_return;\n"
#~ "aline                            | null_return\n"
#~ "------------------------------------------------\n"
#~ "010200000002000000000000000000F ... | t"

#~ msgid ", <xref linkend=\"ST_LinestringFromWKB\"/>"
#~ msgstr ", <xref linkend=\"ST_LinestringFromWKB\"/>"

#~ msgid "ST_LinestringFromWKB"
#~ msgstr "ST_LinestringFromWKB"

#~ msgid "Makes a geometry from WKB with the given SRID."
#~ msgstr "주어진 SRID와 함께 WKB로부터 도형을 만듭니다."

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_LinestringFromWKB</"
#~ "function></funcdef> <paramdef><type>bytea </type> <parameter>WKB</"
#~ "parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_LinestringFromWKB</function></funcdef> <paramdef><type>bytea "
#~ "</type> <parameter>WKB</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_LinestringFromWKB</"
#~ "function></funcdef> <paramdef><type>bytea </type> <parameter>WKB</"
#~ "parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_LinestringFromWKB</function></funcdef> <paramdef><type>bytea "
#~ "</type> <parameter>WKB</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"

#~ msgid ""
#~ "The <varname>ST_LinestringFromWKB</varname> function, takes a well-known "
#~ "binary representation of geometry and a Spatial Reference System ID "
#~ "(<varname>SRID</varname>) and creates an instance of the appropriate "
#~ "geometry type - in this case, a <varname>LINESTRING</varname> geometry. "
#~ "This function plays the role of the Geometry Factory in SQL."
#~ msgstr ""
#~ "<varname>ST_LinestringFromWKB</varname> 함수는 도형의 WKB 표현식과 "
#~ "<varname>SRID</varname>(공간 참조 시스템 ID)를 받아 적절한 도형 유형의 인"
#~ "스턴스 - 이 경우, <varname>LINESTRING</varname> 도형 - 를 생성합니다. 이 "
#~ "함수는 SQL에서 도형 공장(Geometry Factory) 역할을 합니다."

#~ msgid ""
#~ "If an SRID is not specified, it defaults to 0. <varname>NULL</varname> is "
#~ "returned if the input <varname>bytea</varname> does not represent a "
#~ "<varname>LINESTRING</varname> geometry. This an alias for <xref linkend="
#~ "\"ST_LineFromWKB\"/>."
#~ msgstr ""
#~ "SRID를 설정하지 않은 경우, 기본값인 0을 씁니다. 입력된 <varname>bytea</"
#~ "varname>가 <varname>LINESTRING</varname> 도형이 아닌 경우, <varname>NULL</"
#~ "varname>을 반환합니다."

#~ msgid "OGC SPEC 3.2.6.2 - optional SRID is from the conformance suite."
#~ msgstr ""
#~ "OGC 사양 3.2.6.2 - 선택적인 SRID를 적합성 스위트(conformance suite)로부터 "
#~ "가져오십시오."

#~ msgid ""
#~ "If you know all your geometries are <varname>LINESTRING</varname>s, it's "
#~ "more efficient to just use <xref linkend=\"ST_GeomFromWKB\"/>. This "
#~ "function just calls <xref linkend=\"ST_GeomFromWKB\"/> and adds "
#~ "additional validation that it returns a <varname>LINESTRING</varname>."
#~ msgstr ""
#~ "사용자 도형이 모두 <varname>LINESTRING</varname>이란 걸 알고 있다면, 그냥 "
#~ "<xref linkend=\"ST_GeomFromWKB\"/> 함수를 쓰는 편이 더 효율적입니다. 이 함"
#~ "수는 <xref linkend=\"ST_GeomFromWKB\"/> 만 호출하고, <varname>LINESTRING</"
#~ "varname>을 반환한다는 유효성 검사를 추가합니다."

#~ msgid ""
#~ "SELECT\n"
#~ "  ST_LineStringFromWKB(\n"
#~ "        ST_AsBinary(ST_GeomFromText('LINESTRING(1 2, 3 4)'))\n"
#~ "  ) AS aline,\n"
#~ "  ST_LinestringFromWKB(\n"
#~ "        ST_AsBinary(ST_GeomFromText('POINT(1 2)'))\n"
#~ "  ) IS NULL AS null_return;\n"
#~ "   aline                            | null_return\n"
#~ "------------------------------------------------\n"
#~ "010200000002000000000000000000F ... | t"
#~ msgstr ""
#~ "SELECT\n"
#~ "  ST_LineStringFromWKB(\n"
#~ "        ST_AsBinary(ST_GeomFromText('LINESTRING(1 2, 3 4)'))\n"
#~ "  ) AS aline,\n"
#~ "  ST_LinestringFromWKB(\n"
#~ "        ST_AsBinary(ST_GeomFromText('POINT(1 2)'))\n"
#~ "  ) IS NULL AS null_return;\n"
#~ "   aline                            | null_return\n"
#~ "------------------------------------------------\n"
#~ "010200000002000000000000000000F ... | t"

#~ msgid ", <xref linkend=\"ST_LineFromWKB\"/>"
#~ msgstr ", <xref linkend=\"ST_LineFromWKB\"/>"

#~ msgid "ST_MakeBox2D"
#~ msgstr "ST_MakeBox2D"

#~ msgid ""
#~ "<funcdef>box2d <function>ST_MakeBox2D</function></funcdef> "
#~ "<paramdef><type>geometry </type> <parameter>pointLowLeft</parameter></"
#~ "paramdef> <paramdef><type>geometry </type> <parameter>pointUpRight</"
#~ "parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>box2d <function>ST_MakeBox2D</function></funcdef> "
#~ "<paramdef><type>geometry </type> <parameter>pointLowLeft</parameter></"
#~ "paramdef> <paramdef><type>geometry </type> <parameter>pointUpRight</"
#~ "parameter></paramdef>"

#~ msgid ""
#~ "Creates a BOX2D defined by the given point geometries. This is useful for "
#~ "doing range queries"
#~ msgstr ""
#~ "주어진 포인트 도형들로 정의되는 BOX2D를 생성합니다. 이 함수는 범위(range) "
#~ "쿼리에 쓸모가 있습니다."

#~ msgid ""
#~ "--Return all features that fall reside or partly reside in a US national "
#~ "atlas coordinate bounding box\n"
#~ "--It is assumed here that the geometries are stored with SRID = 2163 (US "
#~ "National atlas equal area)\n"
#~ "SELECT feature_id, feature_name, the_geom\n"
#~ "FROM features\n"
#~ "WHERE the_geom &amp;&amp; ST_SetSRID(ST_MakeBox2D(ST_Point(-989502.1875, "
#~ "528439.5625),\n"
#~ "        ST_Point(-987121.375 ,529933.1875)),2163)"
#~ msgstr ""
#~ "-- 미국 전국지도 좌표 경계 상자 내부에 존재하는 모든 피처를 반환합니다.\n"
#~ "-- 도형들이 SRID 2163(미국 등면적(equal area) 전국지도)으로 저장됐다고 가"
#~ "정합니다.\n"
#~ "SELECT feature_id, feature_name, the_geom\n"
#~ "FROM features\n"
#~ "WHERE the_geom &amp;&amp; ST_SetSRID(ST_MakeBox2D(ST_Point(-989502.1875, "
#~ "528439.5625),\n"
#~ "        ST_Point(-987121.375 ,529933.1875)),2163)"

#~ msgid "ST_3DMakeBox"
#~ msgstr "ST_3DMakeBox"

#~ msgid "Creates a BOX3D defined by the given 3d point geometries."
#~ msgstr "주어진 3D 포인트 도형들로 정의되는 BOX3D를 생성합니다."

#~ msgid ""
#~ "<funcdef>box3d <function>ST_3DMakeBox</function></funcdef> "
#~ "<paramdef><type>geometry </type> <parameter>point3DLowLeftBottom</"
#~ "parameter></paramdef> <paramdef><type>geometry </type> "
#~ "<parameter>point3DUpRightTop</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>box3d <function>ST_3DMakeBox</function></funcdef> "
#~ "<paramdef><type>geometry </type> <parameter>point3DLowLeftBottom</"
#~ "parameter></paramdef> <paramdef><type>geometry </type> "
#~ "<parameter>point3DUpRightTop</parameter></paramdef>"

#~ msgid "This function supports 3d and will not drop the z-index."
#~ msgstr "이 함수는 3차원을 지원하며 Z 인덱스를 삭제하지 않습니다."

#~ msgid "Changed: 2.0.0 In prior versions this used to be called ST_MakeBox3D"
#~ msgstr "변경 사항: 2.0.0 미만 버전에서는 ST_MakeBox3D라는 명칭이었습니다."

#~ msgid ""
#~ "SELECT ST_3DMakeBox(ST_MakePoint(-989502.1875, 528439.5625, 10),\n"
#~ "        ST_MakePoint(-987121.375 ,529933.1875, 10)) As abb3d\n"
#~ "\n"
#~ "--bb3d--\n"
#~ "--------\n"
#~ "BOX3D(-989502.1875 528439.5625 10,-987121.375 529933.1875 10)"
#~ msgstr ""
#~ "SELECT ST_3DMakeBox(ST_MakePoint(-989502.1875, 528439.5625, 10),\n"
#~ "        ST_MakePoint(-987121.375 ,529933.1875, 10)) As abb3d\n"
#~ "\n"
#~ "--bb3d--\n"
#~ "--------\n"
#~ "BOX3D(-989502.1875 528439.5625 10,-987121.375 529933.1875 10)"

#~ msgid ", <xref linkend=\"ST_SetSRID\"/>, <xref linkend=\"ST_SRID\"/>"
#~ msgstr ", <xref linkend=\"ST_SetSRID\"/>, <xref linkend=\"ST_SRID\"/>"

#~ msgid ""
#~ "ST_MakeLine comes in 3 forms: a spatial aggregate that takes rows of "
#~ "point, multipoint, or line geometries and returns a line string, a "
#~ "function that takes an array of point, multipoint, or line, and a regular "
#~ "function that takes two point, multipoint, or line geometries. You might "
#~ "want to use a subselect to order points before feeding them to the "
#~ "aggregate version of this function."
#~ msgstr ""
#~ "ST_MakeLine 함수는 세 가지 형태로 나타납니다: 포인트, 멀티포인트 또는 라"
#~ "인 도형들의 행을 입력받아 라인스트링을 반환하는 공간 합산(spatial "
#~ "aggregate) 함수, 포인트, 멀티포인트 또는 라인 배열을 입력받는 함수, 그리"
#~ "고 포인트, 멀티포인트 또는 라인 도형 2개를 입력받는 정규 함수. 이 함수의 "
#~ "합산 버전에 포인트를 입력하기 전에 하위집합을 이용해서 포인트들을 정렬하"
#~ "는 편이 좋습니다."

#~ msgid "Inputs other than point, multipoint, or lines are ignored."
#~ msgstr ""
#~ "포인트, 멀티포인트, 또는 라인이 아닌 도형을 입력하면 무시할 것입니다."

#~ msgid ""
#~ "When adding line components common nodes at the beginning of lines are "
#~ "removed from the output. Common nodes in point and multipoint inputs are "
#~ "not removed."
#~ msgstr ""
#~ "라인 구성 요소를 추가할 경우 출력물에서 라인의 시작점에 있는 일반 노드를 "
#~ "제거합니다. 포인트 및 멀티포인트의 일반 노드는 제거되지 않습니다."

#~ msgid ""
#~ "-- If you are using PostgreSQL 9.0+\n"
#~ "-- (you can use the new ORDER BY support for aggregates)\n"
#~ "-- this is a guaranteed way to get a correctly ordered linestring\n"
#~ "-- Your order by part can order by more than one column if needed\n"
#~ "SELECT gps.gps_track, ST_MakeLine(gps.the_geom ORDER BY gps_time) As "
#~ "newgeom\n"
#~ "        FROM gps_points As gps\n"
#~ "        GROUP BY gps.gps_track;"
#~ msgstr ""
#~ "-- PostgreSQL 9.0 이상 버전을 사용중이라면\n"
#~ "-- (합산을 위해 새로운 'ORDER BY' 지원을 사용할 수 있습니다)\n"
#~ "-- 다음은 정확히 정렬된 라인스트링을 얻을 수 있는 확실한 방법입니다.\n"
#~ "-- 필요할 경우 하나 이상의 열을 통해 사용자 배열을 부분적으로 정렬할 수 있"
#~ "습니다.\n"
#~ "SELECT gps.gps_track, ST_MakeLine(gps.the_geom ORDER BY gps_time) As "
#~ "newgeom\n"
#~ "        FROM gps_points As gps\n"
#~ "        GROUP BY gps.gps_track;"

#~ msgid "Examples: Non-Spatial Aggregate version"
#~ msgstr "예시: 비공간 합산 버전"

#~ msgid ""
#~ "First example is a simple one off line string composed of 2 points. The "
#~ "second formulates line strings from 2 points a user draws. The third is a "
#~ "one-off that joins 2 3d points to create a line in 3d space."
#~ msgstr ""
#~ "첫 번째는 포인트 2개로 이루어진 라인스트링을 한 번에 만드는 간단한 예시입"
#~ "니다. 두 번째는 사용자가 그린 포인트 2개로부터 라인스트링을 작성합니다. "
#~ "세 번째는 3D 포인트 2개를 연결해서 3차원 공간에 라인을 한 번에 생성합니다."

#~ msgid ""
#~ "SELECT ST_AsText(ST_MakeLine(ST_MakePoint(1,2), ST_MakePoint(3,4)));\n"
#~ "          st_astext\n"
#~ "---------------------\n"
#~ " LINESTRING(1 2,3 4)\n"
#~ "\n"
#~ "SELECT userpoints.id, ST_MakeLine(startpoint, endpoint) As drawn_line\n"
#~ "        FROM userpoints ;\n"
#~ "\n"
#~ "SELECT ST_AsEWKT(ST_MakeLine(ST_MakePoint(1,2,3), ST_MakePoint(3,4,5)));\n"
#~ "                st_asewkt\n"
#~ "-------------------------\n"
#~ " LINESTRING(1 2 3,3 4 5)"
#~ msgstr ""
#~ "SELECT ST_AsText(ST_MakeLine(ST_MakePoint(1,2), ST_MakePoint(3,4)));\n"
#~ "          st_astext\n"
#~ "---------------------\n"
#~ " LINESTRING(1 2,3 4)\n"
#~ "\n"
#~ "SELECT userpoints.id, ST_MakeLine(startpoint, endpoint) As drawn_line\n"
#~ "        FROM userpoints ;\n"
#~ "\n"
#~ "SELECT ST_AsEWKT(ST_MakeLine(ST_MakePoint(1,2,3), ST_MakePoint(3,4,5)));\n"
#~ "                st_asewkt\n"
#~ "-------------------------\n"
#~ " LINESTRING(1 2 3,3 4 5)"

#~ msgid ""
#~ "Creates a Polygon formed by the given shell. Input geometries must be "
#~ "closed LINESTRINGS. Comes in 2 variants."
#~ msgstr ""
#~ "주어진 외부 구조(shell)로 형성된 폴리곤을 생성합니다. 입력 도형이 닫힌 라"
#~ "인스트링이어야 합니다. 두 가지 변종이 있습니다."

#~ msgid "Variant 1: Takes one closed linestring."
#~ msgstr "변종 1: 닫힌 라인스트링 하나를 입력받습니다."

#~ msgid ""
#~ "Variant 2: Creates a Polygon formed by the given shell and array of "
#~ "holes. You can construct a geometry array using ST_Accum or the "
#~ "PostgreSQL ARRAY[] and ARRAY() constructs. Input geometries must be "
#~ "closed LINESTRINGS."
#~ msgstr ""
#~ "변종 2: 주어진 외부 구조 및 구멍 배열로 형성된 폴리곤을 생성합니다. "
#~ "ST_Accum 또는 PostgreSQL ARRAY[] 및 ARRAY() 구조를 이용해서 도형 배열을 작"
#~ "성할 수 있습니다. 입력 도형은 닫힌 라인스트링이어야 합니다."

#~ msgid "Examples: Single closed LINESTRING"
#~ msgstr "예시: 단일 폐쇄형 라인스트링"

#~ msgid ""
#~ "--2d line\n"
#~ "SELECT ST_MakePolygon(ST_GeomFromText('LINESTRING(75.15 29.53,77 29,77.6 "
#~ "29.5, 75.15 29.53)'));\n"
#~ "--If linestring is not closed\n"
#~ "--you can add the start point to close it\n"
#~ "SELECT ST_MakePolygon(ST_AddPoint(foo.open_line, ST_StartPoint(foo."
#~ "open_line)))\n"
#~ "FROM (\n"
#~ "SELECT ST_GeomFromText('LINESTRING(75.15 29.53,77 29,77.6 29.5)') As "
#~ "open_line) As foo;\n"
#~ "\n"
#~ "--3d closed line\n"
#~ "SELECT ST_MakePolygon(ST_GeomFromText('LINESTRING(75.15 29.53 1,77 29 "
#~ "1,77.6 29.5 1, 75.15 29.53 1)'));\n"
#~ "\n"
#~ "st_asewkt\n"
#~ "-----------\n"
#~ "POLYGON((75.15 29.53 1,77 29 1,77.6 29.5 1,75.15 29.53 1))\n"
#~ "\n"
#~ "--measured line --\n"
#~ "SELECT ST_MakePolygon(ST_GeomFromText('LINESTRINGM(75.15 29.53 1,77 29 "
#~ "1,77.6 29.5 2, 75.15 29.53 2)'));\n"
#~ "\n"
#~ "st_asewkt\n"
#~ "----------\n"
#~ "POLYGONM((75.15 29.53 1,77 29 1,77.6 29.5 2,75.15 29.53 2))"
#~ msgstr ""
#~ "-- 2D 라인\n"
#~ "SELECT ST_MakePolygon(ST_GeomFromText('LINESTRING(75.15 29.53,77 29,77.6 "
#~ "29.5, 75.15 29.53)'));\n"
#~ "-- 닫힌 라인스트링이 아닐 경우\n"
#~ "-- 시작점을 추가해서 닫을 수 있습니다\n"
#~ "SELECT ST_MakePolygon(ST_AddPoint(foo.open_line, ST_StartPoint(foo."
#~ "open_line)))\n"
#~ "FROM (\n"
#~ "SELECT ST_GeomFromText('LINESTRING(75.15 29.53,77 29,77.6 29.5)') As "
#~ "open_line) As foo;\n"
#~ "\n"
#~ "-- 닫힌 3D 라인\n"
#~ "SELECT ST_MakePolygon(ST_GeomFromText('LINESTRING(75.15 29.53 1,77 29 "
#~ "1,77.6 29.5 1, 75.15 29.53 1)'));\n"
#~ "\n"
#~ "st_asewkt\n"
#~ "-----------\n"
#~ "POLYGON((75.15 29.53 1,77 29 1,77.6 29.5 1,75.15 29.53 1))\n"
#~ "\n"
#~ "-- 측정 라인(measured line) --\n"
#~ "SELECT ST_MakePolygon(ST_GeomFromText('LINESTRINGM(75.15 29.53 1,77 29 "
#~ "1,77.6 29.5 2, 75.15 29.53 2)'));\n"
#~ "\n"
#~ "st_asewkt\n"
#~ "----------\n"
#~ "POLYGONM((75.15 29.53 1,77 29 1,77.6 29.5 2,75.15 29.53 2))"

#~ msgid ""
#~ "A left join is used to guarantee we get all provinces back even if they "
#~ "have no lakes."
#~ msgstr ""
#~ "호수가 없는 경우라도 모든 지역을 반환받도록 보장하기 위해 LEFT JOIN을 활용"
#~ "합니다."

#~ msgid ""
#~ "<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
#~ "<paramdef><type>double precision</type> <parameter>x</parameter></"
#~ "paramdef> <paramdef><type>double precision</type> <parameter>y</"
#~ "parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
#~ "<paramdef><type>double precision</type> <parameter>x</parameter></"
#~ "paramdef> <paramdef><type>double precision</type> <parameter>y</"
#~ "parameter></paramdef>"

#~ msgid ""
#~ "<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
#~ "<paramdef><type>double precision</type> <parameter>x</parameter></"
#~ "paramdef> <paramdef><type>double precision</type> <parameter>y</"
#~ "parameter></paramdef> <paramdef><type>double precision</type> "
#~ "<parameter>z</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
#~ "<paramdef><type>double precision</type> <parameter>x</parameter></"
#~ "paramdef> <paramdef><type>double precision</type> <parameter>y</"
#~ "parameter></paramdef> <paramdef><type>double precision</type> "
#~ "<parameter>z</parameter></paramdef>"

#~ msgid "Note x is longitude and y is latitude"
#~ msgstr "x가 경도이고 y가 위도라는 점을 주의하십시오."

#~ msgid "Creates a point geometry with an x y and m coordinate."
#~ msgstr "x, y, m 좌표를 가진 포인트 도형을 생성합니다."

#~ msgid "Note x is longitude and y is latitude."
#~ msgstr "x가 경도이고 y가 위도라는 점을 주의하십시오."

#~ msgid ""
#~ "We use ST_AsEWKT in these examples to show the text representation "
#~ "instead of ST_AsText because ST_AsText does not support returning M."
#~ msgstr ""
#~ "이번 예시에서 ST_AsEWKT 함수를 사용하는 이유는, ST_AsText 함수가 m을 반환"
#~ "하지 못 하기 때문에 ST_AsText 대신 텍스트 표현식을 표출하기 위해서 입니다."

#~ msgid ""
#~ "--Return EWKT representation of point with unknown SRID\n"
#~ "SELECT ST_AsEWKT(ST_MakePointM(-71.1043443253471, 42.3150676015829, "
#~ "10));\n"
#~ "\n"
#~ "--result\n"
#~ "                                   st_asewkt\n"
#~ "-----------------------------------------------\n"
#~ " POINTM(-71.1043443253471 42.3150676015829 10)\n"
#~ "\n"
#~ "--Return EWKT representation of point with measure marked as WGS 84 long "
#~ "lat\n"
#~ "SELECT ST_AsEWKT(ST_SetSRID(ST_MakePointM(-71.1043443253471, "
#~ "42.3150676015829,10),4326));\n"
#~ "\n"
#~ "                                                st_asewkt\n"
#~ "---------------------------------------------------------\n"
#~ "SRID=4326;POINTM(-71.1043443253471 42.3150676015829 10)\n"
#~ "\n"
#~ "--Return a 3d point (e.g. has altitude)\n"
#~ "SELECT ST_MakePoint(1, 2,1.5);\n"
#~ "\n"
#~ "--Get m of point\n"
#~ "SELECT ST_M(ST_MakePointM(-71.1043443253471, 42.3150676015829,10));\n"
#~ "result\n"
#~ "-------\n"
#~ "10"
#~ msgstr ""
#~ "-- 알려지지 않은 SRID를 가진 포인트의 EWKT 표현식을 반환\n"
#~ "SELECT ST_AsEWKT(ST_MakePointM(-71.1043443253471, 42.3150676015829, "
#~ "10));\n"
#~ "\n"
#~ "-- 결과\n"
#~ "st_asewkt\n"
#~ "-----------------------------------------------\n"
#~ " POINTM(-71.1043443253471 42.3150676015829 10)\n"
#~ "\n"
#~ "-- WGS84 경위도로 표시된 단위를 가진 포인트의 EWKT 표현식을 반환\n"
#~ "SELECT ST_AsEWKT(ST_SetSRID(ST_MakePointM(-71.1043443253471, "
#~ "42.3150676015829,10),4326));\n"
#~ "\n"
#~ "st_asewkt\n"
#~ "---------------------------------------------------------\n"
#~ "SRID=4326;POINTM(-71.1043443253471 42.3150676015829 10)\n"
#~ "\n"
#~ "-- 3D (예를 들자면 고도를 가진) 포인트를 반환\n"
#~ "SELECT ST_MakePoint(1, 2,1.5);\n"
#~ "\n"
#~ "-- 포인트의 m을 얻어오기\n"
#~ "SELECT ST_M(ST_MakePointM(-71.1043443253471, 42.3150676015829,10));\n"
#~ "result\n"
#~ "-------\n"
#~ "10"

#~ msgid "ST_MLineFromText"
#~ msgstr "ST_MLineFromText"

#~ msgid "Return a specified ST_MultiLineString value from WKT representation."
#~ msgstr "WKT 표현식으로부터 지정된 ST_MultiLineString 값을 반환합니다."

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_MLineFromText</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>WKT</parameter></"
#~ "paramdef> <paramdef><type>integer </type> <parameter>srid</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_MLineFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_MLineFromText</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>WKT</parameter></"
#~ "paramdef> <paramdef><type>integer </type> <parameter>srid</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_MLineFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> </funcprototype>"

#~ msgid "Returns null if the WKT is not a MULTILINESTRING"
#~ msgstr "WKT가 멀티라인스트링이 아닌 경우 null을 반환합니다."

#~ msgid ""
#~ "If you are absolutely sure all your WKT geometries are points, don't use "
#~ "this function. It is slower than ST_GeomFromText since it adds an "
#~ "additional validation step."
#~ msgstr ""
#~ "사용자 WKT 도형이 모두 포인트라고 확신한다면, 이 함수를 사용하지 마십시"
#~ "오. 이 함수는 추가적인 유효성 검사 단계를 거치므로 ST_GeomFromText보다 느"
#~ "립니다."

#~ msgid "&sqlmm_compliant;SQL-MM 3: 9.4.4"
#~ msgstr "&sqlmm_compliant;SQL-MM 3: 9.4.4"

#~ msgid "ST_MPointFromText"
#~ msgstr "ST_MPointFromText"

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_MPointFromText</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>WKT</parameter></"
#~ "paramdef> <paramdef><type>integer </type> <parameter>srid</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_MPointFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_MPointFromText</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>WKT</parameter></"
#~ "paramdef> <paramdef><type>integer </type> <parameter>srid</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_MPointFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> </funcprototype>"

#~ msgid "Returns null if the WKT is not a MULTIPOINT"
#~ msgstr "WKT가 멀티포인트가 아닌 경우 null을 반환합니다."

#~ msgid "&sfs_compliant; 3.2.6.2"
#~ msgstr "&sfs_compliant; 3.2.6.2"

#~ msgid "&sqlmm_compliant; SQL-MM 3: 9.2.4"
#~ msgstr "&sqlmm_compliant; SQL-MM 3: 9.2.4"

#~ msgid ""
#~ "SELECT ST_MPointFromText('MULTIPOINT(1 2, 3 4)');\n"
#~ "SELECT ST_MPointFromText('MULTIPOINT(-70.9590 42.1180, -70.9611 "
#~ "42.1223)', 4326);"
#~ msgstr ""
#~ "SELECT ST_MPointFromText('MULTIPOINT(1 2, 3 4)');\n"
#~ "SELECT ST_MPointFromText('MULTIPOINT(-70.9590 42.1180, -70.9611 "
#~ "42.1223)', 4326);"

#~ msgid "ST_MPolyFromText"
#~ msgstr "ST_MPolyFromText"

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_MPolyFromText</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>WKT</parameter></"
#~ "paramdef> <paramdef><type>integer </type> <parameter>srid</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_MPolyFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_MPolyFromText</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>WKT</parameter></"
#~ "paramdef> <paramdef><type>integer </type> <parameter>srid</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_MPolyFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> </funcprototype>"

#~ msgid "Throws an error if the WKT is not a MULTIPOLYGON"
#~ msgstr "WKT가 멀티폴리곤이 아닌 경우 오류가 발생합니다."

#~ msgid ""
#~ "If you are absolutely sure all your WKT geometries are multipolygons, "
#~ "don't use this function. It is slower than ST_GeomFromText since it adds "
#~ "an additional validation step."
#~ msgstr ""
#~ "사용자 WKT 도형이 모두 멀티폴리곤이라고 확신한다면, 이 함수를 사용하지 마"
#~ "십시오. 이 함수는 추가적인 유효성 검사 단계를 거치므로 ST_GeomFromText보"
#~ "다 느립니다."

#~ msgid "&sqlmm_compliant; SQL-MM 3: 9.6.4"
#~ msgstr "&sqlmm_compliant; SQL-MM 3: 9.6.4"

#~ msgid ""
#~ "SELECT ST_MPolyFromText('MULTIPOLYGON(((0 0 1,20 0 1,20 20 1,0 20 1,0 0 "
#~ "1),(5 5 3,5 7 3,7 7 3,7 5 3,5 5 3)))');\n"
#~ "SELECt ST_MPolyFromText('MULTIPOLYGON(((-70.916 42.1002,-70.9468 "
#~ "42.0946,-70.9765 42.0872,-70.9754 42.0875,-70.9749 42.0879,-70.9752 "
#~ "42.0881,-70.9754 42.0891,-70.9758 42.0894,-70.9759 42.0897,-70.9759 "
#~ "42.0899,-70.9754 42.0902,-70.9756 42.0906,-70.9753 42.0907,-70.9753 "
#~ "42.0917,-70.9757 42.0924,-70.9755 42.0928,-70.9755 42.0942,-70.9751 "
#~ "42.0948,-70.9755 42.0953,-70.9751 42.0958,-70.9751 42.0962,-70.9759 "
#~ "42.0983,-70.9767 42.0987,-70.9768 42.0991,-70.9771 42.0997,-70.9771 "
#~ "42.1003,-70.9768 42.1005,-70.977 42.1011,-70.9766 42.1019,-70.9768 "
#~ "42.1026,-70.9769 42.1033,-70.9775 42.1042,-70.9773 42.1043,-70.9776 "
#~ "42.1043,-70.9778 42.1048,-70.9773 42.1058,-70.9774 42.1061,-70.9779 "
#~ "42.1065,-70.9782 42.1078,-70.9788 42.1085,-70.9798 42.1087,-70.9806 "
#~ "42.109,-70.9807 42.1093,-70.9806 42.1099,-70.9809 42.1109,-70.9808 "
#~ "42.1112,-70.9798 42.1116,-70.9792 42.1127,-70.979 42.1129,-70.9787 "
#~ "42.1134,-70.979 42.1139,-70.9791 42.1141,-70.9987 42.1116,-71.0022 "
#~ "42.1273,\n"
#~ "        -70.9408 42.1513,-70.9315 42.1165,-70.916 42.1002)))',4326);"
#~ msgstr ""
#~ "SELECT ST_MPolyFromText('MULTIPOLYGON(((0 0 1,20 0 1,20 20 1,0 20 1,0 0 "
#~ "1),(5 5 3,5 7 3,7 7 3,7 5 3,5 5 3)))');\n"
#~ "SELECt ST_MPolyFromText('MULTIPOLYGON(((-70.916 42.1002,-70.9468 "
#~ "42.0946,-70.9765 42.0872,-70.9754 42.0875,-70.9749 42.0879,-70.9752 "
#~ "42.0881,-70.9754 42.0891,-70.9758 42.0894,-70.9759 42.0897,-70.9759 "
#~ "42.0899,-70.9754 42.0902,-70.9756 42.0906,-70.9753 42.0907,-70.9753 "
#~ "42.0917,-70.9757 42.0924,-70.9755 42.0928,-70.9755 42.0942,-70.9751 "
#~ "42.0948,-70.9755 42.0953,-70.9751 42.0958,-70.9751 42.0962,-70.9759 "
#~ "42.0983,-70.9767 42.0987,-70.9768 42.0991,-70.9771 42.0997,-70.9771 "
#~ "42.1003,-70.9768 42.1005,-70.977 42.1011,-70.9766 42.1019,-70.9768 "
#~ "42.1026,-70.9769 42.1033,-70.9775 42.1042,-70.9773 42.1043,-70.9776 "
#~ "42.1043,-70.9778 42.1048,-70.9773 42.1058,-70.9774 42.1061,-70.9779 "
#~ "42.1065,-70.9782 42.1078,-70.9788 42.1085,-70.9798 42.1087,-70.9806 "
#~ "42.109,-70.9807 42.1093,-70.9806 42.1099,-70.9809 42.1109,-70.9808 "
#~ "42.1112,-70.9798 42.1116,-70.9792 42.1127,-70.979 42.1129,-70.9787 "
#~ "42.1134,-70.979 42.1139,-70.9791 42.1141,-70.9987 42.1116,-71.0022 "
#~ "42.1273,\n"
#~ "        -70.9408 42.1513,-70.9315 42.1165,-70.916 42.1002)))',4326);"

#~ msgid ""
#~ "-- the :: is PostgreSQL short-hand for casting.\n"
#~ "SELECT ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326)::"
#~ "geography;"
#~ msgstr ""
#~ "-- '::'는 형변환을 의미하는 PostgreSQL의 표기입니다.\n"
#~ "SELECT ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326)::"
#~ "geography;"

#~ msgid ""
#~ "--If your point coordinates are in a different spatial reference from "
#~ "WGS-84 long lat, then you need to transform before casting\n"
#~ "-- This example we convert a point in Pennsylvania State Plane feet to "
#~ "WGS 84 and then geography\n"
#~ "SELECT ST_Transform(ST_SetSRID(ST_Point(3637510, 3014852),2273),4326)::"
#~ "geography;"
#~ msgstr ""
#~ "-- 사용자 포인트의 좌표계가 WGS84 경위도와 다를 경우, 형변환 전에 재투영해"
#~ "야 합니다.\n"
#~ "-- 이 예시에서는 펜실베이니아 주의 피트 단위 평면에 있는 포인트를 WGS84로 "
#~ "재투영한 다음 지리형으로 형변환합니다.\n"
#~ "SELECT ST_Transform(ST_SetSRID(ST_Point(3637510, 3014852),2273),4326)::"
#~ "geography;"

#~ msgid "ST_PointFromGeoHash"
#~ msgstr "ST_PointFromGeoHash"

#~ msgid "Return a point from a GeoHash string."
#~ msgstr "GeoHash 스트링으로부터 포인트를 반환합니다."

#~ msgid ""
#~ "<funcdef>point <function>ST_PointFromGeoHash</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>geohash</parameter></paramdef> "
#~ "<paramdef choice=\"opt\"><type>integer </type> "
#~ "<parameter>precision=full_precision_of_geohash</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>point <function>ST_PointFromGeoHash</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>geohash</parameter></paramdef> "
#~ "<paramdef choice=\"opt\"><type>integer </type> "
#~ "<parameter>precision=full_precision_of_geohash</parameter></paramdef>"

#~ msgid ""
#~ "Return a point from a GeoHash string. The point represents the center "
#~ "point of the GeoHash."
#~ msgstr ""
#~ "GeoHash 스트링으로부터 포인트를 반환합니다. 해당 포인트는 GeoHash의 중심점"
#~ "입니다."

#~ msgid ""
#~ "If no <varname>precision</varname> is specified ST_PointFromGeoHash "
#~ "returns a point based on full precision of the input GeoHash string."
#~ msgstr ""
#~ "<varname>precision</varname> 을 설정하지 않은 경우, ST_PointFromGeoHash가 "
#~ "입력 GeoHash 스트링의 전체 정확도를 기반으로 포인트를 반환합니다."

#~ msgid ""
#~ "If <varname>precision</varname> is specified ST_PointFromGeoHash will use "
#~ "that many characters from the GeoHash to create the point."
#~ msgstr ""
#~ "<varname>precision</varname> 을 설정한 경우, ST_PointFromGeoHash가 GeoHash"
#~ "에서 나온 그만큼의 문자를 이용해서 포인트를 생성합니다."

#~ msgid ""
#~ "<![CDATA[SELECT "
#~ "ST_AsText(ST_PointFromGeoHash('9qqj7nmxncgyy4d0dbxqz0'));\n"
#~ "          st_astext\n"
#~ "------------------------------\n"
#~ " POINT(-115.172816 36.114646)\n"
#~ "\n"
#~ "SELECT ST_AsText(ST_PointFromGeoHash('9qqj7nmxncgyy4d0dbxqz0', 4));\n"
#~ "             st_astext\n"
#~ "-----------------------------------\n"
#~ " POINT(-115.13671875 36.123046875)\n"
#~ "\n"
#~ "SELECT ST_AsText(ST_PointFromGeoHash('9qqj7nmxncgyy4d0dbxqz0', 10));\n"
#~ "                 st_astext\n"
#~ "-------------------------------------------\n"
#~ " POINT(-115.172815918922 36.1146435141563)\n"
#~ "                ]]>"
#~ msgstr ""
#~ "<![CDATA[SELECT "
#~ "ST_AsText(ST_PointFromGeoHash('9qqj7nmxncgyy4d0dbxqz0'));\n"
#~ "          st_astext\n"
#~ "------------------------------\n"
#~ " POINT(-115.172816 36.114646)\n"
#~ "\n"
#~ "SELECT ST_AsText(ST_PointFromGeoHash('9qqj7nmxncgyy4d0dbxqz0', 4));\n"
#~ "             st_astext\n"
#~ "-----------------------------------\n"
#~ " POINT(-115.13671875 36.123046875)\n"
#~ "\n"
#~ "SELECT ST_AsText(ST_PointFromGeoHash('9qqj7nmxncgyy4d0dbxqz0', 10));\n"
#~ "                 st_astext\n"
#~ "-------------------------------------------\n"
#~ " POINT(-115.172815918922 36.1146435141563)\n"
#~ "                ]]>"

#~ msgid ""
#~ ", <xref linkend=\"ST_Box2dFromGeoHash\"/>, <xref linkend="
#~ "\"ST_GeomFromGeoHash\"/>"
#~ msgstr ""
#~ ", <xref linkend=\"ST_Box2dFromGeoHash\"/>, <xref linkend="
#~ "\"ST_GeomFromGeoHash\"/>"

#~ msgid "ST_PointFromText"
#~ msgstr "ST_PointFromText"

#~ msgid ""
#~ "Makes a point Geometry from WKT with the given SRID. If SRID is not "
#~ "given, it defaults to unknown."
#~ msgstr ""
#~ "주어진 SRID와 함께 WKT 표현식으로부터 포인트 도형을 만듭니다. SRID가 주어"
#~ "지지 않은 경우, 기본값인 0을 씁니다."

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_PointFromText</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>WKT</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_PointFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_PointFromText</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>WKT</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_PointFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"

#~ msgid ""
#~ "There are 2 variants of ST_PointFromText function, the first takes no "
#~ "SRID and returns a geometry with no defined spatial reference system. The "
#~ "second takes a spatial reference id as the second argument and returns an "
#~ "ST_Geometry that includes this srid as part of its meta-data. The srid "
#~ "must be defined in the spatial_ref_sys table."
#~ msgstr ""
#~ "ST_PointFromText 함수의 변종이 2개 있는데, 첫 번째는 SRID를 입력받지 않고 "
#~ "공간 참조 시스템이 정의되지 않은 도형을 반환합니다. 두 번째는 SRID를 두 번"
#~ "째 인수로 입력받아 자체 메타데이터의 일부로 해당 SRID를 포함하는 "
#~ "ST_Geometry를 반환합니다. spatial_ref_sys 테이블에 정의되어 있는 SRID여야 "
#~ "합니다."

#~ msgid ""
#~ "If you are absolutely sure all your WKT geometries are points, don't use "
#~ "this function. It is slower than ST_GeomFromText since it adds an "
#~ "additional validation step. If you are building points from long lat "
#~ "coordinates and care more about performance and accuracy than OGC "
#~ "compliance, use <xref linkend=\"ST_MakePoint\"/> or OGC compliant alias "
#~ "<xref linkend=\"ST_Point\"/>."
#~ msgstr ""
#~ "사용자 WKT 도형이 모두 포인트라고 확신한다면, 이 함수를 사용하지 마십시"
#~ "오. 이 함수는 추가적인 유효성 검사 단계를 거치므로 ST_GeomFromText보다 느"
#~ "립니다. 사용자가 경위도 좌표로부터 포인트를 빌드하고 OGC 준수 여부보다 성"
#~ "능 및 정확도에 더 관심이 있다면, <xref linkend=\"ST_MakePoint\"/> 또는 OGC"
#~ "를 준수하는 동일한 <xref linkend=\"ST_Point\"/> 함수를 이용하십시오."

#~ msgid "&sqlmm_compliant; SQL-MM 3: 6.1.8"
#~ msgstr "&sqlmm_compliant; SQL-MM 3: 6.1.8"

#~ msgid ""
#~ "SELECT ST_PointFromText('POINT(-71.064544 42.28787)');\n"
#~ "SELECT ST_PointFromText('POINT(-71.064544 42.28787)', 4326);"
#~ msgstr ""
#~ "SELECT ST_PointFromText('POINT(-71.064544 42.28787)');\n"
#~ "SELECT ST_PointFromText('POINT(-71.064544 42.28787)', 4326);"

#~ msgid "ST_PointFromWKB"
#~ msgstr "ST_PointFromWKB"

#~ msgid "Makes a geometry from WKB with the given SRID"
#~ msgstr "주어진 SRID와 함께 WKB로부터 도형을 만듭니다."

#~ msgid ""
#~ "The <varname>ST_PointFromWKB</varname> function, takes a well-known "
#~ "binary representation of geometry and a Spatial Reference System ID "
#~ "(<varname>SRID</varname>) and creates an instance of the appropriate "
#~ "geometry type - in this case, a <varname>POINT</varname> geometry. This "
#~ "function plays the role of the Geometry Factory in SQL."
#~ msgstr ""
#~ "<varname>ST_PointFromWKB</varname> 함수는 도형의 WKB 표현식과 "
#~ "<varname>SRID</varname>(공간 참조 시스템 ID)를 받아 적절한 도형 유형의 인"
#~ "스턴스 - 이 경우, <varname>POINT</varname> 도형 - 를 생성합니다. 이 함수"
#~ "는 SQL에서 도형 공장(Geometry Factory) 역할을 합니다."

#~ msgid ""
#~ "If an SRID is not specified, it defaults to 0. <varname>NULL</varname> is "
#~ "returned if the input <varname>bytea</varname> does not represent a "
#~ "<varname>POINT</varname> geometry."
#~ msgstr ""
#~ "SRID를 설정하지 않은 경우, 기본값인 0을 씁니다. 입력된 <varname>bytea</"
#~ "varname>가 포인트가 아닌 경우, <varname>NULL</varname>을 반환합니다."

#~ msgid "&sfs_compliant; s3.2.7.2"
#~ msgstr "&sfs_compliant; s3.2.7.2"

#~ msgid "&sqlmm_compliant; SQL-MM 3: 6.1.9"
#~ msgstr "&sqlmm_compliant; SQL-MM 3: 6.1.9"

#~ msgid ""
#~ "SELECT\n"
#~ "  ST_AsText(\n"
#~ "        ST_PointFromWKB(\n"
#~ "          ST_AsEWKB('POINT(2 5)'::geometry)\n"
#~ "        )\n"
#~ "  );\n"
#~ " st_astext\n"
#~ "------------\n"
#~ " POINT(2 5)\n"
#~ "(1 row)\n"
#~ "\n"
#~ "SELECT\n"
#~ "  ST_AsText(\n"
#~ "        ST_PointFromWKB(\n"
#~ "          ST_AsEWKB('LINESTRING(2 5, 2 6)'::geometry)\n"
#~ "        )\n"
#~ "  );\n"
#~ " st_astext\n"
#~ "-----------\n"
#~ "\n"
#~ "(1 row)"
#~ msgstr ""
#~ "SELECT\n"
#~ "  ST_AsText(\n"
#~ "        ST_PointFromWKB(\n"
#~ "          ST_AsEWKB('POINT(2 5)'::geometry)\n"
#~ "        )\n"
#~ "  );\n"
#~ " st_astext\n"
#~ "------------\n"
#~ " POINT(2 5)\n"
#~ "(1 row)\n"
#~ "\n"
#~ "SELECT\n"
#~ "  ST_AsText(\n"
#~ "        ST_PointFromWKB(\n"
#~ "          ST_AsEWKB('LINESTRING(2 5, 2 6)'::geometry)\n"
#~ "        )\n"
#~ "  );\n"
#~ " st_astext\n"
#~ "-----------\n"
#~ "\n"
#~ "(1 row)"

#~ msgid ""
#~ "<refpurpose>Returns a polygon built from the specified linestring and "
#~ "SRID.</refpurpose>"
#~ msgstr ""
#~ "<refpurpose>설정된 라인스트링과 SRID로부터 빌드된 폴리곤을 반환합니다.</"
#~ "refpurpose>"

#~ msgid ""
#~ "<para>Returns a polygon built from the specified linestring and SRID.</"
#~ "para>"
#~ msgstr ""
#~ "<para>설정된 라인스트링과 SRID로부터 빌드된 폴리곤을 반환합니다.</para>"

#~ msgid ""
#~ "--a 2d polygon\n"
#~ "SELECT ST_Polygon(ST_GeomFromText('LINESTRING(75.15 29.53,77 29,77.6 "
#~ "29.5, 75.15 29.53)'), 4326);\n"
#~ "\n"
#~ "--result--\n"
#~ "POLYGON((75.15 29.53,77 29,77.6 29.5,75.15 29.53))\n"
#~ "--a 3d polygon\n"
#~ "SELECT ST_AsEWKT(ST_Polygon(ST_GeomFromEWKT('LINESTRING(75.15 29.53 1,77 "
#~ "29 1,77.6 29.5 1, 75.15 29.53 1)'), 4326));\n"
#~ "\n"
#~ "result\n"
#~ "------\n"
#~ "SRID=4326;POLYGON((75.15 29.53 1,77 29 1,77.6 29.5 1,75.15 29.53 1))"
#~ msgstr ""
#~ "-- 2D 폴리곤\n"
#~ "SELECT ST_Polygon(ST_GeomFromText('LINESTRING(75.15 29.53,77 29,77.6 "
#~ "29.5, 75.15 29.53)'), 4326);\n"
#~ "\n"
#~ "-- 결과 --\n"
#~ "POLYGON((75.15 29.53,77 29,77.6 29.5,75.15 29.53))\n"
#~ "-- 3D 폴리곤\n"
#~ "SELECT ST_AsEWKT(ST_Polygon(ST_GeomFromEWKT('LINESTRING(75.15 29.53 1,77 "
#~ "29 1,77.6 29.5 1, 75.15 29.53 1)'), 4326));\n"
#~ "\n"
#~ "result\n"
#~ "------\n"
#~ "SRID=4326;POLYGON((75.15 29.53 1,77 29 1,77.6 29.5 1,75.15 29.53 1))"

#~ msgid "ST_PolygonFromText"
#~ msgstr "ST_PolygonFromText"

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_PolygonFromText</"
#~ "function></funcdef> <paramdef><type>text </type> <parameter>WKT</"
#~ "parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_PolygonFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_PolygonFromText</"
#~ "function></funcdef> <paramdef><type>text </type> <parameter>WKT</"
#~ "parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_PolygonFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"

#~ msgid ""
#~ "If you are absolutely sure all your WKT geometries are polygons, don't "
#~ "use this function. It is slower than ST_GeomFromText since it adds an "
#~ "additional validation step."
#~ msgstr ""
#~ "사용자 WKT 도형이 모두 폴리곤이라고 확신한다면, 이 함수를 사용하지 마십시"
#~ "오. 이 함수는 추가적인 유효성 검사 단계를 거치므로 ST_GeomFromText보다 느"
#~ "립니다."

#~ msgid "&sqlmm_compliant; SQL-MM 3: 8.3.6"
#~ msgstr "&sqlmm_compliant; SQL-MM 3: 8.3.6"

#~ msgid ""
#~ "SELECT ST_PolygonFromText('POLYGON((-71.1776585052917 "
#~ "42.3902909739571,-71.1776820268866 42.3903701743239,\n"
#~ "-71.1776063012595 42.3903825660754,-71.1775826583081 "
#~ "42.3903033653531,-71.1776585052917 42.3902909739571))');\n"
#~ "st_polygonfromtext\n"
#~ "------------------\n"
#~ "010300000001000000050000006...\n"
#~ "\n"
#~ "\n"
#~ "SELECT ST_PolygonFromText('POINT(1 2)') IS NULL as point_is_notpoly;\n"
#~ "\n"
#~ "point_is_not_poly\n"
#~ "----------\n"
#~ "t"
#~ msgstr ""
#~ "SELECT ST_PolygonFromText('POLYGON((-71.1776585052917 "
#~ "42.3902909739571,-71.1776820268866 42.3903701743239,\n"
#~ "-71.1776063012595 42.3903825660754,-71.1775826583081 "
#~ "42.3903033653531,-71.1776585052917 42.3902909739571))');\n"
#~ "st_polygonfromtext\n"
#~ "------------------\n"
#~ "010300000001000000050000006...\n"
#~ "\n"
#~ "\n"
#~ "SELECT ST_PolygonFromText('POINT(1 2)') IS NULL as point_is_notpoly;\n"
#~ "\n"
#~ "point_is_not_poly\n"
#~ "----------\n"
#~ "t"

#~ msgid "ST_WKBToSQL"
#~ msgstr "ST_WKBToSQL"

#~ msgid ""
#~ "Return a specified ST_Geometry value from Well-Known Binary "
#~ "representation (WKB). This is an alias name for ST_GeomFromWKB that takes "
#~ "no srid"
#~ msgstr ""
#~ "WKB(Well-Known Binary) 표현식으로부터 지정된 ST_Geometry 값을 반환합니다. "
#~ "이 함수는 SRID를 입력받지 않는 ST_GeomFromWKB 함수와 동일합니다."

#~ msgid ""
#~ "<funcdef>geometry <function>ST_WKBToSQL</function></funcdef> "
#~ "<paramdef><type>bytea </type> <parameter>WKB</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_WKBToSQL</function></funcdef> "
#~ "<paramdef><type>bytea </type> <parameter>WKB</parameter></paramdef>"

#~ msgid "&sqlmm_compliant; SQL-MM 3: 5.1.36"
#~ msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.36"

#~ msgid "ST_WKTToSQL"
#~ msgstr "ST_WKTToSQL"

#~ msgid ""
#~ "<funcdef>geometry <function>ST_WKTToSQL</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>WKT</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_WKTToSQL</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>WKT</parameter></paramdef>"

#~ msgid "&sqlmm_compliant; SQL-MM 3: 5.1.34"
#~ msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.34"
