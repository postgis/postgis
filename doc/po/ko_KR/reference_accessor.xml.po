# SOME DESCRIPTIVE TITLE.
# 
# Translators:
# Kwon.Yongchan <ruvyn@naver.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: PostGIS\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2016-07-04 13:02+0000\n"
"PO-Revision-Date: 2016-07-22 09:37+0000\n"
"Last-Translator: Kwon.Yongchan <ruvyn@naver.com>\n"
"Language-Team: Korean (Korea) (http://www.transifex.com/postgis/postgis/language/ko_KR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ko_KR\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. Tag: title
#: reference_accessor.xml:4
#, no-c-format
msgid "Geometry Accessors"
msgstr "도형 접근자(accessor)"

#. Tag: refname
#: reference_accessor.xml:8
#, no-c-format
msgid "GeometryType"
msgstr "도형 유형"

#. Tag: refpurpose
#: reference_accessor.xml:10
#, no-c-format
msgid ""
"<refpurpose>Returns the type of the geometry as a string. Eg: 'LINESTRING', "
"'POLYGON', 'MULTIPOINT', etc.</refpurpose>"
msgstr "<refpurpose>도형의 유형을 스트링으로 반환합니다. 예: 'LINESTRING', 'POLYGON', 'MULTIPOINT' 등등.</refpurpose>"

#. Tag: funcprototype
#: reference_accessor.xml:16
#, no-c-format
msgid ""
"<funcdef>text <function>GeometryType</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef>"
msgstr "<funcdef>text <function>GeometryType</function></funcdef> <paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef>"

#. Tag: title
#: reference_accessor.xml:24 reference_accessor.xml:81
#: reference_accessor.xml:162 reference_accessor.xml:210
#: reference_accessor.xml:258 reference_accessor.xml:309
#: reference_accessor.xml:361 reference_accessor.xml:432
#: reference_accessor.xml:481 reference_accessor.xml:542
#: reference_accessor.xml:593 reference_accessor.xml:652
#: reference_accessor.xml:711 reference_accessor.xml:766
#: reference_accessor.xml:810 reference_accessor.xml:861
#: reference_accessor.xml:918 reference_accessor.xml:990
#: reference_accessor.xml:1042 reference_accessor.xml:1101
#: reference_accessor.xml:1147 reference_accessor.xml:1182
#: reference_accessor.xml:1221 reference_accessor.xml:1261
#: reference_accessor.xml:1304 reference_accessor.xml:1366
#: reference_accessor.xml:1407 reference_accessor.xml:1451
#: reference_accessor.xml:1508 reference_accessor.xml:1572
#: reference_accessor.xml:1621 reference_accessor.xml:1664
#: reference_accessor.xml:1717 reference_accessor.xml:1791
#: reference_accessor.xml:1834 reference_accessor.xml:1879
#: reference_accessor.xml:1925 reference_accessor.xml:1967
#: reference_accessor.xml:2012 reference_accessor.xml:2058
#: reference_accessor.xml:2100 reference_accessor.xml:2146
#: reference_accessor.xml:2187
#, no-c-format
msgid "Description"
msgstr "설명"

#. Tag: para
#: reference_accessor.xml:26
#, no-c-format
msgid ""
"<para>Returns the type of the geometry as a string. Eg: 'LINESTRING', "
"'POLYGON', 'MULTIPOINT', etc.</para>"
msgstr "<para>도형의 유형을 스트링으로 반환합니다. 예: 'LINESTRING', 'POLYGON', 'MULTIPOINT' 등등.</para>"

#. Tag: para
#: reference_accessor.xml:29
#, no-c-format
msgid ""
"OGC SPEC s2.1.1.1 - Returns the name of the instantiable subtype of Geometry"
" of which this Geometry instance is a member. The name of the instantiable "
"subtype of Geometry is returned as a string."
msgstr "OGC 사양 s2.1.1.1 - 해당 도형 인스턴스가 속해 있는, 인스턴스화할 수 있는 도형 하위 유형의 명칭을 스트링으로 반환합니다."

#. Tag: para
#: reference_accessor.xml:35
#, no-c-format
msgid ""
"This function also indicates if the geometry is measured, by returning a "
"string of the form 'POINTM'."
msgstr "이 함수는 'POINTM' 형식의 스트링을 반환해서 도형에 단위가 적용되었는지 여부도 보여줍니다."

#. Tag: para
#: reference_accessor.xml:38 reference_accessor.xml:495
#: reference_accessor.xml:1266
#, no-c-format
msgid ""
"Enhanced: 2.0.0 support for Polyhedral surfaces, Triangles and TIN was "
"introduced."
msgstr "개선 사항: 2.0.0 버전부터 다면체 표면, 삼각형 및 TIN을 지원하기 시작했습니다."

#. Tag: para
#: reference_accessor.xml:39 reference_accessor.xml:168
#: reference_accessor.xml:497 reference_accessor.xml:604
#: reference_accessor.xml:657 reference_accessor.xml:937
#: reference_accessor.xml:1110 reference_accessor.xml:1373
#: reference_accessor.xml:1415 reference_accessor.xml:1525
#: reference_accessor.xml:1930
#, no-c-format
msgid "&sfs_compliant;"
msgstr "&sfs_compliant;"

#. Tag: para
#: reference_accessor.xml:40 reference_accessor.xml:170
#: reference_accessor.xml:267 reference_accessor.xml:500
#: reference_accessor.xml:666 reference_accessor.xml:731
#: reference_accessor.xml:777 reference_accessor.xml:1188
#: reference_accessor.xml:1226 reference_accessor.xml:1528
#: reference_accessor.xml:1586 reference_accessor.xml:1629
#: reference_accessor.xml:1673 reference_accessor.xml:1733
#: reference_accessor.xml:1844 reference_accessor.xml:1889
#: reference_accessor.xml:1977 reference_accessor.xml:2022
#: reference_accessor.xml:2110 reference_accessor.xml:2152
#: reference_accessor.xml:2197
#, no-c-format
msgid "&curve_support;"
msgstr "&curve_support;"

#. Tag: para
#: reference_accessor.xml:41 reference_accessor.xml:96
#: reference_accessor.xml:171 reference_accessor.xml:265
#: reference_accessor.xml:390 reference_accessor.xml:441
#: reference_accessor.xml:499 reference_accessor.xml:548
#: reference_accessor.xml:606 reference_accessor.xml:665
#: reference_accessor.xml:730 reference_accessor.xml:875
#: reference_accessor.xml:1112 reference_accessor.xml:1152
#: reference_accessor.xml:1187 reference_accessor.xml:1225
#: reference_accessor.xml:1270 reference_accessor.xml:1372
#: reference_accessor.xml:1468 reference_accessor.xml:1527
#: reference_accessor.xml:1587 reference_accessor.xml:1671
#: reference_accessor.xml:1799 reference_accessor.xml:1843
#: reference_accessor.xml:1888 reference_accessor.xml:1932
#: reference_accessor.xml:1976 reference_accessor.xml:2021
#: reference_accessor.xml:2066 reference_accessor.xml:2109
#: reference_accessor.xml:2151 reference_accessor.xml:2196
#, no-c-format
msgid "&Z_support;"
msgstr "&Z_support;"

#. Tag: para
#: reference_accessor.xml:42 reference_accessor.xml:172
#: reference_accessor.xml:223 reference_accessor.xml:501
#: reference_accessor.xml:549 reference_accessor.xml:669
#: reference_accessor.xml:1189 reference_accessor.xml:1271
#: reference_accessor.xml:1375 reference_accessor.xml:1469
#: reference_accessor.xml:1736
#, no-c-format
msgid "&P_support;"
msgstr "&P_support;"

#. Tag: para
#: reference_accessor.xml:43 reference_accessor.xml:173
#: reference_accessor.xml:224 reference_accessor.xml:502
#: reference_accessor.xml:1272 reference_accessor.xml:1739
#, no-c-format
msgid "&T_support;"
msgstr "&T_support;"

#. Tag: title
#: reference_accessor.xml:49 reference_accessor.xml:101
#: reference_accessor.xml:178 reference_accessor.xml:228
#: reference_accessor.xml:277 reference_accessor.xml:331
#: reference_accessor.xml:395 reference_accessor.xml:446
#: reference_accessor.xml:554 reference_accessor.xml:612
#: reference_accessor.xml:736 reference_accessor.xml:784
#: reference_accessor.xml:829 reference_accessor.xml:880
#: reference_accessor.xml:951 reference_accessor.xml:1007
#: reference_accessor.xml:1067 reference_accessor.xml:1118
#: reference_accessor.xml:1156 reference_accessor.xml:1194
#: reference_accessor.xml:1231 reference_accessor.xml:1277
#: reference_accessor.xml:1316 reference_accessor.xml:1379
#: reference_accessor.xml:1420 reference_accessor.xml:1475
#: reference_accessor.xml:1540 reference_accessor.xml:1594
#: reference_accessor.xml:1634 reference_accessor.xml:1683
#: reference_accessor.xml:1747 reference_accessor.xml:1805
#: reference_accessor.xml:1849 reference_accessor.xml:1894
#: reference_accessor.xml:1938 reference_accessor.xml:1982
#: reference_accessor.xml:2027 reference_accessor.xml:2071
#: reference_accessor.xml:2115 reference_accessor.xml:2157
#: reference_accessor.xml:2202
#, no-c-format
msgid "Examples"
msgstr "예시"

#. Tag: programlisting
#: reference_accessor.xml:51
#, no-c-format
msgid ""
"SELECT GeometryType(ST_GeomFromText('LINESTRING(77.29 29.07,77.42 29.26,77.27 29.31,77.29 29.07)'));\n"
" geometrytype\n"
"--------------\n"
" LINESTRING"
msgstr "SELECT GeometryType(ST_GeomFromText('LINESTRING(77.29 29.07,77.42 29.26,77.27 29.31,77.29 29.07)'));\n geometrytype\n--------------\n LINESTRING"

#. Tag: programlisting
#: reference_accessor.xml:52
#, no-c-format
msgid ""
"SELECT ST_GeometryType(ST_GeomFromEWKT('POLYHEDRALSURFACE( ((0 0 0, 0 0 1, 0 1 1, 0 1 0, 0 0 0)),\n"
"                ((0 0 0, 0 1 0, 1 1 0, 1 0 0, 0 0 0)), ((0 0 0, 1 0 0, 1 0 1, 0 0 1, 0 0 0)),\n"
"                ((1 1 0, 1 1 1, 1 0 1, 1 0 0, 1 1 0)),\n"
"                ((0 1 0, 0 1 1, 1 1 1, 1 1 0, 0 1 0)), ((0 0 1, 1 0 1, 1 1 1, 0 1 1, 0 0 1)) )'));\n"
"                        --result\n"
"                        POLYHEDRALSURFACE"
msgstr "SELECT ST_GeometryType(ST_GeomFromEWKT('POLYHEDRALSURFACE( ((0 0 0, 0 0 1, 0 1 1, 0 1 0, 0 0 0)),\n                ((0 0 0, 0 1 0, 1 1 0, 1 0 0, 0 0 0)), ((0 0 0, 1 0 0, 1 0 1, 0 0 1, 0 0 0)),\n                ((1 1 0, 1 1 1, 1 0 1, 1 0 0, 1 1 0)),\n                ((0 1 0, 0 1 1, 1 1 1, 1 1 0, 0 1 0)), ((0 0 1, 1 0 1, 1 1 1, 0 1 1, 0 0 1)) )'));\n                        -- 결과\n                        POLYHEDRALSURFACE"

#. Tag: programlisting
#: reference_accessor.xml:53
#, no-c-format
msgid ""
"SELECT GeometryType(geom) as result\n"
"  FROM\n"
"    (SELECT\n"
"       ST_GeomFromEWKT('TIN (((\n"
"                0 0 0,\n"
"                0 0 1,\n"
"                0 1 0,\n"
"                0 0 0\n"
"            )), ((\n"
"                0 0 0,\n"
"                0 1 0,\n"
"                1 1 0,\n"
"                0 0 0\n"
"            ))\n"
"            )')  AS geom\n"
"    ) AS g;\n"
" result\n"
"--------\n"
" TIN"
msgstr "SELECT GeometryType(geom) as result\n  FROM\n    (SELECT\n       ST_GeomFromEWKT('TIN (((\n                0 0 0,\n                0 0 1,\n                0 1 0,\n                0 0 0\n            )), ((\n                0 0 0,\n                0 1 0,\n                1 1 0,\n                0 0 0\n            ))\n            )')  AS geom\n    ) AS g;\n result\n--------\n TIN"

#. Tag: title
#: reference_accessor.xml:58 reference_accessor.xml:139
#: reference_accessor.xml:185 reference_accessor.xml:233
#: reference_accessor.xml:283 reference_accessor.xml:336
#: reference_accessor.xml:400 reference_accessor.xml:451
#: reference_accessor.xml:521 reference_accessor.xml:565
#: reference_accessor.xml:619 reference_accessor.xml:686
#: reference_accessor.xml:742 reference_accessor.xml:835
#: reference_accessor.xml:886 reference_accessor.xml:957
#: reference_accessor.xml:1014 reference_accessor.xml:1074
#: reference_accessor.xml:1124 reference_accessor.xml:1161
#: reference_accessor.xml:1199 reference_accessor.xml:1238
#: reference_accessor.xml:1282 reference_accessor.xml:1321
#: reference_accessor.xml:1344 reference_accessor.xml:1384
#: reference_accessor.xml:1425 reference_accessor.xml:1482
#: reference_accessor.xml:1546 reference_accessor.xml:1600
#: reference_accessor.xml:1639 reference_accessor.xml:1689
#: reference_accessor.xml:1753 reference_accessor.xml:1811
#: reference_accessor.xml:1856 reference_accessor.xml:1901
#: reference_accessor.xml:1944 reference_accessor.xml:1989
#: reference_accessor.xml:2034 reference_accessor.xml:2077
#: reference_accessor.xml:2122 reference_accessor.xml:2164
#: reference_accessor.xml:2209
#, no-c-format
msgid "See Also"
msgstr "참고"

#. Tag: refname
#: reference_accessor.xml:64
#, no-c-format
msgid "ST_Boundary"
msgstr "ST_Boundary"

#. Tag: refpurpose
#: reference_accessor.xml:66
#, no-c-format
msgid "Returns the closure of the combinatorial boundary of this Geometry."
msgstr "해당 도형의 결합된 범위의 닫힘 여부를 반환합니다."

#. Tag: funcprototype
#: reference_accessor.xml:72
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_Boundary</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef>"
msgstr "<funcdef>geometry <function>ST_Boundary</function></funcdef> <paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:83
#, no-c-format
msgid ""
"Returns the closure of the combinatorial boundary of this Geometry. The "
"combinatorial boundary is defined as described in section 3.12.3.2 of the "
"OGC SPEC. Because the result of this function is a closure, and hence "
"topologically closed, the resulting boundary can be represented using "
"representational geometry primitives as discussed in the OGC SPEC, section "
"3.12.2."
msgstr "해당 도형의 결합된 범위의 닫힘(closure) 여부를 반환합니다. 결합 범위(combinatorial boundary)는 OGC 사양서의 3.12.3.2 단원이 설명하는대로 정의됩니다. 이 함수의 결과가 닫힘이기 때문에, 즉 위상적(位相的)으로 폐쇄됐기 때문에, OGC 사양서 3.12.2 단원에서 설명한대로 표현적인 도형 원형(primitive)을 이용해서 결과 범위를 표현할 수 있습니다."

#. Tag: para
#: reference_accessor.xml:90
#, no-c-format
msgid "Performed by the GEOS module"
msgstr "GEOS 모듈로 실행"

#. Tag: para
#: reference_accessor.xml:92
#, no-c-format
msgid ""
"Prior to 2.0.0, this function throws an exception if used with "
"<varname>GEOMETRYCOLLECTION</varname>. From 2.0.0 up it will return NULL "
"instead (unsupported input)."
msgstr "2.0.0 미만 버전에서 이 함수를 <varname>GEOMETRYCOLLECTION</varname>과 함께 사용하면 예외가 발생했습니다. 2.0.0 이후 버전은 대신 (입력을 지원하지 않는다는 의미의) NULL을 반환합니다."

#. Tag: para
#: reference_accessor.xml:94
#, no-c-format
msgid "&sfs_compliant; OGC SPEC s2.1.1.1"
msgstr "&sfs_compliant; OGC SPEC s2.1.1.1"

#. Tag: para
#: reference_accessor.xml:95
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.14"
msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.14"

#. Tag: para
#: reference_accessor.xml:97
#, no-c-format
msgid "Enhanced: 2.1.0 support for Triangle was introduced"
msgstr "개선 사항: 2.1.0 버전부터 삼각형을 지원하기 시작했습니다."

#. Tag: para
#: reference_accessor.xml:112
#, no-c-format
msgid "Linestring with boundary points overlaid"
msgstr "범위 포인트들이 겹치는 라인스트링"

#. Tag: programlisting
#: reference_accessor.xml:115
#, no-c-format
msgid ""
"SELECT ST_Boundary(geom)\n"
"FROM (SELECT 'LINESTRING(100 150,50 60, 70 80, 160 170)'::geometry As geom) As f;"
msgstr "SELECT ST_Boundary(geom)\nFROM (SELECT 'LINESTRING(100 150,50 60, 70 80, 160 170)'::geometry As geom) As f;"

#. Tag: screen
#: reference_accessor.xml:116
#, no-c-format
msgid ""
"-- ST_AsText output\n"
"MULTIPOINT(100 150,160 170)"
msgstr "-- ST_AsText 출력\nMULTIPOINT(100 150,160 170)"

#. Tag: para
#: reference_accessor.xml:124
#, no-c-format
msgid "polygon holes with boundary multilinestring"
msgstr "범위 멀티라인스트링을 가진 폴리곤 구멍"

#. Tag: programlisting
#: reference_accessor.xml:127
#, no-c-format
msgid ""
"SELECT ST_Boundary(geom)\n"
"FROM (SELECT\n"
"'POLYGON (( 10 130, 50 190, 110 190, 140 150, 150 80, 100 10, 20 40, 10 130 ),\n"
"        ( 70 40, 100 50, 120 80, 80 110, 50 90, 70 40 ))'::geometry As geom) As f;"
msgstr "SELECT ST_Boundary(geom)\nFROM (SELECT\n'POLYGON (( 10 130, 50 190, 110 190, 140 150, 150 80, 100 10, 20 40, 10 130 ),\n        ( 70 40, 100 50, 120 80, 80 110, 50 90, 70 40 ))'::geometry As geom) As f;"

#. Tag: screen
#: reference_accessor.xml:128
#, no-c-format
msgid ""
"-- ST_AsText output\n"
"MULTILINESTRING((10 130,50 190,110 190,140 150,150 80,100 10,20 40,10 130),\n"
"        (70 40,100 50,120 80,80 110,50 90,70 40))"
msgstr "-- ST_AsText 출력\nMULTILINESTRING((10 130,50 190,110 190,140 150,150 80,100 10,20 40,10 130),\n        (70 40,100 50,120 80,80 110,50 90,70 40))"

#. Tag: programlisting
#: reference_accessor.xml:136
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_Boundary(ST_GeomFromText('LINESTRING(1 1,0 0, -1 1)')));\n"
"st_astext\n"
"-----------\n"
"MULTIPOINT(1 1,-1 1)\n"
"\n"
"SELECT ST_AsText(ST_Boundary(ST_GeomFromText('POLYGON((1 1,0 0, -1 1, 1 1))')));\n"
"st_astext\n"
"----------\n"
"LINESTRING(1 1,0 0,-1 1,1 1)\n"
"\n"
"--Using a 3d polygon\n"
"SELECT ST_AsEWKT(ST_Boundary(ST_GeomFromEWKT('POLYGON((1 1 1,0 0 1, -1 1 1, 1 1 1))')));\n"
"\n"
"st_asewkt\n"
"-----------------------------------\n"
"LINESTRING(1 1 1,0 0 1,-1 1 1,1 1 1)\n"
"\n"
"--Using a 3d multilinestring\n"
"SELECT ST_AsEWKT(ST_Boundary(ST_GeomFromEWKT('MULTILINESTRING((1 1 1,0 0 0.5, -1 1 1),(1 1 0.5,0 0 0.5, -1 1 0.5, 1 1 0.5) )')));\n"
"\n"
"st_asewkt\n"
"----------\n"
"MULTIPOINT(-1 1 1,1 1 0.75)"
msgstr "SELECT ST_AsText(ST_Boundary(ST_GeomFromText('LINESTRING(1 1,0 0, -1 1)')));\nst_astext\n-----------\nMULTIPOINT(1 1,-1 1)\n\nSELECT ST_AsText(ST_Boundary(ST_GeomFromText('POLYGON((1 1,0 0, -1 1, 1 1))')));\nst_astext\n----------\nLINESTRING(1 1,0 0,-1 1,1 1)\n\n--Using a 3d polygon\nSELECT ST_AsEWKT(ST_Boundary(ST_GeomFromEWKT('POLYGON((1 1 1,0 0 1, -1 1 1, 1 1 1))')));\n\nst_asewkt\n-----------------------------------\nLINESTRING(1 1 1,0 0 1,-1 1 1,1 1 1)\n\n- 3D 멀티라인스트링 사용하기\nSELECT ST_AsEWKT(ST_Boundary(ST_GeomFromEWKT('MULTILINESTRING((1 1 1,0 0 0.5, -1 1 1),(1 1 0.5,0 0 0.5, -1 1 0.5, 1 1 0.5) )')));\n\nst_asewkt\n----------\nMULTIPOINT(-1 1 1,1 1 0.75)"

#. Tag: para
#: reference_accessor.xml:141
#, no-c-format
msgid ", <xref linkend=\"ST_ExteriorRing\"/>, <xref linkend=\"ST_MakePolygon\"/>"
msgstr ", <xref linkend=\"ST_ExteriorRing\"/>, <xref linkend=\"ST_MakePolygon\"/>"

#. Tag: refname
#: reference_accessor.xml:147
#, no-c-format
msgid "ST_CoordDim"
msgstr "ST_CoordDim"

#. Tag: refpurpose
#: reference_accessor.xml:149
#, no-c-format
msgid ""
"<refpurpose>Return the coordinate dimension of the ST_Geometry "
"value.</refpurpose>"
msgstr "<refpurpose>ST_Geometry 값의 좌표 차원을 반환합니다.</refpurpose>"

#. Tag: funcprototype
#: reference_accessor.xml:154
#, no-c-format
msgid ""
"<funcdef>integer <function>ST_CoordDim</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef>"
msgstr "<funcdef>integer <function>ST_CoordDim</function></funcdef> <paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:164
#, no-c-format
msgid "<para>Return the coordinate dimension of the ST_Geometry value.</para>"
msgstr "<para>ST_Geometry 값의 좌표 차원을 반환합니다.</para>"

#. Tag: para
#: reference_accessor.xml:166
#, no-c-format
msgid "This is the MM compliant alias name for <xref linkend=\"ST_NDims\"/>"
msgstr "이 함수는 MM을 준수하는, <xref linkend=\"ST_NDims\"/> 와 동일한 함수합니다."

#. Tag: para
#: reference_accessor.xml:169
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.3"
msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.3"

#. Tag: programlisting
#: reference_accessor.xml:180
#, no-c-format
msgid ""
"SELECT ST_CoordDim('CIRCULARSTRING(1 2 3, 1 3 4, 5 6 7, 8 9 10, 11 12 13)');\n"
"                        ---result--\n"
"                                3\n"
"\n"
"                                SELECT ST_CoordDim(ST_Point(1,2));\n"
"                        --result--\n"
"                                2"
msgstr "SELECT ST_CoordDim('CIRCULARSTRING(1 2 3, 1 3 4, 5 6 7, 8 9 10, 11 12 13)');\n-- 결과 --\n3\n\nSELECT ST_CoordDim(ST_Point(1,2));\n-- 결과 --\n2"

#. Tag: refname
#: reference_accessor.xml:193
#, no-c-format
msgid "ST_Dimension"
msgstr "ST_Dimension"

#. Tag: refpurpose
#: reference_accessor.xml:195
#, no-c-format
msgid ""
"The inherent dimension of this Geometry object, which must be less than or "
"equal to the coordinate dimension."
msgstr "좌표 차원과 동등하거나 낮아야 하는, 해당 도형 객체의 내재된 차원을 반환합니다."

#. Tag: funcprototype
#: reference_accessor.xml:201
#, no-c-format
msgid ""
"<funcdef>integer <function>ST_Dimension</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g</parameter></paramdef>"
msgstr "<funcdef>integer <function>ST_Dimension</function></funcdef> <paramdef><type>geometry </type> <parameter>g</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:212
#, no-c-format
msgid ""
"The inherent dimension of this Geometry object, which must be less than or "
"equal to the coordinate dimension. OGC SPEC s2.1.1.1 - returns 0 for "
"<varname>POINT</varname>, 1 for <varname>LINESTRING</varname>, 2 for "
"<varname>POLYGON</varname>, and the largest dimension of the components of a"
" <varname>GEOMETRYCOLLECTION</varname>. If unknown (empty geometry) null is "
"returned."
msgstr "좌표 차원과 동등하거나 낮아야 하는, 해당 도형 객체의 내재된 차원을 반환합니다. OGC 사양서 s2.1.1.1 단원을 보면 <varname>POINT</varname> 는 0, <varname>LINESTRING</varname> 은 1, <varname>POLYGON</varname> 은 2, 그리고 <varname>GEOMETRYCOLLECTION</varname> 의 경우 구성 요소 가운데 가장 높은 차원입니다. 알려지지 않은 (텅 빈) 도형인 경우 null을 반환합니다."

#. Tag: para
#: reference_accessor.xml:220
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.2"
msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.2"

#. Tag: para
#: reference_accessor.xml:221
#, no-c-format
msgid ""
"Enhanced: 2.0.0 support for Polyhedral surfaces and TINs was introduced. No "
"longer throws an exception if given empty geometry."
msgstr "개선 사항: 2.0.0 버전부터 다면체 표면(polyhedral surface) 및 TIN을 지원합니다. 빈 도형이 주어져도 더 이상 예외가 발생하지 않습니다."

#. Tag: para
#: reference_accessor.xml:222
#, no-c-format
msgid ""
"Prior to 2.0.0, this function throws an exception if used with empty "
"geometry."
msgstr "2.0.0 미만 버전에서는 빈 도형에 대해 예외를 발생시켰습니다."

#. Tag: programlisting
#: reference_accessor.xml:230
#, no-c-format
msgid ""
"SELECT ST_Dimension('GEOMETRYCOLLECTION(LINESTRING(1 1,0 0),POINT(0 0))');\n"
"ST_Dimension\n"
"-----------\n"
"1"
msgstr "SELECT ST_Dimension('GEOMETRYCOLLECTION(LINESTRING(1 1,0 0),POINT(0 0))');\nST_Dimension\n-----------\n1"

#. Tag: refname
#: reference_accessor.xml:241
#, no-c-format
msgid "ST_EndPoint"
msgstr "ST_EndPoint"

#. Tag: refpurpose
#: reference_accessor.xml:243
#, no-c-format
msgid ""
"Returns the last point of a <varname>LINESTRING</varname> or "
"<varname>CIRCULARLINESTRING</varname> geometry as a "
"<varname>POINT</varname>."
msgstr "<varname>LINESTRING</varname> 또는 <varname>CIRCULARLINESTRING</varname> 도형의 마지막 포인트를 <varname>POINT</varname>로 반환합니다."

#. Tag: funcprototype
#: reference_accessor.xml:249
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_EndPoint</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g</parameter></paramdef>"
msgstr "<funcdef>boolean <function>ST_EndPoint</function></funcdef> <paramdef><type>geometry </type> <parameter>g</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:260
#, no-c-format
msgid ""
"Returns the last point of a <varname>LINESTRING</varname> geometry as a "
"<varname>POINT</varname> or <varname>NULL</varname> if the input parameter "
"is not a <varname>LINESTRING</varname>."
msgstr "<varname>LINESTRING</varname> 도형의 마지막 포인트를 <varname>POINT</varname>로 반환합니다. 입력 파라미터가 <varname>LINESTRING</varname> 이 아닐 경우 <varname>NULL</varname> 을 반환합니다."

#. Tag: para
#: reference_accessor.xml:264
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 7.1.4"
msgstr "&sqlmm_compliant; SQL-MM 3: 7.1.4"

#. Tag: para
#: reference_accessor.xml:268 reference_accessor.xml:1674
#, no-c-format
msgid ""
"Changed: 2.0.0 no longer works with single geometry multilinestrings. In "
"older versions of PostGIS -- a single line multilinestring would work "
"happily with this function and return the start point. In 2.0.0 it just "
"returns NULL like any other multilinestring. The older behavior was an "
"undocumented feature, but people who assumed they had their data stored as "
"LINESTRING may experience these returning NULL in 2.0 now."
msgstr "변경 사항: 2.0.0 버전부터 단일 도형 멀티라인스트링을 지원하지 않습니다. PostGIS 예전 버전이라면 단일 라인 멀티라인스트링을 입력받는 경우 시작점을 반환했을 겁니다. 2.0.0 버전은 다른 모든 멀티라인스트링처럼 NULL을 반환할 뿐입니다. 구식 습성은 문서화되지 않은 기능이지만, 사용자 데이터를 라인스트링으로 저장했다고 가정한 사용자의 경우 현재 2.0 버전에서 NULL이 반환될 수도 있습니다."

#. Tag: programlisting
#: reference_accessor.xml:279
#, no-c-format
msgid ""
"postgis=# SELECT ST_AsText(ST_EndPoint('LINESTRING(1 1, 2 2, 3 3)'::geometry));\n"
" st_astext\n"
"------------\n"
" POINT(3 3)\n"
"(1 row)\n"
"\n"
"postgis=# SELECT ST_EndPoint('POINT(1 1)'::geometry) IS NULL AS is_null;\n"
"  is_null\n"
"----------\n"
" t\n"
"(1 row)\n"
"\n"
"--3d endpoint\n"
"SELECT ST_AsEWKT(ST_EndPoint('LINESTRING(1 1 2, 1 2 3, 0 0 5)'));\n"
"  st_asewkt\n"
"--------------\n"
" POINT(0 0 5)\n"
"(1 row)"
msgstr "postgis=# SELECT ST_AsText(ST_EndPoint('LINESTRING(1 1, 2 2, 3 3)'::geometry));\n st_astext\n------------\n POINT(3 3)\n(1 row)\n\npostgis=# SELECT ST_EndPoint('POINT(1 1)'::geometry) IS NULL AS is_null;\n  is_null\n----------\n t\n(1 row)\n\n--3d endpoint\nSELECT ST_AsEWKT(ST_EndPoint('LINESTRING(1 1 2, 1 2 3, 0 0 5)'));\n  st_asewkt\n--------------\n POINT(0 0 5)\n(1 row)"

#. Tag: para
#: reference_accessor.xml:285
#, no-c-format
msgid ", <xref linkend=\"ST_StartPoint\"/>"
msgstr ", <xref linkend=\"ST_StartPoint\"/>"

#. Tag: refname
#: reference_accessor.xml:292
#, no-c-format
msgid "ST_Envelope"
msgstr "ST_Envelope"

#. Tag: refpurpose
#: reference_accessor.xml:294
#, no-c-format
msgid ""
"Returns a geometry representing the double precision (float8) bounding box "
"of the supplied geometry."
msgstr "주어진 도형의 이중 정밀도(double precision; float8) 경계 상자를 표현하는 도형을 반환합니다."

#. Tag: funcprototype
#: reference_accessor.xml:300
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_Envelope</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef>"
msgstr "<funcdef>geometry <function>ST_Envelope</function></funcdef> <paramdef><type>geometry </type> <parameter>g1</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:311
#, no-c-format
msgid ""
"Returns the float8 minimum bounding box for the supplied geometry, as a "
"geometry. The polygon is defined by the corner points of the bounding box "
"((<varname>MINX</varname>, <varname>MINY</varname>), "
"(<varname>MINX</varname>, <varname>MAXY</varname>), "
"(<varname>MAXX</varname>, <varname>MAXY</varname>), "
"(<varname>MAXX</varname>, <varname>MINY</varname>), "
"(<varname>MINX</varname>, <varname>MINY</varname>)). (PostGIS will add a "
"<varname>ZMIN</varname>/<varname>ZMAX</varname> coordinate as well)."
msgstr "주어진 도형에 대해 float8 형 최소치 경계 상자를 도형으로 반환합니다. 해당 폴리곤은 경계 상자의 꼭짓점 포인트들로 정의됩니다((<varname>MINX</varname>, <varname>MINY</varname>), (<varname>MINX</varname>, <varname>MAXY</varname>), (<varname>MAXX</varname>, <varname>MAXY</varname>), (<varname>MAXX</varname>, <varname>MINY</varname>), (<varname>MINX</varname>, <varname>MINY</varname>)). (PostGIS는 <varname>ZMIN</varname>/<varname>ZMAX</varname> 좌표도 추가할 것입니다.)"

#. Tag: para
#: reference_accessor.xml:321
#, no-c-format
msgid ""
"Degenerate cases (vertical lines, points) will return a geometry of lower "
"dimension than <varname>POLYGON</varname>, ie. <varname>POINT</varname> or "
"<varname>LINESTRING</varname>."
msgstr "차원이 낮은 (수직 라인, 포인트) 경우 <varname>POLYGON</varname> 보다 낮은 차원의, 예를 들어 <varname>POINT</varname> 또는 <varname>LINESTRING</varname> 도형을 반환할 것입니다."

#. Tag: para
#: reference_accessor.xml:325
#, no-c-format
msgid ""
"Availability: 1.5.0 behavior changed to output double precision instead of "
"float4"
msgstr "1.5.0 버전부터 사용할 수 있으며, float4 형 대신 이중 정밀도 형으로 출력하도록 변경되었습니다."

#. Tag: para
#: reference_accessor.xml:326 reference_accessor.xml:775
#: reference_accessor.xml:873 reference_accessor.xml:1627
#, no-c-format
msgid "&sfs_compliant; s2.1.1.1"
msgstr "&sfs_compliant; s2.1.1.1"

#. Tag: para
#: reference_accessor.xml:327
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.15"
msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.15"

#. Tag: programlisting
#: reference_accessor.xml:333
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_Envelope('POINT(1 3)'::geometry));\n"
" st_astext\n"
"------------\n"
" POINT(1 3)\n"
"(1 row)\n"
"\n"
"\n"
"SELECT ST_AsText(ST_Envelope('LINESTRING(0 0, 1 3)'::geometry));\n"
"                   st_astext\n"
"--------------------------------\n"
" POLYGON((0 0,0 3,1 3,1 0,0 0))\n"
"(1 row)\n"
"\n"
"\n"
"SELECT ST_AsText(ST_Envelope('POLYGON((0 0, 0 1, 1.0000001 1, 1.0000001 0, 0 0))'::geometry));\n"
"                                                  st_astext\n"
"--------------------------------------------------------------\n"
" POLYGON((0 0,0 1,1.00000011920929 1,1.00000011920929 0,0 0))\n"
"(1 row)\n"
"SELECT ST_AsText(ST_Envelope('POLYGON((0 0, 0 1, 1.0000000001 1, 1.0000000001 0, 0 0))'::geometry));\n"
"                                                  st_astext\n"
"--------------------------------------------------------------\n"
" POLYGON((0 0,0 1,1.00000011920929 1,1.00000011920929 0,0 0))\n"
"(1 row)\n"
"\n"
"SELECT Box3D(geom), Box2D(geom), ST_AsText(ST_Envelope(geom)) As envelopewkt\n"
"        FROM (SELECT 'POLYGON((0 0, 0 1000012333334.34545678, 1.0000001 1, 1.0000001 0, 0 0))'::geometry As geom) As foo;\n"
"\n"
"<!-- TODO: Fix examples to reflect new behavior -->"
msgstr "SELECT ST_AsText(ST_Envelope('POINT(1 3)'::geometry));\n st_astext\n------------\n POINT(1 3)\n(1 row)\n\n\nSELECT ST_AsText(ST_Envelope('LINESTRING(0 0, 1 3)'::geometry));\n                   st_astext\n--------------------------------\n POLYGON((0 0,0 3,1 3,1 0,0 0))\n(1 row)\n\n\nSELECT ST_AsText(ST_Envelope('POLYGON((0 0, 0 1, 1.0000001 1, 1.0000001 0, 0 0))'::geometry));\n                                                  st_astext\n--------------------------------------------------------------\n POLYGON((0 0,0 1,1.00000011920929 1,1.00000011920929 0,0 0))\n(1 row)\nSELECT ST_AsText(ST_Envelope('POLYGON((0 0, 0 1, 1.0000000001 1, 1.0000000001 0, 0 0))'::geometry));\n                                                  st_astext\n--------------------------------------------------------------\n POLYGON((0 0,0 1,1.00000011920929 1,1.00000011920929 0,0 0))\n(1 row)\n\nSELECT Box3D(geom), Box2D(geom), ST_AsText(ST_Envelope(geom)) As envelopewkt\n        FROM (SELECT 'POLYGON((0 0, 0 1000012333334.34545678, 1.0000001 1, 1.0000001 0, 0 0))'::geometry As geom) As foo;\n\n<!-- TODO: Fix examples to reflect new behavior -->"

#. Tag: para
#: reference_accessor.xml:338
#, no-c-format
msgid ", <xref linkend=\"Box3D\"/>"
msgstr ", <xref linkend=\"Box3D\"/>"

#. Tag: refname
#: reference_accessor.xml:344
#, no-c-format
msgid "ST_BoundingDiagonal"
msgstr "ST_BoundingDiagonal"

#. Tag: refpurpose
#: reference_accessor.xml:346
#, no-c-format
msgid "Returns the diagonal of the supplied geometry's bounding box."
msgstr "주어진 도형의 경계 상자의 대각선을 반환합니다."

#. Tag: funcprototype
#: reference_accessor.xml:351
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_BoundingDiagonal</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geom</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>boolean </type> "
"<parameter>fits=false</parameter></paramdef>"
msgstr "<funcdef>geometry <function>ST_BoundingDiagonal</function></funcdef> <paramdef><type>geometry </type> <parameter>geom</parameter></paramdef> <paramdef choice=\"opt\"><type>boolean </type> <parameter>fits=false</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:363
#, no-c-format
msgid ""
"Returns the diagonal of the supplied geometry's bounding box as linestring. "
"If the input geometry is empty, the diagonal line is also empty, otherwise "
"it is a 2-points linestring with minimum values of each dimension in its "
"start point and maximum values in its end point."
msgstr "주어진 도형의 경계 상자의 대각선을 라인스트링으로 반환합니다. 빈 도형을 입력받은 경우 빈 대각선을 반환하게 됩니다. 빈 도형이 아니라면 포인트 2개 중 시작점이 각 차원의 최소값들을, 종단점이 각 차원의 최대값들을 가진 라인스트링을 반환합니다."

#. Tag: para
#: reference_accessor.xml:370
#, no-c-format
msgid ""
"The returned linestring geometry always retains SRID and dimensionality (Z "
"and M presence) of the input geometry."
msgstr "반환된 라인스트링 도형은 언제나 입력 도형의 SRID 및 차원수를 유지합니다."

#. Tag: para
#: reference_accessor.xml:375
#, no-c-format
msgid ""
"The <varname>fits</varname> parameter specifies if the best fit is needed. "
"If false, the diagonal of a somewhat larger bounding box can be accepted (is"
" faster to obtain for geometries with a lot of vertices). In any case the "
"bounding box of the returned diagonal line always covers the input geometry."
msgstr "<varname>fits</varname> 파라미터는 딱 맞는(best fit) 경계 상자가 필요한지 여부를 설정합니다. 거짓으로 설정한다면 조금 넉넉한 경계 상자도 용납할 수 있습니다(수많은 꼭짓점을 가진 도형의 경우 더 빨리 처리할 수 있습니다). 어떤 경우든 반환된 대각선의 경계 상자는 항상 입력 도형을 둘러쌉니다."

#. Tag: para
#: reference_accessor.xml:383
#, no-c-format
msgid ""
"In degenerate cases (a single vertex in input) the returned linestring will "
"be topologically invalid (no interior). This does not make the return "
"semantically invalid."
msgstr "차원이 낮은 (입력 도형이 단일 꼭짓점) 경우 반환되는 라인스트링이 위상적으로 유효하지 않을 (내부가 없을) 것입니다. 그렇다고 해서 반환된 도형이 의미론적으로 유효하지 않다는 뜻은 아닙니다."

#. Tag: para
#: reference_accessor.xml:389
#, no-c-format
msgid "Availability: 2.2.0"
msgstr "2.2.0 버전부터 사용할 수 있습니다."

#. Tag: para
#: reference_accessor.xml:391
#, no-c-format
msgid "&M_support;"
msgstr "&M_support;"

#. Tag: programlisting
#: reference_accessor.xml:397
#, no-c-format
msgid ""
"-- Get the minimum X in a buffer around a point\n"
"SELECT ST_X(ST_StartPoint(ST_BoundingDiagonal(\n"
"  ST_Buffer(ST_MakePoint(0,0),10)\n"
")));\n"
" st_x\n"
"------\n"
"  -10"
msgstr "-- 포인트를 둘러싼 버퍼에서 X의 최소값을 얻습니다.\nSELECT ST_X(ST_StartPoint(ST_BoundingDiagonal(\n  ST_Buffer(ST_MakePoint(0,0),10)\n)));\n st_x\n------\n  -10"

#. Tag: para
#: reference_accessor.xml:401
#, no-c-format
msgid ""
", <xref linkend=\"ST_EndPoint\"/>, <xref linkend=\"ST_X\"/>, <xref "
"linkend=\"ST_Y\"/>, <xref linkend=\"ST_Z\"/>, <xref linkend=\"ST_M\"/>, "
"<xref linkend=\"geometry_overlaps_nd\"/>"
msgstr ", <xref linkend=\"ST_EndPoint\"/>, <xref linkend=\"ST_X\"/>, <xref linkend=\"ST_Y\"/>, <xref linkend=\"ST_Z\"/>, <xref linkend=\"ST_M\"/>, <xref linkend=\"geometry_overlaps_nd\"/>"

#. Tag: refname
#: reference_accessor.xml:415
#, no-c-format
msgid "ST_ExteriorRing"
msgstr "ST_ExteriorRing"

#. Tag: refpurpose
#: reference_accessor.xml:417
#, no-c-format
msgid ""
"Returns a line string representing the exterior ring of the "
"<varname>POLYGON</varname> geometry. Return NULL if the geometry is not a "
"polygon. Will not work with MULTIPOLYGON"
msgstr "<varname>POLYGON</varname> 도형의 외곽 고리(exterior ring)를 표현하는 라인스트링을 반환합니다. 도형이 폴리곤이 아닌 경우 NULL을 반환합니다. 멀티폴리곤은 입력받지 못 합니다."

#. Tag: funcprototype
#: reference_accessor.xml:423
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_ExteriorRing</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>a_polygon</parameter></paramdef>"
msgstr "<funcdef>geometry <function>ST_ExteriorRing</function></funcdef> <paramdef><type>geometry </type> <parameter>a_polygon</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:434
#, no-c-format
msgid ""
"Returns a line string representing the exterior ring of the "
"<varname>POLYGON</varname> geometry. Return NULL if the geometry is not a "
"polygon."
msgstr "<varname>POLYGON</varname> 도형의 외곽 고리(exterior ring)를 표현하는 라인스트링을 반환합니다. 도형이 폴리곤이 아닌 경우 NULL을 반환합니다."

#. Tag: para
#: reference_accessor.xml:437
#, no-c-format
msgid "Only works with POLYGON geometry types"
msgstr "오직 <varname>POLYGON</varname> 도형 유형만 입력받습니다."

#. Tag: para
#: reference_accessor.xml:439 reference_accessor.xml:819
#, no-c-format
msgid "&sfs_compliant; 2.1.5.1"
msgstr "&sfs_compliant; 2.1.5.1"

#. Tag: para
#: reference_accessor.xml:440
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 8.2.3, 8.3.3"
msgstr "&sqlmm_compliant; SQL-MM 3: 8.2.3, 8.3.3"

#. Tag: programlisting
#: reference_accessor.xml:447
#, no-c-format
msgid ""
"--If you have a table of polygons\n"
"SELECT gid, ST_ExteriorRing(the_geom) AS ering\n"
"FROM sometable;\n"
"\n"
"--If you have a table of MULTIPOLYGONs\n"
"--and want to return a MULTILINESTRING composed of the exterior rings of each polygon\n"
"SELECT gid, ST_Collect(ST_ExteriorRing(the_geom)) AS erings\n"
"        FROM (SELECT gid, (ST_Dump(the_geom)).geom As the_geom\n"
"                        FROM sometable) As foo\n"
"GROUP BY gid;\n"
"\n"
"--3d Example\n"
"SELECT ST_AsEWKT(\n"
"        ST_ExteriorRing(\n"
"        ST_GeomFromEWKT('POLYGON((0 0 1, 1 1 1, 1 2 1, 1 1 1, 0 0 1))')\n"
"        )\n"
");\n"
"\n"
"st_asewkt\n"
"---------\n"
"LINESTRING(0 0 1,1 1 1,1 2 1,1 1 1,0 0 1)"
msgstr "-- 폴리곤 테이블이 있을 경우\nSELECT gid, ST_ExteriorRing(the_geom) AS ering\nFROM sometable;\n\n-- 멀티폴리곤 테이블이며 각 폴리곤의\n-- 외곽 고리들로 이루어진 멀티라인스트링을 반환하고자 할 경우\nSELECT gid, ST_Collect(ST_ExteriorRing(the_geom)) AS erings\n        FROM (SELECT gid, (ST_Dump(the_geom)).geom As the_geom\n                        FROM sometable) As foo\nGROUP BY gid;\n\n--3d Example\nSELECT ST_AsEWKT(\n        ST_ExteriorRing(\n        ST_GeomFromEWKT('POLYGON((0 0 1, 1 1 1, 1 2 1, 1 1 1, 0 0 1))')\n        )\n);\n\nst_asewkt\n---------\nLINESTRING(0 0 1,1 1 1,1 2 1,1 1 1,0 0 1)"

#. Tag: para
#: reference_accessor.xml:453
#, no-c-format
msgid ", <xref linkend=\"ST_Boundary\"/>, <xref linkend=\"ST_NumInteriorRings\"/>"
msgstr ", <xref linkend=\"ST_Boundary\"/>, <xref linkend=\"ST_NumInteriorRings\"/>"

#. Tag: refname
#: reference_accessor.xml:463
#, no-c-format
msgid "ST_GeometryN"
msgstr "ST_GeometryN"

#. Tag: refpurpose
#: reference_accessor.xml:465
#, no-c-format
msgid ""
"Return the 1-based Nth geometry if the geometry is a GEOMETRYCOLLECTION, "
"(MULTI)POINT, (MULTI)LINESTRING, MULTICURVE or (MULTI)POLYGON, "
"POLYHEDRALSURFACE Otherwise, return NULL."
msgstr "입력 도형이 도형 집합, (멀티)포인트, (멀티)라인스트링, 멀티커브(multicurve) 또는 (멀티)폴리곤이나 다면체 표면일 경우 1-기반 N번째 도형을 반환하며, 그 외의 경우 NULL을 반환합니다."

#. Tag: funcprototype
#: reference_accessor.xml:472
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_GeometryN</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef> "
"<paramdef><type>integer </type> <parameter>n</parameter></paramdef>"
msgstr "<funcdef>geometry <function>ST_GeometryN</function></funcdef> <paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef> <paramdef><type>integer </type> <parameter>n</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:483
#, no-c-format
msgid ""
"Return the 1-based Nth geometry if the geometry is a GEOMETRYCOLLECTION, "
"(MULTI)POINT, (MULTI)LINESTRING, MULTICURVE or (MULTI)POLYGON, "
"POLYHEDRALSURFACE Otherwise, return NULL"
msgstr "입력 도형이 도형 집합, (멀티)포인트, (멀티)라인스트링, 멀티커브(multicurve) 또는 (멀티)폴리곤이나 다면체 표면일 경우 1-기반 N번째 도형을 반환하며, 그 외의 경우 NULL을 반환합니다."

#. Tag: para
#: reference_accessor.xml:488
#, no-c-format
msgid ""
"Index is 1-based as for OGC specs since version 0.8.0. Previous versions "
"implemented this as 0-based instead."
msgstr "0.8.0 버전부터 인덱스는 OGC 사양을 따라 1-기반입니다. 예전 버전은 대신 0-기반 인덱스를 시행했습니다."

#. Tag: para
#: reference_accessor.xml:493
#, no-c-format
msgid ""
"If you want to extract all geometries, of a geometry, ST_Dump is more "
"efficient and will also work for singular geoms."
msgstr "모든 도형들을 추출하고자 한다면 ST_Dump 함수가 더 효율적이며, 단일 도형에 대해서도 작동할 것입니다."

#. Tag: para
#: reference_accessor.xml:496
#, no-c-format
msgid ""
"Changed: 2.0.0 Prior versions would return NULL for singular geometries. "
"This was changed to return the geometry for ST_GeometryN(..,1) case."
msgstr "변경 사항: 2.0.0 미만 버전은 단일 도형에 대해 NULL을 반환했을 겁니다. 2.0.0 버전부터 ST_GeometryN(..,1) 경우에 대한 도형을 반환하도록 변경됐습니다."

#. Tag: para
#: reference_accessor.xml:498
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 9.1.5"
msgstr "&sqlmm_compliant; SQL-MM 3: 9.1.5"

#. Tag: title
#: reference_accessor.xml:508
#, no-c-format
msgid "Standard Examples"
msgstr "표준 예시"

#. Tag: programlisting
#: reference_accessor.xml:510
#, no-c-format
msgid ""
"--Extracting a subset of points from a 3d multipoint\n"
"SELECT n, ST_AsEWKT(ST_GeometryN(the_geom, n)) As geomewkt\n"
"FROM (\n"
"VALUES (ST_GeomFromEWKT('MULTIPOINT(1 2 7, 3 4 7, 5 6 7, 8 9 10)') ),\n"
"( ST_GeomFromEWKT('MULTICURVE(CIRCULARSTRING(2.5 2.5,4.5 2.5, 3.5 3.5), (10 11, 12 11))') )\n"
"        )As foo(the_geom)\n"
"        CROSS JOIN generate_series(1,100) n\n"
"WHERE n &lt;= ST_NumGeometries(the_geom);\n"
"\n"
" n |               geomewkt\n"
"---+-----------------------------------------\n"
" 1 | POINT(1 2 7)\n"
" 2 | POINT(3 4 7)\n"
" 3 | POINT(5 6 7)\n"
" 4 | POINT(8 9 10)\n"
" 1 | CIRCULARSTRING(2.5 2.5,4.5 2.5,3.5 3.5)\n"
" 2 | LINESTRING(10 11,12 11)\n"
"\n"
"\n"
"--Extracting all geometries (useful when you want to assign an id)\n"
"SELECT gid, n, ST_GeometryN(the_geom, n)\n"
"FROM sometable CROSS JOIN generate_series(1,100) n\n"
"WHERE n &lt;= ST_NumGeometries(the_geom);"
msgstr "-- 3D 멀티포인트에서 포인트들의 하위 집합을 추출하기\nSELECT n, ST_AsEWKT(ST_GeometryN(the_geom, n)) As geomewkt\nFROM (\nVALUES (ST_GeomFromEWKT('MULTIPOINT(1 2 7, 3 4 7, 5 6 7, 8 9 10)') ),\n( ST_GeomFromEWKT('MULTICURVE(CIRCULARSTRING(2.5 2.5,4.5 2.5, 3.5 3.5), (10 11, 12 11))') )\n        )As foo(the_geom)\n        CROSS JOIN generate_series(1,100) n\nWHERE n &lt;= ST_NumGeometries(the_geom);\n\n n |               geomewkt\n---+-----------------------------------------\n 1 | POINT(1 2 7)\n 2 | POINT(3 4 7)\n 3 | POINT(5 6 7)\n 4 | POINT(8 9 10)\n 1 | CIRCULARSTRING(2.5 2.5,4.5 2.5,3.5 3.5)\n 2 | LINESTRING(10 11,12 11)\n\n\n-- 모든 도형을 추출하기(ID를 할당하려 할 때 유용합니다)\nSELECT gid, n, ST_GeometryN(the_geom, n)\nFROM sometable CROSS JOIN generate_series(1,100) n\nWHERE n &lt;= ST_NumGeometries(the_geom);"

#. Tag: title
#: reference_accessor.xml:513
#, no-c-format
msgid "Polyhedral Surfaces, TIN and Triangle Examples"
msgstr "다면체 표면, TIN 및 삼각형 예시"

#. Tag: programlisting
#: reference_accessor.xml:514
#, no-c-format
msgid ""
"-- Polyhedral surface example\n"
"-- Break a Polyhedral surface into its faces\n"
"SELECT ST_AsEWKT(ST_GeometryN(p_geom,3)) As geom_ewkt\n"
"  FROM (SELECT ST_GeomFromEWKT('POLYHEDRALSURFACE(\n"
"((0 0 0, 0 0 1, 0 1 1, 0 1 0, 0 0 0)),\n"
"((0 0 0, 0 1 0, 1 1 0, 1 0 0, 0 0 0)),\n"
"((0 0 0, 1 0 0, 1 0 1, 0 0 1, 0 0 0)),\n"
"((1 1 0, 1 1 1, 1 0 1, 1 0 0, 1 1 0)),\n"
"((0 1 0, 0 1 1, 1 1 1, 1 1 0, 0 1 0)),\n"
"((0 0 1, 1 0 1, 1 1 1, 0 1 1, 0 0 1))\n"
")')  AS p_geom )  AS a;\n"
"\n"
"                geom_ewkt\n"
"------------------------------------------\n"
" POLYGON((0 0 0,1 0 0,1 0 1,0 0 1,0 0 0))"
msgstr "-- 다면체 표면 예시\n-- 다면체 표면을 각 면으로 분해하기\nSELECT ST_AsEWKT(ST_GeometryN(p_geom,3)) As geom_ewkt\n  FROM (SELECT ST_GeomFromEWKT('POLYHEDRALSURFACE(\n((0 0 0, 0 0 1, 0 1 1, 0 1 0, 0 0 0)),\n((0 0 0, 0 1 0, 1 1 0, 1 0 0, 0 0 0)),\n((0 0 0, 1 0 0, 1 0 1, 0 0 1, 0 0 0)),\n((1 1 0, 1 1 1, 1 0 1, 1 0 0, 1 1 0)),\n((0 1 0, 0 1 1, 1 1 1, 1 1 0, 0 1 0)),\n((0 0 1, 1 0 1, 1 1 1, 0 1 1, 0 0 1))\n)')  AS p_geom )  AS a;\n\n                geom_ewkt\n------------------------------------------\n POLYGON((0 0 0,1 0 0,1 0 1,0 0 1,0 0 0))"

#. Tag: programlisting
#: reference_accessor.xml:516
#, no-c-format
msgid ""
"-- TIN --\n"
"SELECT ST_AsEWKT(ST_GeometryN(geom,2)) as wkt\n"
"  FROM\n"
"    (SELECT\n"
"       ST_GeomFromEWKT('TIN (((\n"
"                0 0 0,\n"
"                0 0 1,\n"
"                0 1 0,\n"
"                0 0 0\n"
"            )), ((\n"
"                0 0 0,\n"
"                0 1 0,\n"
"                1 1 0,\n"
"                0 0 0\n"
"            ))\n"
"            )')  AS geom\n"
"    ) AS g;\n"
"-- result --\n"
"                 wkt\n"
"-------------------------------------\n"
" TRIANGLE((0 0 0,0 1 0,1 1 0,0 0 0))"
msgstr "-- TIN --\nSELECT ST_AsEWKT(ST_GeometryN(geom,2)) as wkt\n  FROM\n    (SELECT\n       ST_GeomFromEWKT('TIN (((\n                0 0 0,\n                0 0 1,\n                0 1 0,\n                0 0 0\n            )), ((\n                0 0 0,\n                0 1 0,\n                1 1 0,\n                0 0 0\n            ))\n            )')  AS geom\n    ) AS g;\n-- 결과 --\n                 wkt\n-------------------------------------\n TRIANGLE((0 0 0,0 1 0,1 1 0,0 0 0))"

#. Tag: para
#: reference_accessor.xml:523 reference_accessor.xml:1386
#, no-c-format
msgid ", <xref linkend=\"ST_NumGeometries\"/>"
msgstr ", <xref linkend=\"ST_NumGeometries\"/>"

#. Tag: refname
#: reference_accessor.xml:529
#, no-c-format
msgid "ST_GeometryType"
msgstr "ST_GeometryType"

#. Tag: refpurpose
#: reference_accessor.xml:530
#, no-c-format
msgid "Return the geometry type of the ST_Geometry value."
msgstr "ST_Geometry 값의 도형 유형을 반환합니다."

#. Tag: funcprototype
#: reference_accessor.xml:535
#, no-c-format
msgid ""
"<funcdef>text <function>ST_GeometryType</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef>"
msgstr "<funcdef>text <function>ST_GeometryType</function></funcdef> <paramdef><type>geometry </type> <parameter>g1</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:544
#, no-c-format
msgid ""
"Returns the type of the geometry as a string. EG: 'ST_Linestring', "
"'ST_Polygon','ST_MultiPolygon' etc. This function differs from "
"GeometryType(geometry) in the case of the string and ST in front that is "
"returned, as well as the fact that it will not indicate whether the geometry"
" is measured."
msgstr "도형의 유형을 'ST_Linestring', 'ST_Polygon', 'ST_MultiPolygon' 등과 같은 스트링으로 반환합니다. 이 함수는 도형의 단위가 설정돼 있는지 알려주지 않는 것은 물론, 반환된 결과물이 스트링이며 접두사 ST가 달린다는 점에서도 GeometryType(geometry) 함수와는 다릅니다."

#. Tag: para
#: reference_accessor.xml:546 reference_accessor.xml:667
#: reference_accessor.xml:1185
#, no-c-format
msgid "Enhanced: 2.0.0 support for Polyhedral surfaces was introduced."
msgstr "개선 사항: 2.0.0 버전부터 다면체 표면(polyhedral surface)을 지원합니다."

#. Tag: para
#: reference_accessor.xml:547
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.4"
msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.4"

#. Tag: programlisting
#: reference_accessor.xml:556
#, no-c-format
msgid ""
"SELECT ST_GeometryType(ST_GeomFromText('LINESTRING(77.29 29.07,77.42 29.26,77.27 29.31,77.29 29.07)'));\n"
"                        --result\n"
"                        ST_LineString"
msgstr "SELECT ST_GeometryType(ST_GeomFromText('LINESTRING(77.29 29.07,77.42 29.26,77.27 29.31,77.29 29.07)'));\n-- 결과\nST_LineString"

#. Tag: programlisting
#: reference_accessor.xml:558 reference_accessor.xml:560
#, no-c-format
msgid ""
"SELECT ST_GeometryType(ST_GeomFromEWKT('POLYHEDRALSURFACE( ((0 0 0, 0 0 1, 0 1 1, 0 1 0, 0 0 0)),\n"
"                ((0 0 0, 0 1 0, 1 1 0, 1 0 0, 0 0 0)), ((0 0 0, 1 0 0, 1 0 1, 0 0 1, 0 0 0)),\n"
"                ((1 1 0, 1 1 1, 1 0 1, 1 0 0, 1 1 0)),\n"
"                ((0 1 0, 0 1 1, 1 1 1, 1 1 0, 0 1 0)), ((0 0 1, 1 0 1, 1 1 1, 0 1 1, 0 0 1)) )'));\n"
"                        --result\n"
"                        ST_PolyhedralSurface"
msgstr "SELECT ST_GeometryType(ST_GeomFromEWKT('POLYHEDRALSURFACE( ((0 0 0, 0 0 1, 0 1 1, 0 1 0, 0 0 0)),\n                ((0 0 0, 0 1 0, 1 1 0, 1 0 0, 0 0 0)), ((0 0 0, 1 0 0, 1 0 1, 0 0 1, 0 0 0)),\n                ((1 1 0, 1 1 1, 1 0 1, 1 0 0, 1 1 0)),\n                ((0 1 0, 0 1 1, 1 1 1, 1 1 0, 0 1 0)), ((0 0 1, 1 0 1, 1 1 1, 0 1 1, 0 0 1)) )'));\n                        -- 결과\n                        ST_PolyhedralSurface"

#. Tag: programlisting
#: reference_accessor.xml:562
#, no-c-format
msgid ""
"SELECT ST_GeometryType(geom) as result\n"
"  FROM\n"
"    (SELECT\n"
"       ST_GeomFromEWKT('TIN (((\n"
"                0 0 0,\n"
"                0 0 1,\n"
"                0 1 0,\n"
"                0 0 0\n"
"            )), ((\n"
"                0 0 0,\n"
"                0 1 0,\n"
"                1 1 0,\n"
"                0 0 0\n"
"            ))\n"
"            )')  AS geom\n"
"    ) AS g;\n"
" result\n"
"--------\n"
" ST_Tin"
msgstr "SELECT ST_GeometryType(geom) as result\n  FROM\n    (SELECT\n       ST_GeomFromEWKT('TIN (((\n                0 0 0,\n                0 0 1,\n                0 1 0,\n                0 0 0\n            )), ((\n                0 0 0,\n                0 1 0,\n                1 1 0,\n                0 0 0\n            ))\n            )')  AS geom\n    ) AS g;\n result\n--------\n ST_Tin"

#. Tag: refname
#: reference_accessor.xml:575
#, no-c-format
msgid "ST_InteriorRingN"
msgstr "ST_InteriorRingN"

#. Tag: refpurpose
#: reference_accessor.xml:577
#, no-c-format
msgid ""
"Return the Nth interior linestring ring of the polygon geometry. Return NULL"
" if the geometry is not a polygon or the given N is out of range."
msgstr "폴리곤 도형의 N번째 내곽 라인스트링 고리를 반환합니다. 도형이 폴리곤이 아니거나 주어진 N이 범위(range)를 벗어난 경우 NULL을 반환합니다."

#. Tag: funcprototype
#: reference_accessor.xml:584
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_InteriorRingN</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>a_polygon</parameter></paramdef>"
" <paramdef><type>integer </type> <parameter>n</parameter></paramdef>"
msgstr "<funcdef>geometry <function>ST_InteriorRingN</function></funcdef> <paramdef><type>geometry </type> <parameter>a_polygon</parameter></paramdef> <paramdef><type>integer </type> <parameter>n</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:595
#, no-c-format
msgid ""
"Return the Nth interior linestring ring of the polygon geometry. Return NULL"
" if the geometry is not a polygon or the given N is out of range. index "
"starts at 1."
msgstr "폴리곤 도형의 N번째 내곽 라인스트링 고리를 반환합니다. 도형이 폴리곤이 아니거나 주어진 N이 범위(range)를 벗어난 경우 NULL을 반환합니다. 인덱스는 1에서 시작합니다."

#. Tag: para
#: reference_accessor.xml:601
#, no-c-format
msgid ""
"This will not work for MULTIPOLYGONs. Use in conjunction with ST_Dump for "
"MULTIPOLYGONS"
msgstr "이 함수는 멀티폴리곤을 입력받지 못 합니다. 멀티폴리곤의 경우 ST_Dump 함수와 결합해서 이용하십시오."

#. Tag: para
#: reference_accessor.xml:605
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 8.2.6, 8.3.5"
msgstr "&sqlmm_compliant; SQL-MM 3: 8.2.6, 8.3.5"

#. Tag: programlisting
#: reference_accessor.xml:614
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_InteriorRingN(the_geom, 1)) As the_geom\n"
"FROM (SELECT ST_BuildArea(\n"
"                ST_Collect(ST_Buffer(ST_Point(1,2), 20,3),\n"
"                        ST_Buffer(ST_Point(1, 2), 10,3))) As the_geom\n"
"                )  as foo"
msgstr "SELECT ST_AsText(ST_InteriorRingN(the_geom, 1)) As the_geom\nFROM (SELECT ST_BuildArea(\n                ST_Collect(ST_Buffer(ST_Point(1,2), 20,3),\n                        ST_Buffer(ST_Point(1, 2), 10,3))) As the_geom\n                )  as foo"

#. Tag: para
#: reference_accessor.xml:621
#, no-c-format
msgid ""
", <xref linkend=\"ST_Collect\"/>, <xref linkend=\"ST_Dump\"/>, <xref "
"linkend=\"ST_NumInteriorRing\"/>,"
msgstr ", <xref linkend=\"ST_Collect\"/>, <xref linkend=\"ST_Dump\"/>, <xref linkend=\"ST_NumInteriorRing\"/>,"

#. Tag: refname
#: reference_accessor.xml:634
#, no-c-format
msgid "ST_IsClosed"
msgstr "ST_IsClosed"

#. Tag: refpurpose
#: reference_accessor.xml:636
#, no-c-format
msgid ""
"Returns <varname>TRUE</varname> if the <varname>LINESTRING</varname>'s start"
" and end points are coincident. For Polyhedral surface is closed "
"(volumetric)."
msgstr "<varname>LINESTRING</varname> 의 시작점과 종단점이 일치하는 경우 <varname>TRUE</varname> 를 반환합니다. 다면체 표면이 닫혀 (부피를 가지고) 있는 경우 <varname>TRUE</varname> 를 반환합니다."

#. Tag: funcprototype
#: reference_accessor.xml:643
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_IsClosed</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g</parameter></paramdef>"
msgstr "<funcdef>boolean <function>ST_IsClosed</function></funcdef> <paramdef><type>geometry </type> <parameter>g</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:654
#, no-c-format
msgid ""
"Returns <varname>TRUE</varname> if the <varname>LINESTRING</varname>'s start"
" and end points are coincident. For Polyhedral Surfaces, it tells you if the"
" surface is areal (open) or volumetric (closed)."
msgstr "<varname>LINESTRING</varname> 의 시작점과 종단점이 일치하는 경우 <varname>TRUE</varname> 를 반환합니다. 다면체 표면의 경우, 다면체 표면이 면적(열림)을 가지고 있는지 부피(닫힘)를 가지고 있는지 알려줍니다."

#. Tag: para
#: reference_accessor.xml:658
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 7.1.5, 9.3.3"
msgstr "&sqlmm_compliant; SQL-MM 3: 7.1.5, 9.3.3"

#. Tag: para
#: reference_accessor.xml:660
#, no-c-format
msgid ""
"SQL-MM defines the result of "
"<function>ST_IsClosed(<varname>NULL</varname>)</function> to be 0, while "
"PostGIS returns <varname>NULL</varname>."
msgstr "SQL-MM은 <function>ST_IsClosed(<varname>NULL</varname>)</function> 의 결과를 0으로 정의하지만, PostGIS는 <varname>NULL</varname> 을 반환합니다."

#. Tag: title
#: reference_accessor.xml:674
#, no-c-format
msgid "Line String and Point Examples"
msgstr "라인스트링 및 포인트 예시"

#. Tag: programlisting
#: reference_accessor.xml:676
#, no-c-format
msgid ""
"postgis=# SELECT ST_IsClosed('LINESTRING(0 0, 1 1)'::geometry);\n"
" st_isclosed\n"
"-------------\n"
" f\n"
"(1 row)\n"
"\n"
"postgis=# SELECT ST_IsClosed('LINESTRING(0 0, 0 1, 1 1, 0 0)'::geometry);\n"
" st_isclosed\n"
"-------------\n"
" t\n"
"(1 row)\n"
"\n"
"postgis=# SELECT ST_IsClosed('MULTILINESTRING((0 0, 0 1, 1 1, 0 0),(0 0, 1 1))'::geometry);\n"
" st_isclosed\n"
"-------------\n"
" f\n"
"(1 row)\n"
"\n"
"postgis=# SELECT ST_IsClosed('POINT(0 0)'::geometry);\n"
" st_isclosed\n"
"-------------\n"
" t\n"
"(1 row)\n"
"\n"
"postgis=# SELECT ST_IsClosed('MULTIPOINT((0 0), (1 1))'::geometry);\n"
" st_isclosed\n"
"-------------\n"
" t\n"
"(1 row)"
msgstr "postgis=# SELECT ST_IsClosed('LINESTRING(0 0, 1 1)'::geometry);\n st_isclosed\n-------------\n f\n(1 row)\n\npostgis=# SELECT ST_IsClosed('LINESTRING(0 0, 0 1, 1 1, 0 0)'::geometry);\n st_isclosed\n-------------\n t\n(1 row)\n\npostgis=# SELECT ST_IsClosed('MULTILINESTRING((0 0, 0 1, 1 1, 0 0),(0 0, 1 1))'::geometry);\n st_isclosed\n-------------\n f\n(1 row)\n\npostgis=# SELECT ST_IsClosed('POINT(0 0)'::geometry);\n st_isclosed\n-------------\n t\n(1 row)\n\npostgis=# SELECT ST_IsClosed('MULTIPOINT((0 0), (1 1))'::geometry);\n st_isclosed\n-------------\n t\n(1 row)"

#. Tag: title
#: reference_accessor.xml:680
#, no-c-format
msgid "Polyhedral Surface Examples"
msgstr "다면체 표면 예시"

#. Tag: programlisting
#: reference_accessor.xml:682
#, no-c-format
msgid ""
"-- A cube --\n"
"                SELECT ST_IsClosed(ST_GeomFromEWKT('POLYHEDRALSURFACE( ((0 0 0, 0 0 1, 0 1 1, 0 1 0, 0 0 0)),\n"
"                ((0 0 0, 0 1 0, 1 1 0, 1 0 0, 0 0 0)), ((0 0 0, 1 0 0, 1 0 1, 0 0 1, 0 0 0)),\n"
"                ((1 1 0, 1 1 1, 1 0 1, 1 0 0, 1 1 0)),\n"
"                ((0 1 0, 0 1 1, 1 1 1, 1 1 0, 0 1 0)), ((0 0 1, 1 0 1, 1 1 1, 0 1 1, 0 0 1)) )'));\n"
"\n"
" st_isclosed\n"
"-------------\n"
" t\n"
"\n"
"\n"
" -- Same as cube but missing a side --\n"
" SELECT ST_IsClosed(ST_GeomFromEWKT('POLYHEDRALSURFACE( ((0 0 0, 0 0 1, 0 1 1, 0 1 0, 0 0 0)),\n"
"                ((0 0 0, 0 1 0, 1 1 0, 1 0 0, 0 0 0)), ((0 0 0, 1 0 0, 1 0 1, 0 0 1, 0 0 0)),\n"
"                ((1 1 0, 1 1 1, 1 0 1, 1 0 0, 1 1 0)),\n"
"                ((0 1 0, 0 1 1, 1 1 1, 1 1 0, 0 1 0)) )'));\n"
"\n"
" st_isclosed\n"
"-------------\n"
" f"
msgstr "-- 입방체 --\n                SELECT ST_IsClosed(ST_GeomFromEWKT('POLYHEDRALSURFACE( ((0 0 0, 0 0 1, 0 1 1, 0 1 0, 0 0 0)),\n                ((0 0 0, 0 1 0, 1 1 0, 1 0 0, 0 0 0)), ((0 0 0, 1 0 0, 1 0 1, 0 0 1, 0 0 0)),\n                ((1 1 0, 1 1 1, 1 0 1, 1 0 0, 1 1 0)),\n                ((0 1 0, 0 1 1, 1 1 1, 1 1 0, 0 1 0)), ((0 0 1, 1 0 1, 1 1 1, 0 1 1, 0 0 1)) )'));\n\n st_isclosed\n-------------\n t\n\n\n -- 입방체이지만 한 면이 없는 경우 --\n SELECT ST_IsClosed(ST_GeomFromEWKT('POLYHEDRALSURFACE( ((0 0 0, 0 0 1, 0 1 1, 0 1 0, 0 0 0)),\n                ((0 0 0, 0 1 0, 1 1 0, 1 0 0, 0 0 0)), ((0 0 0, 1 0 0, 1 0 1, 0 0 1, 0 0 0)),\n                ((1 1 0, 1 1 1, 1 0 1, 1 0 0, 1 1 0)),\n                ((0 1 0, 0 1 1, 1 1 1, 1 1 0, 0 1 0)) )'));\n\n st_isclosed\n-------------\n f"

#. Tag: refname
#: reference_accessor.xml:694
#, no-c-format
msgid "ST_IsCollection"
msgstr "ST_IsCollection"

#. Tag: refpurpose
#: reference_accessor.xml:696
#, no-c-format
msgid ""
"Returns <varname>TRUE</varname> if the argument is a collection "
"(<varname>MULTI*</varname>, <varname>GEOMETRYCOLLECTION</varname>, ...)"
msgstr "인수가 집합(<varname>MULTI*</varname>, <varname>GEOMETRYCOLLECTION</varname>, ...)인 경우 <varname>TRUE</varname> 를 반환합니다."

#. Tag: funcprototype
#: reference_accessor.xml:703
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_IsCollection</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g</parameter></paramdef>"
msgstr "<funcdef>boolean <function>ST_IsCollection</function></funcdef> <paramdef><type>geometry </type> <parameter>g</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:713
#, no-c-format
msgid ""
"Returns <varname>TRUE</varname> if the geometry type of the argument is "
"either:"
msgstr "인수의 도형 유형이 다음 가운데 하나일 경우 <varname>TRUE</varname> 를 반환합니다:"

#. Tag: para
#: reference_accessor.xml:716
#, no-c-format
msgid "GEOMETRYCOLLECTION"
msgstr "GEOMETRYCOLLECTION"

#. Tag: para
#: reference_accessor.xml:717
#, no-c-format
msgid "MULTI{POINT,POLYGON,LINESTRING,CURVE,SURFACE}"
msgstr "MULTI{POINT,POLYGON,LINESTRING,CURVE,SURFACE}"

#. Tag: para
#: reference_accessor.xml:718
#, no-c-format
msgid "COMPOUNDCURVE"
msgstr "COMPOUNDCURVE"

#. Tag: para
#: reference_accessor.xml:723
#, no-c-format
msgid ""
"This function analyzes the type of the geometry. This means that it will "
"return <varname>TRUE</varname> on collections that are empty or that contain"
" a single element."
msgstr "이 함수는 도형의 유형을 분석합니다. 즉 비어 있거나 단일 요소를 담고 있는 집합일 경우에도 <varname>TRUE</varname> 를 반환할 것이라는 뜻입니다."

#. Tag: programlisting
#: reference_accessor.xml:738
#, no-c-format
msgid ""
"postgis=# SELECT ST_IsCollection('LINESTRING(0 0, 1 1)'::geometry);\n"
" st_iscollection\n"
"-------------\n"
" f\n"
"(1 row)\n"
"\n"
"postgis=# SELECT ST_IsCollection('MULTIPOINT EMPTY'::geometry);\n"
" st_iscollection\n"
"-------------\n"
" t\n"
"(1 row)\n"
"\n"
"postgis=# SELECT ST_IsCollection('MULTIPOINT((0 0))'::geometry);\n"
" st_iscollection\n"
"-------------\n"
" t\n"
"(1 row)\n"
"\n"
"postgis=# SELECT ST_IsCollection('MULTIPOINT((0 0), (42 42))'::geometry);\n"
" st_iscollection\n"
"-------------\n"
" t\n"
"(1 row)\n"
"\n"
"postgis=# SELECT ST_IsCollection('GEOMETRYCOLLECTION(POINT(0 0))'::geometry);\n"
" st_iscollection\n"
"-------------\n"
" t\n"
"(1 row)"
msgstr "postgis=# SELECT ST_IsCollection('LINESTRING(0 0, 1 1)'::geometry);\n st_iscollection\n-------------\n f\n(1 row)\n\npostgis=# SELECT ST_IsCollection('MULTIPOINT EMPTY'::geometry);\n st_iscollection\n-------------\n t\n(1 row)\n\npostgis=# SELECT ST_IsCollection('MULTIPOINT((0 0))'::geometry);\n st_iscollection\n-------------\n t\n(1 row)\n\npostgis=# SELECT ST_IsCollection('MULTIPOINT((0 0), (42 42))'::geometry);\n st_iscollection\n-------------\n t\n(1 row)\n\npostgis=# SELECT ST_IsCollection('GEOMETRYCOLLECTION(POINT(0 0))'::geometry);\n st_iscollection\n-------------\n t\n(1 row)"

#. Tag: refname
#: reference_accessor.xml:750
#, no-c-format
msgid "ST_IsEmpty"
msgstr "ST_IsEmpty"

#. Tag: refpurpose
#: reference_accessor.xml:752
#, no-c-format
msgid ""
"Returns true if this Geometry is an empty geometrycollection, polygon, point"
" etc."
msgstr "해당 도형이 텅 빈 도형 집합, 폴리곤, 포인트 등인 경우 <varname>TRUE</varname> 를 반환합니다."

#. Tag: funcprototype
#: reference_accessor.xml:758
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_IsEmpty</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef>"
msgstr "<funcdef>boolean <function>ST_IsEmpty</function></funcdef> <paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:768
#, no-c-format
msgid ""
"Returns true if this Geometry is an empty geometry. If true, then this "
"Geometry represents an empty geometry collection, polygon, point etc."
msgstr "해당 도형이 텅 빈 도형인 경우 <varname>TRUE</varname> 를 반환합니다. <varname>TRUE</varname> 인 경우, 해당 도형이 텅 빈 도형 집합, 폴리곤, 포인트 등을 표현한다는 뜻입니다."

#. Tag: para
#: reference_accessor.xml:771
#, no-c-format
msgid ""
"SQL-MM defines the result of ST_IsEmpty(NULL) to be 0, while PostGIS returns"
" NULL."
msgstr "SQL-MM은 <function>ST_IsEmpty(<varname>NULL</varname>)</function> 의 결과를 0으로 정의하지만, PostGIS는 <varname>NULL</varname> 을 반환합니다."

#. Tag: para
#: reference_accessor.xml:776
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.7"
msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.7"

#. Tag: para
#: reference_accessor.xml:778
#, no-c-format
msgid ""
"Changed: 2.0.0 In prior versions of PostGIS "
"ST_GeomFromText('GEOMETRYCOLLECTION(EMPTY)') was allowed. This is now "
"illegal in PostGIS 2.0.0 to better conform with SQL/MM standards"
msgstr "변경 사항: PostGIS 2.0.0 미만 버전에서는 ST_GeomFromText('GEOMETRYCOLLECTION(EMPTY)') 를 사용할 수 있었습니다. PostGIS 2.0.0 버전부터, SQL/MM 표준을 더 잘 준수하기 위해 이런 사용법은 금지됐습니다."

#. Tag: programlisting
#: reference_accessor.xml:786
#, no-c-format
msgid ""
"SELECT ST_IsEmpty(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY'));\n"
" st_isempty\n"
"------------\n"
" t\n"
"(1 row)\n"
"\n"
" SELECT ST_IsEmpty(ST_GeomFromText('POLYGON EMPTY'));\n"
" st_isempty\n"
"------------\n"
" t\n"
"(1 row)\n"
"\n"
"SELECT ST_IsEmpty(ST_GeomFromText('POLYGON((1 2, 3 4, 5 6, 1 2))'));\n"
"\n"
" st_isempty\n"
"------------\n"
" f\n"
"(1 row)\n"
"\n"
" SELECT ST_IsEmpty(ST_GeomFromText('POLYGON((1 2, 3 4, 5 6, 1 2))')) = false;\n"
" ?column?\n"
"----------\n"
" t\n"
"(1 row)\n"
"\n"
" SELECT ST_IsEmpty(ST_GeomFromText('CIRCULARSTRING EMPTY'));\n"
"  st_isempty\n"
"------------\n"
" t\n"
"(1 row)"
msgstr "SELECT ST_IsEmpty(ST_GeomFromText('GEOMETRYCOLLECTION EMPTY'));\n st_isempty\n------------\n t\n(1 row)\n\n SELECT ST_IsEmpty(ST_GeomFromText('POLYGON EMPTY'));\n st_isempty\n------------\n t\n(1 row)\n\nSELECT ST_IsEmpty(ST_GeomFromText('POLYGON((1 2, 3 4, 5 6, 1 2))'));\n\n st_isempty\n------------\n f\n(1 row)\n\n SELECT ST_IsEmpty(ST_GeomFromText('POLYGON((1 2, 3 4, 5 6, 1 2))')) = false;\n ?column?\n----------\n t\n(1 row)\n\n SELECT ST_IsEmpty(ST_GeomFromText('CIRCULARSTRING EMPTY'));\n  st_isempty\n------------\n t\n(1 row)"

#. Tag: refname
#: reference_accessor.xml:793
#, no-c-format
msgid "ST_IsRing"
msgstr "ST_IsRing"

#. Tag: refpurpose
#: reference_accessor.xml:795
#, no-c-format
msgid ""
"Returns <varname>TRUE</varname> if this <varname>LINESTRING</varname> is "
"both closed and simple."
msgstr "<varname>LINESTRING</varname> 이 닫혀 있는 단순 도형인 경우 <varname>TRUE</varname> 를 반환합니다."

#. Tag: funcprototype
#: reference_accessor.xml:801
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_IsRing</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g</parameter></paramdef>"
msgstr "<funcdef>boolean <function>ST_IsRing</function></funcdef> <paramdef><type>geometry </type> <parameter>g</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:812
#, no-c-format
msgid ""
"Returns <varname>TRUE</varname> if this <varname>LINESTRING</varname> is "
"both <xref linkend=\"ST_IsClosed\"/> "
"(<function>ST_StartPoint(<parameter>g</parameter>)</function> "
"<function>~=</function> "
"<function>ST_Endpoint(<parameter>g</parameter>)</function>) and <xref "
"linkend=\"ST_IsSimple\"/> (does not self intersect)."
msgstr "해당 <varname>LINESTRING</varname> 이 <xref linkend=\"ST_IsClosed\"/> (<function>ST_StartPoint(<parameter>g</parameter>)</function> <function>~=</function> <function>ST_Endpoint(<parameter>g</parameter>)</function>) 인 동시에 <xref linkend=\"ST_IsSimple\"/> 인 (자체 교차하지 않는) 경우 <varname>TRUE</varname> 를 반환합니다."

#. Tag: para
#: reference_accessor.xml:820
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 7.1.6"
msgstr "&sqlmm_compliant; SQL-MM 3: 7.1.6"

#. Tag: para
#: reference_accessor.xml:822
#, no-c-format
msgid ""
"SQL-MM defines the result of "
"<function>ST_IsRing(<varname>NULL</varname>)</function> to be 0, while "
"PostGIS returns <varname>NULL</varname>."
msgstr "SQL-MM은 <function>ST_IsRing(<varname>NULL</varname>)</function> 의 결과를 0으로 정의하지만, PostGIS는 <varname>NULL</varname> 을 반환합니다."

#. Tag: programlisting
#: reference_accessor.xml:831
#, no-c-format
msgid ""
"SELECT ST_IsRing(the_geom), ST_IsClosed(the_geom), ST_IsSimple(the_geom)\n"
"FROM (SELECT 'LINESTRING(0 0, 0 1, 1 1, 1 0, 0 0)'::geometry AS the_geom) AS foo;\n"
" st_isring | st_isclosed | st_issimple\n"
"-----------+-------------+-------------\n"
" t         | t           | t\n"
"(1 row)\n"
"\n"
"SELECT ST_IsRing(the_geom), ST_IsClosed(the_geom), ST_IsSimple(the_geom)\n"
"FROM (SELECT 'LINESTRING(0 0, 0 1, 1 0, 1 1, 0 0)'::geometry AS the_geom) AS foo;\n"
" st_isring | st_isclosed | st_issimple\n"
"-----------+-------------+-------------\n"
" f         | t           | f\n"
"(1 row)"
msgstr "SELECT ST_IsRing(the_geom), ST_IsClosed(the_geom), ST_IsSimple(the_geom)\nFROM (SELECT 'LINESTRING(0 0, 0 1, 1 1, 1 0, 0 0)'::geometry AS the_geom) AS foo;\n st_isring | st_isclosed | st_issimple\n-----------+-------------+-------------\n t         | t           | t\n(1 row)\n\nSELECT ST_IsRing(the_geom), ST_IsClosed(the_geom), ST_IsSimple(the_geom)\nFROM (SELECT 'LINESTRING(0 0, 0 1, 1 0, 1 1, 0 0)'::geometry AS the_geom) AS foo;\n st_isring | st_isclosed | st_issimple\n-----------+-------------+-------------\n f         | t           | f\n(1 row)"

#. Tag: para
#: reference_accessor.xml:837
#, no-c-format
msgid ""
", <xref linkend=\"ST_IsSimple\"/>, <xref linkend=\"ST_StartPoint\"/>, <xref "
"linkend=\"ST_EndPoint\"/>"
msgstr ", <xref linkend=\"ST_IsSimple\"/>, <xref linkend=\"ST_StartPoint\"/>, <xref linkend=\"ST_EndPoint\"/>"

#. Tag: refname
#: reference_accessor.xml:845
#, no-c-format
msgid "ST_IsSimple"
msgstr "ST_IsSimple"

#. Tag: refpurpose
#: reference_accessor.xml:847
#, no-c-format
msgid ""
"Returns (TRUE) if this Geometry has no anomalous geometric points, such as "
"self intersection or self tangency."
msgstr "해당 도형이 자체 교차하거나 자체 접촉하는 이례적인 도형 포인트를 가지고 있지 않을 경우 <varname>TRUE</varname> 를 반환합니다."

#. Tag: funcprototype
#: reference_accessor.xml:853
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_IsSimple</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef>"
msgstr "<funcdef>boolean <function>ST_IsSimple</function></funcdef> <paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:863
#, no-c-format
msgid ""
"Returns true if this Geometry has no anomalous geometric points, such as "
"self intersection or self tangency. For more information on the OGC's "
"definition of geometry simplicity and validity, refer to <link "
"linkend=\"OGC_Validity\">\"Ensuring OpenGIS compliancy of "
"geometries\"</link>"
msgstr "해당 도형이 자체 교차하거나 자체 접촉하는 이례적인 도형 포인트를 가지고 있지 않을 경우 <varname>TRUE</varname> 를 반환합니다. 도형 단순성 및 유효성에 대한 OGC의 정의를 더 자세히 알고 싶다면, <link linkend=\"OGC_Validity\">\"OpenGIS의 도형 준수성 확인(Ensuring OpenGIS compliancy of geometries)\"</link> 을 참조하십시오."

#. Tag: para
#: reference_accessor.xml:869
#, no-c-format
msgid ""
"SQL-MM defines the result of ST_IsSimple(NULL) to be 0, while PostGIS "
"returns NULL."
msgstr "SQL-MM은 <function>ST_IsSimple(<varname>NULL</varname>)</function> 의 결과를 0으로 정의하지만, PostGIS는 <varname>NULL</varname> 을 반환합니다."

#. Tag: para
#: reference_accessor.xml:874
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.8"
msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.8"

#. Tag: programlisting
#: reference_accessor.xml:882
#, no-c-format
msgid ""
"SELECT ST_IsSimple(ST_GeomFromText('POLYGON((1 2, 3 4, 5 6, 1 2))'));\n"
" st_issimple\n"
"-------------\n"
" t\n"
"(1 row)\n"
"\n"
" SELECT ST_IsSimple(ST_GeomFromText('LINESTRING(1 1,2 2,2 3.5,1 3,1 2,2 1)'));\n"
" st_issimple\n"
"-------------\n"
" f\n"
"(1 row)"
msgstr "SELECT ST_IsSimple(ST_GeomFromText('POLYGON((1 2, 3 4, 5 6, 1 2))'));\n st_issimple\n-------------\n t\n(1 row)\n\n SELECT ST_IsSimple(ST_GeomFromText('LINESTRING(1 1,2 2,2 3.5,1 3,1 2,2 1)'));\n st_issimple\n-------------\n f\n(1 row)"

#. Tag: refname
#: reference_accessor.xml:894
#, no-c-format
msgid "ST_IsValid"
msgstr "ST_IsValid"

#. Tag: refpurpose
#: reference_accessor.xml:896
#, no-c-format
msgid ""
"Returns <varname>true</varname> if the <varname>ST_Geometry</varname> is "
"well formed."
msgstr "<varname>ST_Geometry</varname> 가 잘 형성돼 있는 경우 <varname>TRUE</varname> 를 반환합니다."

#. Tag: funcsynopsis
#: reference_accessor.xml:902
#, no-c-format
msgid ""
"<funcprototype> <funcdef>boolean <function>ST_IsValid</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g</parameter></paramdef> "
"</funcprototype> <funcprototype> <funcdef>boolean "
"<function>ST_IsValid</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>g</parameter></paramdef> <paramdef><type>integer </type> "
"<parameter>flags</parameter></paramdef> </funcprototype>"
msgstr "<funcprototype> <funcdef>boolean <function>ST_IsValid</function></funcdef> <paramdef><type>geometry </type> <parameter>g</parameter></paramdef> </funcprototype> <funcprototype> <funcdef>boolean <function>ST_IsValid</function></funcdef> <paramdef><type>geometry </type> <parameter>g</parameter></paramdef> <paramdef><type>integer </type> <parameter>flags</parameter></paramdef> </funcprototype>"

#. Tag: para
#: reference_accessor.xml:920
#, no-c-format
msgid ""
"Test if an ST_Geometry value is well formed. For geometries that are "
"invalid, the PostgreSQL NOTICE will provide details of why it is not valid. "
"For more information on the OGC's definition of geometry simplicity and "
"validity, refer to <link linkend=\"OGC_Validity\">\"Ensuring OpenGIS "
"compliancy of geometries\"</link>"
msgstr "ST_Geometry 값이 잘 형성돼 있는지 검사합니다. 유효하지 않은 도형인 경우, PostgreSQL NOTICE가 그 이유에 대한 상세 정보를 제공할 것입니다. 도형 단순성 및 유효성에 대한 OGC의 정의를 더 자세히 알고 싶다면, <link linkend=\"OGC_Validity\">\"OpenGIS의 도형 준수성 확인(Ensuring OpenGIS compliancy of geometries)\"</link> 을 참조하십시오."

#. Tag: para
#: reference_accessor.xml:926
#, no-c-format
msgid ""
"SQL-MM defines the result of ST_IsValid(NULL) to be 0, while PostGIS returns"
" NULL."
msgstr "SQL-MM은 <function>ST_IsValid(<varname>NULL</varname>)</function> 의 결과를 0으로 정의하지만, PostGIS는 <varname>NULL</varname> 을 반환합니다."

#. Tag: para
#: reference_accessor.xml:930
#, no-c-format
msgid ""
"The version accepting flags is available starting with 2.0.0 and requires "
"GEOS &gt;= 3.3.0. Such version does not print a NOTICE explaining the "
"invalidity. Allowed <varname>flags</varname> are documented in <xref "
"linkend=\"ST_IsValidDetail\"/>."
msgstr "2.0.0 버전부터 플래그를 사용할 수 있으며, 이때 GEOS 3.3.0 이상 버전이 필요합니다. 이 버전의 함수는 비유효성을 설명하는 알림을 출력하지 않습니다. <xref linkend=\"ST_IsValidDetail\"/> 에 사용할 수 있는 <varname>flags</varname> 가 정리돼 있습니다."

#. Tag: para
#: reference_accessor.xml:938
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.9"
msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.9"

#. Tag: para
#: reference_accessor.xml:941
#, no-c-format
msgid ""
"Neither OGC-SFS nor SQL-MM specifications include a flag argument for "
"ST_IsValid. The flag is a PostGIS extension."
msgstr "OGC-SFS 또는 SQL-MM 어떤 사양도 ST_IsValid 함수용 플래그 인수를 포함하지 않습니다. 해당 플래그는 PostGIS 확장 프로그램입니다."

#. Tag: programlisting
#: reference_accessor.xml:953
#, no-c-format
msgid ""
"SELECT ST_IsValid(ST_GeomFromText('LINESTRING(0 0, 1 1)')) As good_line,\n"
"        ST_IsValid(ST_GeomFromText('POLYGON((0 0, 1 1, 1 2, 1 1, 0 0))')) As bad_poly\n"
"--results\n"
"NOTICE:  Self-intersection at or near point 0 0\n"
" good_line | bad_poly\n"
"-----------+----------\n"
" t         | f"
msgstr "SELECT ST_IsValid(ST_GeomFromText('LINESTRING(0 0, 1 1)')) As good_line,\n        ST_IsValid(ST_GeomFromText('POLYGON((0 0, 1 1, 1 2, 1 1, 0 0))')) As bad_poly\n-- 결과\nNOTICE:  Self-intersection at or near point 0 0\n good_line | bad_poly\n-----------+----------\n t         | f"

#. Tag: para
#: reference_accessor.xml:959
#, no-c-format
msgid ""
", <xref linkend=\"ST_IsValidReason\"/>, <xref "
"linkend=\"ST_IsValidDetail\"/>, <xref linkend=\"ST_Summary\"/>"
msgstr ", <xref linkend=\"ST_IsValidReason\"/>, <xref linkend=\"ST_IsValidDetail\"/>, <xref linkend=\"ST_Summary\"/>"

#. Tag: refname
#: reference_accessor.xml:970
#, no-c-format
msgid "ST_IsValidReason"
msgstr "ST_IsValidReason"

#. Tag: refpurpose
#: reference_accessor.xml:972
#, no-c-format
msgid ""
"Returns text stating if a geometry is valid or not and if not valid, a "
"reason why."
msgstr "도형이 유효한지 아닌지, 그리고 유효하지 않을 경우 그 이유를 설명하는 텍스트를 반환합니다."

#. Tag: funcsynopsis
#: reference_accessor.xml:976
#, no-c-format
msgid ""
"<funcprototype> <funcdef>text "
"<function>ST_IsValidReason</function></funcdef> <paramdef><type>geometry "
"</type> <parameter>geomA</parameter></paramdef> </funcprototype> "
"<funcprototype> <funcdef>text "
"<function>ST_IsValidReason</function></funcdef> <paramdef><type>geometry "
"</type> <parameter>geomA</parameter></paramdef> <paramdef><type>integer "
"</type> <parameter>flags</parameter></paramdef> </funcprototype>"
msgstr "<funcprototype> <funcdef>text <function>ST_IsValidReason</function></funcdef> <paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef> </funcprototype> <funcprototype> <funcdef>text <function>ST_IsValidReason</function></funcdef> <paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef> <paramdef><type>integer </type> <parameter>flags</parameter></paramdef> </funcprototype>"

#. Tag: para
#: reference_accessor.xml:992
#, no-c-format
msgid ""
"Returns text stating if a geometry is valid or not an if not valid, a reason"
" why."
msgstr "도형이 유효한지 아닌지, 그리고 유효하지 않을 경우 그 이유를 설명하는 텍스트를 반환합니다."

#. Tag: para
#: reference_accessor.xml:994
#, no-c-format
msgid ""
"Useful in combination with ST_IsValid to generate a detailed report of "
"invalid geometries and reasons."
msgstr "ST_IsValid 함수와 함께 사용해서 유효하지 않은 도형 및 그 이유를 자세히 설명하는 보고서를 생성하는 데 유용합니다."

#. Tag: para
#: reference_accessor.xml:996
#, no-c-format
msgid ""
"Allowed <varname>flags</varname> are documented in <xref "
"linkend=\"ST_IsValidDetail\"/>."
msgstr "<xref linkend=\"ST_IsValidDetail\"/> 에 사용할 수 있는 <varname>flags</varname> 가 정리돼 있습니다."

#. Tag: para
#: reference_accessor.xml:1000
#, no-c-format
msgid "Availability: 1.4 - requires GEOS &gt;= 3.1.0."
msgstr "1.4 버전부터 사용할 수 있습니다. GEOS 3.1.0 이상 버전이 필요합니다."

#. Tag: para
#: reference_accessor.xml:1001
#, no-c-format
msgid ""
"Availability: 2.0 - requires GEOS &gt;= 3.3.0 for the version taking flags."
msgstr "플래그를 사용할 수 있는 버전은 2.0 버전부터 사용할 수 있습니다. GEOS 3.3.0 이상 버전이 필요합니다."

#. Tag: programlisting
#: reference_accessor.xml:1009
#, no-c-format
msgid ""
"--First 3 Rejects from a successful quintuplet experiment\n"
"SELECT gid, ST_IsValidReason(the_geom) as validity_info\n"
"FROM\n"
"(SELECT ST_MakePolygon(ST_ExteriorRing(e.buff), ST_Accum(f.line)) As the_geom, gid\n"
"FROM (SELECT ST_Buffer(ST_MakePoint(x1*10,y1), z1) As buff, x1*10 + y1*100 + z1*1000 As gid\n"
"        FROM generate_series(-4,6) x1\n"
"        CROSS JOIN generate_series(2,5) y1\n"
"        CROSS JOIN generate_series(1,8) z1\n"
"        WHERE x1 &gt; y1*0.5 AND z1 &lt; x1*y1) As e\n"
"        INNER JOIN (SELECT ST_Translate(ST_ExteriorRing(ST_Buffer(ST_MakePoint(x1*10,y1), z1)),y1*1, z1*2) As line\n"
"        FROM generate_series(-3,6) x1\n"
"        CROSS JOIN generate_series(2,5) y1\n"
"        CROSS JOIN generate_series(1,10) z1\n"
"        WHERE x1 &gt; y1*0.75 AND z1 &lt; x1*y1) As f\n"
"ON (ST_Area(e.buff) &gt; 78 AND ST_Contains(e.buff, f.line))\n"
"GROUP BY gid, e.buff) As quintuplet_experiment\n"
"WHERE ST_IsValid(the_geom) = false\n"
"ORDER BY gid\n"
"LIMIT 3;\n"
"\n"
" gid  |      validity_info\n"
"------+--------------------------\n"
" 5330 | Self-intersection [32 5]\n"
" 5340 | Self-intersection [42 5]\n"
" 5350 | Self-intersection [52 5]\n"
"\n"
" --simple example\n"
"SELECT ST_IsValidReason('LINESTRING(220227 150406,2220227 150407,222020 150410)');\n"
"\n"
" st_isvalidreason\n"
"------------------\n"
" Valid Geometry"
msgstr "-- 성공적인 다섯 쌍 실험에서 첫 거부(reject) 3개\nSELECT gid, ST_IsValidReason(the_geom) as validity_info\nFROM\n(SELECT ST_MakePolygon(ST_ExteriorRing(e.buff), ST_Accum(f.line)) As the_geom, gid\nFROM (SELECT ST_Buffer(ST_MakePoint(x1*10,y1), z1) As buff, x1*10 + y1*100 + z1*1000 As gid\n        FROM generate_series(-4,6) x1\n        CROSS JOIN generate_series(2,5) y1\n        CROSS JOIN generate_series(1,8) z1\n        WHERE x1 &gt; y1*0.5 AND z1 &lt; x1*y1) As e\n        INNER JOIN (SELECT ST_Translate(ST_ExteriorRing(ST_Buffer(ST_MakePoint(x1*10,y1), z1)),y1*1, z1*2) As line\n        FROM generate_series(-3,6) x1\n        CROSS JOIN generate_series(2,5) y1\n        CROSS JOIN generate_series(1,10) z1\n        WHERE x1 &gt; y1*0.75 AND z1 &lt; x1*y1) As f\nON (ST_Area(e.buff) &gt; 78 AND ST_Contains(e.buff, f.line))\nGROUP BY gid, e.buff) As quintuplet_experiment\nWHERE ST_IsValid(the_geom) = false\nORDER BY gid\nLIMIT 3;\n\n gid  |      validity_info\n------+--------------------------\n 5330 | Self-intersection [32 5]\n 5340 | Self-intersection [42 5]\n 5350 | Self-intersection [52 5]\n\n -- 단순한 예시\nSELECT ST_IsValidReason('LINESTRING(220227 150406,2220227 150407,222020 150410)');\n\n st_isvalidreason\n------------------\n Valid Geometry"

#. Tag: para
#: reference_accessor.xml:1016
#, no-c-format
msgid ", <xref linkend=\"ST_Summary\"/>"
msgstr ", <xref linkend=\"ST_Summary\"/>"

#. Tag: refname
#: reference_accessor.xml:1022
#, no-c-format
msgid "ST_IsValidDetail"
msgstr "ST_IsValidDetail"

#. Tag: refpurpose
#: reference_accessor.xml:1024
#, no-c-format
msgid ""
"Returns a valid_detail (valid,reason,location) row stating if a geometry is "
"valid or not and if not valid, a reason why and a location where."
msgstr "도형이 유효한지 아닌지, 그리고 유효하지 않을 경우 그 이유 및 위치를 설명하는 valid_detail (유효 여부, 이유, 위치) 행을 반환합니다."

#. Tag: funcsynopsis
#: reference_accessor.xml:1028
#, no-c-format
msgid ""
"<funcprototype> <funcdef>valid_detail "
"<function>ST_IsValidDetail</function></funcdef> <paramdef><type>geometry "
"</type> <parameter>geom</parameter></paramdef> </funcprototype> "
"<funcprototype> <funcdef>valid_detail "
"<function>ST_IsValidDetail</function></funcdef> <paramdef><type>geometry "
"</type> <parameter>geom</parameter></paramdef> <paramdef><type>integer "
"</type> <parameter>flags</parameter></paramdef> </funcprototype>"
msgstr "<funcprototype> <funcdef>valid_detail <function>ST_IsValidDetail</function></funcdef> <paramdef><type>geometry </type> <parameter>geom</parameter></paramdef> </funcprototype> <funcprototype> <funcdef>valid_detail <function>ST_IsValidDetail</function></funcdef> <paramdef><type>geometry </type> <parameter>geom</parameter></paramdef> <paramdef><type>integer </type> <parameter>flags</parameter></paramdef> </funcprototype>"

#. Tag: para
#: reference_accessor.xml:1044
#, no-c-format
msgid ""
"Returns a valid_detail row, formed by a boolean (valid) stating if a "
"geometry is valid, a varchar (reason) stating a reason why it is invalid and"
" a geometry (location) pointing out where it is invalid."
msgstr "도형이 유효한지 아닌지를 설명하는 불 값(유효 여부), 유효하지 않은 이유를 설명하는 varchar(이유), 그리고 유효하지 않은 위치를 지적하는 도형(위치)으로 구성된 valid_detail 행을 반환합니다."

#. Tag: para
#: reference_accessor.xml:1046
#, no-c-format
msgid ""
"Useful to substitute and improve the combination of ST_IsValid and "
"ST_IsValidReason to generate a detailed report of invalid geometries."
msgstr "ST_IsValid 및 ST_IsValidReason 함수의 조합을 대신하고 개선해서 유효하지 않은 도형에 대한 상세 보고서를 생성하는 데 유용합니다."

#. Tag: para
#: reference_accessor.xml:1048
#, no-c-format
msgid "The 'flags' argument is a bitfield. It can have the following values:"
msgstr "'플래그' 인수는 비트 필드 구조체(bitfield)입니다. 다음 값을 가질 수 있습니다:"

#. Tag: para
#: reference_accessor.xml:1052
#, no-c-format
msgid ""
"1: Consider self-intersecting rings forming holes as valid. This is also "
"know as \"the ESRI flag\". Note that this is against the OGC model."
msgstr "1: 구멍을 형성하는, 자체 교차하는 고리를 유효한 것으로 간주합니다. 이 플래그는 \"ESRI 플래그\"로도 알려져 있습니다. OGC 모델과는 모순된다는 점을 주의하십시오."

#. Tag: para
#: reference_accessor.xml:1061
#, no-c-format
msgid "Availability: 2.0.0 - requires GEOS &gt;= 3.3.0."
msgstr "2.0.0 버전부터 사용할 수 있습니다. GEOS 3.3.0 이상 버전이 필요합니다."

#. Tag: programlisting
#: reference_accessor.xml:1069
#, no-c-format
msgid ""
"--First 3 Rejects from a successful quintuplet experiment\n"
"SELECT gid, reason(ST_IsValidDetail(the_geom)), ST_AsText(location(ST_IsValidDetail(the_geom))) as location\n"
"FROM\n"
"(SELECT ST_MakePolygon(ST_ExteriorRing(e.buff), ST_Accum(f.line)) As the_geom, gid\n"
"FROM (SELECT ST_Buffer(ST_MakePoint(x1*10,y1), z1) As buff, x1*10 + y1*100 + z1*1000 As gid\n"
"        FROM generate_series(-4,6) x1\n"
"        CROSS JOIN generate_series(2,5) y1\n"
"        CROSS JOIN generate_series(1,8) z1\n"
"        WHERE x1 &gt; y1*0.5 AND z1 &lt; x1*y1) As e\n"
"        INNER JOIN (SELECT ST_Translate(ST_ExteriorRing(ST_Buffer(ST_MakePoint(x1*10,y1), z1)),y1*1, z1*2) As line\n"
"        FROM generate_series(-3,6) x1\n"
"        CROSS JOIN generate_series(2,5) y1\n"
"        CROSS JOIN generate_series(1,10) z1\n"
"        WHERE x1 &gt; y1*0.75 AND z1 &lt; x1*y1) As f\n"
"ON (ST_Area(e.buff) &gt; 78 AND ST_Contains(e.buff, f.line))\n"
"GROUP BY gid, e.buff) As quintuplet_experiment\n"
"WHERE ST_IsValid(the_geom) = false\n"
"ORDER BY gid\n"
"LIMIT 3;\n"
"\n"
" gid  |      reason       |  location\n"
"------+-------------------+-------------\n"
" 5330 | Self-intersection | POINT(32 5)\n"
" 5340 | Self-intersection | POINT(42 5)\n"
" 5350 | Self-intersection | POINT(52 5)\n"
"\n"
" --simple example\n"
"SELECT * FROM ST_IsValidDetail('LINESTRING(220227 150406,2220227 150407,222020 150410)');\n"
"\n"
" valid | reason | location\n"
"-------+--------+----------\n"
" t     |        |"
msgstr "-- 성공적인 다섯 쌍 실험에서 첫 거부(reject) 3개\nSELECT gid, reason(ST_IsValidDetail(the_geom)), ST_AsText(location(ST_IsValidDetail(the_geom))) as location\nFROM\n(SELECT ST_MakePolygon(ST_ExteriorRing(e.buff), ST_Accum(f.line)) As the_geom, gid\nFROM (SELECT ST_Buffer(ST_MakePoint(x1*10,y1), z1) As buff, x1*10 + y1*100 + z1*1000 As gid\n        FROM generate_series(-4,6) x1\n        CROSS JOIN generate_series(2,5) y1\n        CROSS JOIN generate_series(1,8) z1\n        WHERE x1 &gt; y1*0.5 AND z1 &lt; x1*y1) As e\n        INNER JOIN (SELECT ST_Translate(ST_ExteriorRing(ST_Buffer(ST_MakePoint(x1*10,y1), z1)),y1*1, z1*2) As line\n        FROM generate_series(-3,6) x1\n        CROSS JOIN generate_series(2,5) y1\n        CROSS JOIN generate_series(1,10) z1\n        WHERE x1 &gt; y1*0.75 AND z1 &lt; x1*y1) As f\nON (ST_Area(e.buff) &gt; 78 AND ST_Contains(e.buff, f.line))\nGROUP BY gid, e.buff) As quintuplet_experiment\nWHERE ST_IsValid(the_geom) = false\nORDER BY gid\nLIMIT 3;\n\n gid  |      reason       |  location\n------+-------------------+-------------\n 5330 | Self-intersection | POINT(32 5)\n 5340 | Self-intersection | POINT(42 5)\n 5350 | Self-intersection | POINT(52 5)\n\n -- 단순한 예시\nSELECT * FROM ST_IsValidDetail('LINESTRING(220227 150406,2220227 150407,222020 150410)');\n\n valid | reason | location\n-------+--------+----------\n t     |        |"

#. Tag: para
#: reference_accessor.xml:1076
#, no-c-format
msgid ", <xref linkend=\"ST_IsValidReason\"/>"
msgstr ", <xref linkend=\"ST_IsValidReason\"/>"

#. Tag: refname
#: reference_accessor.xml:1085
#, no-c-format
msgid "ST_M"
msgstr "ST_M"

#. Tag: refpurpose
#: reference_accessor.xml:1087
#, no-c-format
msgid ""
"<refpurpose>Return the M coordinate of the point, or NULL if not available. "
"Input must be a point.</refpurpose>"
msgstr "<refpurpose>포인트의 M 좌표를 반환합니다. M 좌표가 없는 경우 NULL을 반환합니다. 포인트만 입력받을 수 있습니다.</refpurpose>"

#. Tag: funcprototype
#: reference_accessor.xml:1093
#, no-c-format
msgid ""
"<funcdef>float <function>ST_M</function></funcdef> <paramdef><type>geometry "
"</type> <parameter>a_point</parameter></paramdef>"
msgstr "<funcdef>float <function>ST_M</function></funcdef> <paramdef><type>geometry </type> <parameter>a_point</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:1103
#, no-c-format
msgid ""
"<para>Return the M coordinate of the point, or NULL if not available. Input "
"must be a point.</para>"
msgstr "<para>포인트의 M 좌표를 반환합니다. M 좌표가 없는 경우 NULL을 반환합니다. 포인트만 입력받을 수 있습니다.</para>"

#. Tag: para
#: reference_accessor.xml:1107
#, no-c-format
msgid ""
"This is not (yet) part of the OGC spec, but is listed here to complete the "
"point coordinate extractor function list."
msgstr "이 함수는 (아직) OGC 사양에 들어가지 않지만, 포인트 좌표 추출자(extractor) 함수 목록을 완성하기 위해 이 문서에 작성됐습니다."

#. Tag: para
#: reference_accessor.xml:1111 reference_accessor.xml:2065
#, no-c-format
msgid "&sqlmm_compliant;"
msgstr "&sqlmm_compliant;"

#. Tag: programlisting
#: reference_accessor.xml:1119
#, no-c-format
msgid ""
"SELECT ST_M(ST_GeomFromEWKT('POINT(1 2 3 4)'));\n"
" st_m\n"
"------\n"
"        4\n"
"(1 row)"
msgstr "SELECT ST_M(ST_GeomFromEWKT('POINT(1 2 3 4)'));\n st_m\n------\n        4\n(1 row)"

#. Tag: para
#: reference_accessor.xml:1126
#, no-c-format
msgid ", <xref linkend=\"ST_X\"/>, <xref linkend=\"ST_Y\"/>, <xref linkend=\"ST_Z\"/>"
msgstr ", <xref linkend=\"ST_X\"/>, <xref linkend=\"ST_Y\"/>, <xref linkend=\"ST_Z\"/>"

#. Tag: refname
#: reference_accessor.xml:1132
#, no-c-format
msgid "ST_NDims"
msgstr "ST_NDims"

#. Tag: refpurpose
#: reference_accessor.xml:1133
#, no-c-format
msgid ""
"Returns coordinate dimension of the geometry as a small int. Values are: 2,3"
" or 4."
msgstr "도형의 좌표 차원을 2바이트 정수형(smallint)으로 반환합니다. 값은 2, 3, 또는 4입니다."

#. Tag: funcprototype
#: reference_accessor.xml:1139
#, no-c-format
msgid ""
"<funcdef>integer <function>ST_NDims</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef>"
msgstr "<funcdef>integer <function>ST_NDims</function></funcdef> <paramdef><type>geometry </type> <parameter>g1</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:1149
#, no-c-format
msgid ""
"Returns the coordinate dimension of the geometry. PostGIS supports 2 - (x,y)"
" , 3 - (x,y,z) or 2D with measure - x,y,m, and 4 - 3D with measure space "
"x,y,z,m"
msgstr "도형의 좌표 차원을 반환합니다. PostGIS는 2 - 2차원 (x,y), 3 - 3차원 (x,y,z), 3 - 단위를 가진 2차원 (x,y,m), 그리고 4 - 단위를 가진 3차원 공간 (x,y,z,m)을 지원합니다."

#. Tag: programlisting
#: reference_accessor.xml:1158
#, no-c-format
msgid ""
"SELECT ST_NDims(ST_GeomFromText('POINT(1 1)')) As d2point,\n"
"        ST_NDims(ST_GeomFromEWKT('POINT(1 1 2)')) As d3point,\n"
"        ST_NDims(ST_GeomFromEWKT('POINTM(1 1 0.5)')) As d2pointm;\n"
"\n"
"         d2point | d3point | d2pointm\n"
"---------+---------+----------\n"
"           2 |       3 |        3"
msgstr "SELECT ST_NDims(ST_GeomFromText('POINT(1 1)')) As d2point,\n        ST_NDims(ST_GeomFromEWKT('POINT(1 1 2)')) As d3point,\n        ST_NDims(ST_GeomFromEWKT('POINTM(1 1 0.5)')) As d2pointm;\n\n         d2point | d3point | d2pointm\n---------+---------+----------\n           2 |       3 |        3"

#. Tag: para
#: reference_accessor.xml:1162
#, no-c-format
msgid ", <xref linkend=\"ST_Dimension\"/>, <xref linkend=\"ST_GeomFromEWKT\"/>"
msgstr ", <xref linkend=\"ST_Dimension\"/>, <xref linkend=\"ST_GeomFromEWKT\"/>"

#. Tag: refname
#: reference_accessor.xml:1168
#, no-c-format
msgid "ST_NPoints"
msgstr "ST_NPoints"

#. Tag: refpurpose
#: reference_accessor.xml:1169
#, no-c-format
msgid "Return the number of points (vertexes) in a geometry."
msgstr "도형이 가지고 있는 포인트(꼭짓점)의 개수를 반환합니다."

#. Tag: funcprototype
#: reference_accessor.xml:1174
#, no-c-format
msgid ""
"<funcdef>integer <function>ST_NPoints</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef>"
msgstr "<funcdef>integer <function>ST_NPoints</function></funcdef> <paramdef><type>geometry </type> <parameter>g1</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:1184
#, no-c-format
msgid "Return the number of points in a geometry. Works for all geometries."
msgstr "도형이 가지고 있는 포인트의 개수를 반환합니다. 모든 도형을 입력받을 수 있습니다."

#. Tag: para
#: reference_accessor.xml:1186
#, no-c-format
msgid ""
"Prior to 1.3.4, this function crashes if used with geometries that contain "
"CURVES. This is fixed in 1.3.4+"
msgstr "1.3.4 미만 버전에서 이 함수에 만곡 도형(curve)을 담고 있는 도형을 입력하면 충돌이 일어났습니다. 1.3.4 버전부터 이 버그가 해결됐습니다."

#. Tag: programlisting
#: reference_accessor.xml:1196
#, no-c-format
msgid ""
"SELECT ST_NPoints(ST_GeomFromText('LINESTRING(77.29 29.07,77.42 29.26,77.27 29.31,77.29 29.07)'));\n"
"--result\n"
"4\n"
"\n"
"--Polygon in 3D space\n"
"SELECT ST_NPoints(ST_GeomFromEWKT('LINESTRING(77.29 29.07 1,77.42 29.26 0,77.27 29.31 -1,77.29 29.07 3)'))\n"
"--result\n"
"4"
msgstr "SELECT ST_NPoints(ST_GeomFromText('LINESTRING(77.29 29.07,77.42 29.26,77.27 29.31,77.29 29.07)'));\n-- 결과\n4\n\n-- 3차원 공간에 있는 폴리곤\nSELECT ST_NPoints(ST_GeomFromEWKT('LINESTRING(77.29 29.07 1,77.42 29.26 0,77.27 29.31 -1,77.29 29.07 3)'))\n-- 결과\n4"

#. Tag: refname
#: reference_accessor.xml:1207
#, no-c-format
msgid "ST_NRings"
msgstr "ST_NRings"

#. Tag: refpurpose
#: reference_accessor.xml:1208
#, no-c-format
msgid ""
"If the geometry is a polygon or multi-polygon returns the number of rings."
msgstr "도형이 폴리곤 또는 멀티폴리곤인 경우 고리의 개수를 반환합니다."

#. Tag: funcprototype
#: reference_accessor.xml:1213
#, no-c-format
msgid ""
"<funcdef>integer <function>ST_NRings</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef>"
msgstr "<funcdef>integer <function>ST_NRings</function></funcdef> <paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:1223
#, no-c-format
msgid ""
"If the geometry is a polygon or multi-polygon returns the number of rings. "
"Unlike NumInteriorRings, it counts the outer rings as well."
msgstr "도형이 폴리곤 또는 멀티폴리곤인 경우 고리의 개수를 반환합니다. NumInteriorRings 함수와는 달리, 외곽 고리도 개수에 포함시킵니다."

#. Tag: programlisting
#: reference_accessor.xml:1233
#, no-c-format
msgid ""
"SELECT ST_NRings(the_geom) As Nrings, ST_NumInteriorRings(the_geom) As ninterrings\n"
"                                        FROM (SELECT ST_GeomFromText('POLYGON((1 2, 3 4, 5 6, 1 2))') As the_geom) As foo;\n"
"         nrings | ninterrings\n"
"--------+-------------\n"
"          1 |           0\n"
"(1 row)"
msgstr "SELECT ST_NRings(the_geom) As Nrings, ST_NumInteriorRings(the_geom) As ninterrings\n                                        FROM (SELECT ST_GeomFromText('POLYGON((1 2, 3 4, 5 6, 1 2))') As the_geom) As foo;\n         nrings | ninterrings\n--------+-------------\n          1 |           0\n(1 row)"

#. Tag: refname
#: reference_accessor.xml:1246
#, no-c-format
msgid "ST_NumGeometries"
msgstr "ST_NumGeometries"

#. Tag: refpurpose
#: reference_accessor.xml:1247
#, no-c-format
msgid ""
"If geometry is a GEOMETRYCOLLECTION (or MULTI*) return the number of "
"geometries, for single geometries will return 1, otherwise return NULL."
msgstr "도형이 도형 집합 또는 멀티 도형인 경우 도형의 개수를 반환합니다. 단일 도형인 경우 1을 반환하고, 도형 집합도 멀티 도형도 단일 도형도 아닌 경우 NULL을 반환합니다."

#. Tag: funcprototype
#: reference_accessor.xml:1253
#, no-c-format
msgid ""
"<funcdef>integer <function>ST_NumGeometries</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geom</parameter></paramdef>"
msgstr "<funcdef>integer <function>ST_NumGeometries</function></funcdef> <paramdef><type>geometry </type> <parameter>geom</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:1263
#, no-c-format
msgid ""
"Returns the number of Geometries. If geometry is a GEOMETRYCOLLECTION (or "
"MULTI*) return the number of geometries, for single geometries will return "
"1, otherwise return NULL."
msgstr "도형의 개수를 반환합니다. 도형 집합 또는 멀티 도형인 경우 도형의 개수를, 단일 도형인 경우 1을 반환하고, 도형 집합도 멀티 도형도 단일 도형도 아닌 경우 NULL을 반환합니다."

#. Tag: para
#: reference_accessor.xml:1267
#, no-c-format
msgid ""
"Changed: 2.0.0 In prior versions this would return NULL if the geometry was "
"not a collection/MULTI type. 2.0.0+ now returns 1 for single geometries e.g "
"POLYGON, LINESTRING, POINT."
msgstr "변경 사항: 2.0.0 미만 버전에서 도형이 집합이나 멀티 유형이 아닐 경우 NULL을 반환했습니다. 2.0.0 버전부터 폴리곤, 라인스트링, 포인트 같은 단일 도형에 대해 1을 반환합니다."

#. Tag: para
#: reference_accessor.xml:1269
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 9.1.4"
msgstr "&sqlmm_compliant; SQL-MM 3: 9.1.4"

#. Tag: programlisting
#: reference_accessor.xml:1279
#, no-c-format
msgid ""
"--Prior versions would have returned NULL for this -- in 2.0.0 this returns 1\n"
"SELECT ST_NumGeometries(ST_GeomFromText('LINESTRING(77.29 29.07,77.42 29.26,77.27 29.31,77.29 29.07)'));\n"
"--result\n"
"1\n"
"\n"
"--Geometry Collection Example - multis count as one geom in a collection\n"
"SELECT ST_NumGeometries(ST_GeomFromEWKT('GEOMETRYCOLLECTION(MULTIPOINT(-2 3 , -2 2),\n"
"LINESTRING(5 5 ,10 10),\n"
"POLYGON((-7 4.2,-7.1 5,-7.1 4.3,-7 4.2)))'));\n"
"--result\n"
"3"
msgstr "-- 이런 경우 예전 버전은 NULL을 반환했을 겁니다.\n-- 2.0.0 버전부터 1을 반환합니다.\nSELECT ST_NumGeometries(ST_GeomFromText('LINESTRING(77.29 29.07,77.42 29.26,77.27 29.31,77.29 29.07)'));\n-- 결과\n1\n\n-- 도형 집합 예시\n-- 집합 안에 있는 멀티 유형은 도형 1개로 칩니다.\nSELECT ST_NumGeometries(ST_GeomFromEWKT('GEOMETRYCOLLECTION(MULTIPOINT(-2 3 , -2 2),\nLINESTRING(5 5 ,10 10),\nPOLYGON((-7 4.2,-7.1 5,-7.1 4.3,-7 4.2)))'));\n-- 결과\n3"

#. Tag: para
#: reference_accessor.xml:1284
#, no-c-format
msgid ", <xref linkend=\"ST_Multi\"/>"
msgstr ", <xref linkend=\"ST_Multi\"/>"

#. Tag: refname
#: reference_accessor.xml:1290
#, no-c-format
msgid "ST_NumInteriorRings"
msgstr "ST_NumInteriorRings"

#. Tag: refpurpose
#: reference_accessor.xml:1291
#, no-c-format
msgid "Return the number of interior rings of a polygon geometry."
msgstr "폴리곤 도형의 내곽 고리의 개수를 반환합니다."

#. Tag: funcprototype
#: reference_accessor.xml:1296
#, no-c-format
msgid ""
"<funcdef>integer <function>ST_NumInteriorRings</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>a_polygon</parameter></paramdef>"
msgstr "<funcdef>integer <function>ST_NumInteriorRings</function></funcdef> <paramdef><type>geometry </type> <parameter>a_polygon</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:1306
#, no-c-format
msgid ""
"Return the number of interior rings of a polygon geometry. Return NULL if "
"the geometry is not a polygon."
msgstr "폴리곤 도형의 내곽 고리의 개수를 반환합니다. 도형이 폴리곤이 아닐 경우 NULL을 반환합니다."

#. Tag: para
#: reference_accessor.xml:1311
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 8.2.5"
msgstr "&sqlmm_compliant; SQL-MM 3: 8.2.5"

#. Tag: para
#: reference_accessor.xml:1312
#, no-c-format
msgid ""
"Changed: 2.0.0 - in prior versions it would allow passing a MULTIPOLYGON, "
"returning the number of interior rings of first POLYGON."
msgstr "변경 사항: 2.0.0 미만 버전에서는 멀티폴리곤을 입력하면 첫 번째 폴리곤의 내곽 고리의 개수를 반환받을 수 있었습니다."

#. Tag: programlisting
#: reference_accessor.xml:1318
#, no-c-format
msgid ""
"--If you have a regular polygon\n"
"SELECT gid, field1, field2, ST_NumInteriorRings(the_geom) AS numholes\n"
"FROM sometable;\n"
"\n"
"--If you have multipolygons\n"
"--And you want to know the total number of interior rings in the MULTIPOLYGON\n"
"SELECT gid, field1, field2, SUM(ST_NumInteriorRings(the_geom)) AS numholes\n"
"FROM (SELECT gid, field1, field2, (ST_Dump(the_geom)).geom As the_geom\n"
"        FROM sometable) As foo\n"
"GROUP BY gid, field1,field2;"
msgstr "-- 정규 폴리곤인 경우\nSELECT gid, field1, field2, ST_NumInteriorRings(the_geom) AS numholes\nFROM sometable;\n\n-- 멀티폴리곤인 경우\n-- 그리고 멀티폴리곤 내부에 있는 모든 내곽 고리의 개수를 알고자 하는 경우\nSELECT gid, field1, field2, SUM(ST_NumInteriorRings(the_geom)) AS numholes\nFROM (SELECT gid, field1, field2, (ST_Dump(the_geom)).geom As the_geom\n        FROM sometable) As foo\nGROUP BY gid, field1,field2;"

#. Tag: refname
#: reference_accessor.xml:1329
#, no-c-format
msgid "ST_NumInteriorRing"
msgstr "ST_NumInteriorRing"

#. Tag: refpurpose
#: reference_accessor.xml:1330
#, no-c-format
msgid ""
"Return the number of interior rings of a polygon in the geometry. Synonym "
"for ST_NumInteriorRings."
msgstr "도형 안에 있는 폴리곤의 내곽 고리의 개수를 반환합니다. ST_NumInteriorRings 함수와 동일합니다."

#. Tag: funcprototype
#: reference_accessor.xml:1336
#, no-c-format
msgid ""
"<funcdef>integer <function>ST_NumInteriorRing</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>a_polygon</parameter></paramdef>"
msgstr "<funcdef>integer <function>ST_NumInteriorRing</function></funcdef> <paramdef><type>geometry </type> <parameter>a_polygon</parameter></paramdef>"

#. Tag: refname
#: reference_accessor.xml:1352
#, no-c-format
msgid "ST_NumPatches"
msgstr "ST_NumPatches"

#. Tag: refpurpose
#: reference_accessor.xml:1353
#, no-c-format
msgid ""
"Return the number of faces on a Polyhedral Surface. Will return null for "
"non-polyhedral geometries."
msgstr "다면체 표면 상에 있는 면의 개수를 반환합니다. 다면체 도형이 아닌 경우 NULL을 반환할 것입니다."

#. Tag: funcprototype
#: reference_accessor.xml:1358
#, no-c-format
msgid ""
"<funcdef>integer <function>ST_NumPatches</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef>"
msgstr "<funcdef>integer <function>ST_NumPatches</function></funcdef> <paramdef><type>geometry </type> <parameter>g1</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:1368
#, no-c-format
msgid ""
"Return the number of faces on a Polyhedral Surface. Will return null for "
"non-polyhedral geometries. This is an alias for ST_NumGeometries to support "
"MM naming. Faster to use ST_NumGeometries if you don't care about MM "
"convention."
msgstr "다면체 표면 상에 있는 면의 개수를 반환합니다. 다면체 도형이 아닌 경우 NULL을 반환할 것입니다. 이 함수는 ST_NumGeometries와 동일하지만 MM 명명법을 지원합니다. MM 규약을 신경 쓰지 않는다면 ST_NumGeometries가 더 빠릅니다."

#. Tag: para
#: reference_accessor.xml:1371 reference_accessor.xml:1466
#, no-c-format
msgid "Availability: 2.0.0"
msgstr "2.0.0 버전부터 사용할 수 있습니다."

#. Tag: para
#: reference_accessor.xml:1374 reference_accessor.xml:1467
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: ?"
msgstr "&sqlmm_compliant; SQL-MM 3: ?"

#. Tag: programlisting
#: reference_accessor.xml:1381
#, no-c-format
msgid ""
"SELECT ST_NumPatches(ST_GeomFromEWKT('POLYHEDRALSURFACE( ((0 0 0, 0 0 1, 0 1 1, 0 1 0, 0 0 0)),\n"
"                ((0 0 0, 0 1 0, 1 1 0, 1 0 0, 0 0 0)), ((0 0 0, 1 0 0, 1 0 1, 0 0 1, 0 0 0)),\n"
"                ((1 1 0, 1 1 1, 1 0 1, 1 0 0, 1 1 0)),\n"
"                ((0 1 0, 0 1 1, 1 1 1, 1 1 0, 0 1 0)), ((0 0 1, 1 0 1, 1 1 1, 0 1 1, 0 0 1)) )'));\n"
"                --result\n"
"                6"
msgstr "SELECT ST_NumPatches(ST_GeomFromEWKT('POLYHEDRALSURFACE( ((0 0 0, 0 0 1, 0 1 1, 0 1 0, 0 0 0)),\n                ((0 0 0, 0 1 0, 1 1 0, 1 0 0, 0 0 0)), ((0 0 0, 1 0 0, 1 0 1, 0 0 1, 0 0 0)),\n                ((1 1 0, 1 1 1, 1 0 1, 1 0 0, 1 1 0)),\n                ((0 1 0, 0 1 1, 1 1 1, 1 1 0, 0 1 0)), ((0 0 1, 1 0 1, 1 1 1, 0 1 1, 0 0 1)) )'));\n                -- 결과\n                6"

#. Tag: refname
#: reference_accessor.xml:1392
#, no-c-format
msgid "ST_NumPoints"
msgstr "ST_NumPoints"

#. Tag: refpurpose
#: reference_accessor.xml:1393
#, no-c-format
msgid ""
"Return the number of points in an ST_LineString or ST_CircularString value."
msgstr "ST_LineString 또는 ST_CircularString 값에 있는 포인트의 개수를 반환합니다."

#. Tag: funcprototype
#: reference_accessor.xml:1399
#, no-c-format
msgid ""
"<funcdef>integer <function>ST_NumPoints</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef>"
msgstr "<funcdef>integer <function>ST_NumPoints</function></funcdef> <paramdef><type>geometry </type> <parameter>g1</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:1409
#, no-c-format
msgid ""
"Return the number of points in an ST_LineString or ST_CircularString value. "
"Prior to 1.4 only works with Linestrings as the specs state. From 1.4 "
"forward this is an alias for ST_NPoints which returns number of vertexes for"
" not just line strings. Consider using ST_NPoints instead which is multi-"
"purpose and works with many geometry types."
msgstr "ST_LineString 또는 ST_CircularString 값에 있는 포인트의 개수를 반환합니다. 1.4 미만 버전에서는 사양서대로 라인스트링만 입력받았습니다. 1.4 버전부터 이 함수는 단순히 라인스트링만이 아닌, 도형의 꼭짓점의 개수를 반환하는 ST_NPoints 함수와 비슷해졌습니다. 쿼리 목적이 다양하고 많은 도형 유형을 사용할 수 있는 ST_NPoints 함수를 대신 사용하는 편이 좋습니다."

#. Tag: para
#: reference_accessor.xml:1416
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 7.2.4"
msgstr "&sqlmm_compliant; SQL-MM 3: 7.2.4"

#. Tag: programlisting
#: reference_accessor.xml:1422
#, no-c-format
msgid ""
"SELECT ST_NumPoints(ST_GeomFromText('LINESTRING(77.29 29.07,77.42 29.26,77.27 29.31,77.29 29.07)'));\n"
"                --result\n"
"                4"
msgstr "SELECT ST_NumPoints(ST_GeomFromText('LINESTRING(77.29 29.07,77.42 29.26,77.27 29.31,77.29 29.07)'));\n                -- 결과\n                4"

#. Tag: refname
#: reference_accessor.xml:1433
#, no-c-format
msgid "ST_PatchN"
msgstr "ST_PatchN"

#. Tag: refpurpose
#: reference_accessor.xml:1435
#, no-c-format
msgid ""
"Return the 1-based Nth geometry (face) if the geometry is a "
"POLYHEDRALSURFACE, POLYHEDRALSURFACEM. Otherwise, return NULL."
msgstr "도형이 <varname>POLYHEDRALSURFACE<varname>, <varname>POLYHEDRALSURFACEM<varname> 인 경우 1-기반 N번째 도형 (면)을 반환합니다. 그 외의 경우 NULL을 반환합니다."

#. Tag: funcprototype
#: reference_accessor.xml:1442
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_PatchN</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef> "
"<paramdef><type>integer </type> <parameter>n</parameter></paramdef>"
msgstr "<funcdef>geometry <function>ST_PatchN</function></funcdef> <paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef> <paramdef><type>integer </type> <parameter>n</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:1453
#, no-c-format
msgid ""
">Return the 1-based Nth geometry (face) if the geometry is a "
"POLYHEDRALSURFACE, POLYHEDRALSURFACEM. Otherwise, return NULL. This returns "
"the same answer as ST_GeometryN for Polyhedral Surfaces. Using ST_GemoetryN "
"is faster."
msgstr "도형이 <varname>POLYHEDRALSURFACE<varname>, <varname>POLYHEDRALSURFACEM<varname> 인 경우 1-기반 N번째 도형 (면)을 반환합니다. 그 외의 경우 NULL을 반환합니다. 이 함수는 다면체 표면에 대해 ST_GeometryN과 동일한 답을 반환합니다. ST_GeometryN을 이용하는 편이 더 빠릅니다."

#. Tag: para
#: reference_accessor.xml:1459
#, no-c-format
msgid "Index is 1-based."
msgstr "인덱스는 1-기반입니다."

#. Tag: para
#: reference_accessor.xml:1463
#, no-c-format
msgid ""
"If you want to extract all geometries, of a geometry, ST_Dump is more "
"efficient."
msgstr "모든 도형들을 추출하고자 한다면 ST_Dump 함수가 더 효율적입니다."

#. Tag: programlisting
#: reference_accessor.xml:1477
#, no-c-format
msgid ""
"--Extract the 2nd face of the polyhedral surface\n"
"SELECT ST_AsEWKT(ST_PatchN(geom, 2)) As geomewkt\n"
"FROM (\n"
"VALUES (ST_GeomFromEWKT('POLYHEDRALSURFACE( ((0 0 0, 0 0 1, 0 1 1, 0 1 0, 0 0 0)),\n"
"        ((0 0 0, 0 1 0, 1 1 0, 1 0 0, 0 0 0)), ((0 0 0, 1 0 0, 1 0 1, 0 0 1, 0 0 0)),\n"
"        ((1 1 0, 1 1 1, 1 0 1, 1 0 0, 1 1 0)),\n"
"        ((0 1 0, 0 1 1, 1 1 1, 1 1 0, 0 1 0)), ((0 0 1, 1 0 1, 1 1 1, 0 1 1, 0 0 1)) )')) ) As foo(geom);\n"
"\n"
"              geomewkt\n"
"---+-----------------------------------------\n"
" POLYGON((0 0 0,0 1 0,1 1 0,1 0 0,0 0 0))"
msgstr "-- 다면체 표면의 두 번째 면을 추출합니다.\nSELECT ST_AsEWKT(ST_PatchN(geom, 2)) As geomewkt\nFROM (\nVALUES (ST_GeomFromEWKT('POLYHEDRALSURFACE( ((0 0 0, 0 0 1, 0 1 1, 0 1 0, 0 0 0)),\n        ((0 0 0, 0 1 0, 1 1 0, 1 0 0, 0 0 0)), ((0 0 0, 1 0 0, 1 0 1, 0 0 1, 0 0 0)),\n        ((1 1 0, 1 1 1, 1 0 1, 1 0 0, 1 1 0)),\n        ((0 1 0, 0 1 1, 1 1 1, 1 1 0, 0 1 0)), ((0 0 1, 1 0 1, 1 1 1, 0 1 1, 0 0 1)) )')) ) As foo(geom);\n\n              geomewkt\n---+-----------------------------------------\n POLYGON((0 0 0,0 1 0,1 1 0,1 0 0,0 0 0))"

#. Tag: para
#: reference_accessor.xml:1484
#, no-c-format
msgid ""
", <xref linkend=\"ST_GeomFromEWKT\"/>, <xref linkend=\"ST_Dump\"/>, <xref "
"linkend=\"ST_GeometryN\"/>, <xref linkend=\"ST_NumGeometries\"/>"
msgstr ", <xref linkend=\"ST_GeomFromEWKT\"/>, <xref linkend=\"ST_Dump\"/>, <xref linkend=\"ST_GeometryN\"/>, <xref linkend=\"ST_NumGeometries\"/>"

#. Tag: refname
#: reference_accessor.xml:1490
#, no-c-format
msgid "ST_PointN"
msgstr "ST_PointN"

#. Tag: refpurpose
#: reference_accessor.xml:1492
#, no-c-format
msgid ""
"Return the Nth point in the first LineString or circular LineString in the "
"geometry. Negative values are counted backwards from the end of the "
"LineString. Returns NULL if there is no linestring in the geometry."
msgstr "도형 안에 있는 첫 번째 라인스트링 또는 원형 라인스트링의 N번째 포인트를 반환합니다. 음수 값은 라인스트링의 종단점으로부터 반대로 집계된 것입니다. 도형 안에 라인스트링이 없는 경우 NULL을 반환합니다."

#. Tag: funcprototype
#: reference_accessor.xml:1499
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_PointN</function></funcdef> "
"<paramdef><type>geometry </type> "
"<parameter>a_linestring</parameter></paramdef> <paramdef><type>integer "
"</type> <parameter>n</parameter></paramdef>"
msgstr "<funcdef>geometry <function>ST_PointN</function></funcdef> <paramdef><type>geometry </type> <parameter>a_linestring</parameter></paramdef> <paramdef><type>integer </type> <parameter>n</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:1510
#, no-c-format
msgid ""
"Return the Nth point in a single linestring or circular linestring in the "
"geometry. Negative values are counted backwards from the end of the "
"LineString, so that -1 is the last point. Returns NULL if there is no "
"linestring in the geometry."
msgstr "도형 안에 있는 단일 라인스트링 또는 원형 라인스트링의 N번째 포인트를 반환합니다. 음수 값은 라인스트링의 종단점으로부터 반대로 집계되므로, -1이 마지막 포인트입니다. 도형 안에 라인스트링이 없는 경우 NULL을 반환합니다."

#. Tag: para
#: reference_accessor.xml:1515
#, no-c-format
msgid ""
"Index is 1-based as for OGC specs since version 0.8.0. Backward indexing "
"(negative index) is not in OGC Previous versions implemented this as 0-based"
" instead."
msgstr "0.8.0 버전부터 인덱스는 OGC 사양을 따라 1-기반입니다. OGC는 반대 방향 인덱스(음수 인덱스)를 지원하지 않습니다. 예전 버전은 대신 0-기반 인덱스를 도입했습니다."

#. Tag: para
#: reference_accessor.xml:1521
#, no-c-format
msgid ""
"If you want to get the nth point of each line string in a multilinestring, "
"use in conjunction with ST_Dump"
msgstr "멀티라인스트링 안에 있는 각 라인스트링의 N번째 포인트를 얻고자 할 경우, 이 함수를 ST_Dump 함수와 연결해서 이용하십시오."

#. Tag: para
#: reference_accessor.xml:1526
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 7.2.5, 7.3.5"
msgstr "&sqlmm_compliant; SQL-MM 3: 7.2.5, 7.3.5"

#. Tag: para
#: reference_accessor.xml:1529
#, no-c-format
msgid ""
"Changed: 2.0.0 no longer works with single geometry multilinestrings. In "
"older versions of PostGIS -- a single line multilinestring would work "
"happily with this function and return the start point. In 2.0.0 it just "
"returns NULL like any other multilinestring."
msgstr "변경 사항: 2.0.0 버전부터 단일 도형 멀티라인스트링을 지원하지 않습니다. PostGIS 예전 버전이라면 단일 라인 멀티라인스트링을 입력받는 경우 시작점을 반환했을 겁니다. 2.0.0 버전은 다른 모든 멀티라인스트링처럼 NULL을 반환할 뿐입니다."

#. Tag: para
#: reference_accessor.xml:1532
#, no-c-format
msgid "Changed: 2.3.0 : negative indexing available (-1 is last point)"
msgstr "변경 사항: 2.3.0 버전부터 음수 인덱스(-1이 마지막 포인트)를 이용할 수 있습니다."

#. Tag: programlisting
#: reference_accessor.xml:1542
#, no-c-format
msgid ""
"-- Extract all POINTs from a LINESTRING\n"
"SELECT ST_AsText(\n"
"   ST_PointN(\n"
"          column1,\n"
"          generate_series(1, ST_NPoints(column1))\n"
"   ))\n"
"FROM ( VALUES ('LINESTRING(0 0, 1 1, 2 2)'::geometry) ) AS foo;\n"
"\n"
" st_astext\n"
"------------\n"
" POINT(0 0)\n"
" POINT(1 1)\n"
" POINT(2 2)\n"
"(3 rows)\n"
"\n"
"--Example circular string\n"
"SELECT ST_AsText(ST_PointN(ST_GeomFromText('CIRCULARSTRING(1 2, 3 2, 1 2)'),2));\n"
"\n"
"st_astext\n"
"----------\n"
"POINT(3 2)\n"
"\n"
"SELECT st_astext(f)\n"
"FROM ST_GeometryFromtext('LINESTRING(0 0 0, 1 1 1, 2 2 2)') as g\n"
"        ,ST_PointN(g, -2) AS f -- 1 based index\n"
"\n"
"st_astext\n"
"----------\n"
"\"POINT Z (1 1 1)\""
msgstr "-- 라인스트링으로부터 모든 포인트를 추출합니다.\nSELECT ST_AsText(\n   ST_PointN(\n          column1,\n          generate_series(1, ST_NPoints(column1))\n   ))\nFROM ( VALUES ('LINESTRING(0 0, 1 1, 2 2)'::geometry) ) AS foo;\n\n st_astext\n------------\n POINT(0 0)\n POINT(1 1)\n POINT(2 2)\n(3 rows)\n\n-- 원형 라인스트링 예시\nSELECT ST_AsText(ST_PointN(ST_GeomFromText('CIRCULARSTRING(1 2, 3 2, 1 2)'),2));\n\nst_astext\n----------\nPOINT(3 2)\n\nSELECT st_astext(f)\nFROM ST_GeometryFromtext('LINESTRING(0 0 0, 1 1 1, 2 2 2)') as g\n        ,ST_PointN(g, -2) AS f -- 1 based index\n\nst_astext\n----------\n\"POINT Z (1 1 1)\""

#. Tag: refname
#: reference_accessor.xml:1554
#, no-c-format
msgid "ST_Points"
msgstr "ST_Points"

#. Tag: refpurpose
#: reference_accessor.xml:1555
#, no-c-format
msgid "Returns a MultiPoint containing all of the coordinates of a geometry."
msgstr "도형의 모든 좌표들을 담고 있는 멀티포인트를 반환합니다."

#. Tag: funcprototype
#: reference_accessor.xml:1561
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_Points</function></funcdef> <paramdef> "
"<type>geometry</type> <parameter>geom</parameter> </paramdef>"
msgstr "<funcdef>geometry <function>ST_Points</function></funcdef> <paramdef> <type>geometry</type> <parameter>geom</parameter> </paramdef>"

#. Tag: para
#: reference_accessor.xml:1574
#, no-c-format
msgid ""
"Returns a MultiPoint containing all of the coordinates of a geometry. Does "
"not remove points that are duplicated in the input geometry, including start"
" and end points of ring geometries. (If this behavior is undesired, "
"duplicates may be removed using <xref "
"linkend=\"ST_RemoveRepeatedPoints\"/>)."
msgstr "도형의 모든 좌표들을 담고 있는 멀티포인트를 반환합니다. 입력 도형에서 중첩되어 있는 포인트들 -- 고리 도형의 시작점과 종단점 포함 -- 을 제거하지 않습니다(이런 습성을 원하지 않을 경우, <xref linkend=\"ST_RemoveRepeatedPoints\"/> 함수를 이용해서 중첩된 포인트를 제거할 수도 있습니다)."

#. Tag: para
#: reference_accessor.xml:1582
#, no-c-format
msgid "M and Z ordinates will be preserved if present."
msgstr "M 및 Z 좌표가 있을 경우 그대로 유지될 것입니다."

#. Tag: para
#: reference_accessor.xml:1589
#, no-c-format
msgid "Availability: 2.3.0"
msgstr "2.3.0 버전부터 사용할 수 있습니다."

#. Tag: programlisting
#: reference_accessor.xml:1596
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_Points('POLYGON Z ((30 10 4,10 30 5,40 40 6, 30 10))'));\n"
"\n"
"--result\n"
"MULTIPOINT Z (30 10 4,10 30 5,40 40 6, 30 10 4)"
msgstr "SELECT ST_AsText(ST_Points('POLYGON Z ((30 10 4,10 30 5,40 40 6, 30 10))'));\n\n-- 결과\nMULTIPOINT Z (30 10 4,10 30 5,40 40 6, 30 10 4)"

#. Tag: refname
#: reference_accessor.xml:1607
#, no-c-format
msgid "ST_SRID"
msgstr "ST_SRID"

#. Tag: refpurpose
#: reference_accessor.xml:1608
#, no-c-format
msgid ""
"Returns the spatial reference identifier for the ST_Geometry as defined in "
"spatial_ref_sys table."
msgstr "spatial_ref_sys 테이블에 정의되어 있는, ST_Geometry에 대한 공간 참조 식별자를 반환합니다."

#. Tag: funcprototype
#: reference_accessor.xml:1613
#, no-c-format
msgid ""
"<funcdef>integer <function>ST_SRID</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef>"
msgstr "<funcdef>integer <function>ST_SRID</function></funcdef> <paramdef><type>geometry </type> <parameter>g1</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:1623
#, no-c-format
msgid ""
"Returns the spatial reference identifier for the ST_Geometry as defined in "
"spatial_ref_sys table. <xref linkend=\"spatial_ref_sys\"/>"
msgstr "spatial_ref_sys 테이블에 정의되어 있는, ST_Geometry에 대한 공간 참조 식별자를 반환합니다. <xref linkend=\"spatial_ref_sys\"/>"

#. Tag: para
#: reference_accessor.xml:1624
#, no-c-format
msgid ""
"spatial_ref_sys table is a table that catalogs all spatial reference systems"
" known to PostGIS and is used for transformations from one spatial reference"
" system to another. So verifying you have the right spatial reference system"
" identifier is important if you plan to ever transform your geometries."
msgstr "spatial_ref_sys 테이블은 PostGIS에 알려진 모든 공간 참조 시스템을 카탈로그화하는 테이블로, 어떤 공간 참조 시스템에서 다른 공간 참조 시스템으로 변환하는 작업에 쓰입니다. 따라서 사용자 도형을 변환할 계획이 있다면 올바른 공간 참조 시스템 식별자를 가지고 있는지 확인하는 일이 중요합니다."

#. Tag: para
#: reference_accessor.xml:1628
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.5"
msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.5"

#. Tag: programlisting
#: reference_accessor.xml:1636
#, no-c-format
msgid ""
"SELECT ST_SRID(ST_GeomFromText('POINT(-71.1043 42.315)',4326));\n"
"                --result\n"
"                4326"
msgstr "SELECT ST_SRID(ST_GeomFromText('POINT(-71.1043 42.315)',4326));\n-- 결과\n4326"

#. Tag: para
#: reference_accessor.xml:1641
#, no-c-format
msgid ""
", <xref linkend=\"ST_GeomFromText\"/>, <xref linkend=\"ST_SetSRID\"/>, <xref"
" linkend=\"ST_Transform\"/>"
msgstr ", <xref linkend=\"ST_GeomFromText\"/>, <xref linkend=\"ST_SetSRID\"/>, <xref linkend=\"ST_Transform\"/>"

#. Tag: refname
#: reference_accessor.xml:1647
#, no-c-format
msgid "ST_StartPoint"
msgstr "ST_StartPoint"

#. Tag: refpurpose
#: reference_accessor.xml:1649
#, no-c-format
msgid ""
"Returns the first point of a <varname>LINESTRING</varname> geometry as a "
"<varname>POINT</varname>."
msgstr "<varname>LINESTRING</varname> 도형의 첫 번째 포인트를 <varname>POINT</varname>로 반환합니다."

#. Tag: funcprototype
#: reference_accessor.xml:1655
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_StartPoint</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef>"
msgstr "<funcdef>geometry <function>ST_StartPoint</function></funcdef> <paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:1666
#, no-c-format
msgid ""
"Returns the first point of a <varname>LINESTRING</varname> or "
"<varname>CIRCULARLINESTRING</varname> geometry as a <varname>POINT</varname>"
" or <varname>NULL</varname> if the input parameter is not a "
"<varname>LINESTRING</varname> or <varname>CIRCULARLINESTRING</varname>."
msgstr "<varname>LINESTRING</varname> 또는 <varname>CIRCULARLINESTRING</varname> 도형의 첫 번째 포인트를 <varname>POINT</varname>로 반환합니다. 입력 파라미터가 <varname>LINESTRING</varname> 또는 <varname>CIRCULARLINESTRING</varname> 이 아닐 경우 <varname>NULL</varname> 을 반환합니다."

#. Tag: para
#: reference_accessor.xml:1670
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 7.1.3"
msgstr "&sqlmm_compliant; SQL-MM 3: 7.1.3"

#. Tag: programlisting
#: reference_accessor.xml:1685
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_StartPoint('LINESTRING(0 1, 0 2)'::geometry));\n"
" st_astext\n"
"------------\n"
" POINT(0 1)\n"
"(1 row)\n"
"\n"
"SELECT ST_StartPoint('POINT(0 1)'::geometry) IS NULL AS is_null;\n"
"  is_null\n"
"----------\n"
" t\n"
"(1 row)\n"
"\n"
"--3d line\n"
"SELECT ST_AsEWKT(ST_StartPoint('LINESTRING(0 1 1, 0 2 2)'::geometry));\n"
" st_asewkt\n"
"------------\n"
" POINT(0 1 1)\n"
"(1 row)\n"
"\n"
"-- circular linestring --\n"
"SELECT ST_AsText(ST_StartPoint('CIRCULARSTRING(5 2,-3 1.999999, -2 1, -4 2, 5 2)'::geometry));\n"
" st_astext\n"
"------------\n"
" POINT(5 2)"
msgstr "SELECT ST_AsText(ST_StartPoint('LINESTRING(0 1, 0 2)'::geometry));\n st_astext\n------------\n POINT(0 1)\n(1 row)\n\nSELECT ST_StartPoint('POINT(0 1)'::geometry) IS NULL AS is_null;\n  is_null\n----------\n t\n(1 row)\n\n-- 3D 라인\nSELECT ST_AsEWKT(ST_StartPoint('LINESTRING(0 1 1, 0 2 2)'::geometry));\n st_asewkt\n------------\n POINT(0 1 1)\n(1 row)\n\n-- 원형 라인스트링 --\nSELECT ST_AsText(ST_StartPoint('CIRCULARSTRING(5 2,-3 1.999999, -2 1, -4 2, 5 2)'::geometry));\n st_astext\n------------\n POINT(5 2)"

#. Tag: para
#: reference_accessor.xml:1691
#, no-c-format
msgid ", <xref linkend=\"ST_PointN\"/>"
msgstr ", <xref linkend=\"ST_PointN\"/>"

#. Tag: refname
#: reference_accessor.xml:1696
#, no-c-format
msgid "ST_Summary"
msgstr "ST_Summary"

#. Tag: refpurpose
#: reference_accessor.xml:1698
#, no-c-format
msgid ""
"<refpurpose>Returns a text summary of the contents of the "
"geometry.</refpurpose>"
msgstr "<refpurpose>도형의 내용을 요약한 텍스트를 반환합니다.</refpurpose>"

#. Tag: funcsynopsis
#: reference_accessor.xml:1704
#, no-c-format
msgid ""
"<funcprototype> <funcdef>text <function>ST_Summary</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g</parameter></paramdef> "
"</funcprototype> <funcprototype> <funcdef>text "
"<function>ST_Summary</function></funcdef> <paramdef><type>geography </type> "
"<parameter>g</parameter></paramdef> </funcprototype>"
msgstr "<funcprototype> <funcdef>text <function>ST_Summary</function></funcdef> <paramdef><type>geometry </type> <parameter>g</parameter></paramdef> </funcprototype> <funcprototype> <funcdef>text <function>ST_Summary</function></funcdef> <paramdef><type>geography </type> <parameter>g</parameter></paramdef> </funcprototype>"

#. Tag: para
#: reference_accessor.xml:1719
#, no-c-format
msgid "<para>Returns a text summary of the contents of the geometry.</para>"
msgstr "<para>도형의 내용을 요약한 텍스트를 반환합니다.</para>"

#. Tag: para
#: reference_accessor.xml:1721
#, no-c-format
msgid ""
"Flags shown square brackets after the geometry type have the following "
"meaning:"
msgstr "도형 유형 뒤에 대괄호로 표기된 플래그는 다음과 같은 뜻입니다:"

#. Tag: para
#: reference_accessor.xml:1725
#, no-c-format
msgid "M: has M ordinate"
msgstr "M: M 좌표가 존재합니다."

#. Tag: para
#: reference_accessor.xml:1726
#, no-c-format
msgid "Z: has Z ordinate"
msgstr "Z: Z 좌표가 존재합니다."

#. Tag: para
#: reference_accessor.xml:1727
#, no-c-format
msgid "B: has a cached bounding box"
msgstr "B: 캐쉬된 경계 상자를 가지고 있습니다."

#. Tag: para
#: reference_accessor.xml:1728
#, no-c-format
msgid "G: is geodetic (geography)"
msgstr "G: 측지형(지리형)입니다."

#. Tag: para
#: reference_accessor.xml:1729
#, no-c-format
msgid "S: has spatial reference system"
msgstr "S: 공간 참조 시스템을 가지고 있습니다."

#. Tag: para
#: reference_accessor.xml:1740
#, no-c-format
msgid "Availability: 1.2.2"
msgstr "1.2.2 버전부터 사용할 수 있습니다."

#. Tag: para
#: reference_accessor.xml:1741
#, no-c-format
msgid "Enhanced: 2.0.0 added support for geography"
msgstr "개선 사항: 2.0.0 버전부터 지리형을 지원하기 시작했습니다."

#. Tag: para
#: reference_accessor.xml:1742
#, no-c-format
msgid ""
"Enhanced: 2.1.0 S flag to denote if has a known spatial reference system"
msgstr "개선 사항: 2.1.0 버전. 알려진 공간 참조 시스템을 가진 경우를 나타내는 S 플래그가 추가됐습니다."

#. Tag: para
#: reference_accessor.xml:1743
#, no-c-format
msgid "Enhanced: 2.2.0 Added support for TIN and Curves"
msgstr "개선 사항: 2.2.0 버전부터 TIN 및 만곡 도형(curve)을 지원하기 시작했습니다."

#. Tag: programlisting
#: reference_accessor.xml:1749
#, no-c-format
msgid ""
"=# SELECT ST_Summary(ST_GeomFromText('LINESTRING(0 0, 1 1)')) as geom,\n"
"        ST_Summary(ST_GeogFromText('POLYGON((0 0, 1 1, 1 2, 1 1, 0 0))')) geog;\n"
"            geom             |          geog\n"
"-----------------------------+--------------------------\n"
" LineString[B] with 2 points | Polygon[BGS] with 1 rings\n"
"                             | ring 0 has 5 points\n"
"                             :\n"
"(1 row)\n"
"\n"
"\n"
"=# SELECT ST_Summary(ST_GeogFromText('LINESTRING(0 0 1, 1 1 1)')) As geog_line,\n"
"        ST_Summary(ST_GeomFromText('SRID=4326;POLYGON((0 0 1, 1 1 2, 1 2 3, 1 1 1, 0 0 1))')) As geom_poly;\n"
";\n"
"           geog_line             |        geom_poly\n"
"-------------------------------- +--------------------------\n"
" LineString[ZBGS] with 2 points | Polygon[ZBS] with 1 rings\n"
"                                :    ring 0 has 5 points\n"
"                                :\n"
"(1 row)"
msgstr "=# SELECT ST_Summary(ST_GeomFromText('LINESTRING(0 0, 1 1)')) as geom,\n        ST_Summary(ST_GeogFromText('POLYGON((0 0, 1 1, 1 2, 1 1, 0 0))')) geog;\n            geom             |          geog\n-----------------------------+--------------------------\n LineString[B] with 2 points | Polygon[BGS] with 1 rings\n                             | ring 0 has 5 points\n                             :\n(1 row)\n\n\n=# SELECT ST_Summary(ST_GeogFromText('LINESTRING(0 0 1, 1 1 1)')) As geog_line,\n        ST_Summary(ST_GeomFromText('SRID=4326;POLYGON((0 0 1, 1 1 2, 1 2 3, 1 1 1, 0 0 1))')) As geom_poly;\n;\n           geog_line             |        geom_poly\n-------------------------------- +--------------------------\n LineString[ZBGS] with 2 points | Polygon[ZBS] with 1 rings\n                                :    ring 0 has 5 points\n                                :\n(1 row)"

#. Tag: para
#: reference_accessor.xml:1755
#, no-c-format
msgid ""
", <xref linkend=\"PostGIS_AddBBox\"/>, <xref linkend=\"ST_Force_3DM\"/>, "
"<xref linkend=\"ST_Force_3DZ\"/>, <xref linkend=\"ST_Force2D\"/>, <xref "
"linkend=\"geography\"/>"
msgstr ", <xref linkend=\"PostGIS_AddBBox\"/>, <xref linkend=\"ST_Force_3DM\"/>, <xref linkend=\"ST_Force_3DZ\"/>, <xref linkend=\"ST_Force2D\"/>, <xref linkend=\"geography\"/>"

#. Tag: para
#: reference_accessor.xml:1764
#, no-c-format
msgid ""
", <xref linkend=\"ST_IsValid\"/>, <xref linkend=\"ST_IsValidReason\"/>, "
"<xref linkend=\"ST_IsValidDetail\"/>"
msgstr ", <xref linkend=\"ST_IsValid\"/>, <xref linkend=\"ST_IsValidReason\"/>, <xref linkend=\"ST_IsValidDetail\"/>"

#. Tag: refname
#: reference_accessor.xml:1775
#, no-c-format
msgid "ST_X"
msgstr "ST_X"

#. Tag: refpurpose
#: reference_accessor.xml:1777
#, no-c-format
msgid ""
"<refpurpose>Return the X coordinate of the point, or NULL if not available. "
"Input must be a point.</refpurpose>"
msgstr "<refpurpose>포인트의 X 좌표를 반환합니다. X 좌표가 없는 경우 NULL을 반환합니다. 포인트만 입력받을 수 있습니다.</refpurpose>"

#. Tag: funcprototype
#: reference_accessor.xml:1783
#, no-c-format
msgid ""
"<funcdef>float <function>ST_X</function></funcdef> <paramdef><type>geometry "
"</type> <parameter>a_point</parameter></paramdef>"
msgstr "<funcdef>float <function>ST_X</function></funcdef> <paramdef><type>geometry </type> <parameter>a_point</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:1793
#, no-c-format
msgid ""
"<para>Return the X coordinate of the point, or NULL if not available. Input "
"must be a point.</para>"
msgstr "<para>포인트의 X 좌표를 반환합니다. X 좌표가 없는 경우 NULL을 반환합니다. 포인트만 입력받을 수 있습니다.</para>"

#. Tag: para
#: reference_accessor.xml:1796
#, no-c-format
msgid ""
"If you want to get the max min x values of any geometry look at ST_XMin, "
"ST_XMax functions."
msgstr "어떤 도형의 최대 최소 x값을 얻고자 하는 경우 ST_XMin 및 ST_XMax 함수를 참고하십시오."

#. Tag: para
#: reference_accessor.xml:1798
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 6.1.3"
msgstr "&sqlmm_compliant; SQL-MM 3: 6.1.3"

#. Tag: programlisting
#: reference_accessor.xml:1806
#, no-c-format
msgid ""
"SELECT ST_X(ST_GeomFromEWKT('POINT(1 2 3 4)'));\n"
" st_x\n"
"------\n"
"        1\n"
"(1 row)\n"
"\n"
"SELECT ST_Y(ST_Centroid(ST_GeomFromEWKT('LINESTRING(1 2 3 4, 1 1 1 1)')));\n"
" st_y\n"
"------\n"
"  1.5\n"
"(1 row)"
msgstr "SELECT ST_X(ST_GeomFromEWKT('POINT(1 2 3 4)'));\n st_x\n------\n        1\n(1 row)\n\nSELECT ST_Y(ST_Centroid(ST_GeomFromEWKT('LINESTRING(1 2 3 4, 1 1 1 1)')));\n st_y\n------\n  1.5\n(1 row)"

#. Tag: para
#: reference_accessor.xml:1813
#, no-c-format
msgid ""
", <xref linkend=\"ST_GeomFromEWKT\"/>, <xref linkend=\"ST_M\"/>, <xref "
"linkend=\"ST_XMax\"/>, <xref linkend=\"ST_XMin\"/>, <xref "
"linkend=\"ST_Y\"/>, <xref linkend=\"ST_Z\"/>"
msgstr ", <xref linkend=\"ST_GeomFromEWKT\"/>, <xref linkend=\"ST_M\"/>, <xref linkend=\"ST_XMax\"/>, <xref linkend=\"ST_XMin\"/>, <xref linkend=\"ST_Y\"/>, <xref linkend=\"ST_Z\"/>"

#. Tag: refname
#: reference_accessor.xml:1819
#, no-c-format
msgid "ST_XMax"
msgstr "ST_XMax"

#. Tag: refpurpose
#: reference_accessor.xml:1821
#, no-c-format
msgid ""
"<refpurpose>Returns X maxima of a bounding box 2d or 3d or a "
"geometry.</refpurpose>"
msgstr "<refpurpose>2차원 경계 상자(box2d) 또는 3차원 경계 상자(box3d) 또는 도형의 최대 X값을 반환합니다.</refpurpose>"

#. Tag: funcprototype
#: reference_accessor.xml:1826
#, no-c-format
msgid ""
"<funcdef>float <function>ST_XMax</function></funcdef> <paramdef><type>box3d "
"</type> <parameter>aGeomorBox2DorBox3D</parameter></paramdef>"
msgstr "<funcdef>float <function>ST_XMax</function></funcdef> <paramdef><type>box3d </type> <parameter>aGeomorBox2DorBox3D</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:1836
#, no-c-format
msgid ""
"<para>Returns X maxima of a bounding box 2d or 3d or a geometry.</para>"
msgstr "<para>2차원 경계 상자(box2d) 또는 3차원 경계 상자(box3d) 또는 도형의 최대 X값을 반환합니다.</para>"

#. Tag: para
#: reference_accessor.xml:1839 reference_accessor.xml:1884
#: reference_accessor.xml:1972 reference_accessor.xml:2017
#: reference_accessor.xml:2105 reference_accessor.xml:2192
#, no-c-format
msgid ""
"Although this function is only defined for box3d, it will work for box2d and"
" geometry because of the auto-casting behavior defined for geometries and "
"box2d. However you can not feed it a geometry or box2d text representation, "
"since that will not auto-cast."
msgstr "이 함수가 box3d를 위해서만 정의됐긴 해도, 도형 및 box2d에 대해 정의된 자동 형변환 습성 때문에 도형 및 box2d를 위해서도 작동합니다. 하지만 도형 또는 box2d의 텍스트 표현식을 입력할 수는 없습니다. 텍스트 표현식은 자동 형변환의 대상이 아니기 때문입니다."

#. Tag: programlisting
#: reference_accessor.xml:1851
#, no-c-format
msgid ""
"SELECT ST_XMax('BOX3D(1 2 3, 4 5 6)');\n"
"st_xmax\n"
"-------\n"
"4\n"
"\n"
"SELECT ST_XMax(ST_GeomFromText('LINESTRING(1 3 4, 5 6 7)'));\n"
"st_xmax\n"
"-------\n"
"5\n"
"\n"
"SELECT ST_XMax(CAST('BOX(-3 2, 3 4)' As box2d));\n"
"st_xmax\n"
"-------\n"
"3\n"
"--Observe THIS DOES NOT WORK because it will try to autocast the string representation to a BOX3D\n"
"SELECT ST_XMax('LINESTRING(1 3, 5 6)');\n"
"\n"
"--ERROR:  BOX3D parser - doesn't start with BOX3D(\n"
"\n"
"SELECT ST_XMax(ST_GeomFromEWKT('CIRCULARSTRING(220268 150415 1,220227 150505 2,220227 150406 3)'));\n"
"st_xmax\n"
"--------\n"
"220288.248780547"
msgstr "SELECT ST_XMax('BOX3D(1 2 3, 4 5 6)');\nst_xmax\n-------\n4\n\nSELECT ST_XMax(ST_GeomFromText('LINESTRING(1 3 4, 5 6 7)'));\nst_xmax\n-------\n5\n\nSELECT ST_XMax(CAST('BOX(-3 2, 3 4)' As box2d));\nst_xmax\n-------\n3\n-- 스트링 표현식을 box3d로 자동 형변환하려 하기 때문에 오류가 발생하는 것을 지켜보십시오.\nSELECT ST_XMax('LINESTRING(1 3, 5 6)');\n\n--ERROR:  BOX3D parser - doesn't start with BOX3D(\n\nSELECT ST_XMax(ST_GeomFromEWKT('CIRCULARSTRING(220268 150415 1,220227 150505 2,220227 150406 3)'));\nst_xmax\n--------\n220288.248780547"

#. Tag: para
#: reference_accessor.xml:1858 reference_accessor.xml:1903
#, no-c-format
msgid ""
", <xref linkend=\"ST_YMax\"/>, <xref linkend=\"ST_YMin\"/>, <xref "
"linkend=\"ST_ZMax\"/>, <xref linkend=\"ST_ZMin\"/>"
msgstr ", <xref linkend=\"ST_YMax\"/>, <xref linkend=\"ST_YMin\"/>, <xref linkend=\"ST_ZMax\"/>, <xref linkend=\"ST_ZMin\"/>"

#. Tag: refname
#: reference_accessor.xml:1864
#, no-c-format
msgid "ST_XMin"
msgstr "ST_XMin"

#. Tag: refpurpose
#: reference_accessor.xml:1866
#, no-c-format
msgid ""
"<refpurpose>Returns X minima of a bounding box 2d or 3d or a "
"geometry.</refpurpose>"
msgstr "<refpurpose>2차원 경계 상자(box2d) 또는 3차원 경계 상자(box3d) 또는 도형의 최소 X값을 반환합니다.</refpurpose>"

#. Tag: funcprototype
#: reference_accessor.xml:1871
#, no-c-format
msgid ""
"<funcdef>float <function>ST_XMin</function></funcdef> <paramdef><type>box3d "
"</type> <parameter>aGeomorBox2DorBox3D</parameter></paramdef>"
msgstr "<funcdef>float <function>ST_XMin</function></funcdef> <paramdef><type>box3d </type> <parameter>aGeomorBox2DorBox3D</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:1881
#, no-c-format
msgid ""
"<para>Returns X minima of a bounding box 2d or 3d or a geometry.</para>"
msgstr "<para>2차원 경계 상자(box2d) 또는 3차원 경계 상자(box3d) 또는 도형의 최소 X값을 반환합니다.</para>"

#. Tag: programlisting
#: reference_accessor.xml:1896
#, no-c-format
msgid ""
"SELECT ST_XMin('BOX3D(1 2 3, 4 5 6)');\n"
"st_xmin\n"
"-------\n"
"1\n"
"\n"
"SELECT ST_XMin(ST_GeomFromText('LINESTRING(1 3 4, 5 6 7)'));\n"
"st_xmin\n"
"-------\n"
"1\n"
"\n"
"SELECT ST_XMin(CAST('BOX(-3 2, 3 4)' As box2d));\n"
"st_xmin\n"
"-------\n"
"-3\n"
"--Observe THIS DOES NOT WORK because it will try to autocast the string representation to a BOX3D\n"
"SELECT ST_XMin('LINESTRING(1 3, 5 6)');\n"
"\n"
"--ERROR:  BOX3D parser - doesn't start with BOX3D(\n"
"\n"
"SELECT ST_XMin(ST_GeomFromEWKT('CIRCULARSTRING(220268 150415 1,220227 150505 2,220227 150406 3)'));\n"
"st_xmin\n"
"--------\n"
"220186.995121892"
msgstr "SELECT ST_XMin('BOX3D(1 2 3, 4 5 6)');\nst_xmin\n-------\n1\n\nSELECT ST_XMin(ST_GeomFromText('LINESTRING(1 3 4, 5 6 7)'));\nst_xmin\n-------\n1\n\nSELECT ST_XMin(CAST('BOX(-3 2, 3 4)' As box2d));\nst_xmin\n-------\n-3\n-- 스트링 표현식을 box3d로 자동 형변환하려 하기 때문에 오류가 발생하는 것을 지켜보십시오.\nSELECT ST_XMin('LINESTRING(1 3, 5 6)');\n\n--ERROR:  BOX3D parser - doesn't start with BOX3D(\n\nSELECT ST_XMin(ST_GeomFromEWKT('CIRCULARSTRING(220268 150415 1,220227 150505 2,220227 150406 3)'));\nst_xmin\n--------\n220186.995121892"

#. Tag: refname
#: reference_accessor.xml:1909
#, no-c-format
msgid "ST_Y"
msgstr "ST_Y"

#. Tag: refpurpose
#: reference_accessor.xml:1911
#, no-c-format
msgid ""
"<refpurpose>Return the Y coordinate of the point, or NULL if not available. "
"Input must be a point.</refpurpose>"
msgstr "<refpurpose>포인트의 Y 좌표를 반환합니다. Y 좌표가 없는 경우 NULL을 반환합니다. 포인트만 입력받을 수 있습니다.</refpurpose>"

#. Tag: funcprototype
#: reference_accessor.xml:1917
#, no-c-format
msgid ""
"<funcdef>float <function>ST_Y</function></funcdef> <paramdef><type>geometry "
"</type> <parameter>a_point</parameter></paramdef>"
msgstr "<funcdef>float <function>ST_Y</function></funcdef> <paramdef><type>geometry </type> <parameter>a_point</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:1927
#, no-c-format
msgid ""
"<para>Return the Y coordinate of the point, or NULL if not available. Input "
"must be a point.</para>"
msgstr "<para>포인트의 Y 좌표를 반환합니다. Y 좌표가 없는 경우 NULL을 반환합니다. 포인트만 입력받을 수 있습니다.</para>"

#. Tag: para
#: reference_accessor.xml:1931
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 6.1.4"
msgstr "&sqlmm_compliant; SQL-MM 3: 6.1.4"

#. Tag: programlisting
#: reference_accessor.xml:1939
#, no-c-format
msgid ""
"SELECT ST_Y(ST_GeomFromEWKT('POINT(1 2 3 4)'));\n"
" st_y\n"
"------\n"
"        2\n"
"(1 row)\n"
"\n"
"SELECT ST_Y(ST_Centroid(ST_GeomFromEWKT('LINESTRING(1 2 3 4, 1 1 1 1)')));\n"
" st_y\n"
"------\n"
"  1.5\n"
"(1 row)"
msgstr "SELECT ST_Y(ST_GeomFromEWKT('POINT(1 2 3 4)'));\n st_y\n------\n        2\n(1 row)\n\nSELECT ST_Y(ST_Centroid(ST_GeomFromEWKT('LINESTRING(1 2 3 4, 1 1 1 1)')));\n st_y\n------\n  1.5\n(1 row)"

#. Tag: para
#: reference_accessor.xml:1946
#, no-c-format
msgid ""
", <xref linkend=\"ST_GeomFromEWKT\"/>, <xref linkend=\"ST_M\"/>, <xref "
"linkend=\"ST_X\"/>, <xref linkend=\"ST_YMax\"/>, <xref "
"linkend=\"ST_YMin\"/>, <xref linkend=\"ST_Z\"/>"
msgstr ", <xref linkend=\"ST_GeomFromEWKT\"/>, <xref linkend=\"ST_M\"/>, <xref linkend=\"ST_X\"/>, <xref linkend=\"ST_YMax\"/>, <xref linkend=\"ST_YMin\"/>, <xref linkend=\"ST_Z\"/>"

#. Tag: refname
#: reference_accessor.xml:1952
#, no-c-format
msgid "ST_YMax"
msgstr "ST_YMax"

#. Tag: refpurpose
#: reference_accessor.xml:1954
#, no-c-format
msgid ""
"<refpurpose>Returns Y maxima of a bounding box 2d or 3d or a "
"geometry.</refpurpose>"
msgstr "<refpurpose>2차원 경계 상자(box2d) 또는 3차원 경계 상자(box3d) 또는 도형의 최대 Y값을 반환합니다.</refpurpose>"

#. Tag: funcprototype
#: reference_accessor.xml:1959
#, no-c-format
msgid ""
"<funcdef>float <function>ST_YMax</function></funcdef> <paramdef><type>box3d "
"</type> <parameter>aGeomorBox2DorBox3D</parameter></paramdef>"
msgstr "<funcdef>float <function>ST_YMax</function></funcdef> <paramdef><type>box3d </type> <parameter>aGeomorBox2DorBox3D</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:1969
#, no-c-format
msgid ""
"<para>Returns Y maxima of a bounding box 2d or 3d or a geometry.</para>"
msgstr "<para>2차원 경계 상자(box2d) 또는 3차원 경계 상자(box3d) 또는 도형의 최대 Y값을 반환합니다.</para>"

#. Tag: programlisting
#: reference_accessor.xml:1984
#, no-c-format
msgid ""
"SELECT ST_YMax('BOX3D(1 2 3, 4 5 6)');\n"
"st_ymax\n"
"-------\n"
"5\n"
"\n"
"SELECT ST_YMax(ST_GeomFromText('LINESTRING(1 3 4, 5 6 7)'));\n"
"st_ymax\n"
"-------\n"
"6\n"
"\n"
"SELECT ST_YMax(CAST('BOX(-3 2, 3 4)' As box2d));\n"
"st_ymax\n"
"-------\n"
"4\n"
"--Observe THIS DOES NOT WORK because it will try to autocast the string representation to a BOX3D\n"
"SELECT ST_YMax('LINESTRING(1 3, 5 6)');\n"
"\n"
"--ERROR:  BOX3D parser - doesn't start with BOX3D(\n"
"\n"
"SELECT ST_YMax(ST_GeomFromEWKT('CIRCULARSTRING(220268 150415 1,220227 150505 2,220227 150406 3)'));\n"
"st_ymax\n"
"--------\n"
"150506.126829327"
msgstr "SELECT ST_YMax('BOX3D(1 2 3, 4 5 6)');\nst_ymax\n-------\n5\n\nSELECT ST_YMax(ST_GeomFromText('LINESTRING(1 3 4, 5 6 7)'));\nst_ymax\n-------\n6\n\nSELECT ST_YMax(CAST('BOX(-3 2, 3 4)' As box2d));\nst_ymax\n-------\n4\n-- 스트링 표현식을 box3d로 자동 형변환하려 하기 때문에 오류가 발생하는 것을 지켜보십시오.\nSELECT ST_YMax('LINESTRING(1 3, 5 6)');\n\n--ERROR:  BOX3D parser - doesn't start with BOX3D(\n\nSELECT ST_YMax(ST_GeomFromEWKT('CIRCULARSTRING(220268 150415 1,220227 150505 2,220227 150406 3)'));\nst_ymax\n--------\n150506.126829327"

#. Tag: para
#: reference_accessor.xml:1991
#, no-c-format
msgid ""
", <xref linkend=\"ST_XMax\"/>, <xref linkend=\"ST_YMin\"/>, <xref "
"linkend=\"ST_ZMax\"/>, <xref linkend=\"ST_ZMin\"/>"
msgstr ", <xref linkend=\"ST_XMax\"/>, <xref linkend=\"ST_YMin\"/>, <xref linkend=\"ST_ZMax\"/>, <xref linkend=\"ST_ZMin\"/>"

#. Tag: refname
#: reference_accessor.xml:1997
#, no-c-format
msgid "ST_YMin"
msgstr "ST_YMin"

#. Tag: refpurpose
#: reference_accessor.xml:1999
#, no-c-format
msgid ""
"<refpurpose>Returns Y minima of a bounding box 2d or 3d or a "
"geometry.</refpurpose>"
msgstr "<refpurpose>2차원 경계 상자(box2d) 또는 3차원 경계 상자(box3d) 또는 도형의 최소 Y값을 반환합니다.</refpurpose>"

#. Tag: funcprototype
#: reference_accessor.xml:2004
#, no-c-format
msgid ""
"<funcdef>float <function>ST_YMin</function></funcdef> <paramdef><type>box3d "
"</type> <parameter>aGeomorBox2DorBox3D</parameter></paramdef>"
msgstr "<funcdef>float <function>ST_YMin</function></funcdef> <paramdef><type>box3d </type> <parameter>aGeomorBox2DorBox3D</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:2014
#, no-c-format
msgid ""
"<para>Returns Y minima of a bounding box 2d or 3d or a geometry.</para>"
msgstr "<para>2차원 경계 상자(box2d) 또는 3차원 경계 상자(box3d) 또는 도형의 최소 Y값을 반환합니다.</para>"

#. Tag: programlisting
#: reference_accessor.xml:2029
#, no-c-format
msgid ""
"SELECT ST_YMin('BOX3D(1 2 3, 4 5 6)');\n"
"st_ymin\n"
"-------\n"
"2\n"
"\n"
"SELECT ST_YMin(ST_GeomFromText('LINESTRING(1 3 4, 5 6 7)'));\n"
"st_ymin\n"
"-------\n"
"3\n"
"\n"
"SELECT ST_YMin(CAST('BOX(-3 2, 3 4)' As box2d));\n"
"st_ymin\n"
"-------\n"
"2\n"
"--Observe THIS DOES NOT WORK because it will try to autocast the string representation to a BOX3D\n"
"SELECT ST_YMin('LINESTRING(1 3, 5 6)');\n"
"\n"
"--ERROR:  BOX3D parser - doesn't start with BOX3D(\n"
"\n"
"SELECT ST_YMin(ST_GeomFromEWKT('CIRCULARSTRING(220268 150415 1,220227 150505 2,220227 150406 3)'));\n"
"st_ymin\n"
"--------\n"
"150406"
msgstr "SELECT ST_YMin('BOX3D(1 2 3, 4 5 6)');\nst_ymin\n-------\n2\n\nSELECT ST_YMin(ST_GeomFromText('LINESTRING(1 3 4, 5 6 7)'));\nst_ymin\n-------\n3\n\nSELECT ST_YMin(CAST('BOX(-3 2, 3 4)' As box2d));\nst_ymin\n-------\n2\n-- 스트링 표현식을 box3d로 자동 형변환하려 하기 때문에 오류가 발생하는 것을 지켜보십시오.\nSELECT ST_YMin('LINESTRING(1 3, 5 6)');\n\n--ERROR:  BOX3D parser - doesn't start with BOX3D(\n\nSELECT ST_YMin(ST_GeomFromEWKT('CIRCULARSTRING(220268 150415 1,220227 150505 2,220227 150406 3)'));\nst_ymin\n--------\n150406"

#. Tag: para
#: reference_accessor.xml:2036
#, no-c-format
msgid ""
", <xref linkend=\"ST_XMin\"/>, <xref linkend=\"ST_XMax\"/>, <xref "
"linkend=\"ST_YMax\"/>, <xref linkend=\"ST_ZMax\"/>, <xref "
"linkend=\"ST_ZMin\"/>"
msgstr ", <xref linkend=\"ST_XMin\"/>, <xref linkend=\"ST_XMax\"/>, <xref linkend=\"ST_YMax\"/>, <xref linkend=\"ST_ZMax\"/>, <xref linkend=\"ST_ZMin\"/>"

#. Tag: refname
#: reference_accessor.xml:2042
#, no-c-format
msgid "ST_Z"
msgstr "ST_Z"

#. Tag: refpurpose
#: reference_accessor.xml:2044
#, no-c-format
msgid ""
"<refpurpose>Return the Z coordinate of the point, or NULL if not available. "
"Input must be a point.</refpurpose>"
msgstr "<refpurpose>포인트의 Z 좌표를 반환합니다. Z 좌표가 없는 경우 NULL을 반환합니다. 포인트만 입력받을 수 있습니다.</refpurpose>"

#. Tag: funcprototype
#: reference_accessor.xml:2050
#, no-c-format
msgid ""
"<funcdef>float <function>ST_Z</function></funcdef> <paramdef><type>geometry "
"</type> <parameter>a_point</parameter></paramdef>"
msgstr "<funcdef>float <function>ST_Z</function></funcdef> <paramdef><type>geometry </type> <parameter>a_point</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:2060
#, no-c-format
msgid ""
"<para>Return the Z coordinate of the point, or NULL if not available. Input "
"must be a point.</para>"
msgstr "<para>포인트의 Z 좌표를 반환합니다. Z 좌표가 없는 경우 NULL을 반환합니다. 포인트만 입력받을 수 있습니다.</para>"

#. Tag: programlisting
#: reference_accessor.xml:2072
#, no-c-format
msgid ""
"SELECT ST_Z(ST_GeomFromEWKT('POINT(1 2 3 4)'));\n"
" st_z\n"
"------\n"
"        3\n"
"(1 row)"
msgstr "SELECT ST_Z(ST_GeomFromEWKT('POINT(1 2 3 4)'));\n st_z\n------\n        3\n(1 row)"

#. Tag: para
#: reference_accessor.xml:2079
#, no-c-format
msgid ""
", <xref linkend=\"ST_M\"/>, <xref linkend=\"ST_X\"/>, <xref "
"linkend=\"ST_Y\"/>, <xref linkend=\"ST_ZMax\"/>, <xref linkend=\"ST_ZMin\"/>"
msgstr ", <xref linkend=\"ST_M\"/>, <xref linkend=\"ST_X\"/>, <xref linkend=\"ST_Y\"/>, <xref linkend=\"ST_ZMax\"/>, <xref linkend=\"ST_ZMin\"/>"

#. Tag: refname
#: reference_accessor.xml:2085
#, no-c-format
msgid "ST_ZMax"
msgstr "ST_ZMax"

#. Tag: refpurpose
#: reference_accessor.xml:2087 reference_accessor.xml:2174
#, no-c-format
msgid ""
"<refpurpose>Returns Z minima of a bounding box 2d or 3d or a "
"geometry.</refpurpose>"
msgstr "<refpurpose>2차원 경계 상자(box2d) 또는 3차원 경계 상자(box3d) 또는 도형의 최대 Z값을 반환합니다.</refpurpose>"

#. Tag: funcprototype
#: reference_accessor.xml:2092
#, no-c-format
msgid ""
"<funcdef>float <function>ST_ZMax</function></funcdef> <paramdef><type>box3d "
"</type> <parameter>aGeomorBox2DorBox3D</parameter></paramdef>"
msgstr "<funcdef>float <function>ST_ZMax</function></funcdef> <paramdef><type>box3d </type> <parameter>aGeomorBox2DorBox3D</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:2102
#, no-c-format
msgid "Returns Z maxima of a bounding box 2d or 3d or a geometry."
msgstr "<para>2차원 경계 상자(box2d) 또는 3차원 경계 상자(box3d) 또는 도형의 최대 Z값을 반환합니다.</para>"

#. Tag: programlisting
#: reference_accessor.xml:2117
#, no-c-format
msgid ""
"SELECT ST_ZMax('BOX3D(1 2 3, 4 5 6)');\n"
"st_zmax\n"
"-------\n"
"6\n"
"\n"
"SELECT ST_ZMax(ST_GeomFromEWKT('LINESTRING(1 3 4, 5 6 7)'));\n"
"st_zmax\n"
"-------\n"
"7\n"
"\n"
"SELECT ST_ZMax('BOX3D(-3 2 1, 3 4 1)' );\n"
"st_zmax\n"
"-------\n"
"1\n"
"--Observe THIS DOES NOT WORK because it will try to autocast the string representation to a BOX3D\n"
"SELECT ST_ZMax('LINESTRING(1 3 4, 5 6 7)');\n"
"\n"
"--ERROR:  BOX3D parser - doesn't start with BOX3D(\n"
"\n"
"SELECT ST_ZMax(ST_GeomFromEWKT('CIRCULARSTRING(220268 150415 1,220227 150505 2,220227 150406 3)'));\n"
"st_zmax\n"
"--------\n"
"3"
msgstr "SELECT ST_ZMax('BOX3D(1 2 3, 4 5 6)');\nst_zmax\n-------\n6\n\nSELECT ST_ZMax(ST_GeomFromEWKT('LINESTRING(1 3 4, 5 6 7)'));\nst_zmax\n-------\n7\n\nSELECT ST_ZMax('BOX3D(-3 2 1, 3 4 1)' );\nst_zmax\n-------\n1\n-- 스트링 표현식을 box3d로 자동 형변환하려 하기 때문에 오류가 발생하는 것을 지켜보십시오. \nSELECT ST_ZMax('LINESTRING(1 3 4, 5 6 7)');\n\n--ERROR:  BOX3D parser - doesn't start with BOX3D(\n\nSELECT ST_ZMax(ST_GeomFromEWKT('CIRCULARSTRING(220268 150415 1,220227 150505 2,220227 150406 3)'));\nst_zmax\n--------\n3"

#. Tag: para
#: reference_accessor.xml:2124
#, no-c-format
msgid ""
", <xref linkend=\"ST_XMin\"/>, <xref linkend=\"ST_XMax\"/>, <xref "
"linkend=\"ST_YMax\"/>, <xref linkend=\"ST_YMin\"/>, <xref "
"linkend=\"ST_ZMax\"/>"
msgstr ", <xref linkend=\"ST_XMin\"/>, <xref linkend=\"ST_XMax\"/>, <xref linkend=\"ST_YMax\"/>, <xref linkend=\"ST_YMin\"/>, <xref linkend=\"ST_ZMax\"/>"

#. Tag: refname
#: reference_accessor.xml:2130
#, no-c-format
msgid "ST_Zmflag"
msgstr "ST_Zmflag"

#. Tag: refpurpose
#: reference_accessor.xml:2132
#, no-c-format
msgid ""
"<refpurpose>Returns ZM (dimension semantic) flag of the geometries as a "
"small int. Values are: 0=2d, 1=3dm, 2=3dz, 3=4d.</refpurpose>"
msgstr "<refpurpose>도형의 ZM(의미론적 차원) 플래그를 2바이트 정수형(smallint)으로 반환합니다. 값이 0일 때 2D, 1일 때 3DM, 3일 때 3DZ, 4일 때 4D를 뜻합니다.<refpurpose>"

#. Tag: funcprototype
#: reference_accessor.xml:2138
#, no-c-format
msgid ""
"<funcdef>smallint <function>ST_Zmflag</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef>"
msgstr "<funcdef>smallint <function>ST_Zmflag</function></funcdef> <paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:2148
#, no-c-format
msgid ""
"<para>Returns ZM (dimension semantic) flag of the geometries as a small int."
" Values are: 0=2d, 1=3dm, 2=3dz, 3=4d.</para>"
msgstr "<para>도형의 ZM(의미론적 차원) 플래그를 2바이트 정수형(smallint)으로 반환합니다. 값이 0일 때 2D, 1일 때 3DM, 3일 때 3DZ, 4일 때 4D를 뜻합니다.</para>"

#. Tag: programlisting
#: reference_accessor.xml:2159
#, no-c-format
msgid ""
"SELECT ST_Zmflag(ST_GeomFromEWKT('LINESTRING(1 2, 3 4)'));\n"
" st_zmflag\n"
"-----------\n"
"                 0\n"
"\n"
"SELECT ST_Zmflag(ST_GeomFromEWKT('LINESTRINGM(1 2 3, 3 4 3)'));\n"
" st_zmflag\n"
"-----------\n"
"                 1\n"
"\n"
"SELECT ST_Zmflag(ST_GeomFromEWKT('CIRCULARSTRING(1 2 3, 3 4 3, 5 6 3)'));\n"
" st_zmflag\n"
"-----------\n"
"                 2\n"
"SELECT ST_Zmflag(ST_GeomFromEWKT('POINT(1 2 3 4)'));\n"
" st_zmflag\n"
"-----------\n"
"                 3"
msgstr "SELECT ST_Zmflag(ST_GeomFromEWKT('LINESTRING(1 2, 3 4)'));\n st_zmflag\n-----------\n                 0\n\nSELECT ST_Zmflag(ST_GeomFromEWKT('LINESTRINGM(1 2 3, 3 4 3)'));\n st_zmflag\n-----------\n                 1\n\nSELECT ST_Zmflag(ST_GeomFromEWKT('CIRCULARSTRING(1 2 3, 3 4 3, 5 6 3)'));\n st_zmflag\n-----------\n                 2\nSELECT ST_Zmflag(ST_GeomFromEWKT('POINT(1 2 3 4)'));\n st_zmflag\n-----------\n                 3"

#. Tag: para
#: reference_accessor.xml:2166
#, no-c-format
msgid ", <xref linkend=\"ST_NDims\"/>, <xref linkend=\"ST_Dimension\"/>"
msgstr ", <xref linkend=\"ST_NDims\"/>, <xref linkend=\"ST_Dimension\"/>"

#. Tag: refname
#: reference_accessor.xml:2172
#, no-c-format
msgid "ST_ZMin"
msgstr "ST_ZMin"

#. Tag: funcprototype
#: reference_accessor.xml:2179
#, no-c-format
msgid ""
"<funcdef>float <function>ST_ZMin</function></funcdef> <paramdef><type>box3d "
"</type> <parameter>aGeomorBox2DorBox3D</parameter></paramdef>"
msgstr "<funcdef>float <function>ST_ZMin</function></funcdef> <paramdef><type>box3d </type> <parameter>aGeomorBox2DorBox3D</parameter></paramdef>"

#. Tag: para
#: reference_accessor.xml:2189
#, no-c-format
msgid ""
"<para>Returns Z minima of a bounding box 2d or 3d or a geometry.</para>"
msgstr "<para>2차원 경계 상자(box2d) 또는 3차원 경계 상자(box3d) 또는 도형의 최소 Z값을 반환합니다.</para>"

#. Tag: programlisting
#: reference_accessor.xml:2204
#, no-c-format
msgid ""
"SELECT ST_ZMin('BOX3D(1 2 3, 4 5 6)');\n"
"st_zmin\n"
"-------\n"
"3\n"
"\n"
"SELECT ST_ZMin(ST_GeomFromEWKT('LINESTRING(1 3 4, 5 6 7)'));\n"
"st_zmin\n"
"-------\n"
"4\n"
"\n"
"SELECT ST_ZMin('BOX3D(-3 2 1, 3 4 1)' );\n"
"st_zmin\n"
"-------\n"
"1\n"
"--Observe THIS DOES NOT WORK because it will try to autocast the string representation to a BOX3D\n"
"SELECT ST_ZMin('LINESTRING(1 3 4, 5 6 7)');\n"
"\n"
"--ERROR:  BOX3D parser - doesn't start with BOX3D(\n"
"\n"
"SELECT ST_ZMin(ST_GeomFromEWKT('CIRCULARSTRING(220268 150415 1,220227 150505 2,220227 150406 3)'));\n"
"st_zmin\n"
"--------\n"
"1"
msgstr "SELECT ST_ZMin('BOX3D(1 2 3, 4 5 6)');\nst_zmin\n-------\n3\n\nSELECT ST_ZMin(ST_GeomFromEWKT('LINESTRING(1 3 4, 5 6 7)'));\nst_zmin\n-------\n4\n\nSELECT ST_ZMin('BOX3D(-3 2 1, 3 4 1)' );\nst_zmin\n-------\n1\n-- 스트링 표현식을 box3d로 자동 형변환하려 하기 때문에 오류가 발생하는 것을 지켜보십시오.\nSELECT ST_ZMin('LINESTRING(1 3 4, 5 6 7)');\n\n--ERROR:  BOX3D parser - doesn't start with BOX3D(\n\nSELECT ST_ZMin(ST_GeomFromEWKT('CIRCULARSTRING(220268 150415 1,220227 150505 2,220227 150406 3)'));\nst_zmin\n--------\n1"

#. Tag: para
#: reference_accessor.xml:2211
#, no-c-format
msgid ""
", <xref linkend=\"ST_GeomFromText\"/>, <xref linkend=\"ST_XMin\"/>, <xref "
"linkend=\"ST_XMax\"/>, <xref linkend=\"ST_YMax\"/>, <xref "
"linkend=\"ST_YMin\"/>, <xref linkend=\"ST_ZMax\"/>"
msgstr ", <xref linkend=\"ST_GeomFromText\"/>, <xref linkend=\"ST_XMin\"/>, <xref linkend=\"ST_XMax\"/>, <xref linkend=\"ST_YMax\"/>, <xref linkend=\"ST_YMin\"/>, <xref linkend=\"ST_ZMax\"/>"
