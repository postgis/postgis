# SOME DESCRIPTIVE TITLE.
#
# Translators:
# Kwon.Yongchan <ruvyn@naver.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: PostGIS\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2017-07-17 15:51+0000\n"
"PO-Revision-Date: 2016-07-20 06:55+0000\n"
"Last-Translator: Kwon.Yongchan <ruvyn@naver.com>\n"
"Language-Team: Korean (Korea) (http://www.transifex.com/postgis/postgis/"
"language/ko_KR/)\n"
"Language: ko_KR\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. Tag: title
#: performance_tips.xml:3
#, no-c-format
msgid "Performance tips"
msgstr "성능 향상 비법"

#. Tag: title
#: performance_tips.xml:6
#, no-c-format
msgid "Small tables of large geometries"
msgstr "대용량 도형을 담은 저용량 테이블"

#. Tag: title
#: performance_tips.xml:9
#, no-c-format
msgid "Problem description"
msgstr "문제점 설명"

#. Tag: para
#: performance_tips.xml:11
#, fuzzy, no-c-format
msgid ""
"Current PostgreSQL versions (including 9.6) suffer from a query optimizer "
"weakness regarding TOAST tables. TOAST tables are a kind of \"extension room"
"\" used to store large (in the sense of data size) values that do not fit "
"into normal data pages (like long texts, images or complex geometries with "
"lots of vertices), see <ulink url=\"http://www.postgresql.org/docs/current/"
"static/storage-toast.html\">the PostgreSQL Documentation for TOAST</ulink> "
"for more information)."
msgstr ""
"현재 PostgreSQL (8.0 포함) 버전들의 쿼리 최적화기(optimizer)에는 TOAST 테이블"
"과 관련된 약점이 있습니다. TOAST 테이블은 일반 데이터 페이지에 적합하지 않은 "
"(긴 텍스트, 큰 이미지 또는 수많은 꼭짓점을 가진 복잡 도형 같은) 대용량(데이"
"터 크기 관점에서) 값을 저장하는 데 쓰이는 일종의 \"확장 공간(extension "
"room)\"입니다. 자세한 정보는 <ulink url=\"http://www.postgresql.org/docs/"
"current/static/storage-toast.html\">the PostgreSQL Documentation for TOAST</"
"ulink> 를 참고하십시오."

#. Tag: para
#: performance_tips.xml:19
#, fuzzy, no-c-format
msgid ""
"The problem appears if you happen to have a table with rather large "
"geometries, but not too manyrows of them (like a table containing the "
"boundaries of all European countries in high resolution). Then the table "
"itself is small, but it uses lots of TOAST space. In our example case, the "
"table itself had about 80 rows and used only 3 data pages, but the TOAST "
"table used 8225 pages."
msgstr ""
"상당히 대용량의 도형을 가진 테이블이지만, (전체 유럽 국가들의 고해상도 국경"
"을 담고 있는 테이블처럼) 도형 행이 그렇게 많지 않을 경우 문제가 드러납니다. "
"이때 테이블 자체는 저용량이지만, 많은 TOAST 공간을 차지합니다. 이번 예제의 경"
"우, 테이블 자체는 약 80행을 담고 있고 데이터 페이지 3장만 사용하지만, TOAST "
"테이블은 8,225페이지를 차지합니다."

#. Tag: para
#: performance_tips.xml:26
#, fuzzy, no-c-format
msgid ""
"Now issue a query where you use the geometry operator &amp;&amp; to search "
"for a bounding box that matches only very few of those rows. Now the query "
"optimizer sees that the table has only 3 pages and 80 rows. It estimates "
"that a sequential scan on such a small table is much faster than using an "
"index. And so it decides to ignore the GIST index. Usually, this estimation "
"is correct. But in our case, the &amp;&amp; operator has to fetch every "
"geometry from disk to compare the bounding boxes, thus reading all TOAST "
"pages, too."
msgstr ""
"이 테이블의 행 가운데 몇 행과만 일치하는 경계 상자를 검색하기 위한 도형 연산"
"자 &amp;&amp;를 이용하는 쿼리를 전송해봅시다. 이때 쿼리 최적화기는 해당 테이"
"블이 데이터 페이지 3장과 80행만 가지고 있다고 판단합니다. 이런 저용량 테이블"
"에는 인덱스보다 순차 스캔이 훨씬 빠를 거라고 추정할 것입니다. 따라서 GiST 인"
"덱스를 무시하기로 합니다. 일반적인 경우라면 이 추정이 맞습니다. 그러나 이번 "
"예제의 경우, &amp;&amp; 연산자가 경계 상자를 비교하기 위해 디스크에서 모든 도"
"형을 불러와야 하기 때문에, 결국 모든 TOAST 페이지도 읽어야 합니다."

#. Tag: para
#: performance_tips.xml:35
#, fuzzy, no-c-format
msgid ""
"To see whether your suffer from this issue, use the \"EXPLAIN ANALYZE\" "
"postgresql command. For more information and the technical details, you can "
"read the thread on the postgres performance mailing list: <ulink url="
"\"http://archives.postgresql.org/pgsql-performance/2005-02/msg00030.php"
"\">http://archives.postgresql.org/pgsql-performance/2005-02/msg00030.php</"
"ulink>"
msgstr ""
"사용자 시스템에 이 버그가 있는지 확인하려면, \"EXPLAIN ANALYZE\" PostgreSQL "
"명령어를 실행하십시오. 자세한 정보 및 기술적인 세부 사항을 알고 싶다면, "
"PostgreSQL 성능 메일링 리스트에 있는 다음 스레드를 읽어볼 수 있습니다: "
"http://archives.postgresql.org/pgsql-performance/2005-02/msg00030.php"

#. Tag: para
#: performance_tips.xml:41
#, no-c-format
msgid ""
"and newer thread on PostGIS <ulink url=\"https://lists.osgeo.org/pipermail/"
"postgis-devel/2017-June/026209.html\">https://lists.osgeo.org/pipermail/"
"postgis-devel/2017-June/026209.html</ulink>"
msgstr ""

#. Tag: title
#: performance_tips.xml:45
#, no-c-format
msgid "Workarounds"
msgstr "해결 방법"

#. Tag: para
#: performance_tips.xml:47
#, no-c-format
msgid ""
"The PostgreSQL people are trying to solve this issue by making the query "
"estimation TOAST-aware. For now, here are two workarounds:"
msgstr ""
"PostgreSQL 개발자들은 쿼리 추정이 TOAST를 인식하도록 만들어 이 문제를 해결하"
"려 하고 있습니다. 현 시점에서는, 다음 두 가지 해결 방법이 있습니다:"

#. Tag: para
#: performance_tips.xml:50
#, no-c-format
msgid ""
"The first workaround is to force the query planner to use the index. Send "
"\"SET enable_seqscan TO off;\" to the server before issuing the query. This "
"basically forces the query planner to avoid sequential scans whenever "
"possible. So it uses the GIST index as usual. But this flag has to be set on "
"every connection, and it causes the query planner to make misestimations in "
"other cases, so you should \"SET enable_seqscan TO on;\" after the query."
msgstr ""
"첫 번째 해결책은 쿼리 설계자가 인덱스를 사용하도록 강제하는 방법입니다. 쿼리"
"를 전송하기 전에 서버로 \"SET enable_seqscan TO off;\"를 전송하십시오. 이렇"
"게 하면 기본적으로 쿼리 설계자가 순차 스캔을 사용할 수 있는 경우에도 사용하"
"지 않도록 강제합니다. 따라서 평상시처럼 GiST 인덱스를 이용할 것입니다. 그러"
"나 이 플래그를 매번 연결할 때마다 설정해야 하고 다른 상황에서 쿼리 설계자가 "
"잘못 추정하도록 하기 때문에, 쿼리가 끝난 후에 \"SET enable_seqscan TO on;"
"\"을 전송해야 합니다."

#. Tag: para
#: performance_tips.xml:58
#, no-c-format
msgid ""
"The second workaround is to make the sequential scan as fast as the query "
"planner thinks. This can be achieved by creating an additional column that "
"\"caches\" the bbox, and matching against this. In our example, the commands "
"are like:"
msgstr ""
"두 번째 해결책은 쿼리 설계자가 추정하는 만큼 순차 스캔 속도를 높이는 방법입니"
"다. 경계 상자를 \"캐시\"하는 추가 열을 생성한 다음, 이 추가 열을 대상으로 일"
"치 여부를 쿼리하면 됩니다. 이번 예제의 경우, 해당 명령어는 다음과 같습니다:"

#. Tag: programlisting
#: performance_tips.xml:63
#, no-c-format
msgid ""
"SELECT "
"AddGeometryColumn('myschema','mytable','bbox','4326','GEOMETRY','2');\n"
"UPDATE mytable SET bbox = ST_Envelope(ST_Force2D(the_geom));"
msgstr ""
"SELECT "
"AddGeometryColumn('myschema','mytable','bbox','4326','GEOMETRY','2');\n"
"UPDATE mytable SET bbox = ST_Envelope(ST_Force2D(the_geom));"

#. Tag: para
#: performance_tips.xml:65
#, no-c-format
msgid ""
"Now change your query to use the &amp;&amp; operator against bbox instead of "
"geom_column, like:"
msgstr ""
"이제 geom_column 대신 bbox 에 대해 &amp;&amp; 연산자를 이용하도록 다음과 같"
"이 사용자 쿼리를 변경하십시오:"

#. Tag: programlisting
#: performance_tips.xml:68
#, no-c-format
msgid ""
"SELECT geom_column\n"
"FROM mytable\n"
"WHERE bbox &amp;&amp; ST_SetSRID('BOX3D(0 0,1 1)'::box3d,4326);"
msgstr ""
"SELECT geom_column\n"
"FROM mytable\n"
"WHERE bbox &amp;&amp; ST_SetSRID('BOX3D(0 0,1 1)'::box3d,4326);"

#. Tag: para
#: performance_tips.xml:70
#, no-c-format
msgid ""
"Of course, if you change or add rows to mytable, you have to keep the bbox "
"\"in sync\". The most transparent way to do this would be triggers, but you "
"also can modify your application to keep the bbox column current or run the "
"UPDATE query above after every modification."
msgstr ""
"물론, mytable의 열을 변경하거나 추가할 경우, bbox의 \"일관성\"을 유지해야 합"
"니다. 일관성을 유지시키는 가장 명료한 방법은 트리거(trigger)일 것입니다. 물"
"론 사용자 응용 프로그램을 수정해서 bbox 열의 정보를 항상 최신 상태로 유지하도"
"록 하거나, 모든 수정 작업 후 매번 앞에서 나온 UPDATE 쿼리를 실행할 수도 있습"
"니다."

#. Tag: title
#: performance_tips.xml:79
#, no-c-format
msgid "CLUSTERing on geometry indices"
msgstr "도형 인덱스에 대한 클러스터 작업"

#. Tag: para
#: performance_tips.xml:81
#, no-c-format
msgid ""
"For tables that are mostly read-only, and where a single index is used for "
"the majority of queries, PostgreSQL offers the CLUSTER command. This command "
"physically reorders all the data rows in the same order as the index "
"criteria, yielding two performance advantages: First, for index range scans, "
"the number of seeks on the data table is drastically reduced. Second, if "
"your working set concentrates to some small intervals on the indices, you "
"have a more efficient caching because the data rows are spread along fewer "
"data pages. (Feel invited to read the CLUSTER command documentation from the "
"PostgreSQL manual at this point.)"
msgstr ""
"레코드 대부분이 읽기 전용이고, 쿼리의 대다수가 단일 인덱스를 이용하는 테이블"
"의 경우, PostgreSQL은 CLUSTER 명령어를 제공합니다. 이 명령어는 모든 데이터 행"
"을 인덱스 기준과 동일한 순서로 물리적으로 재정렬합니다. 이렇게 하면 성능 향"
"상 관련 두 가지 장점이 나타납니다. 첫째, 인덱스 범위 스캔을 하는 경우 데이터 "
"테이블에 대한 요청 횟수가 극단적으로 줄어듭니다. 둘째, 사용자가 작업중인 집합"
"이 인덱스 상의 조금 작은 간격에 집중하고 있을 경우 데이터 행이 더 적은 데이"
"터 페이지를 따라 퍼져 있기 때문에 더 효율적인 캐시 작업이 가능합니다. (이 시"
"점에서 PostgreSQL 지침서에 있는 CLUSTER 명령어 문서를 읽어보는 편이 좋습니"
"다.)"

#. Tag: para
#: performance_tips.xml:91
#, no-c-format
msgid ""
"However, currently PostgreSQL does not allow clustering on PostGIS GIST "
"indices because GIST indices simply ignores NULL values, you get an error "
"message like:"
msgstr ""
"하지만, 현재 PostgreSQL은 PostGIS GiST 인덱스에 대한 클러스터 작업을 허용하"
"지 않습니다. 왜냐하면 GiST 인덱스가 NULL 값을 단순히 무시하기 때문에, 다음과 "
"같은 오류 메시지를 보게 될 것입니다:"

#. Tag: programlisting
#: performance_tips.xml:95
#, no-c-format
msgid ""
"lwgeom=# CLUSTER my_geom_index ON my_table;\n"
"ERROR: cannot cluster when index access method does not handle null values\n"
"HINT: You may be able to work around this by marking column \"the_geom\" NOT "
"NULL."
msgstr ""
"lwgeom=# CLUSTER my_geom_index ON my_table;\n"
"ERROR: cannot cluster when index access method does not handle null values\n"
"HINT: You may be able to work around this by marking column \"the_geom\" NOT "
"NULL."

#. Tag: para
#: performance_tips.xml:97
#, no-c-format
msgid ""
"As the HINT message tells you, one can work around this deficiency by adding "
"a \"not null\" constraint to the table:"
msgstr ""
"HINT 메시지의 내용대로, 테이블에 \"not null\" 제약조건을 추가하면 이 결점을 "
"피해 갈 수 있습니다:"

#. Tag: programlisting
#: performance_tips.xml:100
#, no-c-format
msgid ""
"lwgeom=# ALTER TABLE my_table ALTER COLUMN the_geom SET not null;\n"
"ALTER TABLE"
msgstr ""
"lwgeom=# ALTER TABLE my_table ALTER COLUMN the_geom SET not null;\n"
"ALTER TABLE"

#. Tag: para
#: performance_tips.xml:102
#, no-c-format
msgid ""
"Of course, this will not work if you in fact need NULL values in your "
"geometry column. Additionally, you must use the above method to add the "
"constraint, using a CHECK constraint like \"ALTER TABLE blubb ADD CHECK "
"(geometry is not null);\" will not work."
msgstr ""
"물론, 사용자 도형 열 안에 실제로 NULL 값이 필요한 경우 이 방법을 쓸 수는 없습"
"니다. 또한 제약조건을 추가하려면 앞의 메소드를 이용해야 합니다. \"ALTER "
"TABLE blubb ADD CHECK (geometry is not null);\"처럼 CHECK 제약조건을 사용하"
"는 방법은 먹히지 않을 겁니다."

#. Tag: title
#: performance_tips.xml:109
#, no-c-format
msgid "Avoiding dimension conversion"
msgstr "차원 변환 피하기"

#. Tag: para
#: performance_tips.xml:111
#, no-c-format
msgid ""
"Sometimes, you happen to have 3D or 4D data in your table, but always access "
"it using OpenGIS compliant ST_AsText() or ST_AsBinary() functions that only "
"output 2D geometries. They do this by internally calling the ST_Force2D() "
"function, which introduces a significant overhead for large geometries. To "
"avoid this overhead, it may be feasible to pre-drop those additional "
"dimensions once and forever:"
msgstr ""
"때때로 사용자 테이블에 3D 또는 4D 데이터가 있지만, 항상 2D 도형만을 출력하는 "
"OpenGIS 준수 ST_AsText() 또는 ST_AsBinary() 함수를 통해서만 접근하는 경우가 "
"있을 수 있습니다. 이런 경우 내부적으로 ST_Force2D() 함수를 호출하는데, 대용"
"량 도형의 경우 이 함수는 시스템의 자원을 상당히 잡아먹습니다. 이런 자원 낭비"
"를 피하려면, 미리 그 추가적인 차원을 완전히 삭제하는 편이 효율적일 수 있습니"
"다."

#. Tag: programlisting
#: performance_tips.xml:118
#, no-c-format
msgid ""
"UPDATE mytable SET the_geom = ST_Force2D(the_geom);\n"
"VACUUM FULL ANALYZE mytable;"
msgstr ""
"UPDATE mytable SET the_geom = ST_Force2D(the_geom);\n"
"VACUUM FULL ANALYZE mytable;"

#. Tag: para
#: performance_tips.xml:120
#, no-c-format
msgid ""
"Note that if you added your geometry column using AddGeometryColumn() "
"there'll be a constraint on geometry dimension. To bypass it you will need "
"to drop the constraint. Remember to update the entry in the geometry_columns "
"table and recreate the constraint afterwards."
msgstr ""
"AddGeometryColumn() 함수를 통해 사용자 도형 열을 추가했을 경우 도형 차원에 제"
"약조건이 걸려 있다는 사실을 주의하십시오. 이를 우회하려면 제약조건을 삭제해"
"야 합니다. geometry_columns 테이블 내부 항목을 업데이트한 다음 제약조건을 다"
"시 생성하는 걸 잊지 마십시오."

#. Tag: para
#: performance_tips.xml:126
#, no-c-format
msgid ""
"In case of large tables, it may be wise to divide this UPDATE into smaller "
"portions by constraining the UPDATE to a part of the table via a WHERE "
"clause and your primary key or another feasible criteria, and running a "
"simple \"VACUUM;\" between your UPDATEs. This drastically reduces the need "
"for temporary disk space. Additionally, if you have mixed dimension "
"geometries, restricting the UPDATE by \"WHERE dimension(the_geom)&gt;2\" "
"skips re-writing of geometries that already are in 2D."
msgstr ""
"대용량 테이블의 경우, 사용자의 기본 키 또는 또다른 사용 가능한 기준과 함께 "
"WHERE 절을 이용해서 테이블의 일부분만 업데이트하도록 제한한 다음 업데이트마"
"다 간단히 \"VACUUM;\"을 실행하는 방식으로 이 업데이트를 작은 부분으로 나누는 "
"편이 좋을 수 있습니다. 이렇게 하면 필요한 임시 디스크 공간이 급격히 줄어듭니"
"다. 또한 몇 종류의 차원이 섞인 도형들을 가지고 있을 경우, \"WHERE "
"dimension(the_geom)&gt;2\"로 업데이트를 제한하면 이미 2D인 도형을 다시 작성하"
"는 일을 건너뛸 수 있습니다."

#. Tag: title
#: performance_tips.xml:138
#, no-c-format
msgid "Tuning your configuration"
msgstr "사용자 설정 세부 조정"

#. Tag: para
#: performance_tips.xml:140
#, no-c-format
msgid ""
"Tuning for PostGIS is much like tuning for any PostgreSQL workload. The only "
"additional note to keep in mind is that geometries and rasters are heavy so "
"memory related optimizations generally have more of an impact on PostGIS "
"than other types of PostgreSQL queries."
msgstr ""

#. Tag: para
#: performance_tips.xml:143
#, no-c-format
msgid ""
"For general details about optimizing PostgreSQL, refer to <ulink url="
"\"https://wiki.postgresql.org/wiki/Tuning_Your_PostgreSQL_Server\">Tuning "
"your PostgreSQL Server</ulink>."
msgstr ""

#. Tag: para
#: performance_tips.xml:145
#, no-c-format
msgid ""
"For PostgreSQL 9.4+ all these can be set at the server level without "
"touching postgresql.conf or postgresql.auto.conf by using the <code>ALTER "
"SYSTEM..</code> command."
msgstr ""

#. Tag: programlisting
#: performance_tips.xml:147
#, no-c-format
msgid ""
"ALTER SYSTEM SET work_mem = '256MB';\n"
"-- this will force, non-startup configs to take effect for new connections\n"
"SELECT pg_reload_conf();\n"
"-- show current setting value\n"
"-- use SHOW ALL to see all settings\n"
"SHOW work_mem;"
msgstr ""

#. Tag: para
#: performance_tips.xml:149
#, no-c-format
msgid ""
"In addition to these settings, PostGIS also has some custom settings which "
"you can find listed in <xref linkend=\"PostGIS_GUC\"/>."
msgstr ""

#. Tag: title
#: performance_tips.xml:152
#, no-c-format
msgid "Startup"
msgstr "시작"

#. Tag: para
#: performance_tips.xml:154
#, no-c-format
msgid "These settings are configured in postgresql.conf:"
msgstr "다음 설정들은 postgresql.conf 파일 안에 설정됩니다:"

#. Tag: ulink
#: performance_tips.xml:159
#, no-c-format
msgid "constraint_exclusion"
msgstr "constraint_exclusion"

#. Tag: para
#: performance_tips.xml:164
#, fuzzy, no-c-format
msgid "Default: partition"
msgstr "기본값은 1MB입니다."

#. Tag: para
#: performance_tips.xml:169
#, fuzzy, no-c-format
msgid ""
"This is generally used for table partitioning. The default for this is set "
"to \"partition\" which is ideal for PostgreSQL 8.4 and above since it will "
"force the planner to only analyze tables for constraint consideration if "
"they are in an inherited hierarchy and not pay the planner penalty otherwise."
msgstr ""
"일반적으로 테이블을 분할하는 경우 쓰입니다. PostgreSQL 8.4 미만 버전을 실행하"
"고 있다면 쿼리 설계자가 원하는 만큼 최적화하도록 \"on\"으로 설정하십시오. "
"PostgreSQL 8.4 버전부터, 이 옵션의 기본값이 \"partition\"으로 설정되어 "
"PostgreSQL 8.4 이후 버전에 이상적으로 바뀌었습니다. 테이블이 상속된 계층형일 "
"경우 쿼리 설계자가 제약조건을 검토해야 할 테이블만 분석하도록 강제하고 다른 "
"경우엔 별다른 대가를 치르지 않기 때문입니다."

#. Tag: ulink
#: performance_tips.xml:178
#, no-c-format
msgid "shared_buffers"
msgstr "shared_buffers"

#. Tag: para
#: performance_tips.xml:183
#, no-c-format
msgid "Default: ~128MB in PostgreSQL 9.6"
msgstr ""

#. Tag: para
#: performance_tips.xml:188
#, no-c-format
msgid ""
"Set to about 25% to 40% of available RAM. On windows you may not be able to "
"set as high."
msgstr ""

#. Tag: para
#: performance_tips.xml:195
#, fuzzy, no-c-format
msgid ""
"<ulink url=\"https://www.postgresql.org/docs/current/static/runtime-config-"
"resource.html#GUC-MAX-WORKER-PROCESSES\">max_worker_processes</ulink> This "
"setting is only available for PostgreSQL 9.4+. For PostgreSQL 9.6+ this "
"setting has additional importance in that it controls the max number of "
"processes you can have for parallel queries."
msgstr ""
"<ulink url=\"http://www.postgresql.org/docs/current/static/runtime-config-"
"resource.html#GUC-WORK-MEM\">work_mem</ulink> (정렬 연산 및 복잡 쿼리에 쓰이"
"는 메모리)"

#. Tag: para
#: performance_tips.xml:203
#, fuzzy, no-c-format
msgid "Default: 8"
msgstr "기본값은 1MB입니다."

#. Tag: para
#: performance_tips.xml:208
#, no-c-format
msgid ""
"Sets the maximum number of background processes that the system can support. "
"This parameter can only be set at server start."
msgstr ""

#. Tag: title
#: performance_tips.xml:218
#, no-c-format
msgid "Runtime"
msgstr "런타임"

#. Tag: para
#: performance_tips.xml:220
#, no-c-format
msgid ""
"<ulink url=\"http://www.postgresql.org/docs/current/static/runtime-config-"
"resource.html#GUC-WORK-MEM\">work_mem</ulink> (the memory used for sort "
"operations and complex queries)"
msgstr ""
"<ulink url=\"http://www.postgresql.org/docs/current/static/runtime-config-"
"resource.html#GUC-WORK-MEM\">work_mem</ulink> (정렬 연산 및 복잡 쿼리에 쓰이"
"는 메모리)"

#. Tag: para
#: performance_tips.xml:226
#, fuzzy, no-c-format
msgid "Default: 1-4MB"
msgstr "기본값은 1MB입니다."

#. Tag: para
#: performance_tips.xml:231
#, no-c-format
msgid "Adjust up for large dbs, complex queries, lots of RAM"
msgstr "대용량 DB, 복잡 쿼리, 많은 RAM의 경우 상향 조정하십시오."

#. Tag: para
#: performance_tips.xml:236
#, no-c-format
msgid "Adjust down for many concurrent users or low RAM."
msgstr "동시 사용자가 많거나 RAM이 적을 경우 하향 조정하십시오."

#. Tag: para
#: performance_tips.xml:241
#, no-c-format
msgid "If you have lots of RAM and few developers:"
msgstr "RAM이 많고 개발자가 적을 경우:"

#. Tag: programlisting
#: performance_tips.xml:243
#, fuzzy, no-c-format
msgid "SET work_mem TO '256MB';"
msgstr "SET work_mem TO 1200000;"

#. Tag: para
#: performance_tips.xml:248
#, no-c-format
msgid ""
"<ulink url=\"http://www.postgresql.org/docs/current/static/runtime-config-"
"resource.html#GUC-MAINTENANCE-WORK-MEM\">maintenance_work_mem</ulink> (used "
"for VACUUM, CREATE INDEX, etc.)"
msgstr ""
"<ulink url=\"http://www.postgresql.org/docs/current/static/runtime-config-"
"resource.html#GUC-MAINTENANCE-WORK-MEM\">maintenance_work_mem</ulink> "
"(VACUUM, CREATE INDEX 등에 쓰이는 메모리)"

#. Tag: para
#: performance_tips.xml:254
#, fuzzy, no-c-format
msgid "Default: 16-64MB"
msgstr "기본값은 16MB입니다."

#. Tag: para
#: performance_tips.xml:259
#, no-c-format
msgid "Generally too low - ties up I/O, locks objects while swapping memory"
msgstr ""
"기본값이 너무 낮습니다. 메모리 스왑 도중 I/O 병목 현상이 일어나거나 객체에 랙"
"이 걸립니다."

#. Tag: para
#: performance_tips.xml:264
#, fuzzy, no-c-format
msgid ""
"Recommend 32MB to 1GB on production servers w/lots of RAM, but depends on "
"the # of concurrent users. If you have lots of RAM and few developers:"
msgstr ""
"RAM이 많은 제품 서버(production server)라면 32MB에서 256MB까지 추천하지만, 동"
"시 사용자 수에 따라 다릅니다. RAM이 많고 개발자가 적을 경우:"

#. Tag: programlisting
#: performance_tips.xml:267
#, fuzzy, no-c-format
msgid "SET maintenance_work_mem TO '1GB';"
msgstr "SET maintainence_work_mem TO 1200000;"

#. Tag: para
#: performance_tips.xml:272
#, no-c-format
msgid ""
"<ulink url=\"https://www.postgresql.org/docs/current/static/runtime-config-"
"resource.html#GUC-MAX-PARALLEL-WORKERS-PER-GATHER"
"\">max_parallel_workers_per_gather</ulink> This setting is only available "
"for PostgreSQL 9.6+ and will only affect PostGIS 2.3+, since only PostGIS "
"2.3+ supports parallel queries. If set to higher than 0, then some queries "
"such as those involving relation functions like <code>ST_Intersects</code> "
"can use multiple processes and can run more than twice as fast when doing "
"so. If you have a lot of processors to spare, you should change the value of "
"this to as many processors as you have. Also make sure to bump up "
"<code>max_worker_processes</code> to at least as high as this number."
msgstr ""

#. Tag: para
#: performance_tips.xml:282
#, fuzzy, no-c-format
msgid "Default: 0"
msgstr "기본값은 1MB입니다."

#. Tag: para
#: performance_tips.xml:287
#, no-c-format
msgid ""
"Sets the maximum number of workers that can be started by a single "
"<varname>Gather</varname> node. Parallel workers are taken from the pool of "
"processes established by <varname>max_worker_processes</varname>. Note that "
"the requested number of workers may not actually be available at run time. "
"If this occurs, the plan will run with fewer workers than expected, which "
"may be inefficient. Setting this value to 0, which is the default, disables "
"parallel query execution."
msgstr ""

#~ msgid "Default: ~32MB"
#~ msgstr "기본값은 최대 32MB입니다."

#~ msgid "Set to about 1/3 to 3/4 of available RAM"
#~ msgstr "사용할 수 있는 RAM 용량의 1/3에서 3/4까지 설정하십시오."

#~ msgid ""
#~ "These tips are taken from Kevin Neufeld's presentation \"Tips for the "
#~ "PostGIS Power User\" at the FOSS4G 2007 conference. Depending on your use "
#~ "of PostGIS (for example, static data and complex analysis vs frequently "
#~ "updated data and lots of users) these changes can provide significant "
#~ "speedups to your queries."
#~ msgstr ""
#~ "이 단원에서 소개하는 비법은 케빈 뉴펠드(Kevin Neufeld)가 FOSS4G 2007 콘퍼"
#~ "런스에서 발표했던 \"PostGIS 파워유저를 위한 비법(Tips for the PostGIS "
#~ "Power User)\"에서 발췌한 것입니다. 사용자의 PostGIS 사용 방식에 따라 (예"
#~ "를 들어 정적 데이터 및 복잡 분석이냐 자주 업데이트되는 데이터 및 복수의 사"
#~ "용자냐 등) 이렇게 변경하면 사용자 쿼리의 속도를 상당히 향상시킬 수 있습니"
#~ "다."

#~ msgid ""
#~ "For a more tips (and better formatting), the original presentation is at "
#~ "<ulink url=\"http://2007.foss4g.org/presentations/view.php?"
#~ "abstract_id=117\"> http://2007.foss4g.org/presentations/view.php?"
#~ "abstract_id=117</ulink>."
#~ msgstr ""
#~ "더 많은 비법(및 보기 쉬운 서식)을 원한다면 <ulink url=\"http://2007."
#~ "foss4g.org/presentations/view.php?abstract_id=117\"> http://2007.foss4g."
#~ "org/presentations/view.php?abstract_id=117</ulink> 에 원래 발표 자료가 있"
#~ "습니다."

#~ msgid "checkpoint_segments"
#~ msgstr "checkpoint_segments"

#~ msgid ""
#~ "Maximum number of log file segments between automatic WAL checkpoints "
#~ "(each segment is normally 16MB); default is 3"
#~ msgstr ""
#~ "자동 WAL 체크포인트 사이의 로그 파일 조각의 최대 개수로, 기본값은 3입니다."

#~ msgid ""
#~ "Set to at least 10 or 30 for databases with heavy write activity, or more "
#~ "for large database loads. Another article on the topic worth reading "
#~ "<ulink url=\"http://www.westnet.com/~gsmith/content/postgresql/chkp-"
#~ "bgw-83.htm\">Greg Smith: Checkpoint and Background writer</ulink>"
#~ msgstr ""
#~ "작성 활동이 많은 데이터베이스의 경우 최소 10 또는 30으로 설정하고, 데이터"
#~ "베이스에 대용량 로드하는 경우 더 큰 숫자로 설정하십시오. 이 문제에 대해 읽"
#~ "어볼 만한 다른 글을 <ulink url=\"http://www.westnet.com/~gsmith/content/"
#~ "postgresql/chkp-bgw-83.htm\">Greg Smith: Checkpoint and Background "
#~ "writer</ulink> 에서 볼 수 있습니다."

#~ msgid "Possibly store the xlog on a separate disk device"
#~ msgstr "xlog를 개별 디스크 장치에 저장할 수도 있습니다."

#~ msgid ""
#~ "Default: off (prior to PostgreSQL 8.4 and for PostgreSQL 8.4+ is set to "
#~ "partition)"
#~ msgstr ""
#~ "기본값은 off입니다. (PostgreSQL 8.4 미만 버전의 경우고, 8.4 이상 버전의 경"
#~ "우 partition으로 설정되어 있습니다.)"
