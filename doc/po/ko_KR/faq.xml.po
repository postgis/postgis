# SOME DESCRIPTIVE TITLE.
# 
# Translators:
# BJ Jang <qgis.tr.kr@gmail.com>, 2013
# Kwang Woo Nam <kwangwoo@gmail.com>, 2013
# Kwon.Yongchan <ruvyn@naver.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: PostGIS\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2016-07-04 13:02+0000\n"
"PO-Revision-Date: 2016-07-24 01:50+0000\n"
"Last-Translator: Kwon.Yongchan <ruvyn@naver.com>\n"
"Language-Team: Korean (Korea) (http://www.transifex.com/postgis/postgis/language/ko_KR/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ko_KR\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#. Tag: title
#: faq.xml:3
#, no-c-format
msgid "PostGIS Frequently Asked Questions"
msgstr "PostGIS FAQ"

#. Tag: para
#: faq.xml:8
#, no-c-format
msgid ""
"Where can I find tutorials, guides and workshops on working with PostGIS"
msgstr "PostGIS 활용에 대한 예제, 지침서, 워크숍 등을 어디에서 찾아볼 수 있을까요?"

#. Tag: para
#: faq.xml:12
#, no-c-format
msgid ""
"OpenGeo has a step by step tutorial guide workshop <ulink "
"url=\"http://workshops.boundlessgeo.com/postgis-intro/\">Introduction to "
"PostGIS</ulink>. It includes packaged data as well as intro to working with "
"OpenGeo Suite. It is probably the best tutorial on PostGIS."
msgstr "OpenGeo가 단계별 예제 지침 워크숍 <ulink url=\"http://workshops.boundlessgeo.com/postgis-intro/\">PostGIS 개론</ulink> 을 제공하고 있습니다. 이 워크숍은 패키징된 데이터는 물론 OpenGeo 스위트(suite) 활용법에 대한 소개를 포함하고 있습니다. 아마도 PostGIS에 대한 최고의 예제일 겁니다."

#. Tag: para
#: faq.xml:13
#, no-c-format
msgid ""
"BostonGIS also has a <ulink "
"url=\"http://www.bostongis.com/PrinterFriendly.aspx?content_name=postgis_tut01\">PostGIS"
" almost idiot's guide on getting started</ulink>. That one is more focused "
"on the windows user."
msgstr "BostonGIS에서도 <ulink url=\"http://www.bostongis.com/PrinterFriendly.aspx?content_name=postgis_tut01\">PostGIS: 멍청이도 할 수 있는 지침서</ulink> 를 제공합니다. 이 지침서는 윈도우 사용자를 더 중시하고 있습니다."

#. Tag: para
#: faq.xml:18
#, no-c-format
msgid ""
"My applications and desktop tools worked with PostGIS 1.5,but they don't "
"work with PostGIS 2.0. How do I fix this?"
msgstr "PostGIS 1.5에서 돌아가던 응용 프로그램과 데스크톱 도구들이 PostGIS 2.0에서는 동작하지 않습니다. 어떻게 고칠 수 있을까요?"

#. Tag: para
#: faq.xml:22
#, no-c-format
msgid ""
"A lot of deprecated functions were removed from the PostGIS code base in "
"PostGIS 2.0. This has affected applications in addition to third-party tools"
" such as Geoserver, MapServer, QuantumGIS, and OpenJump to name a few. There"
" are a couple of ways to resolve this. For the third-party apps, you can try"
" to upgrade to the latest versions of these which have many of these issues "
"fixed. For your own code, you can change your code to not use the functions "
"removed. Most of these functions are non ST_ aliases of ST_Union, ST_Length "
"etc. and as a last resort, install the whole of "
"<varname>legacy.sql</varname> or just the portions of "
"<varname>legacy.sql</varname> you need."
msgstr "PostGIS 2.0 버전에서 더 이상 지원되지 않는 상당수의 함수들이 PostGIS 코드 기반에서 제거되었습니다. GeoServer, MapServer, QuantumGIS, 그리고 OpenJump 등과 같은 몇몇 제3자(third-party) 도구들뿐만 아니라, 응용 프로그램들도 이 영향을 받고 있습니다. 두어 가지 방법으로 이 문제를 해결할 수 있습니다. 제3자 응용 프로그램의 경우, 이 문제들의 상당수가 수정된 최신 버전으로 업그레이드해볼 수 있습니다. 사용자가 직접 개발한 코드인 경우, 제거된 함수들을 더 이상 사용하지 않도록 코드를 변경할 수 있습니다. 이 함수들의 대부분은 ST_Union, ST_Length 등 ST_* 명칭의 함수가 아닙니다. 마지막 수단으로, <varname>legacy.sql</varname>을 전체 설치하거나,  사용자가 필요한 만큼의 <varname>legacy.sql</varname>을 일부 설치하십시오."

#. Tag: para
#: faq.xml:28
#, no-c-format
msgid ""
"The <varname>legacy.sql</varname> file is located in the same folder as "
"postgis.sql. You can install this file after you have installed postgis.sql "
"and spatial_ref_sys.sql to get back all the 200 some-odd old functions we "
"removed."
msgstr "<varname>legacy.sql</varname> 파일은 postgis.sql과 같은 폴더에 있습니다. 제거했던 200여 개의 구 버전 함수를 다시 얻으려면 postgis.sql과 spatial_ref_sys.sql을 설치한 뒤 legacy.sql을 설치하면 됩니다."

#. Tag: para
#: faq.xml:35
#, no-c-format
msgid ""
"When I load OpenStreetMap data with osm2pgsql, I'm getting an error failed: "
"ERROR: operator class \"gist_geometry_ops\" does not exist for access method"
" \"gist\" Error occurred. This worked fine in PostGIS 1.5."
msgstr "osm2pgsql을 통해 OpenStreetMap 데이터를 로드할 때 다음과 같은 오류가 발생합니다. ERROR: operator class \"gist_geometry_ops\" does not exist for access method \"gist\". PostGIS 1.5에서는 잘 됐는데 말이죠."

#. Tag: para
#: faq.xml:40
#, no-c-format
msgid ""
"In PostGIS 2, the default geometry operator class gist_geometry_ops was "
"changed to gist_geometry_ops_2d and the gist_geometry_ops was completely "
"removed. This was done because PostGIS 2 also introduced Nd spatial indexes "
"for 3D support and the old name was deemed confusing and a misnomer."
msgstr "PostGIS 2 버전부터 기본 도형 연산자 클래스가 gist_geometry_ops에서 gist_geometry_ops_2d로 변경되었고, gist_geometry_ops는 완전히 삭제되었습니다. PostGIS 2 버전부터 3D를 지원하기 위해 N-D 공간 인덱스를 도입했는데, 구 명칭 gist_geometry_ops가 부정확하고 혼동된다고 여겨졌기 때문입니다."

#. Tag: para
#: faq.xml:41
#, no-c-format
msgid ""
"Some older applications that as part of the process create tables and "
"indexes, explicitly referenced the operator class name. This was unnecessary"
" if you want the default 2D index. So if you manage said good, change index "
"creation from:"
msgstr "테이블 및 인덱스를 생성하는 과정의 일부인 몇몇 구 버전 응용 프로그램은 연산자 클래스 명을 정확히 참조합니다. 기본 2D 인덱스를 사용하고자 하는 경우 이렇게 정확히 참조할 필요는 없습니다. 따라서 이런 경우라면 인덱스 생성 명령어를 다음과 같이 변경하십시오:"

#. Tag: para
#: faq.xml:42
#, no-c-format
msgid "BAD:"
msgstr "나쁜 예에서:"

#. Tag: programlisting
#: faq.xml:43
#, no-c-format
msgid ""
"CREATE INDEX idx_my_table_geom ON my_table USING gist(geom "
"gist_geometry_ops);"
msgstr "CREATE INDEX idx_my_table_geom ON my_table USING gist(geom gist_geometry_ops);"

#. Tag: para
#: faq.xml:44
#, no-c-format
msgid "To GOOD:"
msgstr "좋은 예로:"

#. Tag: programlisting
#: faq.xml:45
#, no-c-format
msgid "CREATE INDEX idx_my_table_geom ON my_table USING gist(geom);"
msgstr "CREATE INDEX idx_my_table_geom ON my_table USING gist(geom);"

#. Tag: para
#: faq.xml:47
#, no-c-format
msgid ""
"The only case where you WILL need to specify the operator class is if you "
"want a 3D spatial index as follows:"
msgstr "사용자가 연산자 클래스를 지정해야만 하는 유일한 경우는 다음과 같이 3D 공간 인덱스를 생성하고자 할 때뿐입니다:"

#. Tag: programlisting
#: faq.xml:48
#, no-c-format
msgid ""
"CREATE INDEX idx_my_super3d_geom ON my_super3d USING gist(geom "
"gist_geometry_ops_nd);"
msgstr "CREATE INDEX idx_my_super3d_geom ON my_super3d USING gist(geom gist_geometry_ops_nd);"

#. Tag: para
#: faq.xml:50
#, no-c-format
msgid ""
"If you are unfortunate to be stuck with compiled code you can't change that "
"has the old gist_geometry_ops hard-coded, then you can create the old class "
"using the <filename>legacy_gist.sql</filename> packaged in PostGIS 2.0.2+. "
"However if you use this fix, you are advised to at a later point drop the "
"index and recreate it without the operator class. This will save you grief "
"in the future when you need to upgrade again."
msgstr "안타깝게도 사용자가 변경할 수 없는, 구 버전 gist_geometry_ops가 하드 코딩되어 있는 컴파일된 코드를 써야만 할 경우, PostGIS 2.0.2 이상 버전에 패키징된 <filename>legacy_gist.sql</filename> 을 이용해서 구 버전 클래스를 생성할 수 있습니다. 하지만 이 해결 방법을 쓸 경우, 이후 어떤 시점에서 해당 인덱스를 삭제하고 연산자 클래스 없이 재생성하는 것이 좋습니다. 이렇게 하면 향후 다시 업그레이드를 해야 할 때 수고를 덜게 될 것입니다."

#. Tag: para
#: faq.xml:56
#, no-c-format
msgid ""
"I'm running PostgreSQL 9.0 and I can no longer read/view geometries in "
"OpenJump, Safe FME, and some other tools?"
msgstr "PostgreSQL 9.0을 실행중인데 OpenJump, Safe FME 및 몇몇 다른 도구들에서 도형을 더 이상 읽거나 볼 수 없습니다."

#. Tag: para
#: faq.xml:60
#, no-c-format
msgid ""
"In PostgreSQL 9.0+, the default encoding for bytea data has been changed to "
"hex and older JDBC drivers still assume escape format. This has affected "
"some applications such as Java applications using older JDBC drivers or .NET"
" applications that use the older npgsql driver that expect the old behavior "
"of ST_AsBinary. There are two approaches to getting this to work again."
msgstr "PostgreSQL 9.0 이상 버전부터 bytea 데이터 용 기본 인코딩이 헥스(hex)로 바뀌었는데, 예전 JDBC 드라이버는 여전히 이스케이프 형식(escape format)을 취합니다. 예전 JDBC 드라이버를 사용하는 Java 응용 프로그램이나, 구 버전 ST_AsBinary의 방식을 요구하는 예전 npgsql 드라이버를 사용하는 .NET 응용 프로그램과 같은 몇몇 응용 프로그램이 이 영향을 받습니다. 두 가지 접근 방법으로 이 오류를 바로잡을 수 있습니다."

#. Tag: para
#: faq.xml:64
#, no-c-format
msgid ""
"You can upgrade your JDBC driver to the latest PostgreSQL 9.0 version which "
"you can get from <ulink "
"url=\"http://jdbc.postgresql.org/download.html\">http://jdbc.postgresql.org/download.html</ulink>"
msgstr "JDBC 드라이버를 최신 PostgreSQL 9.0 버전으로 업그레이드할 수 있습니다. <ulink url=\"http://jdbc.postgresql.org/download.html\">http://jdbc.postgresql.org/download.html</ulink>에서 최신 PosgtreSQL버전을 다운로드할 수 있습니다."

#. Tag: para
#: faq.xml:66
#, no-c-format
msgid ""
"If you are running a .NET app, you can use Npgsql 2.0.11 or higher which you"
" can download from <ulink "
"url=\"http://pgfoundry.org/frs/?group_id=1000140\">http://pgfoundry.org/frs/?group_id=1000140</ulink>"
" and as described on <ulink "
"url=\"http://fxjr.blogspot.com/2010/11/npgsql-2011-released.html\">Francisco"
" Figueiredo's NpgSQL 2.0.11 released blog entry</ulink>"
msgstr ".NET 응용 프로그램을 실행중이라면 <ulink url=\"http://pgfoundry.org/frs/?group_id=1000140\">http://pgfoundry.org/frs/?group_id=1000140</ulink> 에서 다운로드할 수 있는 Npgsql 2.0.11 또는 이후 버전을 사용할 수 있습니다. Npgsql 2.0.11에 대한 정보는 <ulink url=\"http://fxjr.blogspot.com/2010/11/npgsql-2011-released.html\">Francisco Figueiredo's NpgSQL 2.0.11 released blog entry</ulink> 를 참조하십시오."

#. Tag: para
#: faq.xml:70
#, no-c-format
msgid ""
"If upgrading your PostgreSQL driver is not an option, then you can set the "
"default back to the old behavior with the following change:"
msgstr "PostgreSQL 드라이버를 업그레이드할 수 없는 경우, 다음과 같이 변경해서 기본값을 예전 방식으로 설정할 수 있습니다:"

#. Tag: programlisting
#: faq.xml:71
#, no-c-format
msgid "ALTER DATABASE mypostgisdb SET bytea_output='escape';"
msgstr "ALTER DATABASE mypostgisdb SET bytea_output='escape';"

#. Tag: para
#: faq.xml:78
#, no-c-format
msgid ""
"I tried to use PgAdmin to view my geometry column and it is blank, what "
"gives?"
msgstr "PgAdmin을 사용해서 도형 열을 보려고 했는데 비어있습니다. 이유가 뭐죠?"

#. Tag: para
#: faq.xml:82
#, no-c-format
msgid ""
"PgAdmin doesn't show anything for large geometries. The best ways to verify "
"you do have data in your geometry columns are?"
msgstr "대용량 도형의 경우 PgAdmin은 아무것도 보여주지 않습니다. 사용자의 도형 열에 데이터가 들어 있다는 사실을 검증하는 데 가장 좋은 방법은 다음과 같습니다."

#. Tag: programlisting
#: faq.xml:85
#, no-c-format
msgid ""
"-- this should return no records if all your geom fields are filled in\n"
"SELECT somefield FROM mytable WHERE geom IS NULL;"
msgstr "-- 이 스크립트는 사용자의 모든 geom 항목이 차 있다면 어떤 레코드도 반환하지 않습니다.\nSELECT somefield FROM mytable WHERE geom IS NULL;"

#. Tag: programlisting
#: faq.xml:87
#, no-c-format
msgid ""
"-- To tell just how large your geometry is do a query of the form\n"
"--which will tell you the most number of points you have in any of your geometry columns\n"
"SELECT MAX(ST_NPoints(geom)) FROM sometable;"
msgstr "-- 사용자 도형이 얼마나 큰지 알고 싶다면 다음과 같이 쿼리하십시오\n-- 사용자의 geom 열에서 가장 많은 포인트 개수를 반환할 것입니다\nSELECT MAX(ST_NPoints(geom)) FROM sometable;"

#. Tag: para
#: faq.xml:93
#, no-c-format
msgid "What kind of geometric objects can I store?"
msgstr "어떤 종류의 도형 객체를 저장할 수 있습니까?"

#. Tag: para
#: faq.xml:97
#, no-c-format
msgid ""
"You can store Point, LineString, Polygon, MultiPoint, MultiLineString, "
"MultiPolygon, and GeometryCollection geometries. In PostGIS 2.0 and above "
"you can also store TINS and Polyhedral Surfaces in the basic geometry type. "
"These are specified in the Open GIS Well Known Text Format (with Z, M, and "
"ZM extensions). There are three data types currently supported. The standard"
" OGC geometry data type which uses a planar coordinate system for "
"measurement, the geography data type which uses a geodetic coordinate "
"system, with calculations on either a sphere or spheroid. The newest family "
"member of the PostGIS spatial type family is raster for storing and "
"analyzing raster data. Raster has its very own FAQ. Refer to <xref "
"linkend=\"RT_FAQ\"/> and <xref linkend=\"RT_reference\"/> for more details."
msgstr "포인트, 라인스트링, 폴리곤, 멀티포인트, 멀티라인스트링, 멀티폴리곤, 그리고 지오메트리컬렉션(GeometryCollection) 도형을 저장할 수 있습니다. PostGIS 2.0 이상 버전이라면 TINS 및 다면체 표면(Polyhedral Surface)도 기본 도형 유형으로 저장할 수 있습니다. Z, M, ZM 확장자를 가지는 오픈GIS WKT 형식(Open GIS Well Known Text Format)이 이런 도형들을 지정하고 있습니다. 현재 다음 세 가지 데이터 유형을 지원합니다. 그 세 가지 유형은 측정시 평면좌표계를 이용하는 표준 OGC 도형 데이터 유형, 구체 또는 편구체 상에서 계산하는 측지좌표계를 이용하는 지리 데이터 유형, 그리고 PostGIS 공간 유형 계보에 새롭게 추가된 래스터 데이터 분석 및 저장을 위한 래스터입니다. 래스터 전용 FAQ도 있습니다. 더 자세한 설명은 <xref linkend=\"RT_FAQ\"/> 과 <xref linkend=\"RT_reference\"/> 를 참조하십시오."

#. Tag: para
#: faq.xml:110
#, no-c-format
msgid "I'm all confused. Which data store should I use geometry or geography?"
msgstr "혼란스럽군요. 도형 저장소와 지리형 저장소 가운데 어떤 데이터 저장소를 이용해야 합니까?"

#. Tag: para
#: faq.xml:114
#, no-c-format
msgid ""
"Short Answer: geography is a newer data type that supports long range "
"distances measurements, but most computations on it are slower than they are"
" on geometry. If you use geography, you don't need to learn much about "
"planar coordinate systems. Geography is generally best if all you care about"
" is measuring distances and lengths and you have data from all over the "
"world. Geometry data type is an older data type that has many more functions"
" supporting it, enjoys greater support from third party tools, and "
"operations on it are generally faster -- sometimes as much as 10 fold faster"
" for larger geometries. Geometry is best if you are pretty comfortable with "
"spatial reference systems or you are dealing with localized data where all "
"your data fits in a single <link linkend=\"spatial_ref_sys\">spatial "
"reference system (SRID)</link>, or you need to do a lot of spatial "
"processing. Note: It is fairly easy to do one-off conversions between the "
"two types to gain the benefits of each. Refer to <xref "
"linkend=\"PostGIS_TypeFunctionMatrix\"/> to see what is currently supported "
"and what is not."
msgstr "짧은 답변: 지리형(geography)은 장거리(long range distance) 범위 측정을 지원하는 새로운 데이터 유형이지만, 이 유형을 대상으로 하는 계산 대부분은 도형의 경우보다 느립니다. 지리형을 이용할 경우, 평면좌표계를 자세히 알 필요는 없습니다. 사용자가 전세계에 걸친 데이터를 가지고 있고 거리 및 길이를 측정하는 데에만 관심이 있을 경우 일반적으로 지리형이 최선입니다. 도형 데이터 유형은 훨씬 많은 함수가 지원하고, 제3자 도구의 광범위한 지원을 받으며, 도형을 대상으로 하는 연산이 더 빠릅니다 -- 대용량 도형의 경우 때로는 10배 빠르기도 합니다. 사용자가 공간 참조 시스템(Spatial Reference System)에 꽤 익숙하거나, 사용자 데이터 전부가 단일 <link linkend=\"spatial_ref_sys\">공간 참조 시스템(SRID)</link> 의 적용을 받는 국지적인 데이터를 처리하는 경우, 또는 상당한 양의 공간 처리 작업을 해야할 경우 도형이 최선입니다. 주의: 각 유형의 장점을 취하기 위해 1단계 작업(one-off)만으로 꽤 쉽게 두 유형을 변환시킬 수 있습니다. 현재 어떤 지원을 받는지 그리고 받지 못 하는지 알고 싶다면 <xref linkend=\"PostGIS_TypeFunctionMatrix\"/> 를 참조하십시오."

#. Tag: para
#: faq.xml:125
#, no-c-format
msgid ""
"Long Answer: Refer to our more lengthy discussion in the <xref "
"linkend=\"PostGIS_GeographyVSGeometry\"/> and <link "
"linkend=\"PostGIS_TypeFunctionMatrix\">function type matrix</link>."
msgstr "긴 답변: <xref linkend=\"PostGIS_GeographyVSGeometry\"/> 과 <link linkend=\"PostGIS_TypeFunctionMatrix\">함수 유형 매트릭스</link>에 있는 더 긴 논의를 참조하십시오."

#. Tag: para
#: faq.xml:133
#, no-c-format
msgid ""
"I have more intense questions about geography, such as how big of a "
"geographic region can I stuff in a geography column and still get reasonable"
" answers. Are there limitations such as poles, everything in the field must "
"fit in a hemisphere (like SQL Server 2008 has), speed etc?"
msgstr "지리형에 대해 더 자세히 질문하고 싶습니다. 지리형 열에 얼마나 큰 지리적 지역을 저장하고도 괜찮은 답을 얻을 수 있습니까? 모든 항목이 (SQLServer 2008처럼) 북반구, 남반구 둘 중 하나의 반구에만 있어야 하는 극(pole) 제약이나 속도 제약 등 제약이 있나요?"

#. Tag: para
#: faq.xml:137
#, no-c-format
msgid ""
"Your questions are too deep and complex to be adequately answered in this "
"section. Please refer to our <xref "
"linkend=\"PostGIS_Geography_AdvancedFAQ\"/>."
msgstr "이 단원에서 제대로 답변하기에는 질문이 너무 깊고 복잡합니다.  <xref linkend=\"PostGIS_Geography_AdvancedFAQ\"/> 를 참조하십시오."

#. Tag: para
#: faq.xml:144
#, no-c-format
msgid "How do I insert a GIS object into the database?"
msgstr "GIS 객체를 어떻게 데이터베이스에 삽입하나요?"

#. Tag: para
#: faq.xml:148
#, no-c-format
msgid ""
"First, you need to create a table with a column of type \"geometry\" or "
"\"geography\" to hold your GIS data. Storing geography type data is a little"
" different than storing geometry. Refer to <xref "
"linkend=\"Geography_Basics\"/> for details on storing geography."
msgstr "먼저 사용자 GIS 데이터를 보관하기 위한 “도형” 또는 “지리형”의 열을 가진 테이블을 생성해야 합니다. 지리형 유형 데이터를 저장하는 일은 도형을 저장하는 일과는 조금 다릅니다. 지리형 저장에 대한 자세한 설명은 <xref linkend=\"Geography_Basics\"/> 을 참조하십시오."

#. Tag: para
#: faq.xml:152
#, no-c-format
msgid ""
"For geometry: Connect to your database with <filename>psql</filename> and "
"try the following SQL:"
msgstr "도형을 저장하는 경우: <filename>PSQL</filename> 을 통해 데이터베이스에 연결한 다음 SQL을 실행해보십시오:"

#. Tag: programlisting
#: faq.xml:156
#, no-c-format
msgid ""
"CREATE TABLE gtest ( gid serial primary key, name varchar(20)\n"
"        , geom geometry(LINESTRING) );"
msgstr "CREATE TABLE gtest ( gid serial primary key, name varchar(20)\n        , geom geometry(LINESTRING) );"

#. Tag: para
#: faq.xml:158
#, no-c-format
msgid ""
"If the geometry column definition fails, you probably have not loaded the "
"PostGIS functions and objects into this database or are using a pre-2.0 "
"version of PostGIS. See the <xref linkend=\"PGInstall\"/>."
msgstr "도형 열 정의가 실패하는 경우, 아마도 PostGIS 함수와 객체를 해당 데이터베이스에 로드하지 않았거나 PostGIS 2.0 미만 버전을 사용하고 있을 겁니다. <xref linkend=\"PGInstall\"/> 를 참조하십시오."

#. Tag: para
#: faq.xml:162
#, no-c-format
msgid ""
"Then, you can insert a geometry into the table using a SQL insert statement."
" The GIS object itself is formatted using the OpenGIS Consortium \"well-"
"known text\" format:"
msgstr "그 다음, SQL 삽입(insert) 구문을 통해 도형을 테이블에 삽입할 수 있습니다. GIS 객체 자체는 OpenGIS 컨소시엄의 WKT(well-known text) 형식을 사용합니다:"

#. Tag: programlisting
#: faq.xml:166
#, no-c-format
msgid ""
"INSERT INTO gtest (ID, NAME, GEOM)\n"
"VALUES (\n"
"  1,\n"
"  'First Geometry',\n"
"  ST_GeomFromText('LINESTRING(2 3,4 5,6 5,7 8)')\n"
");"
msgstr "INSERT INTO gtest (ID, NAME, GEOM)\nVALUES (\n  1,\n  'First Geometry',\n  ST_GeomFromText('LINESTRING(2 3,4 5,6 5,7 8)')\n);"

#. Tag: para
#: faq.xml:168
#, no-c-format
msgid ""
"For more information about other GIS objects, see the <link "
"linkend=\"RefObject\">object reference</link>."
msgstr "다른 GIS 객체에 대해 더 알아보려면 <link linkend=\"RefObject\">객체 참조</link> 를 살펴보십시오."

#. Tag: para
#: faq.xml:171
#, no-c-format
msgid "To view your GIS data in the table:"
msgstr "테이블의 GIS 데이터를 보려면:"

#. Tag: programlisting
#: faq.xml:173
#, no-c-format
msgid "SELECT id, name, ST_AsText(geom) AS geom FROM gtest;"
msgstr "SELECT id, name, ST_AsText(geom) AS geom FROM gtest;"

#. Tag: para
#: faq.xml:175
#, no-c-format
msgid "The return value should look something like this:"
msgstr "반환값이 아래와 비슷하게 나타날 겁니다:"

#. Tag: programlisting
#: faq.xml:177
#, no-c-format
msgid ""
"id | name           | geom\n"
"----+----------------+-----------------------------\n"
"  1 | First Geometry | LINESTRING(2 3,4 5,6 5,7 8)\n"
"(1 row)"
msgstr "id | name           | geom\n----+----------------+-----------------------------\n  1 | First Geometry | LINESTRING(2 3,4 5,6 5,7 8)\n(1 row)"

#. Tag: para
#: faq.xml:183
#, no-c-format
msgid "How do I construct a spatial query?"
msgstr "공간 쿼리를 어떻게 구성하나요?"

#. Tag: para
#: faq.xml:187
#, no-c-format
msgid ""
"The same way you construct any other database query, as an SQL combination "
"of return values, functions, and boolean tests."
msgstr "모든 다른 데이터베이스 쿼리를 구성하는 방식과 동일합니다. SQL은 반환값, 함수, 불 검사의 조합입니다."

#. Tag: para
#: faq.xml:190
#, no-c-format
msgid ""
"For spatial queries, there are two issues that are important to keep in mind"
" while constructing your query: is there a spatial index you can make use "
"of; and, are you doing expensive calculations on a large number of "
"geometries."
msgstr "공간 쿼리의 경우, 사용자가 쿼리를 구성할 때 염두에 두어야 할 두 가지 중요한 문제가 있습니다. 활용할 수 있는 공간 인덱스가 있는가? 그리고 대량의 도형에 대해 비용이 많이 드는 계산을 하고 있지는 않은가?"

#. Tag: para
#: faq.xml:195
#, no-c-format
msgid ""
"In general, you will want to use the \"intersects operator\" (&amp;&amp;) "
"which tests whether the bounding boxes of features intersect. The reason the"
" &amp;&amp; operator is useful is because if a spatial index is available to"
" speed up the test, the &amp;&amp; operator will make use of this. This can "
"make queries much much faster."
msgstr "일반적으로, 피처들의 경계 상자(bounding box)가 교차하는지 검사하는 \"교차 연산자(&&)\"를 사용하고 싶을 것입니다. && 연산자가 쓸모 있는 이유는 검사 속도를 빠르게 하는 데 공간 인덱스를 쓸 수 있다면 && 연산자는 이를 활용할 것이기 때문입니다. 이럴 경우 쿼리 속도가 무척이나 빨라질 수 있습니다. "

#. Tag: para
#: faq.xml:202
#, no-c-format
msgid ""
"You will also make use of spatial functions, such as Distance(), "
"ST_Intersects(), ST_Contains() and ST_Within(), among others, to narrow down"
" the results of your search. Most spatial queries include both an indexed "
"test and a spatial function test. The index test serves to limit the number "
"of return tuples to only tuples that <emphasis>might</emphasis> meet the "
"condition of interest. The spatial functions are then use to test the "
"condition exactly."
msgstr "또한 검색 결과를 좁히기 위해 Distance(), ST_Intersects(), ST_Contains(), ST_Within() 등과 같은 공간 함수를 활용할 것입니다. 공간 쿼리 대부분은 인덱스가 붙은 검사와 공간 함수 검사 둘 모두를 포함합니다. 인덱스 검사는 관심 조건에 부합<emphasis>할 만한</emphasis> 투플만 반환되도록 반환 투플의 개수를 제한합니다. 그 다음 공간 함수를 이용해서 조건을 정확히 만족하는 검사를 실행합니다."

#. Tag: programlisting
#: faq.xml:210
#, no-c-format
msgid ""
"SELECT id, the_geom\n"
"FROM thetable\n"
"WHERE\n"
"  ST_Contains(the_geom,'POLYGON((0 0, 0 10, 10 10, 10 0, 0 0))');"
msgstr "SELECT id, the_geom\nFROM thetable\nWHERE\n  ST_Contains(the_geom,'POLYGON((0 0, 0 10, 10 10, 10 0, 0 0))');"

#. Tag: para
#: faq.xml:216
#, no-c-format
msgid "How do I speed up spatial queries on large tables?"
msgstr "대용량 테이블에서 공간 쿼리 속도를 어떻게 높일 수 있나요?"

#. Tag: para
#: faq.xml:220
#, no-c-format
msgid ""
"Fast queries on large tables is the <emphasis>raison d'etre</emphasis> of "
"spatial databases (along with transaction support) so having a good index is"
" important."
msgstr "대용량 테이블에 대한 빠른 쿼리란 (트랜잭션 지원과 함께) 공간 데이터베이스가 <emphasis>존재하는 이유</emphasis> 입니다. 따라서 적절한 인덱스가 중요합니다."

#. Tag: para
#: faq.xml:224
#, no-c-format
msgid ""
"To build a spatial index on a table with a <varname>geometry</varname> "
"column, use the \"CREATE INDEX\" function as follows:"
msgstr "<varname>geometry</varname> 열을 가진 테이블에 공간 인덱스를 단들려면 다음과 같이 \"CREATE INDEX\" 함수를 사용하십시오:"

#. Tag: programlisting
#: faq.xml:228
#, no-c-format
msgid ""
"CREATE INDEX [indexname] ON [tablename] USING GIST ( [geometrycolumn] );"
msgstr "CREATE INDEX [indexname] ON [tablename] USING GIST ( [geometrycolumn] );"

#. Tag: para
#: faq.xml:230
#, no-c-format
msgid ""
"The \"USING GIST\" option tells the server to use a GiST (Generalized Search"
" Tree) index."
msgstr "\"USING GIST\" 옵션은 서버에게 GiST(Generalized Search Tree) 인덱스를 사용하라고 알려줍니다."

#. Tag: para
#: faq.xml:234
#, no-c-format
msgid ""
"GiST indexes are assumed to be lossy. Lossy indexes uses a proxy object (in "
"the spatial case, a bounding box) for building the index."
msgstr "GiST 인덱스는 손실을 본다고 가정해야 합니다. 손실 인덱스는 인덱스를 만들기 위해 프록시 객체(공간 데이터의 경우 경계 상자)를 이용합니다."

#. Tag: para
#: faq.xml:239
#, no-c-format
msgid ""
"You should also ensure that the PostgreSQL query planner has enough "
"information about your index to make rational decisions about when to use "
"it. To do this, you have to \"gather statistics\" on your geometry tables."
msgstr "또 사용자는 PostgreSQL 쿼리 계획자가 사용자 인덱스를 언제 이용할지에 대해 합리적인 판단을 내릴 수 있도록 인덱스에 대한 충분한 정보를 얻을 수 있도록 해야 합니다. 이를 위해 사용자 도형 테이블에 대한 \"통계를 수집\"해야 합니다."

#. Tag: para
#: faq.xml:244
#, no-c-format
msgid ""
"For PostgreSQL 8.0.x and greater, just run the <command>VACUUM "
"ANALYZE</command> command."
msgstr "PostgreSQL 8.0.x 이상 버전의 경우, <command>VACUUM ANALYZE</command> 명령어만 실행하면 됩니다."

#. Tag: para
#: faq.xml:247
#, no-c-format
msgid ""
"For PostgreSQL 7.4.x and below, run the <command>SELECT "
"UPDATE_GEOMETRY_STATS()</command> command."
msgstr "PostgreSQL 7.4.x 이하 버전의 경우, <command>SELECT UPDATE_GEOMETRY_STATS()</command> 명령어를 실행하십시오."

#. Tag: para
#: faq.xml:254
#, no-c-format
msgid "Why aren't PostgreSQL R-Tree indexes supported?"
msgstr "어째서 PostgreSQL R-Tree 인덱스를 지원하지 않나요?"

#. Tag: para
#: faq.xml:258
#, no-c-format
msgid ""
"Early versions of PostGIS used the PostgreSQL R-Tree indexes. However, "
"PostgreSQL R-Trees have been completely discarded since version 0.6, and "
"spatial indexing is provided with an R-Tree-over-GiST scheme."
msgstr "PostGIS 초기 버전들은 PostgreSQL R-Tree 인덱스를 사용했습니다. 하지만 PostgreSQL R-Tree는 0.6 버전 이후 완전히 폐기되었고, 공간 인덱스 작업은 R-Tree-over-GiST 스키마를 통해 제공됩니다."

#. Tag: para
#: faq.xml:263
#, no-c-format
msgid ""
"Our tests have shown search speed for native R-Tree and GiST to be "
"comparable. Native PostgreSQL R-Trees have two limitations which make them "
"undesirable for use with GIS features (note that these limitations are due "
"to the current PostgreSQL native R-Tree implementation, not the R-Tree "
"concept in general):"
msgstr "테스트 결과 자생(native) R-Tree와 GiST의 검색 속도가 비슷하다는 것이 밝혀졌습니다. 자생 PostgreSQL R-Tree는 GIS 피처와 함께 사용하기에 적합하지 않은 두 가지 한계점이 있습니다(이런 한계점은 일반적인 R-Tree 개념이 아니라 현재의 자생 PostgreSQL R-Tree 실행 때문이라는 점을 주의하십시오):"

#. Tag: para
#: faq.xml:271
#, no-c-format
msgid ""
"R-Tree indexes in PostgreSQL cannot handle features which are larger than 8K"
" in size. GiST indexes can, using the \"lossy\" trick of substituting the "
"bounding box for the feature itself."
msgstr "PostgreSQL 내부의 R-Tree 인덱스는 8K 이상의 크기를 가지는 피처를 다루지 못 합니다. GiST 인덱스는 피처 자체 대신 경계 상자를 쓰는 \"손실\" 트릭을 통해 할 수 있습니다."

#. Tag: para
#: faq.xml:278
#, no-c-format
msgid ""
"R-Tree indexes in PostgreSQL are not \"null safe\", so building an index on "
"a geometry column which contains null geometries will fail."
msgstr "PostgreSQL 내부의 R-Tree 인덱스는 \"null값을 처리할 수(null safe)\" 없습니다. 따라서 null 도형을 담고 있는 도형 열에 대한 인덱스 생성 작업은 실패할 것입니다."

#. Tag: para
#: faq.xml:288
#, no-c-format
msgid ""
"Why should I use the <varname>AddGeometryColumn()</varname> function and all"
" the other OpenGIS stuff?"
msgstr "<varname>AddGeometryColumn()</varname> 함수 및 다른 모든 OpenGIS 기능들을 사용해야 하는 이유가 뭡니까?"

#. Tag: para
#: faq.xml:293
#, no-c-format
msgid ""
"If you do not want to use the OpenGIS support functions, you do not have to."
" Simply create tables as in older versions, defining your geometry columns "
"in the CREATE statement. All your geometries will have SRIDs of -1, and the "
"OpenGIS meta-data tables will <emphasis>not</emphasis> be filled in "
"properly. However, this will cause most applications based on PostGIS to "
"fail, and it is generally suggested that you do use "
"<varname>AddGeometryColumn()</varname> to create geometry tables."
msgstr "만약 OpenGIS 지원 함수들을 사용하고 싶지 않다면 꼭 사용할 필요는 없습니다. 그냥 구 버전에서처럼 테이블을 생성하고 CREATE 구문으로 도형 열을 정의하십시오. 모든 도형의 SRID 값이 -1이 될 것이며, OpenGIS 메타데이터 테이블은 제대로 채워지지 <emphasis>않을</emphasis> 것입니다. 하지만 이렇게 하면 PostGIS 기반 응용 프로그램 대부분이 오류를 낼 것입니다. 일반적으로 도형 테이블을 생성하려면 <varname>AddGeometryColumn()</varname> 을 이용하는 편이 좋습니다."

#. Tag: para
#: faq.xml:302
#, no-c-format
msgid ""
"MapServer is one application which makes use of the "
"<varname>geometry_columns</varname> meta-data. Specifically, MapServer can "
"use the SRID of the geometry column to do on-the-fly reprojection of "
"features into the correct map projection."
msgstr "MapServer는 <varname>geometry_columns</varname> 메타데이터를 활용하는 유일한 응용 프로그램입니다. 정확히 말하자면 MapServer는 올바른 맵 좌표계로 피처를 실시간 재투영(on-the-fly reprojection)하기 위해 도형 열의 SRID를 이용할 수 있습니다."

#. Tag: para
#: faq.xml:311
#, no-c-format
msgid ""
"What is the best way to find all objects within a radius of another object?"
msgstr "한 객체의 반경 안에 있는 모든 객체를 찾는 데 가장 좋은 방법은 무엇인가요?"

#. Tag: para
#: faq.xml:316
#, no-c-format
msgid ""
"To use the database most efficiently, it is best to do radius queries which "
"combine the radius test with a bounding box test: the bounding box test uses"
" the spatial index, giving fast access to a subset of data which the radius "
"test is then applied to."
msgstr "데이터베이스를 가장 효율적으로 사용하려면, 경계 상자 검사와 반경 검사를 결합한 반경 쿼리를 실행하는 것이 최선입니다. 경계 상자 검사는 공간 인덱스를 사용하며, 이후 반경 검사를 적용할 데이터의 서브셋에 빠르게 접근할 수 있도록 해줍니다."

#. Tag: para
#: faq.xml:321
#, no-c-format
msgid ""
"The <varname>ST_DWithin(geometry, geometry, distance)</varname> function is "
"a handy way of performing an indexed distance search. It works by creating a"
" search rectangle large enough to enclose the distance radius, then "
"performing an exact distance search on the indexed subset of results."
msgstr "<varname>ST_DWithin(geometry, geometry, distance)</varname> 함수는 인덱스가 붙은 거리 검색을 수행하는 유용한 방법입니다. 이 함수는 거리 반경을 둘러싸기에 충분한 크기의 검색 직사각형을 생성함으로써 작동합니다. 그 다음 결과값의 인덱스가 붙은 서브셋에 대해 정확한 거리 검색을 수행합니다."

#. Tag: para
#: faq.xml:327
#, no-c-format
msgid ""
"For example, to find all objects with 100 meters of POINT(1000 1000) the "
"following query would work well:"
msgstr "예를 들어, POINT(1000 1000)의 100미터 안에 있는 모든 객체를 찾으려면 다음과 같은 쿼리를 실행하면 됩니다:"

#. Tag: programlisting
#: faq.xml:330
#, no-c-format
msgid ""
"SELECT * FROM geotable\n"
"WHERE ST_DWithin(geocolumn, 'POINT(1000 1000)', 100.0);"
msgstr "SELECT * FROM geotable\nWHERE ST_DWithin(geocolumn, 'POINT(1000 1000)', 100.0);"

#. Tag: para
#: faq.xml:336
#, no-c-format
msgid "How do I perform a coordinate reprojection as part of a query?"
msgstr "어떻게 쿼리의 일부로서 좌표 재투영을 실행하나요?"

#. Tag: para
#: faq.xml:341
#, no-c-format
msgid ""
"To perform a reprojection, both the source and destination coordinate "
"systems must be defined in the SPATIAL_REF_SYS table, and the geometries "
"being reprojected must already have an SRID set on them. Once that is done, "
"a reprojection is as simple as referring to the desired destination SRID. "
"The below projects a geometry to NAD 83 long lat. The below will only work "
"if the srid of the_geom is not -1 (not undefined spatial ref)"
msgstr "재투영을 실행하려면, SPATIAL_REF_SYS 테이블에 원본 및 대상 좌표계가 정의되어 있어야 하며, 재투영되는 도형에 이미 SRID가 설정되어 있어야 합니다. 이를 만족하는 경우, 재투영 작업은 원하는 대상 SRID를 참조하면 끝나는 간단한 일입니다. 다음은 도형을 NAD 83 경위도로 투영하는 예시입니다. the_geom의 SRID가 -1이 아닐 경우에만 (정의되지 않은 공간 참조일 경우에만) 이 스크립트가 작동할 것입니다."

#. Tag: programlisting
#: faq.xml:348
#, no-c-format
msgid "SELECT ST_Transform(the_geom,4269) FROM geotable;"
msgstr "SELECT ST_Transform(the_geom,4269) FROM geotable;"

#. Tag: para
#: faq.xml:354
#, no-c-format
msgid ""
"I did an ST_AsEWKT and ST_AsText on my rather large geometry and it returned"
" blank field. What gives?"
msgstr "제법 큰 용량의 도형에 ST_AsEWKT와 ST_AsText를 실행했더니 비어 있는 필드를 반환했습니다. 이유가 뭘까요?"

#. Tag: para
#: faq.xml:358
#, no-c-format
msgid ""
"You are probably using PgAdmin or some other tool that doesn't output large "
"text. If your geometry is big enough, it will appear blank in these tools. "
"Use PSQL if you really need to see it or output it in WKT."
msgstr "아마도 대용량 텍스트를 출력하지 못 하는 pgAdmin이나 다른 도구를 쓰고 있기 때문일 것입니다. 만약 사용자 도형이 충분히 크다면, 이런 도구에서는 공백으로 표출될 것입니다. 텍스트를 반드시 확인해야 한다면 PSQL을 사용하거나 WKT로 출력하십시오."

#. Tag: programlisting
#: faq.xml:361
#, no-c-format
msgid ""
"--To check number of geometries are really blank\n"
"                                SELECT count(gid) FROM geotable WHERE the_geom IS NULL;"
msgstr "-- 도형의 개수가 정말로 공백인지 확인하려면\nSELECT count(gid) FROM geotable WHERE the_geom IS NULL;"

#. Tag: para
#: faq.xml:367
#, no-c-format
msgid ""
"When I do an ST_Intersects, it says my two geometries don't intersect when I"
" KNOW THEY DO. What gives?"
msgstr "ST_Intersects를 실행했는데 두 도형이 교차하지 않는다는 메시지를 받았습니다. 교차한다는 걸 내가 아는데 말이죠. 이유가 뭘까요?"

#. Tag: para
#: faq.xml:371
#, no-c-format
msgid ""
"This generally happens in two common cases. Your geometry is invalid -- "
"check <xref linkend=\"ST_IsValid\"/> or you are assuming they intersect "
"because ST_AsText truncates the numbers and you have lots of decimals after "
"it is not showing you."
msgstr "일반적으로 두 가지 흔한 경우에 이런 일이 발생합니다. 사용자 도형이 유효하지 않거나 -- <xref linkend=\"ST_IsValid\"/> 확인 -- 또는 ST_AsText가 숫자를 잘라내서 사용자가 보지 못 하는 자리수가 많기 때문에 두 도형이 교차한다고 착각하는 경우입니다."

#. Tag: para
#: faq.xml:379
#, no-c-format
msgid ""
"I am releasing software that uses PostGIS, does that mean my software has to"
" be licensed using the GPL like PostGIS? Will I have to publish all my code "
"if I use PostGIS?"
msgstr "PostIGIS를 이용하는 소프트웨어를 출시했는데, 그러면 이 소프트웨어도 PostGIS처럼 GPL을 따르는 라이선스를 가져야 합니까? 만약 PostGIS를 이용한다면 모든 개인 코드를 공개해야 하나요?"

#. Tag: para
#: faq.xml:383
#, no-c-format
msgid ""
"Almost certainly not. As an example, consider Oracle database running on "
"Linux. Linux is GPL, Oracle is not, does Oracle running on Linux have to be "
"distributed using the GPL? No. So your software can use a PostgreSQL/PostGIS"
" database as much as it wants and be under any license you like."
msgstr "그렇지 않습니다. 예를 들어, 리눅스 상에서 실행되는 오라클 데이터베이스를 생각해보십시오. 리눅스는 GPL을 따르지만 오라클은 그렇지 않습니다. 리눅스에서 실행되는 오라클이 반드시 GPL을 따라 배포되어야 할까요? 아닙니다. 따라서 사용자의 소프트웨어는 어떤 라이선스를 따르더라도 PostgreSQL/PostGIS 데이터베이스를 사용할 수 있습니다."

#. Tag: para
#: faq.xml:384
#, no-c-format
msgid ""
"The only exception would be if you made changes to the PostGIS source code, "
"and distributed your changed version of PostGIS. In that case you would have"
" to share the code of your changed PostGIS (but not the code of applications"
" running on top of it). Even in this limited case, you would still only have"
" to distribute source code to people you distributed binaries to. The GPL "
"does not require that you <emphasis>publish</emphasis> your source code, "
"only that you share it with people you give binaries to."
msgstr "유일한 예외는 사용자가 PostGIS 소스코드를 변경하고, 변경된 PostGIS 버전을 배포할 때일 겁니다. 이런 경우라면 사용자가 변경한 PostGIS의 코드를 공유해야 할 것입니다(그러나 PostGIS 상에서 실행되는 응용 프로그램의 코드는 아닙니다). 이렇게 제한된 경우라고 할지라도, 사용자가 바이너리를 배포하는 사람들에게만 소스코드를 배포하면 될 겁니다. GPL은 사용자에게 소스코드를 <emphasis>발표(publish)</emphasis> 하라고 요구하지 않습니다. 사용자가 바이너리를 제공한 사람들과만 코드를 공유하도록 요구할 뿐입니다."
