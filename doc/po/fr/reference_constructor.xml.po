# SOME DESCRIPTIVE TITLE.
#
# Translators:
# Nicolas Ribot <nicolas.ribot@gmail.com>, 2013
# Thomas Gratier <thomas_gratier@yahoo.fr>, 2017
# Vincent Picavet <vincent.ml@oslandia.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: PostGIS\n"
"Report-Msgid-Bugs-To: https://bugs.kde.org\n"
"POT-Creation-Date: 2022-01-31 00:29+0000\n"
"PO-Revision-Date: 2018-07-22 02:56+0000\n"
"Last-Translator: georgersilva <georger.silva@gmail.com>\n"
"Language-Team: French (http://www.transifex.com/postgis/postgis/language/"
"fr/)\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#. Tag: title
#: reference_constructor.xml:3
#, no-c-format
msgid "Geometry Constructors"
msgstr "Constructeurs de géométries"

#. Tag: refname
#: reference_constructor.xml:7
#, fuzzy, no-c-format
msgid "ST_Collect"
msgstr "ST_GeomCollFromText"

#. Tag: refpurpose
#: reference_constructor.xml:8
#, no-c-format
msgid ""
"Creates a GeometryCollection or Multi* geometry from a set of geometries."
msgstr ""

#. Tag: funcsynopsis
#: reference_constructor.xml:12
#, fuzzy, no-c-format
msgid ""
"<funcprototype> <funcdef>geometry <function>ST_Collect</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>geometry</type> <parameter>g2</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>geometry <function>ST_Collect</"
"function></funcdef> <paramdef><type>geometry[]</type> <parameter>g1_array</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
"<function>ST_Collect</function></funcdef> <paramdef><type>geometry set</"
"type> <parameter>g1field</parameter></paramdef> </funcprototype>"
msgstr ""
"<funcprototype> <funcdef>geometry <function>ST_MakeLine</function></funcdef> "
"<paramdef><type>geometry set</type> <parameter>geoms</parameter></paramdef> "
"</funcprototype> <funcprototype> <funcdef>geometry <function>ST_MakeLine</"
"function></funcdef> <paramdef><type>geometry</type> <parameter>geom1</"
"parameter></paramdef> <paramdef><type>geometry</type> <parameter>geom2</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
"<function>ST_MakeLine</function></funcdef> <paramdef><type>geometry[]</type> "
"<parameter>geoms_array</parameter></paramdef> </funcprototype>"

#. Tag: title
#: reference_constructor.xml:30 reference_constructor.xml:109
#: reference_constructor.xml:154 reference_constructor.xml:203
#: reference_constructor.xml:313 reference_constructor.xml:359
#: reference_constructor.xml:413 reference_constructor.xml:506
#: reference_constructor.xml:566 reference_constructor.xml:602
#: reference_constructor.xml:640 reference_constructor.xml:674
#: reference_constructor.xml:733 reference_constructor.xml:772
#: reference_constructor.xml:844 reference_constructor.xml:881
#: reference_constructor.xml:946 reference_constructor.xml:986
#, no-c-format
msgid "Description"
msgstr "Description"

#. Tag: para
#: reference_constructor.xml:31
#, no-c-format
msgid ""
"Collects geometries into a geometry collection. The result is either a "
"Multi* or a GeometryCollection, depending on whether the input geometries "
"have the same or different types (homogeneous or heterogeneous). The input "
"geometries are left unchanged within the collection."
msgstr ""

#. Tag: para
#: reference_constructor.xml:38 reference_constructor.xml:208
#, no-c-format
msgid ""
"<emphasis role=\"bold\">Variant 1:</emphasis> accepts two input geometries"
msgstr ""

#. Tag: para
#: reference_constructor.xml:39 reference_constructor.xml:209
#, no-c-format
msgid ""
"<emphasis role=\"bold\">Variant 2:</emphasis> accepts an array of geometries"
msgstr ""

#. Tag: para
#: reference_constructor.xml:40
#, no-c-format
msgid ""
"<emphasis role=\"bold\">Variant 3:</emphasis> aggregate function accepting a "
"rowset of geometries."
msgstr ""

#. Tag: para
#: reference_constructor.xml:42
#, no-c-format
msgid ""
"If any of the input geometries are collections (Multi* or "
"GeometryCollection) ST_Collect returns a GeometryCollection (since that is "
"the only type which can contain nested collections). To prevent this, use "
"<xref linkend=\"ST_Dump\"/> in a subquery to expand the input collections to "
"their atomic elements (see example below)."
msgstr ""

#. Tag: para
#: reference_constructor.xml:50
#, no-c-format
msgid ""
"ST_Collect and <xref linkend=\"ST_Union\"/> appear similar, but in fact "
"operate quite differently. ST_Collect aggregates geometries into a "
"collection without changing them in any way. ST_Union geometrically merges "
"geometries where they overlap, and splits linestrings at intersections. It "
"may return single geometries when it dissolves boundaries."
msgstr ""

#. Tag: para
#: reference_constructor.xml:57
#, fuzzy, no-c-format
msgid ""
"Availability: 1.4.0 - ST_Collect(geomarray) was introduced. ST_Collect was "
"enhanced to handle more geometries faster."
msgstr ""
"Disponibilité: 1.4.0 - création de ST_MakeLine(geomarray). L'agrégat spatial "
"ST_MakeLine amélioré pour supporter plus de points plus rapidement."

#. Tag: para
#: reference_constructor.xml:58 reference_constructor.xml:115
#: reference_constructor.xml:220 reference_constructor.xml:327
#: reference_constructor.xml:427 reference_constructor.xml:691
#, no-c-format
msgid "&Z_support;"
msgstr "&Z_support;"

#. Tag: para
#: reference_constructor.xml:59
#, no-c-format
msgid "&curve_support;"
msgstr "&curve_support;"

#. Tag: title
#: reference_constructor.xml:63
#, fuzzy, no-c-format
msgid "Examples - Two-input variant"
msgstr "Exemple - utilisation de XLink"

#. Tag: para
#: reference_constructor.xml:64
#, no-c-format
msgid "Collect 2D points."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:65
#, no-c-format
msgid ""
"SELECT ST_AsText( ST_Collect( ST_GeomFromText('POINT(1 2)'),\n"
"        ST_GeomFromText('POINT(-2 3)') ));\n"
"\n"
"st_astext\n"
"----------\n"
"MULTIPOINT(1 2,-2 3)"
msgstr ""

#. Tag: para
#: reference_constructor.xml:67
#, no-c-format
msgid "Collect 3D points."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:68
#, no-c-format
msgid ""
"SELECT ST_AsEWKT( ST_Collect( ST_GeomFromEWKT('POINT(1 2 3)'),\n"
"                ST_GeomFromEWKT('POINT(1 2 4)') ) );\n"
"\n"
"                st_asewkt\n"
"-------------------------\n"
" MULTIPOINT(1 2 3,1 2 4)"
msgstr ""

#. Tag: para
#: reference_constructor.xml:70
#, no-c-format
msgid "Collect curves."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:71
#, no-c-format
msgid ""
"SELECT ST_AsText( ST_Collect( 'CIRCULARSTRING(220268 150415,220227 "
"150505,220227 150406)',\n"
"                'CIRCULARSTRING(220227 150406,2220227 150407,220227 "
"150406)'));\n"
"\n"
"                st_astext\n"
"------------------------------------------------------------------------------------\n"
"MULTICURVE(CIRCULARSTRING(220268 150415,220227 150505,220227 150406),\n"
" CIRCULARSTRING(220227 150406,2220227 150407,220227 150406))"
msgstr ""

#. Tag: title
#: reference_constructor.xml:74
#, fuzzy, no-c-format
msgid "Examples - Array variant"
msgstr "Exemple: version utilisant un Tableau"

#. Tag: para
#: reference_constructor.xml:75
#, no-c-format
msgid "Using an array constructor for a subquery."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:76
#, no-c-format
msgid "SELECT ST_Collect( ARRAY( SELECT geom FROM sometable ) );"
msgstr ""

#. Tag: para
#: reference_constructor.xml:77
#, no-c-format
msgid "Using an array constructor for values."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:78
#, no-c-format
msgid ""
"SELECT ST_AsText(  ST_Collect(\n"
"                ARRAY[ ST_GeomFromText('LINESTRING(1 2, 3 4)'),\n"
"                        ST_GeomFromText('LINESTRING(3 4, 4 5)') ] )) As "
"wktcollect;\n"
"\n"
"--wkt collect --\n"
"MULTILINESTRING((1 2,3 4),(3 4,4 5))"
msgstr ""

#. Tag: title
#: reference_constructor.xml:81
#, fuzzy, no-c-format
msgid "Examples - Aggregate variant"
msgstr "Exemple: version utilisant l'Agrégat Spatial"

#. Tag: para
#: reference_constructor.xml:82
#, no-c-format
msgid "Creating multiple collections by grouping geometries in a table."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:83
#, no-c-format
msgid ""
"SELECT stusps, ST_Collect(f.geom) as geom\n"
"         FROM (SELECT stusps, (ST_Dump(geom)).geom As geom\n"
"                                FROM\n"
"                                somestatetable ) As f\n"
"        GROUP BY stusps"
msgstr ""

#. Tag: title
#: reference_constructor.xml:87 reference_constructor.xml:127
#: reference_constructor.xml:170 reference_constructor.xml:266
#: reference_constructor.xml:335 reference_constructor.xml:384
#: reference_constructor.xml:472 reference_constructor.xml:540
#: reference_constructor.xml:578 reference_constructor.xml:614
#: reference_constructor.xml:652 reference_constructor.xml:706
#: reference_constructor.xml:748 reference_constructor.xml:819
#: reference_constructor.xml:859 reference_constructor.xml:919
#: reference_constructor.xml:961 reference_constructor.xml:1007
#, no-c-format
msgid "See Also"
msgstr "Voir aussi"

#. Tag: para
#: reference_constructor.xml:88
#, fuzzy, no-c-format
msgid ", <xref linkend=\"ST_Union\"/>"
msgstr ", <xref linkend=\"ST_AsBinary\"/>"

#. Tag: refname
#: reference_constructor.xml:94
#, no-c-format
msgid "ST_LineFromMultiPoint"
msgstr "ST_LineFromMultiPoint"

#. Tag: refpurpose
#: reference_constructor.xml:96
#, no-c-format
msgid ""
"<refpurpose>Creates a LineString from a MultiPoint geometry.</refpurpose>"
msgstr ""
"<refpurpose>Crée une LineString à partir d'une géométrie MultiPoint.</"
"refpurpose>"

#. Tag: funcprototype
#: reference_constructor.xml:101
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_LineFromMultiPoint</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>aMultiPoint</parameter></"
"paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_LineFromMultiPoint</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>aMultiPoint</parameter></"
"paramdef>"

#. Tag: para
#: reference_constructor.xml:111
#, no-c-format
msgid "<para>Creates a LineString from a MultiPoint geometry.</para>"
msgstr "<para>Crée une LineString à partir d'une géométrie MultiPoint.</para>"

#. Tag: para
#: reference_constructor.xml:113
#, no-c-format
msgid ""
"Use <xref linkend=\"ST_MakeLine\"/> to create lines from Point or LineString "
"inputs."
msgstr ""

#. Tag: title
#: reference_constructor.xml:120 reference_constructor.xml:331
#: reference_constructor.xml:370 reference_constructor.xml:571
#: reference_constructor.xml:607 reference_constructor.xml:645
#: reference_constructor.xml:696
#, no-c-format
msgid "Examples"
msgstr "Exemples"

#. Tag: para
#: reference_constructor.xml:121
#, fuzzy, no-c-format
msgid "Create a 3D line string from a 3D MultiPoint"
msgstr "Crée une LineString à partir d'une géométrie MultiPoint."

#. Tag: programlisting
#: reference_constructor.xml:122
#, fuzzy, no-c-format
msgid ""
"SELECT ST_AsEWKT(  ST_LineFromMultiPoint('MULTIPOINT(1 2 3, 4 5 6, 7 8 "
"9)')  ));\n"
"\n"
"--result--\n"
"LINESTRING(1 2 3,4 5 6,7 8 9)"
msgstr ""
"--Create a 3d line string from a 3d multipoint\n"
"SELECT ST_AsEWKT(ST_LineFromMultiPoint(ST_GeomFromEWKT('MULTIPOINT(1 2 3, 4 "
"5 6, 7 8 9)')));\n"
"--result--\n"
"LINESTRING(1 2 3,4 5 6,7 8 9)"

#. Tag: para
#: reference_constructor.xml:129
#, fuzzy, no-c-format
msgid ", <xref linkend=\"ST_MakeLine\"/>"
msgstr ", <xref linkend=\"ST_AsKML\"/>"

#. Tag: refname
#: reference_constructor.xml:135
#, no-c-format
msgid "ST_MakeEnvelope"
msgstr "ST_MakeEnvelope"

#. Tag: refpurpose
#: reference_constructor.xml:137
#, fuzzy, no-c-format
msgid "Creates a rectangular Polygon from minimum and maximum coordinates."
msgstr ""
"Crée un polygone rectangulaire à partir des valeurs minimales et maximales "
"données. Les coordonnées doivent être dans le SRS défini par le SRID."

#. Tag: funcprototype
#: reference_constructor.xml:142
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_MakeEnvelope</function></funcdef> "
"<paramdef><type>float</type> <parameter>xmin</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>ymin</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>xmax</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>ymax</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>integer</type> <parameter>srid=unknown</"
"parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakeEnvelope</function></funcdef> "
"<paramdef><type>double precision</type> <parameter>xmin</parameter></"
"paramdef> <paramdef><type>double precision</type> <parameter>ymin</"
"parameter></paramdef> <paramdef><type>double precision</type> "
"<parameter>xmax</parameter></paramdef> <paramdef><type>double precision</"
"type> <parameter>ymax</parameter></paramdef> <paramdef choice=\"opt"
"\"><type>integer </type> <parameter>srid=unknown</parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:156
#, fuzzy, no-c-format
msgid ""
"Creates a rectangular Polygon from the minimum and maximum values for X and "
"Y. Input values must be in the spatial reference system specified by the "
"SRID. If no SRID is specified the unknown spatial reference system (SRID 0) "
"is used."
msgstr ""
"Crée un polygone rectangulaire à partir des valeurs minimales et maximales "
"données. Les coordonnées doivent être dans le SRS défini par le SRID. Si "
"aucun SRID n'est passé, la valeur 0 est prise."

#. Tag: para
#: reference_constructor.xml:160
#, no-c-format
msgid "Availability: 1.5"
msgstr "Disponibilité: 1.5"

#. Tag: para
#: reference_constructor.xml:161
#, no-c-format
msgid ""
"Enhanced: 2.0: Ability to specify an envelope without specifying an SRID was "
"introduced."
msgstr "Amélioration: 2.0: paramètre SRID devenu optionnel."

#. Tag: title
#: reference_constructor.xml:166
#, no-c-format
msgid "Example: Building a bounding box polygon"
msgstr "Exemple: Construire un polygone englobant"

#. Tag: programlisting
#: reference_constructor.xml:167
#, fuzzy, no-c-format
msgid ""
"SELECT ST_AsText( ST_MakeEnvelope(10, 10, 11, 11, 4326) );\n"
"\n"
"st_asewkt\n"
"-----------\n"
"POLYGON((10 10, 10 11, 11 11, 11 10, 10 10))"
msgstr ""
"SELECT ST_AsText(ST_MakeEnvelope(10, 10, 11, 11, 4326));\n"
"\n"
"st_asewkt\n"
"-----------\n"
"POLYGON((10 10, 10 11, 11 11, 11 10, 10 10))"

#. Tag: para
#: reference_constructor.xml:171
#, fuzzy, no-c-format
msgid ""
", <xref linkend=\"ST_MakeLine\"/>, <xref linkend=\"ST_MakePolygon\"/>, <xref "
"linkend=\"ST_TileEnvelope\"/>"
msgstr ""
", <xref linkend=\"ST_MakePoint\"/>, <xref linkend=\"ST_Point\"/>, <xref "
"linkend=\"ST_SRID\"/>"

#. Tag: refname
#: reference_constructor.xml:177
#, no-c-format
msgid "ST_MakeLine"
msgstr "ST_MakeLine"

#. Tag: refpurpose
#: reference_constructor.xml:179
#, fuzzy, no-c-format
msgid "Creates a LineString from Point, MultiPoint, or LineString geometries."
msgstr "Crée une LineString à partir d'une géométrie MultiPoint."

#. Tag: funcsynopsis
#: reference_constructor.xml:183
#, fuzzy, no-c-format
msgid ""
"<funcprototype> <funcdef>geometry <function>ST_MakeLine</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>geom1</parameter></paramdef> "
"<paramdef><type>geometry</type> <parameter>geom2</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>geometry <function>ST_MakeLine</"
"function></funcdef> <paramdef><type>geometry[]</type> "
"<parameter>geoms_array</parameter></paramdef> </funcprototype> "
"<funcprototype> <funcdef>geometry <function>ST_MakeLine</function></funcdef> "
"<paramdef><type>geometry set</type> <parameter>geoms</parameter></paramdef> "
"</funcprototype>"
msgstr ""
"<funcprototype> <funcdef>geometry <function>ST_MakeLine</function></funcdef> "
"<paramdef><type>geometry set</type> <parameter>geoms</parameter></paramdef> "
"</funcprototype> <funcprototype> <funcdef>geometry <function>ST_MakeLine</"
"function></funcdef> <paramdef><type>geometry</type> <parameter>geom1</"
"parameter></paramdef> <paramdef><type>geometry</type> <parameter>geom2</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
"<function>ST_MakeLine</function></funcdef> <paramdef><type>geometry[]</type> "
"<parameter>geoms_array</parameter></paramdef> </funcprototype>"

#. Tag: para
#: reference_constructor.xml:205
#, no-c-format
msgid ""
"Creates a LineString containing the points of Point, MultiPoint, or "
"LineString geometries. Other geometry types cause an error."
msgstr ""

#. Tag: para
#: reference_constructor.xml:210
#, no-c-format
msgid ""
"<emphasis role=\"bold\">Variant 3:</emphasis> aggregate function accepting a "
"rowset of geometries. To ensure the order of the input geometries use "
"<varname>ORDER BY</varname> in the function call, or a subquery with an "
"<varname>ORDER BY</varname> clause."
msgstr ""

#. Tag: para
#: reference_constructor.xml:214
#, no-c-format
msgid ""
"Repeated nodes at the beginning of input LineStrings are collapsed to a "
"single point. Repeated points in Point and MultiPoint inputs are not "
"collapsed. <xref linkend=\"ST_RemoveRepeatedPoints\"/> can be used to "
"collapse repeated points from the output LineString."
msgstr ""

#. Tag: para
#: reference_constructor.xml:222
#, fuzzy, no-c-format
msgid ""
"Availability: 2.3.0 - Support for MultiPoint input elements was introduced"
msgstr "Disponibilité: 2.0.0 - Support pour les paramètres de type linestring."

#. Tag: para
#: reference_constructor.xml:223
#, fuzzy, no-c-format
msgid ""
"Availability: 2.0.0 - Support for LineString input elements was introduced"
msgstr "Disponibilité: 2.0.0 - Support pour les paramètres de type linestring."

#. Tag: para
#: reference_constructor.xml:224
#, no-c-format
msgid ""
"Availability: 1.4.0 - ST_MakeLine(geomarray) was introduced. ST_MakeLine "
"aggregate functions was enhanced to handle more points faster."
msgstr ""
"Disponibilité: 1.4.0 - création de ST_MakeLine(geomarray). L'agrégat spatial "
"ST_MakeLine amélioré pour supporter plus de points plus rapidement."

#. Tag: title
#: reference_constructor.xml:229
#, fuzzy, no-c-format
msgid "Examples: Two-input variant"
msgstr "Exemple: version utilisant un Tableau"

#. Tag: para
#: reference_constructor.xml:231
#, no-c-format
msgid "Create a line composed of two points."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:232
#, fuzzy, no-c-format
msgid ""
"SELECT ST_AsText( ST_MakeLine(ST_Point(1,2), ST_Point(3,4)) );\n"
"\n"
"          st_astext\n"
"---------------------\n"
" LINESTRING(1 2,3 4)"
msgstr ""
"SELECT ST_MakeLine(ARRAY(SELECT ST_Centroid(the_geom) FROM visit_locations "
"ORDER BY visit_time));\n"
"\n"
"--Making a 3d line with 3 3-d points\n"
"SELECT ST_AsEWKT(ST_MakeLine(ARRAY[ST_MakePoint(1,2,3),\n"
"                                ST_MakePoint(3,4,5), "
"ST_MakePoint(6,6,6)]));\n"
"                st_asewkt\n"
"-------------------------\n"
"LINESTRING(1 2 3,3 4 5,6 6 6)"

#. Tag: para
#: reference_constructor.xml:234
#, fuzzy, no-c-format
msgid "Create a 3D line from two 3D points."
msgstr "Construit un objet BOX3D à partir des géométries 3D POINT données."

#. Tag: programlisting
#: reference_constructor.xml:235
#, no-c-format
msgid ""
"SELECT ST_AsEWKT( ST_MakeLine(ST_MakePoint(1,2,3), ST_MakePoint(3,4,5) ));\n"
"\n"
"                st_asewkt\n"
"-------------------------\n"
" LINESTRING(1 2 3,3 4 5)"
msgstr ""

#. Tag: para
#: reference_constructor.xml:237
#, fuzzy, no-c-format
msgid "Create a line from two disjoint LineStrings."
msgstr ""
"Crée une LineString à partir d'une chaîne de polyligne encodée ( \"Encoded "
"Polyline\")"

#. Tag: programlisting
#: reference_constructor.xml:238
#, no-c-format
msgid ""
"select ST_AsText( ST_MakeLine( 'LINESTRING(0 0, 1 1)', 'LINESTRING(2 2, 3 "
"3)' ) );\n"
"\n"
"          st_astext\n"
"-----------------------------\n"
" LINESTRING(0 0,1 1,2 2,3 3)"
msgstr ""

#. Tag: title
#: reference_constructor.xml:242
#, fuzzy, no-c-format
msgid "Examples: Array variant"
msgstr "Exemple: version utilisant un Tableau"

#. Tag: para
#: reference_constructor.xml:244
#, no-c-format
msgid "Create a line from an array formed by a subquery with ordering."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:245
#, no-c-format
msgid ""
"SELECT ST_MakeLine( ARRAY( SELECT ST_Centroid(geom) FROM visit_locations "
"ORDER BY visit_time) );"
msgstr ""

#. Tag: para
#: reference_constructor.xml:247
#, no-c-format
msgid "Create a 3D line from an array of 3D points"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:248
#, fuzzy, no-c-format
msgid ""
"SELECT ST_AsEWKT( ST_MakeLine(\n"
"          ARRAY[ ST_MakePoint(1,2,3), ST_MakePoint(3,4,5), "
"ST_MakePoint(6,6,6) ]  ));\n"
"\n"
"                st_asewkt\n"
"-------------------------\n"
"LINESTRING(1 2 3,3 4 5,6 6 6)"
msgstr ""
"SELECT ST_MakeLine(ARRAY(SELECT ST_Centroid(the_geom) FROM visit_locations "
"ORDER BY visit_time));\n"
"\n"
"--Making a 3d line with 3 3-d points\n"
"SELECT ST_AsEWKT(ST_MakeLine(ARRAY[ST_MakePoint(1,2,3),\n"
"                                ST_MakePoint(3,4,5), "
"ST_MakePoint(6,6,6)]));\n"
"                st_asewkt\n"
"-------------------------\n"
"LINESTRING(1 2 3,3 4 5,6 6 6)"

#. Tag: title
#: reference_constructor.xml:252
#, fuzzy, no-c-format
msgid "Examples: Aggregate variant"
msgstr "Exemple: version utilisant l'Agrégat Spatial"

#. Tag: para
#: reference_constructor.xml:253
#, fuzzy, no-c-format
msgid ""
"This example queries time-based sequences of GPS points from a set of tracks "
"and creates one record for each track. The result geometries are LineStrings "
"composed of the GPS track points in the order of travel."
msgstr ""
"Dans cet exemple, une série de points GPS est utilisée pour créer une "
"géométrie pour chaque trace GPS, la géométrie étant une linestring des "
"points GPS ordonnées par le temps."

#. Tag: para
#: reference_constructor.xml:257
#, no-c-format
msgid ""
"Using aggregate <varname>ORDER BY</varname> provides a correctly-ordered "
"LineString."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:258
#, no-c-format
msgid ""
"SELECT gps.track_id, ST_MakeLine(gps.geom ORDER BY gps_time) As geom\n"
"        FROM gps_points As gps\n"
"        GROUP BY track_id;"
msgstr ""

#. Tag: para
#: reference_constructor.xml:260
#, no-c-format
msgid ""
"Prior to PostgreSQL 9, ordering in a subquery can be used. However, "
"sometimes the query plan may not respect the order of the subquery."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:262
#, no-c-format
msgid ""
"SELECT gps.track_id, ST_MakeLine(gps.geom) As geom\n"
"        FROM ( SELECT track_id, gps_time, geom\n"
"                        FROM gps_points ORDER BY track_id, gps_time ) As "
"gps\n"
"        GROUP BY track_id;"
msgstr ""

#. Tag: para
#: reference_constructor.xml:267
#, fuzzy, no-c-format
msgid ""
", <xref linkend=\"ST_AsEWKT\"/>, <xref linkend=\"ST_AsText\"/>, <xref "
"linkend=\"ST_GeomFromText\"/>, <xref linkend=\"ST_MakePoint\"/>, <xref "
"linkend=\"ST_Point\"/>"
msgstr ""
", <xref linkend=\"ST_AsText\"/>, <xref linkend=\"ST_GeomFromText\"/>, <xref "
"linkend=\"ST_MakePoint\"/>"

#. Tag: refname
#: reference_constructor.xml:280
#, no-c-format
msgid "ST_MakePoint"
msgstr "ST_MakePoint"

#. Tag: refpurpose
#: reference_constructor.xml:282
#, no-c-format
msgid "Creates a 2D, 3DZ or 4D Point."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:287
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_Point</function></funcdef> "
"<paramdef><type>float </type> <parameter>x_lon</parameter></paramdef> "
"<paramdef><type>float </type> <parameter>y_lat</parameter></paramdef>"

#. Tag: funcprototype
#: reference_constructor.xml:294
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>z</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakePointM</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>m</parameter></paramdef>"

#. Tag: funcprototype
#: reference_constructor.xml:302
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>z</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>m</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
"<paramdef><type>double precision</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>z</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>m</parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:315
#, fuzzy, no-c-format
msgid "Creates a 2D, 3D Z or 4D ZM Point geometry."
msgstr "Construit un objet BOX2D à partir des géométries POINT données"

#. Tag: para
#: reference_constructor.xml:317
#, no-c-format
msgid ""
"Use <xref linkend=\"ST_MakePointM\"/> to make points with XYM coordinates."
msgstr ""

#. Tag: para
#: reference_constructor.xml:319
#, no-c-format
msgid ""
"While not OGC-compliant, <varname>ST_MakePoint</varname> is faster and more "
"precise than <xref linkend=\"ST_GeomFromText\"/> and <xref linkend="
"\"ST_PointFromText\"/>. It is also easier to use for numeric coordinate "
"values."
msgstr ""

#. Tag: para
#: reference_constructor.xml:325 reference_constructor.xml:365
#: reference_constructor.xml:510
#, no-c-format
msgid ""
"For geodetic coordinates, <varname>X</varname> is longitude and <varname>Y</"
"varname> is latitude"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:332
#, no-c-format
msgid ""
"--Return point with unknown SRID\n"
"SELECT ST_MakePoint(-71.1043443253471, 42.3150676015829);\n"
"\n"
"--Return point marked as WGS 84 long lat\n"
"SELECT ST_SetSRID(ST_MakePoint(-71.1043443253471, 42.3150676015829),4326);\n"
"\n"
"--Return a 3D point (e.g. has altitude)\n"
"SELECT ST_MakePoint(1, 2,1.5);\n"
"\n"
"--Get z of point\n"
"SELECT ST_Z(ST_MakePoint(1, 2,1.5));\n"
"result\n"
"-------\n"
"1.5"
msgstr ""
"--Return point with unknown SRID\n"
"SELECT ST_MakePoint(-71.1043443253471, 42.3150676015829);\n"
"\n"
"--Return point marked as WGS 84 long lat\n"
"SELECT ST_SetSRID(ST_MakePoint(-71.1043443253471, 42.3150676015829),4326);\n"
"\n"
"--Return a 3D point (e.g. has altitude)\n"
"SELECT ST_MakePoint(1, 2,1.5);\n"
"\n"
"--Get z of point\n"
"SELECT ST_Z(ST_MakePoint(1, 2,1.5));\n"
"result\n"
"-------\n"
"1.5"

#. Tag: para
#: reference_constructor.xml:336
#, no-c-format
msgid ""
", <xref linkend=\"ST_PointFromText\"/>, <xref linkend=\"ST_SetSRID\"/>, "
"<xref linkend=\"ST_MakePointM\"/>"
msgstr ""
", <xref linkend=\"ST_PointFromText\"/>, <xref linkend=\"ST_SetSRID\"/>, "
"<xref linkend=\"ST_MakePointM\"/>"

#. Tag: refname
#: reference_constructor.xml:342
#, no-c-format
msgid "ST_MakePointM"
msgstr "ST_MakePointM"

#. Tag: refpurpose
#: reference_constructor.xml:344
#, fuzzy, no-c-format
msgid "Creates a Point from X, Y and M values."
msgstr "Crée un point à partir de coordonnées x et y."

#. Tag: funcprototype
#: reference_constructor.xml:349
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_MakePointM</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>m</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakePointM</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>m</parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:361
#, fuzzy, no-c-format
msgid "Creates a point with X, Y and M (measure) coordinates."
msgstr "Crée un point à partir de coordonnées x et y."

#. Tag: para
#: reference_constructor.xml:363
#, no-c-format
msgid ""
"Use <xref linkend=\"ST_MakePoint\"/> to make points with XY, XYZ, or XYZM "
"coordinates."
msgstr ""

#. Tag: para
#: reference_constructor.xml:371
#, no-c-format
msgid ""
"is used for text output because <xref linkend=\"ST_AsText\"/> does not "
"support M values."
msgstr ""

#. Tag: para
#: reference_constructor.xml:374
#, no-c-format
msgid "Create point with unknown SRID."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:375
#, no-c-format
msgid ""
"SELECT ST_AsEWKT(  ST_MakePointM(-71.1043443253471, 42.3150676015829, "
"10)  );\n"
"\n"
"                                   st_asewkt\n"
"-----------------------------------------------\n"
" POINTM(-71.1043443253471 42.3150676015829 10)"
msgstr ""

#. Tag: para
#: reference_constructor.xml:377
#, fuzzy, no-c-format
msgid "Create point with a measure in the WGS 84 geodetic coordinate system."
msgstr "Crée un point à partir de coordonnées x et y."

#. Tag: programlisting
#: reference_constructor.xml:378
#, no-c-format
msgid ""
"SELECT ST_AsEWKT( ST_SetSRID(  ST_MakePointM(-71.104, 42.315, 10),  4326));\n"
"\n"
"                                                st_asewkt\n"
"---------------------------------------------------------\n"
"SRID=4326;POINTM(-71.104 42.315 10)"
msgstr ""

#. Tag: para
#: reference_constructor.xml:380
#, no-c-format
msgid "Get measure of created point."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:381
#, no-c-format
msgid ""
"SELECT ST_M(  ST_MakePointM(-71.104, 42.315, 10)  );\n"
"\n"
"result\n"
"-------\n"
"10"
msgstr ""

#. Tag: para
#: reference_constructor.xml:385
#, no-c-format
msgid ", <xref linkend=\"ST_MakePoint\"/>, <xref linkend=\"ST_SetSRID\"/>"
msgstr ", <xref linkend=\"ST_MakePoint\"/>, <xref linkend=\"ST_SetSRID\"/>"

#. Tag: refname
#: reference_constructor.xml:391
#, no-c-format
msgid "ST_MakePolygon"
msgstr "ST_MakePolygon"

#. Tag: refpurpose
#: reference_constructor.xml:393
#, no-c-format
msgid "Creates a Polygon from a shell and optional list of holes."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:398
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_MakePolygon</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>linestring</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakePolygon</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>linestring</parameter></paramdef>"

#. Tag: funcprototype
#: reference_constructor.xml:404
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_MakePolygon</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>outerlinestring</parameter></"
"paramdef> <paramdef><type>geometry[]</type> <parameter>interiorlinestrings</"
"parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakePolygon</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>outerlinestring</parameter></"
"paramdef> <paramdef><type>geometry[]</type> <parameter>interiorlinestrings</"
"parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:415
#, fuzzy, no-c-format
msgid ""
"Creates a Polygon formed by the given shell and optional array of holes. "
"Input geometries must be closed LineStrings (rings)."
msgstr ""
"Crée un Polygon à partir du contour donné. Les géométries en entrées doivent "
"être des LINESTRING fermées."

#. Tag: para
#: reference_constructor.xml:418
#, no-c-format
msgid ""
"<emphasis role=\"bold\">Variant 1:</emphasis> Accepts one shell LineString."
msgstr ""

#. Tag: para
#: reference_constructor.xml:419
#, no-c-format
msgid ""
"<emphasis role=\"bold\">Variant 2:</emphasis> Accepts a shell LineString and "
"an array of inner (hole) LineStrings. A geometry array can be constructed "
"using the PostgreSQL array_agg(), ARRAY[] or ARRAY() constructs."
msgstr ""

#. Tag: para
#: reference_constructor.xml:423 reference_constructor.xml:685
#, fuzzy, no-c-format
msgid ""
"This function does not accept MultiLineStrings. Use <xref linkend="
"\"ST_LineMerge\"/> to generate a LineString, or <xref linkend=\"ST_Dump\"/> "
"to extract LineStrings."
msgstr ""
"Cette fonction n'accepte pas de MULTILINESTRING. Utiliser <xref linkend="
"\"ST_LineMerge\"/> or <xref linkend=\"ST_Dump\"/> pour générer des "
"LINESTRING."

#. Tag: title
#: reference_constructor.xml:431
#, fuzzy, no-c-format
msgid "Examples: Single input variant"
msgstr "Exemple: version utilisant un Tableau"

#. Tag: para
#: reference_constructor.xml:432
#, fuzzy, no-c-format
msgid "Create a Polygon from a 2D LineString."
msgstr ""
"Crée une LineString à partir d'une chaîne de polyligne encodée ( \"Encoded "
"Polyline\")"

#. Tag: programlisting
#: reference_constructor.xml:433
#, fuzzy, no-c-format
msgid ""
"SELECT ST_MakePolygon( ST_GeomFromText('LINESTRING(75 29,77 29,77 29, 75 "
"29)'));"
msgstr "SELECT ST_MLineFromText('MULTILINESTRING((1 2, 3 4), (4 5, 6 7))');"

#. Tag: para
#: reference_constructor.xml:435
#, no-c-format
msgid ""
"Create a Polygon from an open LineString, using <xref linkend=\"ST_StartPoint"
"\"/> and <xref linkend=\"ST_AddPoint\"/> to close it."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:437
#, no-c-format
msgid ""
"SELECT ST_MakePolygon( ST_AddPoint(foo.open_line, ST_StartPoint(foo."
"open_line)) )\n"
"FROM (\n"
"  SELECT ST_GeomFromText('LINESTRING(75 29,77 29,77 29, 75 29)') As "
"open_line) As foo;"
msgstr ""

#. Tag: para
#: reference_constructor.xml:439
#, fuzzy, no-c-format
msgid "Create a Polygon from a 3D LineString"
msgstr ""
"Crée une LineString à partir d'une chaîne de polyligne encodée ( \"Encoded "
"Polyline\")"

#. Tag: programlisting
#: reference_constructor.xml:440
#, no-c-format
msgid ""
"SELECT ST_AsEWKT( ST_MakePolygon( 'LINESTRING(75.15 29.53 1,77 29 1,77.6 "
"29.5 1, 75.15 29.53 1)'));\n"
"\n"
"st_asewkt\n"
"-----------\n"
"POLYGON((75.15 29.53 1,77 29 1,77.6 29.5 1,75.15 29.53 1))"
msgstr ""

#. Tag: para
#: reference_constructor.xml:441
#, no-c-format
msgid "Create a Polygon from a LineString with measures"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:442
#, no-c-format
msgid ""
"SELECT ST_AsEWKT( ST_MakePolygon( 'LINESTRINGM(75.15 29.53 1,77 29 1,77.6 "
"29.5 2, 75.15 29.53 2)' ));\n"
"\n"
"st_asewkt\n"
"----------\n"
"POLYGONM((75.15 29.53 1,77 29 1,77.6 29.5 2,75.15 29.53 2))"
msgstr ""

#. Tag: title
#: reference_constructor.xml:445
#, no-c-format
msgid "Examples: Outer shell with inner holes variant"
msgstr ""

#. Tag: para
#: reference_constructor.xml:447
#, fuzzy, no-c-format
msgid "Create a donut Polygon with an extra hole"
msgstr "Construction d'un anneaux avec un trou"

#. Tag: programlisting
#: reference_constructor.xml:448
#, fuzzy, no-c-format
msgid ""
"SELECT ST_MakePolygon( ST_ExteriorRing( ST_Buffer(ring.line,10)),\n"
"        ARRAY[  ST_Translate(ring.line, 1, 1),\n"
"                ST_ExteriorRing(ST_Buffer(ST_Point(20,20),1)) ]\n"
"        )\n"
"FROM (SELECT ST_ExteriorRing(\n"
"        ST_Buffer(ST_Point(10,10),10,10)) AS line ) AS ring;"
msgstr ""
"SELECT ST_MakePolygon(\n"
"                ST_ExteriorRing(ST_Buffer(foo.line,10)),\n"
"        ARRAY[ST_Translate(foo.line,1,1),\n"
"                ST_ExteriorRing(ST_Buffer(ST_MakePoint(20,20),1)) ]\n"
"        )\n"
"FROM\n"
"        (SELECT ST_ExteriorRing(ST_Buffer(ST_MakePoint(10,10),10,10))\n"
"                As line )\n"
"                As foo;"

#. Tag: para
#: reference_constructor.xml:449
#, no-c-format
msgid ""
"Create a set of province boundaries with holes representing lakes. The input "
"is a table of province Polygons/MultiPolygons and a table of water "
"linestrings. Lines forming lakes are determined by using <xref linkend="
"\"ST_IsClosed\"/>. The province linework is extracted by using <xref linkend="
"\"ST_Boundary\"/>. As required by <code>ST_MakePolygon</code>, the boundary "
"is forced to be a single LineString by using <xref linkend=\"ST_LineMerge\"/"
">. (However, note that if a province has more than one region or has islands "
"this will produce an invalid polygon.) Using a LEFT JOIN ensures all "
"provinces are included even if they have no lakes."
msgstr ""

#. Tag: para
#: reference_constructor.xml:462
#, no-c-format
msgid ""
"The CASE construct is used because passing a null array into ST_MakePolygon "
"results in a NULL return value."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:465
#, no-c-format
msgid ""
"SELECT p.gid, p.province_name,\n"
"        CASE WHEN array_agg(w.geom) IS NULL\n"
"        THEN p.geom\n"
"        ELSE  ST_MakePolygon( ST_LineMerge(ST_Boundary(p.geom)),\n"
"                        array_agg(w.geom)) END\n"
"FROM\n"
"        provinces p LEFT JOIN waterlines w\n"
"                ON (ST_Within(w.geom, p.geom) AND ST_IsClosed(w.geom))\n"
"GROUP BY p.gid, p.province_name, p.geom;"
msgstr ""

#. Tag: para
#: reference_constructor.xml:467
#, no-c-format
msgid ""
"Another technique is to utilize a correlated subquery and the ARRAY() "
"constructor that converts a row set to an array."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:469
#, fuzzy, no-c-format
msgid ""
"SELECT p.gid,  p.province_name,\n"
"    CASE WHEN EXISTS( SELECT w.geom\n"
"        FROM waterlines w\n"
"        WHERE ST_Within(w.geom, p.geom)\n"
"        AND ST_IsClosed(w.geom))\n"
"    THEN ST_MakePolygon(\n"
"        ST_LineMerge(ST_Boundary(p.geom)),\n"
"        ARRAY( SELECT w.geom\n"
"            FROM waterlines w\n"
"            WHERE ST_Within(w.geom, p.geom)\n"
"            AND ST_IsClosed(w.geom)))\n"
"    ELSE p.geom\n"
"    END AS geom\n"
"FROM provinces p;"
msgstr ""
"SELECT p.gid, p.province_name,\n"
"                CASE WHEN\n"
"                        ST_Accum(w.the_geom) IS NULL THEN p.the_geom\n"
"                ELSE  ST_MakePolygon(ST_LineMerge(ST_Boundary(p.the_geom)), "
"ST_Accum(w.the_geom)) END\n"
"        FROM\n"
"                provinces p LEFT JOIN waterlines w\n"
"                        ON (ST_Within(w.the_geom, p.the_geom) AND "
"ST_IsClosed(w.the_geom))\n"
"        GROUP BY p.gid, p.province_name, p.the_geom;\n"
"\n"
"        --Same example above but utilizing a correlated subquery\n"
"        --and PostgreSQL built-in ARRAY() function that converts a row set "
"to an array\n"
"\n"
"        SELECT p.gid,  p.province_name, CASE WHEN\n"
"                EXISTS(SELECT w.the_geom\n"
"                        FROM waterlines w\n"
"                        WHERE ST_Within(w.the_geom, p.the_geom)\n"
"                        AND ST_IsClosed(w.the_geom))\n"
"                THEN\n"
"                ST_MakePolygon(ST_LineMerge(ST_Boundary(p.the_geom)),\n"
"                        ARRAY(SELECT w.the_geom\n"
"                                FROM waterlines w\n"
"                                WHERE ST_Within(w.the_geom, p.the_geom)\n"
"                                AND ST_IsClosed(w.the_geom)))\n"
"                ELSE p.the_geom END As the_geom\n"
"        FROM\n"
"                provinces p;"

#. Tag: refname
#: reference_constructor.xml:482
#, no-c-format
msgid "ST_Point"
msgstr "ST_Point"

#. Tag: refpurpose
#: reference_constructor.xml:484
#, fuzzy, no-c-format
msgid ""
"Creates a Point with the given coordinate values. Alias for ST_MakePoint."
msgstr ""
"Retourne un point à partir des coordonnées données. Alias OGC de la fonction "
"ST_MakePoint"

#. Tag: funcprototype
#: reference_constructor.xml:489
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_Point</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_Point</function></funcdef> "
"<paramdef><type>float </type> <parameter>x_lon</parameter></paramdef> "
"<paramdef><type>float </type> <parameter>y_lat</parameter></paramdef>"

#. Tag: funcprototype
#: reference_constructor.xml:496
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_Point</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>integer</type> <parameter>srid=unknown</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakePointM</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>m</parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:508
#, fuzzy, no-c-format
msgid ""
"Returns an Point with the given X and Y coordinate values. This is the SQL-"
"MM alias for <xref linkend=\"ST_MakePoint\"/> that takes just X and Y."
msgstr ""
"Retourne un point à partir des coordonnées données. Alias SQL/MM de la "
"fonction ST_MakePoint avec coordonnées x et y."

#. Tag: para
#: reference_constructor.xml:512
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 6.1.2"
msgstr "&sqlmm_compliant; SQL-MM 3: 6.1.2"

#. Tag: title
#: reference_constructor.xml:518
#, no-c-format
msgid "Examples: Geometry"
msgstr "Exemple: Géométrie"

#. Tag: programlisting
#: reference_constructor.xml:520
#, fuzzy, no-c-format
msgid "SELECT ST_SetSRID( ST_Point( -71.104, 42.315), 4326)"
msgstr "SELECT ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326)"

#. Tag: title
#: reference_constructor.xml:524
#, no-c-format
msgid "Examples: Geography"
msgstr "Exemples: Géographie"

#. Tag: programlisting
#: reference_constructor.xml:526
#, fuzzy, no-c-format
msgid ""
"SELECT CAST(ST_SetSRID( ST_Point( -71.104, 42.315), 4326) AS geography);"
msgstr ""
"SELECT CAST(ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326) "
"As geography);"

#. Tag: para
#: reference_constructor.xml:528
#, no-c-format
msgid ""
"PostgreSQL also provides the <varname>::</varname> short-hand for casting"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:529
#, fuzzy, no-c-format
msgid "SELECT ST_SetSRID( ST_Point( -71.104, 42.315), 4326)::geography;"
msgstr ""
"SELECT CAST(ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326) "
"As geography);"

#. Tag: para
#: reference_constructor.xml:531
#, no-c-format
msgid ""
"If the point coordinates are not in a geodetic coordinate system (such as "
"WGS84), then they must be reprojected before casting to a geography. In this "
"example a point in Pennsylvania State Plane feet (SRID 2273) is projected to "
"WGS84 (SRID 4326)."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:535
#, fuzzy, no-c-format
msgid ""
"SELECT ST_Transform(ST_SetSRID( ST_Point( 3637510, 3014852 ), 2273), 4326)::"
"geography;"
msgstr ""
"SELECT CAST(ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326) "
"As geography);"

#. Tag: para
#: reference_constructor.xml:542
#, no-c-format
msgid ""
", <xref linkend=\"ST_MakePoint\"/>, <xref linkend=\"ST_SetSRID\"/>, <xref "
"linkend=\"ST_Transform\"/>, <xref linkend=\"ST_PointZ\"/>, <xref linkend="
"\"ST_PointM\"/>, <xref linkend=\"ST_PointZM\"/>"
msgstr ""
", <xref linkend=\"ST_MakePoint\"/>, <xref linkend=\"ST_SetSRID\"/>, <xref "
"linkend=\"ST_Transform\"/>, <xref linkend=\"ST_PointZ\"/>, <xref linkend="
"\"ST_PointM\"/>, <xref linkend=\"ST_PointZM\"/>"

#. Tag: refname
#: reference_constructor.xml:549
#, fuzzy, no-c-format
msgid "ST_PointZ"
msgstr "ST_Point"

#. Tag: refpurpose
#: reference_constructor.xml:550 reference_constructor.xml:586
#: reference_constructor.xml:623
#, fuzzy, no-c-format
msgid "Creates a Point with the given coordinate and SRID values."
msgstr ""
"Retourne un point à partir des coordonnées données. Alias OGC de la fonction "
"ST_MakePoint"

#. Tag: funcprototype
#: reference_constructor.xml:555
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_PointZ</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>z</parameter></paramdef> <paramdef "
"choice=\"opt\"><type>integer</type> <parameter>srid=unknown</parameter></"
"paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
"<paramdef><type>double precision</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>z</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>m</parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:567
#, fuzzy, no-c-format
msgid ""
"Returns an Point with the given X, Y and Z coordinate values, and optionally "
"an SRID number."
msgstr ""
"Retourne un point à partir des coordonnées données. Alias OGC de la fonction "
"ST_MakePoint"

#. Tag: programlisting
#: reference_constructor.xml:572
#, fuzzy, no-c-format
msgid "SELECT ST_PointZ(-71.104, 42.315, 3.4, 4326)"
msgstr "SELECT ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326)"

#. Tag: programlisting
#: reference_constructor.xml:573
#, fuzzy, no-c-format
msgid "SELECT ST_PointZ(-71.104, 42.315, 3.4, srid => 4326)"
msgstr "SELECT ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326)"

#. Tag: programlisting
#: reference_constructor.xml:574
#, fuzzy, no-c-format
msgid "SELECT ST_PointZ(-71.104, 42.315, 3.4)"
msgstr "SELECT ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326)"

#. Tag: para
#: reference_constructor.xml:579
#, fuzzy, no-c-format
msgid ""
", <xref linkend=\"ST_Point\"/>, <xref linkend=\"ST_PointM\"/>, <xref linkend="
"\"ST_PointZM\"/>"
msgstr ""
", <xref linkend=\"ST_Point\"/>, <xref linkend=\"ST_SetSRID\"/>, <xref "
"linkend=\"ST_SRID\"/>"

#. Tag: refname
#: reference_constructor.xml:585
#, fuzzy, no-c-format
msgid "ST_PointM"
msgstr "ST_Point"

#. Tag: funcprototype
#: reference_constructor.xml:591
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_PointZ</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>m</parameter></paramdef> <paramdef "
"choice=\"opt\"><type>integer</type> <parameter>srid=unknown</parameter></"
"paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
"<paramdef><type>double precision</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>z</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>m</parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:603
#, fuzzy, no-c-format
msgid ""
"Returns an Point with the given X, Y and M coordinate values, and optionally "
"an SRID number."
msgstr ""
"Retourne un point à partir des coordonnées données. Alias OGC de la fonction "
"ST_MakePoint"

#. Tag: programlisting
#: reference_constructor.xml:608
#, fuzzy, no-c-format
msgid "SELECT ST_PointM(-71.104, 42.315, 3.4, 4326)"
msgstr "SELECT ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326)"

#. Tag: programlisting
#: reference_constructor.xml:609
#, fuzzy, no-c-format
msgid "SELECT ST_PointM(-71.104, 42.315, 3.4, srid => 4326)"
msgstr "SELECT ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326)"

#. Tag: programlisting
#: reference_constructor.xml:610
#, fuzzy, no-c-format
msgid "SELECT ST_PointM(-71.104, 42.315, 3.4)"
msgstr "SELECT ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326)"

#. Tag: para
#: reference_constructor.xml:615
#, fuzzy, no-c-format
msgid ""
", <xref linkend=\"ST_Point\"/>, <xref linkend=\"ST_PointZ\"/>, <xref linkend="
"\"ST_PointZM\"/>"
msgstr ""
", <xref linkend=\"ST_Point\"/>, <xref linkend=\"ST_SetSRID\"/>, <xref "
"linkend=\"ST_SRID\"/>"

#. Tag: refname
#: reference_constructor.xml:622
#, fuzzy, no-c-format
msgid "ST_PointZM"
msgstr "ST_Point"

#. Tag: funcprototype
#: reference_constructor.xml:628
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_PointZM</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>z</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>m</parameter></paramdef> <paramdef "
"choice=\"opt\"><type>integer</type> <parameter>srid=unknown</parameter></"
"paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakeEnvelope</function></funcdef> "
"<paramdef><type>double precision</type> <parameter>xmin</parameter></"
"paramdef> <paramdef><type>double precision</type> <parameter>ymin</"
"parameter></paramdef> <paramdef><type>double precision</type> "
"<parameter>xmax</parameter></paramdef> <paramdef><type>double precision</"
"type> <parameter>ymax</parameter></paramdef> <paramdef choice=\"opt"
"\"><type>integer </type> <parameter>srid=unknown</parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:641
#, fuzzy, no-c-format
msgid ""
"Returns an Point with the given X, Y, Z and M coordinate values, and "
"optionally an SRID number."
msgstr ""
"Retourne un point à partir des coordonnées données. Alias OGC de la fonction "
"ST_MakePoint"

#. Tag: programlisting
#: reference_constructor.xml:646
#, fuzzy, no-c-format
msgid "SELECT ST_PointZM(-71.104, 42.315, 3.4, 4.5, 4326)"
msgstr "SELECT ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326)"

#. Tag: programlisting
#: reference_constructor.xml:647
#, fuzzy, no-c-format
msgid "SELECT ST_PointZM(-71.104, 42.315, 3.4, 4.5, srid => 4326)"
msgstr "SELECT ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326)"

#. Tag: programlisting
#: reference_constructor.xml:648
#, fuzzy, no-c-format
msgid "SELECT ST_PointZM(-71.104, 42.315, 3.4, 4.5)"
msgstr "SELECT ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326)"

#. Tag: para
#: reference_constructor.xml:653
#, fuzzy, no-c-format
msgid ""
", <xref linkend=\"ST_Point\"/>, <xref linkend=\"ST_PointM\"/>, <xref linkend="
"\"ST_PointZ\"/>"
msgstr ""
", <xref linkend=\"ST_Point\"/>, <xref linkend=\"ST_SetSRID\"/>, <xref "
"linkend=\"ST_SRID\"/>"

#. Tag: refname
#: reference_constructor.xml:659
#, no-c-format
msgid "ST_Polygon"
msgstr "ST_Polygon"

#. Tag: refpurpose
#: reference_constructor.xml:660
#, no-c-format
msgid "Creates a Polygon from a LineString with a specified SRID."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:665
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_Polygon</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>lineString</parameter></"
"paramdef> <paramdef><type>integer </type> <parameter>srid</parameter></"
"paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_Polygon</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>aLineString</parameter></"
"paramdef> <paramdef><type>integer </type> <parameter>srid</parameter></"
"paramdef>"

#. Tag: para
#: reference_constructor.xml:676
#, no-c-format
msgid ""
"Returns a polygon built from the given LineString and sets the spatial "
"reference system from the <varname>srid</varname>."
msgstr ""

#. Tag: para
#: reference_constructor.xml:679
#, no-c-format
msgid ""
"ST_Polygon is similar to <xref linkend=\"ST_MakePolygon\"/> Variant 1 with "
"the addition of setting the SRID."
msgstr ""

#. Tag: para
#: reference_constructor.xml:681
#, fuzzy, no-c-format
msgid ""
"To create polygons with holes use <xref linkend=\"ST_MakePolygon\"/> Variant "
"2 and then <xref linkend=\"ST_SetSRID\"/>."
msgstr ", <xref linkend=\"ST_MakePoint\"/>, <xref linkend=\"ST_SetSRID\"/>"

#. Tag: para
#: reference_constructor.xml:689
#, no-c-format
msgid "&sfs_compliant;"
msgstr "&sfs_compliant;"

#. Tag: para
#: reference_constructor.xml:690
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 8.3.2"
msgstr "&sqlmm_compliant; SQL-MM 3: 8.3.2"

#. Tag: para
#: reference_constructor.xml:698
#, no-c-format
msgid "Create a 2D polygon."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:699
#, no-c-format
msgid ""
"SELECT ST_AsText( ST_Polygon('LINESTRING(75 29, 77 29, 77 29, 75 29)'::"
"geometry, 4326) );\n"
"\n"
"-- result --\n"
"POLYGON((75 29, 77 29, 77 29, 75 29))"
msgstr ""

#. Tag: para
#: reference_constructor.xml:700
#, no-c-format
msgid "Create a 3D polygon."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:701
#, no-c-format
msgid ""
"SELECT ST_AsEWKT( ST_Polygon( ST_GeomFromEWKT('LINESTRING(75 29 1, 77 29 2, "
"77 29 3, 75 29 1)'), 4326) );\n"
"\n"
"-- result --\n"
"SRID=4326;POLYGON((75 29 1, 77 29 2, 77 29 3, 75 29 1))"
msgstr ""

#. Tag: para
#: reference_constructor.xml:708
#, no-c-format
msgid ""
", <xref linkend=\"ST_AsText\"/>, <xref linkend=\"ST_GeomFromEWKT\"/>, <xref "
"linkend=\"ST_GeomFromText\"/>, <xref linkend=\"ST_LineMerge\"/>, <xref "
"linkend=\"ST_MakePolygon\"/>"
msgstr ""
", <xref linkend=\"ST_AsText\"/>, <xref linkend=\"ST_GeomFromEWKT\"/>, <xref "
"linkend=\"ST_GeomFromText\"/>, <xref linkend=\"ST_LineMerge\"/>, <xref "
"linkend=\"ST_MakePolygon\"/>"

#. Tag: refname
#: reference_constructor.xml:715
#, fuzzy, no-c-format
msgid "ST_TileEnvelope"
msgstr "ST_MakeEnvelope"

#. Tag: refpurpose
#: reference_constructor.xml:716
#, no-c-format
msgid ""
"Creates a rectangular Polygon in <ulink url=\"https://en.wikipedia.org/wiki/"
"Web_Mercator_projection\">Web Mercator</ulink> (SRID:3857) using the <ulink "
"url=\"https://en.wikipedia.org/wiki/Tiled_web_map\">XYZ tile system</ulink>."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:721
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_TileEnvelope</function></funcdef> "
"<paramdef><type>integer</type> <parameter>tileZoom</parameter></paramdef> "
"<paramdef><type>integer</type> <parameter>tileX</parameter></paramdef> "
"<paramdef><type>integer</type> <parameter>tileY</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>geometry</type> <parameter>bounds=SRID=3857;"
"LINESTRING(-20037508.342789 -20037508.342789,20037508.342789 "
"20037508.342789)</parameter></paramdef> <paramdef choice=\"opt"
"\"><type>float</type> <parameter>margin=0.0</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
"<paramdef><type>double precision</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>z</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>m</parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:735
#, no-c-format
msgid ""
"Creates a rectangular Polygon in <ulink url=\"https://en.wikipedia.org/wiki/"
"Web_Mercator_projection\">Web Mercator</ulink> (SRID:3857) using the <ulink "
"url=\"https://en.wikipedia.org/wiki/Tiled_web_map\">XYZ tile system</ulink>. "
"By default, the bounds are the in EPSG:3857 using the standard range of the "
"Web Mercator system (-20037508.342789, 20037508.342789). The optional bounds "
"parameter can be used to generate envelopes for any tiling scheme: provide a "
"geometry that has the SRID and extent of the initial \"zoom level zero\" "
"square within which the tile system is to be inscribed."
msgstr ""

#. Tag: para
#: reference_constructor.xml:737
#, no-c-format
msgid ""
"The optional margin parameter can be used to grow a tile by the given "
"percentage, e.g. margin=0.125 grows the tile by 12.5%, which is equivalent "
"to buffer=512 when extent is 4096, as used in <xref linkend=\"ST_AsMVTGeom\"/"
">. This is useful to create a tile buffer -- to include data lying outside "
"of the tile's visible area, but whose existence affects current tile's "
"rendering. For example, a city name (a geopoint) could be near an edge of a "
"tile, but the text would need to render on two tiles, even though the "
"geopoint is located in the visible area of just one tile. Using an expanded "
"tile in a search would include the city geopoint for both tiles. Use "
"negative value to shrink the tile instead. Values less than -0.5 are "
"prohibited because that would eliminate the tile completely. Do not use "
"margin with ST_AsMVTGeom(). See example in <xref linkend=\"ST_AsMVT\"/>."
msgstr ""

#. Tag: para
#: reference_constructor.xml:739
#, fuzzy, no-c-format
msgid "Enhanced: 3.1.0 Added margin parameter."
msgstr "Amélioration: 2.0.0 paramètre optionnel de srid par défaut ajouté. "

#. Tag: para
#: reference_constructor.xml:740
#, fuzzy, no-c-format
msgid "Availability: 3.0.0"
msgstr "Disponibilité: 2.1.0"

#. Tag: title
#: reference_constructor.xml:744
#, fuzzy, no-c-format
msgid "Example: Building a tile envelope"
msgstr "Exemple: Construire un polygone englobant"

#. Tag: programlisting
#: reference_constructor.xml:745
#, no-c-format
msgid ""
"SELECT ST_AsText( ST_TileEnvelope(2, 1, 1) );\n"
"\n"
" st_astext\n"
"------------------------------\n"
" POLYGON((-10018754.1713945 0,-10018754.1713945 10018754.1713945,0 "
"10018754.1713945,0 0,-10018754.1713945 0))\n"
"\n"
"SELECT ST_AsText( ST_TileEnvelope(3, 1, 1, ST_MakeEnvelope(-180, -90, 180, "
"90, 4326) ) );\n"
"\n"
"                      st_astext\n"
"------------------------------------------------------\n"
" POLYGON((-135 45,-135 67.5,-90 67.5,-90 45,-135 45))"
msgstr ""

#. Tag: refname
#: reference_constructor.xml:757
#, no-c-format
msgid "ST_HexagonGrid"
msgstr ""

#. Tag: refpurpose
#: reference_constructor.xml:758
#, no-c-format
msgid ""
"Returns a set of hexagons and cell indices that completely cover the bounds "
"of the geometry argument."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:763
#, fuzzy, no-c-format
msgid ""
"<funcdef>setof record <function>ST_HexagonGrid</function></funcdef> "
"<paramdef><type>float8</type> <parameter>size</parameter></paramdef> "
"<paramdef><type>geometry</type> <parameter>bounds</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_Point</function></funcdef> "
"<paramdef><type>float </type> <parameter>x_lon</parameter></paramdef> "
"<paramdef><type>float </type> <parameter>y_lat</parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:774
#, no-c-format
msgid ""
"Starts with the concept of a hexagon tiling of the plane. (Not a hexagon "
"tiling of the globe, this is not the <ulink url=\"https://github.com/uber/"
"h3\">H3</ulink> tiling scheme.) For a given planar SRS, and a given edge "
"size, starting at the origin of the SRS, there is one unique hexagonal "
"tiling of the plane, Tiling(SRS, Size). This function answers the question: "
"what hexagons in a given Tiling(SRS, Size) overlap with a given bounds."
msgstr ""

#. Tag: para
#: reference_constructor.xml:786
#, no-c-format
msgid ""
"The SRS for the output hexagons is the SRS provided by the bounds geometry."
msgstr ""

#. Tag: para
#: reference_constructor.xml:787
#, no-c-format
msgid ""
"Doubling or tripling the edge size of the hexagon generates a new parent "
"tiling that fits with the origin tiling. Unfortunately, it is not possible "
"to generate parent hexagon tilings that the child tiles perfectly fit inside."
msgstr ""

#. Tag: para
#: reference_constructor.xml:795 reference_constructor.xml:851
#: reference_constructor.xml:894 reference_constructor.xml:953
#, fuzzy, no-c-format
msgid "Availability: 3.1.0"
msgstr "Disponibilité: 2.1.0"

#. Tag: title
#: reference_constructor.xml:800
#, fuzzy, no-c-format
msgid "Example: Counting points in hexagons"
msgstr "Exemple: version utilisant un Tableau"

#. Tag: para
#: reference_constructor.xml:801
#, no-c-format
msgid ""
"To do a point summary against a hexagonal tiling, generate a hexagon grid "
"using the extent of the points as the bounds, then spatially join to that "
"grid."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:803
#, no-c-format
msgid ""
"SELECT COUNT(*), hexes.geom\n"
"FROM\n"
"    ST_HexagonGrid(\n"
"        10000,\n"
"        ST_SetSRID(ST_EstimatedExtent('pointtable', 'geom'), 3857)\n"
"    ) AS hexes\n"
"    INNER JOIN\n"
"    pointtable AS pts\n"
"    ON ST_Intersects(pts.geom, hexes.geom)\n"
"GROUP BY hexes.geom;"
msgstr ""

#. Tag: title
#: reference_constructor.xml:806
#, fuzzy, no-c-format
msgid "Example: Generating hex coverage of polygons"
msgstr "Exemple: Construire un polygone englobant"

#. Tag: para
#: reference_constructor.xml:807
#, no-c-format
msgid ""
"If we generate a set of hexagons for each polygon boundary and filter out "
"those that do not intersect their hexagons, we end up with a tiling for each "
"polygon."
msgstr ""

#. Tag: para
#: reference_constructor.xml:813
#, no-c-format
msgid ""
"Tiling states results in a hexagon coverage of each state, and multiple "
"hexagons overlapping at the borders between states."
msgstr ""

#. Tag: para
#: reference_constructor.xml:815
#, no-c-format
msgid ""
"The LATERAL keyword is implied for set-returning functions when referring to "
"a prior table in the FROM list. So CROSS JOIN LATERAL, CROSS JOIN, or just "
"plain , are equivalent constructs for this example."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:816
#, no-c-format
msgid ""
"SELECT admin1.gid, hex.geom\n"
"FROM\n"
"    admin1\n"
"    CROSS JOIN\n"
"    ST_HexagonGrid(100000, admin1.geom) AS hex\n"
"WHERE\n"
"    adm0_a3 = 'USA'\n"
"    AND\n"
"    ST_Intersects(admin1.geom, hex.geom)"
msgstr ""

#. Tag: para
#: reference_constructor.xml:820
#, fuzzy, no-c-format
msgid ""
", <xref linkend=\"ST_SetSRID\"/>, <xref linkend=\"ST_SquareGrid\"/>, <xref "
"linkend=\"ST_TileEnvelope\"/>"
msgstr ""
", <xref linkend=\"ST_MakePoint\"/>, <xref linkend=\"ST_Point\"/>, <xref "
"linkend=\"ST_SRID\"/>"

#. Tag: refname
#: reference_constructor.xml:826
#, no-c-format
msgid "ST_Hexagon"
msgstr ""

#. Tag: refpurpose
#: reference_constructor.xml:827
#, no-c-format
msgid ""
"Returns a single hexagon, using the provided edge size and cell coordinate "
"within the hexagon grid space."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:833
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_Hexagon</function></funcdef> "
"<paramdef><type>float8</type> <parameter>size</parameter></paramdef> "
"<paramdef><type>integer</type> <parameter>cell_i</parameter></paramdef> "
"<paramdef><type>integer</type> <parameter>cell_j</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>geometry</type> <parameter>origin</"
"parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
"<paramdef><type>double precision</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>z</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>m</parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:846
#, no-c-format
msgid ""
"Uses the same hexagon tiling concept as <xref linkend=\"ST_HexagonGrid\"/>, "
"but generates just one hexagon at the desired cell coordinate. Optionally, "
"can adjust origin coordinate of the tiling, the default origin is at 0,0."
msgstr ""

#. Tag: para
#: reference_constructor.xml:849
#, no-c-format
msgid ""
"Hexagons are generated with no SRID set, so use <xref linkend=\"ST_SetSRID\"/"
"> to set the SRID to the one you expect."
msgstr ""

#. Tag: title
#: reference_constructor.xml:855
#, no-c-format
msgid "Example: Creating a hexagon at the origin"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:856
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_SetSRID(ST_Hexagon(1.0, 0, 0), 3857));\n"
"\n"
"POLYGON((-1 0,-0.5\n"
"         -0.866025403784439,0.5\n"
"         -0.866025403784439,1\n"
"         0,0.5\n"
"         0.866025403784439,-0.5\n"
"         0.866025403784439,-1 0))"
msgstr ""

#. Tag: para
#: reference_constructor.xml:860
#, fuzzy, no-c-format
msgid ", <xref linkend=\"ST_HexagonGrid\"/>, <xref linkend=\"ST_Square\"/>"
msgstr ", <xref linkend=\"ST_MakePoint\"/>, <xref linkend=\"ST_SetSRID\"/>"

#. Tag: refname
#: reference_constructor.xml:866
#, no-c-format
msgid "ST_SquareGrid"
msgstr ""

#. Tag: refpurpose
#: reference_constructor.xml:867
#, no-c-format
msgid ""
"Returns a set of grid squares and cell indices that completely cover the "
"bounds of the geometry argument."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:872
#, fuzzy, no-c-format
msgid ""
"<funcdef>setof record <function>ST_SquareGrid</function></funcdef> "
"<paramdef><type>float8</type> <parameter>size</parameter></paramdef> "
"<paramdef><type>geometry</type> <parameter>bounds</parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_Point</function></funcdef> "
"<paramdef><type>float </type> <parameter>x_lon</parameter></paramdef> "
"<paramdef><type>float </type> <parameter>y_lat</parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:883
#, no-c-format
msgid ""
"Starts with the concept of a square tiling of the plane. For a given planar "
"SRS, and a given edge size, starting at the origin of the SRS, there is one "
"unique square tiling of the plane, Tiling(SRS, Size). This function answers "
"the question: what grids in a given Tiling(SRS, Size) overlap with a given "
"bounds."
msgstr ""

#. Tag: para
#: reference_constructor.xml:889
#, no-c-format
msgid ""
"The SRS for the output squares is the SRS provided by the bounds geometry."
msgstr ""

#. Tag: para
#: reference_constructor.xml:890
#, no-c-format
msgid ""
"Doubling or edge size of the square generates a new parent tiling that "
"perfectly fits with the original tiling. Standard web map tilings in "
"mercator are just powers-of-two square grids in the mercator plane."
msgstr ""

#. Tag: title
#: reference_constructor.xml:899
#, no-c-format
msgid "Example: Generating a 1 degree grid for a country"
msgstr ""

#. Tag: para
#: reference_constructor.xml:900
#, no-c-format
msgid ""
"The grid will fill the whole bounds of the country, so if you want just "
"squares that touch the country you will have to filter afterwards with "
"ST_Intersects."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:902
#, no-c-format
msgid ""
"WITH grid AS (\n"
"SELECT (ST_SquareGrid(1, ST_Transform(geom,4326))).*\n"
"FROM admin0 WHERE name = 'Canada'\n"
")\n"
"  SELEcT ST_AsText(geom)\n"
"  FROM grid"
msgstr ""

#. Tag: title
#: reference_constructor.xml:906
#, no-c-format
msgid "Example: Counting points in squares (using single chopped grid)"
msgstr ""

#. Tag: para
#: reference_constructor.xml:907
#, no-c-format
msgid ""
"To do a point summary against a square tiling, generate a square grid using "
"the extent of the points as the bounds, then spatially join to that grid. "
"Note the estimated extent might be off from actual extent, so be cautious "
"and at very least make sure you've analyzed your table."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:909
#, no-c-format
msgid ""
"SELECT COUNT(*), squares.geom\n"
"    FROM\n"
"    pointtable AS pts\n"
"    INNER JOIN\n"
"    ST_SquareGrid(\n"
"        1000,\n"
"        ST_SetSRID(ST_EstimatedExtent('pointtable', 'geom'), 3857)\n"
"    ) AS squares\n"
"    ON ST_Intersects(pts.geom, squares.geom)\n"
"    GROUP BY squares.geom"
msgstr ""

#. Tag: title
#: reference_constructor.xml:913
#, no-c-format
msgid "Example: Counting points in squares using set of grid per point"
msgstr ""

#. Tag: para
#: reference_constructor.xml:914
#, no-c-format
msgid ""
"This yields the same result as the first example but will be slower for a "
"large number of points"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:915
#, no-c-format
msgid ""
"SELECT COUNT(*), squares.geom\n"
"    FROM\n"
"    pointtable AS pts\n"
"    INNER JOIN\n"
"    ST_SquareGrid(\n"
"        1000,\n"
"       pts.geom\n"
"    ) AS squares\n"
"    ON ST_Intersects(pts.geom, squares.geom)\n"
"    GROUP BY squares.geom"
msgstr ""

#. Tag: para
#: reference_constructor.xml:920
#, fuzzy, no-c-format
msgid ""
", <xref linkend=\"ST_HexagonGrid\"/> , <xref linkend=\"ST_EstimatedExtent\"/"
"> , <xref linkend=\"ST_SetSRID\"/>"
msgstr ""
", <xref linkend=\"ST_Point\"/>, <xref linkend=\"ST_SetSRID\"/>, <xref "
"linkend=\"ST_SRID\"/>"

#. Tag: refname
#: reference_constructor.xml:928
#, no-c-format
msgid "ST_Square"
msgstr ""

#. Tag: refpurpose
#: reference_constructor.xml:929
#, no-c-format
msgid ""
"Returns a single square, using the provided edge size and cell coordinate "
"within the square grid space."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:935
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_Square</function></funcdef> "
"<paramdef><type>float8</type> <parameter>size</parameter></paramdef> "
"<paramdef><type>integer</type> <parameter>cell_i</parameter></paramdef> "
"<paramdef><type>integer</type> <parameter>cell_j</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>geometry</type> <parameter>origin</"
"parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
"<paramdef><type>double precision</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>z</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>m</parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:948
#, no-c-format
msgid ""
"Uses the same square tiling concept as <xref linkend=\"ST_SquareGrid\"/>, "
"but generates just one square at the desired cell coordinate. Optionally, "
"can adjust origin coordinate of the tiling, the default origin is at 0,0."
msgstr ""

#. Tag: para
#: reference_constructor.xml:951
#, no-c-format
msgid ""
"Squares are generated with no SRID set, so use <xref linkend=\"ST_SetSRID\"/"
"> to set the SRID to the one you expect."
msgstr ""

#. Tag: title
#: reference_constructor.xml:957
#, no-c-format
msgid "Example: Creating a square at the origin"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:958
#, fuzzy, no-c-format
msgid ""
"SELECT ST_AsText(ST_SetSRID(ST_Square(1.0, 0, 0), 3857));\n"
"\n"
" POLYGON((0 0,0 1,1 1,1 0,0 0))"
msgstr ""
"SELECT ST_AsText(ST_MakeEnvelope(10, 10, 11, 11, 4326));\n"
"\n"
"st_asewkt\n"
"-----------\n"
"POLYGON((10 10, 10 11, 11 11, 11 10, 10 10))"

#. Tag: para
#: reference_constructor.xml:962
#, fuzzy, no-c-format
msgid ", <xref linkend=\"ST_SquareGrid\"/>, <xref linkend=\"ST_Hexagon\"/>"
msgstr ", <xref linkend=\"ST_MakeLine\"/>, <xref linkend=\"ST_MakePolygon\"/>"

#. Tag: refname
#: reference_constructor.xml:970
#, no-c-format
msgid "ST_Letters"
msgstr ""

#. Tag: refpurpose
#: reference_constructor.xml:971
#, no-c-format
msgid ""
"Returns the input letters rendered as geometry with a default start position "
"at the origin and default text height of 100."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:975
#, fuzzy, no-c-format
msgid ""
"<funcdef>geometry <function>ST_Letters</function></funcdef> "
"<paramdef><type>text</type> <parameter> letters</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>double precision</type> <parameter> "
"text_height=100.0</parameter></paramdef> <paramdef choice=\"opt"
"\"><type>geometry</type> <parameter> start_position=POINT(0 0)</parameter></"
"paramdef> <paramdef choice=\"opt\"><type>json</type> <parameter> font</"
"parameter></paramdef>"
msgstr ""
"<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
"<paramdef><type>double precision</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>z</parameter></paramdef> "
"<paramdef><type>double precision</type> <parameter>m</parameter></paramdef>"

#. Tag: para
#: reference_constructor.xml:988
#, no-c-format
msgid ""
"Uses a built-in font to render out a string as a multipolygon geometry. The "
"default text height is 100.0, the distance from the bottom of a descender to "
"the top of a capital. The default start position places the start of the "
"baseline at the origin. Over-riding the font involves passing in a json map, "
"with a character as the key, and base64 encoded TWKB for the font shape, "
"with the fonts having a height of 1000 units from the bottom of the "
"descenders to the tops of the capitals."
msgstr ""

#. Tag: para
#: reference_constructor.xml:991
#, fuzzy, no-c-format
msgid "Availability: 3.3.0"
msgstr "Disponibilité: 2.1.0"

#. Tag: title
#: reference_constructor.xml:995
#, fuzzy, no-c-format
msgid "Example: Generating the word 'Yo'"
msgstr "Exemple: Construire un polygone englobant"

#. Tag: programlisting
#: reference_constructor.xml:996
#, no-c-format
msgid "SELECT ST_AsText(ST_Letters('Yo'), 1);"
msgstr ""

#. Tag: para
#: reference_constructor.xml:1002
#, no-c-format
msgid "Letters generated by ST_Letters"
msgstr ""

#, no-c-format
#~ msgid ""
#~ ", <xref linkend=\"ST_MakePoint\"/>, <xref linkend=\"ST_SetSRID\"/>, <xref "
#~ "linkend=\"ST_Transform\"/>"
#~ msgstr ""
#~ ", <xref linkend=\"ST_MakePoint\"/>, <xref linkend=\"ST_SetSRID\"/>, <xref "
#~ "linkend=\"ST_Transform\"/>"

#~ msgid "ST_BdPolyFromText"
#~ msgstr "ST_BdPolyFromText"

#~ msgid ""
#~ "<refpurpose>Construct a Polygon given an arbitrary collection of closed "
#~ "linestrings as a MultiLineString Well-Known text representation.</"
#~ "refpurpose>"
#~ msgstr ""
#~ "<refpurpose>Construit un Polygon à partir d'une collection de lignes "
#~ "fermées, exprimées sous forme de MultiLineString en représentation Well-"
#~ "Known text.</refpurpose>"

#~ msgid ""
#~ "<funcdef>geometry <function>ST_BdPolyFromText</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>WKT</parameter></paramdef> "
#~ "<paramdef><type>integer </type> <parameter>srid</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_BdPolyFromText</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>WKT</parameter></paramdef> "
#~ "<paramdef><type>integer </type> <parameter>srid</parameter></paramdef>"

#~ msgid ""
#~ "<para>Construct a Polygon given an arbitrary collection of closed "
#~ "linestrings as a MultiLineString Well-Known text representation.</para>"
#~ msgstr ""
#~ "<para>Construit un Polygon à partir d'une collection de lignes fermées, "
#~ "exprimées sous forme de MultiLineString en représentation Well-Known text."
#~ "</para>"

#~ msgid ""
#~ "Throws an error if WKT is not a MULTILINESTRING. Throws an error if "
#~ "output is a MULTIPOLYGON; use ST_BdMPolyFromText in that case, or see "
#~ "ST_BuildArea() for a postgis-specific approach."
#~ msgstr ""
#~ "Renvoie une erreur si le WKT n'est pas une MULTILINESTRING. Renvoie une "
#~ "erreur si le résultat est un MULTIPOLYGON. Utiliser ST_BdMPolyFromText "
#~ "dans ce cas, ou voir ST_BuildArea()  pour une approche basée sur une "
#~ "fonction spécifique."

#~ msgid "&sfs_compliant; s3.2.6.2"
#~ msgstr "&sfs_compliant; s3.2.6.2"

#~ msgid "Availability: 1.1.0 - requires GEOS &gt;= 2.1.0."
#~ msgstr "Disponibilité: 1.1.0 - nécessite GEOS &gt;= 2.1.0."

#~ msgid "Forthcoming"
#~ msgstr "A venir"

#~ msgid ", <xref linkend=\"ST_BdMPolyFromText\"/>"
#~ msgstr ", <xref linkend=\"ST_BdMPolyFromText\"/>"

#~ msgid "ST_BdMPolyFromText"
#~ msgstr "ST_BdMPolyFromText"

#~ msgid ""
#~ "Construct a MultiPolygon given an arbitrary collection of closed "
#~ "linestrings as a MultiLineString text representation Well-Known text "
#~ "representation."
#~ msgstr ""
#~ "Construit un MultiPolygon à partir d'une collection de lignes fermées, "
#~ "exprimées sous forme de MultiLineString en représentation Well-Known text."

#~ msgid ""
#~ "<funcdef>geometry <function>ST_BdMPolyFromText</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>WKT</parameter></paramdef> "
#~ "<paramdef><type>integer </type> <parameter>srid</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_BdMPolyFromText</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>WKT</parameter></paramdef> "
#~ "<paramdef><type>integer </type> <parameter>srid</parameter></paramdef>"

#~ msgid ""
#~ "Construct a Polygon given an arbitrary collection of closed linestrings, "
#~ "polygons, MultiLineStrings as Well-Known text representation."
#~ msgstr ""
#~ "Construit un Polygon à partir d'une collection de lignes fermées, de "
#~ "polygones ou de MultiLineStrings exprimés en représentation Well-Known "
#~ "text."

#~ msgid ""
#~ "Throws an error if WKT is not a MULTILINESTRING. Forces MULTIPOLYGON "
#~ "output even when result is really only composed by a single POLYGON; use "
#~ "<link linkend=\"ST_BdPolyFromText\">ST_BdPolyFromText</link> if you're "
#~ "sure a single POLYGON will result from operation, or see <link linkend="
#~ "\"ST_BuildArea\">ST_BuildArea()</link> for a postgis-specific approach."
#~ msgstr ""
#~ "Renvoie une erreur si le WKT n'est pas une MULTILINESTRING. Force le type "
#~ "de retour en MULTIPOLYGON même si le résultat est en fait composé d'un "
#~ "seul POLYGON. Utiliser <link linkend=\"ST_BdPolyFromText"
#~ "\">ST_BdPolyFromText</link> si l'on est sûr que le résultat produit des "
#~ "Polygon, ou voir la fonction spécifique PostGIS <link linkend="
#~ "\"ST_BuildArea\">ST_BuildArea()</link>."

#~ msgid ", <xref linkend=\"ST_BdPolyFromText\"/>"
#~ msgstr ", <xref linkend=\"ST_BdPolyFromText\"/>"

#~ msgid "ST_Box2dFromGeoHash"
#~ msgstr "ST_Box2dFromGeoHash"

#~ msgid "<refpurpose>Return a BOX2D from a GeoHash string.</refpurpose>"
#~ msgstr ""
#~ "<refpurpose>Retourne une BOX2D à partir d'une chaîne GeoHash.</refpurpose>"

#~ msgid ""
#~ "<funcdef>box2d <function>ST_Box2dFromGeoHash</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>geohash</parameter></paramdef> "
#~ "<paramdef choice=\"opt\"><type>integer </type> "
#~ "<parameter>precision=full_precision_of_geohash</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>box2d <function>ST_Box2dFromGeoHash</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>geohash</parameter></paramdef> "
#~ "<paramdef choice=\"opt\"><type>integer </type> "
#~ "<parameter>precision=full_precision_of_geohash</parameter></paramdef>"

#~ msgid "<para>Return a BOX2D from a GeoHash string.</para>"
#~ msgstr ""
#~ "<refpurpose>Retourne une BOX2D à partir d'une chaîne GeoHash.</refpurpose>"

#~ msgid ""
#~ "If no <varname>precision</varname> is specficified ST_Box2dFromGeoHash "
#~ "returns a BOX2D based on full precision of the input GeoHash string."
#~ msgstr ""
#~ "Si aucune <varname>precision</varname> n'est spécifiée,  "
#~ "ST_Box2dFromGeoHash retourne une BOX2D basée sur la précision complète de "
#~ "la chaîne GeoHash en entrée."

#~ msgid ""
#~ "If <varname>precision</varname> is specified ST_Box2dFromGeoHash will use "
#~ "that many characters from the GeoHash to create the BOX2D. Lower "
#~ "precision values results in larger BOX2Ds and larger values increase the "
#~ "precision."
#~ msgstr ""
#~ "Si <varname>precision</varname> est spécifié,  ST_Box2dFromGeoHash "
#~ "utilise autant de caractère du GeoHash pour créer la BOX2D. Une précision "
#~ "plus basse retourne des BOXD2 plus grandes, et une valeur plus haute "
#~ "améliore la précision."

#~ msgid ""
#~ "<![CDATA[SELECT ST_Box2dFromGeoHash('9qqj7nmxncgyy4d0dbxqz0');\n"
#~ "\n"
#~ "                st_geomfromgeohash\n"
#~ "--------------------------------------------------\n"
#~ " BOX(-115.172816 36.114646,-115.172816 36.114646)\n"
#~ "\n"
#~ "SELECT ST_Box2dFromGeoHash('9qqj7nmxncgyy4d0dbxqz0', 0);\n"
#~ "\n"
#~ " st_box2dfromgeohash\n"
#~ "----------------------\n"
#~ " BOX(-180 -90,180 90)\n"
#~ "\n"
#~ " SELECT ST_Box2dFromGeoHash('9qqj7nmxncgyy4d0dbxqz0', 10);\n"
#~ "                            st_box2dfromgeohash\n"
#~ "---------------------------------------------------------------------------\n"
#~ " BOX(-115.17282128334 36.1146408319473,-115.172810554504 "
#~ "36.1146461963654)\n"
#~ "                ]]>"
#~ msgstr ""
#~ "<![CDATA[SELECT ST_Box2dFromGeoHash('9qqj7nmxncgyy4d0dbxqz0');\n"
#~ "\n"
#~ "                st_geomfromgeohash\n"
#~ "--------------------------------------------------\n"
#~ " BOX(-115.172816 36.114646,-115.172816 36.114646)\n"
#~ "\n"
#~ "SELECT ST_Box2dFromGeoHash('9qqj7nmxncgyy4d0dbxqz0', 0);\n"
#~ "\n"
#~ " st_box2dfromgeohash\n"
#~ "----------------------\n"
#~ " BOX(-180 -90,180 90)\n"
#~ "\n"
#~ " SELECT ST_Box2dFromGeoHash('9qqj7nmxncgyy4d0dbxqz0', 10);\n"
#~ "                            st_box2dfromgeohash\n"
#~ "---------------------------------------------------------------------------\n"
#~ " BOX(-115.17282128334 36.1146408319473,-115.172810554504 "
#~ "36.1146461963654)\n"
#~ "                ]]>"

#~ msgid ""
#~ ", <xref linkend=\"ST_GeomFromGeoHash\"/>, <xref linkend="
#~ "\"ST_PointFromGeoHash\"/>"
#~ msgstr ""
#~ ", <xref linkend=\"ST_GeomFromGeoHash\"/>, <xref linkend="
#~ "\"ST_PointFromGeoHash\"/>"

#~ msgid "ST_GeogFromText"
#~ msgstr "ST_GeogFromText"

#~ msgid ""
#~ "Return a specified geography value from Well-Known Text representation or "
#~ "extended (WKT)."
#~ msgstr ""
#~ "Retourne un objet de type geography à partir de sa représentation Well-"
#~ "Know Text (WKT ou EWKT)."

#~ msgid ""
#~ "<funcdef>geography <function>ST_GeogFromText</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>EWKT</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geography <function>ST_GeogFromText</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>EWKT</parameter></paramdef>"

#~ msgid ""
#~ "Returns a geography object from the well-known text or extended well-"
#~ "known representation. SRID 4326 is assumed if unspecified. This is an "
#~ "alias for ST_GeographyFromText. Points are always expressed in long lat "
#~ "form."
#~ msgstr ""
#~ "Retourne un objet de type geography à partir de sa représentation Well-"
#~ "Know Text (WKT ou EWKT). Le SRID 4326 est pris par défaut. Ceci est un "
#~ "alias pour ST_GeographyFromText. Les coordonnées des points sont "
#~ "exprimées en longitude latitude."

#~ msgid ""
#~ "--- converting lon lat coords to geography\n"
#~ "ALTER TABLE sometable ADD COLUMN geog geography(POINT,4326);\n"
#~ "UPDATE sometable SET geog = ST_GeogFromText('SRID=4326;POINT(' || lon || "
#~ "' ' || lat || ')');\n"
#~ "\n"
#~ "--- specify a geography point using EPSG:4267, NAD27\n"
#~ "SELECT ST_AsEWKT(ST_GeogFromText('SRID=4267;POINT(-77.0092 38.889588)'));"
#~ msgstr ""
#~ "--- converting lon lat coords to geography\n"
#~ "ALTER TABLE sometable ADD COLUMN geog geography(POINT,4326);\n"
#~ "UPDATE sometable SET geog = ST_GeogFromText('SRID=4326;POINT(' || lon || "
#~ "' ' || lat || ')');\n"
#~ "\n"
#~ "--- specify a geography point using EPSG:4267, NAD27\n"
#~ "SELECT ST_AsEWKT(ST_GeogFromText('SRID=4267;POINT(-77.0092 38.889588)'));"

#~ msgid ", <xref linkend=\"ST_GeographyFromText\"/>"
#~ msgstr ", <xref linkend=\"ST_GeographyFromText\"/>"

#~ msgid "ST_GeographyFromText"
#~ msgstr "ST_GeographyFromText"

#~ msgid ""
#~ "<funcdef>geography <function>ST_GeographyFromText</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>EWKT</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geography <function>ST_GeographyFromText</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>EWKT</parameter></paramdef>"

#~ msgid ""
#~ "Returns a geography object from the well-known text representation. SRID "
#~ "4326 is assumed if unspecified."
#~ msgstr ""
#~ "Retourne un objet de type geography à partir de sa représentation Well-"
#~ "Know Text (WKT ou EWKT). SRID 4326 par défaut."

#~ msgid ", <xref linkend=\"ST_AsText\"/>"
#~ msgstr ", <xref linkend=\"ST_AsText\"/>"

#~ msgid "ST_GeogFromWKB"
#~ msgstr "ST_GeogFromWKB"

#~ msgid ""
#~ "Creates a geography instance from a Well-Known Binary geometry "
#~ "representation (WKB) or extended Well Known Binary (EWKB)."
#~ msgstr ""
#~ "Retourne un objet de type geography à partir de sa représentation binaire "
#~ "Well-Know Binary (WKB ou EWKB)."

#~ msgid ""
#~ "<funcdef>geography <function>ST_GeogFromWKB</function></funcdef> "
#~ "<paramdef><type>bytea </type> <parameter>wkb</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geography <function>ST_GeogFromWKB</function></funcdef> "
#~ "<paramdef><type>bytea </type> <parameter>wkb</parameter></paramdef>"

#~ msgid ""
#~ "The <varname>ST_GeogFromWKB</varname> function, takes a well-known binary "
#~ "representation (WKB) of a geometry or PostGIS Extended WKB and creates an "
#~ "instance of the appropriate geography type. This function plays the role "
#~ "of the Geometry Factory in SQL."
#~ msgstr ""
#~ "<varname>ST_GeogFromWKB</varname> prend en paramètre une représentation "
#~ "binaire d'une géométrie (WKB ou EWKB) et crée une instance de type "
#~ "geography. Cette fonction assure le rôle de Geometry Factory en SQL."

#~ msgid "If SRID is not specified, it defaults to 4326 (WGS 84 long lat)."
#~ msgstr ""
#~ "Si le SRID n'est pas spécifié, la valeur 4326 est prise (WGS 84 long lat)."

#~ msgid ""
#~ "--Although bytea rep contains single \\, these need to be escaped when "
#~ "inserting into a table\n"
#~ "SELECT ST_AsText(\n"
#~ "ST_GeogFromWKB(E'\\\\001\\\\002\\\\000\\\\000\\\\000\\\\002\\\\000\\"
#~ "\\000\\\\000\\\\037\\\\205\\\\353Q\\\\270~\\\\\\\\\\\\300\\\\323Mb\\\\020X"
#~ "\\\\231C@\\\\020X9\\\\264\\\\310~\\\\\\\\\\\\300)\\\\\\\\\\\\217\\\\302\\"
#~ "\\365\\\\230C@')\n"
#~ ");\n"
#~ "                                          st_astext\n"
#~ "------------------------------------------------------\n"
#~ " LINESTRING(-113.98 39.198,-113.981 39.195)\n"
#~ "(1 row)"
#~ msgstr ""
#~ "--Although bytea rep contains single \\, these need to be escaped when "
#~ "inserting into a table\n"
#~ "SELECT ST_AsText(\n"
#~ "ST_GeogFromWKB(E'\\\\001\\\\002\\\\000\\\\000\\\\000\\\\002\\\\000\\"
#~ "\\000\\\\000\\\\037\\\\205\\\\353Q\\\\270~\\\\\\\\\\\\300\\\\323Mb\\\\020X"
#~ "\\\\231C@\\\\020X9\\\\264\\\\310~\\\\\\\\\\\\300)\\\\\\\\\\\\217\\\\302\\"
#~ "\\365\\\\230C@')\n"
#~ ");\n"
#~ "                                          st_astext\n"
#~ "------------------------------------------------------\n"
#~ " LINESTRING(-113.98 39.198,-113.981 39.195)\n"
#~ "(1 row)"

#~ msgid "ST_GeomFromTWKB"
#~ msgstr "ST_GeomFromTWKB"

#~ msgid ""
#~ "Creates a geometry instance from a TWKB (\"<ulink url=\"https://github."
#~ "com/TWKB/Specification/blob/master/twkb.md\">Tiny Well-Known Binary</"
#~ "ulink>\") geometry representation."
#~ msgstr ""
#~ "Crée une instance de geometry depuis une représentation de géométrie en "
#~ "TWKB (\"<ulink url=\"https://github.com/TWKB/Specification/blob/master/"
#~ "twkb.md\">Tiny Well-Known Binary</ulink>\")."

#~ msgid ""
#~ "<funcdef>geometry <function>ST_GeomFromTWKB</function></funcdef> "
#~ "<paramdef><type>bytea </type> <parameter>twkb</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_GeomFromTWKB</function></funcdef> "
#~ "<paramdef><type>bytea </type> <parameter>twkb</parameter></paramdef>"

#~ msgid ""
#~ "The <varname>ST_GeomFromTWKB</varname> function, takes a a TWKB (\"<ulink "
#~ "url=\"https://github.com/TWKB/Specification/blob/master/twkb.md\">Tiny "
#~ "Well-Known Binary</ulink>\") geometry representation (WKB) and creates an "
#~ "instance of the appropriate geometry type."
#~ msgstr ""
#~ "La fonction <varname>ST_GeomFromTWKB</varname> prend une représentation "
#~ "de géométrie TWKB (\"<ulink url=\"https://github.com/TWKB/Specification/"
#~ "blob/master/twkb.md\">Tiny Well-Known Binary</ulink>\") et crée une "
#~ "instance du type de géométrie approprié."

#~ msgid ""
#~ "SELECT ST_AsText(ST_GeomFromTWKB(ST_AsTWKB('LINESTRING(126 34, 127 35)'::"
#~ "geometry)));\n"
#~ "\n"
#~ "         st_astext\n"
#~ "-----------------------------\n"
#~ " LINESTRING(126 34, 127 35)\n"
#~ "(1 row)\n"
#~ "\n"
#~ "\n"
#~ "SELECT ST_AsEWKT(\n"
#~ "  ST_GeomFromTWKB(E'\\\\x620002f7f40dbce4040105')\n"
#~ ");\n"
#~ "                                          st_asewkt\n"
#~ "------------------------------------------------------\n"
#~ "LINESTRING(-113.98 39.198,-113.981 39.195)\n"
#~ "(1 row)"
#~ msgstr ""
#~ "SELECT ST_AsText(ST_GeomFromTWKB(ST_AsTWKB('LINESTRING(126 34, 127 35)'::"
#~ "geometry)));\n"
#~ "\n"
#~ "         st_astext\n"
#~ "-----------------------------\n"
#~ " LINESTRING(126 34, 127 35)\n"
#~ "(1 row)\n"
#~ "\n"
#~ "\n"
#~ "SELECT ST_AsEWKT(\n"
#~ "  ST_GeomFromTWKB(E'\\\\x620002f7f40dbce4040105')\n"
#~ ");\n"
#~ "                                          st_asewkt\n"
#~ "------------------------------------------------------\n"
#~ "LINESTRING(-113.98 39.198,-113.981 39.195)\n"
#~ "(1 row)"

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_GeomCollFromText</"
#~ "function></funcdef> <paramdef><type>text </type> <parameter>WKT</"
#~ "parameter></paramdef> <paramdef><type>integer </type> <parameter>srid</"
#~ "parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_GeomCollFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_GeomCollFromText</"
#~ "function></funcdef> <paramdef><type>text </type> <parameter>WKT</"
#~ "parameter></paramdef> <paramdef><type>integer </type> <parameter>srid</"
#~ "parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_GeomCollFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> </funcprototype>"

#~ msgid "OGC SPEC 3.2.6.2 - option SRID is from the conformance suite"
#~ msgstr "OGC SPEC 3.2.6.2 - l'option SRID est issue des tests de conformité"

#~ msgid "Returns null if the WKT is not a GEOMETRYCOLLECTION"
#~ msgstr "Retourne null si le WKT n'est pas une GEOMETRYCOLLECTION"

#~ msgid ""
#~ "If you are absolutely sure all your WKT geometries are collections, don't "
#~ "use this function. It is slower than ST_GeomFromText since it adds an "
#~ "additional validation step."
#~ msgstr ""
#~ "Si vous êtes absolument sûrs que toutes les géométries WKT sont des "
#~ "collections, ne pas utiliser cette fonction. Elle est plus lente que "
#~ "ST_GeomFromText à cause d'une étape de validation supplémentaire."

#~ msgid "&sqlmm_compliant;"
#~ msgstr "&sqlmm_compliant;"

#~ msgid ""
#~ "SELECT ST_GeomCollFromText('GEOMETRYCOLLECTION(POINT(1 2),LINESTRING(1 2, "
#~ "3 4))');"
#~ msgstr ""
#~ "SELECT ST_GeomCollFromText('GEOMETRYCOLLECTION(POINT(1 2),LINESTRING(1 2, "
#~ "3 4))');"

#~ msgid ", <xref linkend=\"ST_SRID\"/>"
#~ msgstr ", <xref linkend=\"ST_SRID\"/>"

#~ msgid "ST_GeomFromEWKB"
#~ msgstr "ST_GeomFromEWKB"

#~ msgid ""
#~ "Return a specified ST_Geometry value from Extended Well-Known Binary "
#~ "representation (EWKB)."
#~ msgstr ""
#~ "Retourne un objet ST_Geometry à partir de sa représentation binaire "
#~ "étendue (Extended Well-Known Binary representation, EWKB)."

#~ msgid ""
#~ "<funcdef>geometry <function>ST_GeomFromEWKB</function></funcdef> "
#~ "<paramdef><type>bytea </type> <parameter>EWKB</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_GeomFromEWKB</function></funcdef> "
#~ "<paramdef><type>bytea </type> <parameter>EWKB</parameter></paramdef>"

#~ msgid ""
#~ "Constructs a PostGIS ST_Geometry object from the OGC Extended Well-Known "
#~ "binary (EWKT) representation."
#~ msgstr ""
#~ "Retourne un objet ST_Geometry à partir de sa représentation textuelle "
#~ "étendue OGC (Extended Well-Known Text representation, EWKT)."

#~ msgid ""
#~ "The EWKB format is not an OGC standard, but a PostGIS specific format "
#~ "that includes the spatial reference system (SRID) identifier"
#~ msgstr ""
#~ "Le format EWKB n'est pas une norme OGC, mais un format spécifique à "
#~ "PostGIS incluant l'identifiant du système de référence des coordonnées "
#~ "(SRID)"

#~ msgid ""
#~ "Enhanced: 2.0.0 support for Polyhedral surfaces and TIN was introduced."
#~ msgstr ""
#~ "Amélioration: 2.0.0 introduction du support TIN et surfaces polyhédriques "

#~ msgid "&P_support;"
#~ msgstr "&P_support;"

#~ msgid "&T_support;"
#~ msgstr "&T_support;"

#~ msgid ""
#~ "line string binary rep 0f LINESTRING(-71.160281 42.258729,-71.160837 "
#~ "42.259113,-71.161144 42.25932) in NAD 83 long lat (4269)."
#~ msgstr ""
#~ "line string binary rep 0f LINESTRING(-71.160281 42.258729,-71.160837 "
#~ "42.259113,-71.161144 42.25932) in NAD 83 long lat (4269)."

#~ msgid ""
#~ "NOTE: Even though byte arrays are delimited with \\ and may have ', we "
#~ "need to escape both out with \\ and '' if standard_conforming_strings is "
#~ "off. So it does not look exactly like its AsEWKB representation."
#~ msgstr ""
#~ "NOTE: Si le paramètre standard_conforming_strings est à la valeur off, il "
#~ "est nécessaire d'échapper les caractères \\ et ' avec \\ et \". Ceci "
#~ "diffère de la représentation AsEWKB."

#~ msgid ""
#~ "SELECT ST_GeomFromEWKB(E'\\\\001\\\\002\\\\000\\\\000 \\\\255\\\\020\\"
#~ "\\000\\\\000\\\\003\\\\000\\\\000\\\\000\\\\344J=\n"
#~ "\\\\013B\\\\312Q\\\\300n\\\\303(\\\\010\\\\036!E@''\\\\277E''K\n"
#~ "\\\\312Q\\\\300\\\\366{b\\\\235*!E@\\\\225|\\\\354.P\\\\312Q\n"
#~ "\\\\300p\\\\231\\\\323e1!E@');"
#~ msgstr ""
#~ "SELECT ST_GeomFromEWKB(E'\\\\001\\\\002\\\\000\\\\000 \\\\255\\\\020\\"
#~ "\\000\\\\000\\\\003\\\\000\\\\000\\\\000\\\\344J=\n"
#~ "\\\\013B\\\\312Q\\\\300n\\\\303(\\\\010\\\\036!E@''\\\\277E''K\n"
#~ "\\\\312Q\\\\300\\\\366{b\\\\235*!E@\\\\225|\\\\354.P\\\\312Q\n"
#~ "\\\\300p\\\\231\\\\323e1!E@');"

#~ msgid ""
#~ "set standard_conforming_strings = on;\n"
#~ "SELECT ST_GeomFromEWKB('\\001\\002\\000\\000 "
#~ "\\255\\020\\000\\000\\003\\000\\000\\000\\344J=\\012\\013B\n"
#~ "    \\312Q\\300n\\303(\\010\\036!E@''\\277E''K\\012\\312Q\\300\\366{b"
#~ "\\235*!E@\\225|\\354.P\\312Q\\012\\300p\\231\\323e1')"
#~ msgstr ""
#~ "set standard_conforming_strings = on;\n"
#~ "SELECT ST_GeomFromEWKB('\\001\\002\\000\\000 "
#~ "\\255\\020\\000\\000\\003\\000\\000\\000\\344J=\\012\\013B\n"
#~ "    \\312Q\\300n\\303(\\010\\036!E@''\\277E''K\\012\\312Q\\300\\366{b"
#~ "\\235*!E@\\225|\\354.P\\312Q\\012\\300p\\231\\323e1')"

#~ msgid ", <xref linkend=\"ST_AsEWKB\"/>, <xref linkend=\"ST_GeomFromWKB\"/>"
#~ msgstr ", <xref linkend=\"ST_AsEWKB\"/>, <xref linkend=\"ST_GeomFromWKB\"/>"

#~ msgid "ST_GeomFromEWKT"
#~ msgstr "ST_GeomFromEWKT"

#~ msgid ""
#~ "Return a specified ST_Geometry value from Extended Well-Known Text "
#~ "representation (EWKT)."
#~ msgstr ""
#~ "Retourne un objet ST_Geometry à partir de sa représentation textuelle "
#~ "étendue (Extended Well-Known Text representation, EWKT)."

#~ msgid ""
#~ "<funcdef>geometry <function>ST_GeomFromEWKT</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>EWKT</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_GeomFromEWKT</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>EWKT</parameter></paramdef>"

#~ msgid ""
#~ "Constructs a PostGIS ST_Geometry object from the OGC Extended Well-Known "
#~ "text (EWKT) representation."
#~ msgstr ""
#~ "Retourne un objet ST_Geometry à partir de sa représentation textuelle "
#~ "étendue OGC (Extended Well-Known Text representation, EWKT)."

#~ msgid ""
#~ "The EWKT format is not an OGC standard, but an PostGIS specific format "
#~ "that includes the spatial reference system (SRID) identifier"
#~ msgstr ""
#~ "Le format EWKT n'est pas une norme OGC, mais un format spécifique à "
#~ "PostGIS incluant l'identifiant du système de référence des coordonnées "
#~ "(SRID)"

#~ msgid ""
#~ "SELECT ST_GeomFromEWKT('SRID=4269;LINESTRING(-71.160281 "
#~ "42.258729,-71.160837 42.259113,-71.161144 42.25932)');\n"
#~ "SELECT ST_GeomFromEWKT('SRID=4269;MULTILINESTRING((-71.160281 "
#~ "42.258729,-71.160837 42.259113,-71.161144 42.25932))');\n"
#~ "\n"
#~ "SELECT ST_GeomFromEWKT('SRID=4269;POINT(-71.064544 42.28787)');\n"
#~ "\n"
#~ "SELECT ST_GeomFromEWKT('SRID=4269;POLYGON((-71.1776585052917 "
#~ "42.3902909739571,-71.1776820268866 42.3903701743239,\n"
#~ "-71.1776063012595 42.3903825660754,-71.1775826583081 "
#~ "42.3903033653531,-71.1776585052917 42.3902909739571))');\n"
#~ "\n"
#~ "SELECT ST_GeomFromEWKT('SRID=4269;MULTIPOLYGON(((-71.1031880899493 "
#~ "42.3152774590236,\n"
#~ "-71.1031627617667 42.3152960829043,-71.102923838298 42.3149156848307,\n"
#~ "-71.1023097974109 42.3151969047397,-71.1019285062273 42.3147384934248,\n"
#~ "-71.102505233663 42.3144722937587,-71.10277487471 42.3141658254797,\n"
#~ "-71.103113945163 42.3142739188902,-71.10324876416 42.31402489987,\n"
#~ "-71.1033002961013 42.3140393340215,-71.1033488797549 42.3139495090772,\n"
#~ "-71.103396240451 42.3138632439557,-71.1041521907712 42.3141153348029,\n"
#~ "-71.1041411411543 42.3141545014533,-71.1041287795912 42.3142114839058,\n"
#~ "-71.1041188134329 42.3142693656241,-71.1041112482575 42.3143272556118,\n"
#~ "-71.1041072845732 42.3143851580048,-71.1041057218871 42.3144430686681,\n"
#~ "-71.1041065602059 42.3145009876017,-71.1041097995362 42.3145589148055,\n"
#~ "-71.1041166403905 42.3146168544148,-71.1041258822717 42.3146748022936,\n"
#~ "-71.1041375307579 42.3147318674446,-71.1041492906949 42.3147711126569,\n"
#~ "-71.1041598612795 42.314808571739,-71.1042515013869 42.3151287620809,\n"
#~ "-71.1041173835118 42.3150739481917,-71.1040809891419 42.3151344119048,\n"
#~ "-71.1040438678912 42.3151191367447,-71.1040194562988 42.3151832057859,\n"
#~ "-71.1038734225584 42.3151140942995,-71.1038446938243 42.3151006300338,\n"
#~ "-71.1038315271889 42.315094347535,-71.1037393329282 42.315054824985,\n"
#~ "-71.1035447555574 42.3152608696313,-71.1033436658644 42.3151648370544,\n"
#~ "-71.1032580383161 42.3152269126061,-71.103223066939 42.3152517403219,\n"
#~ "-71.1031880899493 42.3152774590236)),\n"
#~ "((-71.1043632495873 42.315113108546,-71.1043583974082 42.3151211109857,\n"
#~ "-71.1043443253471 42.3150676015829,-71.1043850704575 "
#~ "42.3150793250568,-71.1043632495873 42.315113108546)))');"
#~ msgstr ""
#~ "SELECT ST_GeomFromEWKT('SRID=4269;LINESTRING(-71.160281 "
#~ "42.258729,-71.160837 42.259113,-71.161144 42.25932)');\n"
#~ "SELECT ST_GeomFromEWKT('SRID=4269;MULTILINESTRING((-71.160281 "
#~ "42.258729,-71.160837 42.259113,-71.161144 42.25932))');\n"
#~ "\n"
#~ "SELECT ST_GeomFromEWKT('SRID=4269;POINT(-71.064544 42.28787)');\n"
#~ "\n"
#~ "SELECT ST_GeomFromEWKT('SRID=4269;POLYGON((-71.1776585052917 "
#~ "42.3902909739571,-71.1776820268866 42.3903701743239,\n"
#~ "-71.1776063012595 42.3903825660754,-71.1775826583081 "
#~ "42.3903033653531,-71.1776585052917 42.3902909739571))');\n"
#~ "\n"
#~ "SELECT ST_GeomFromEWKT('SRID=4269;MULTIPOLYGON(((-71.1031880899493 "
#~ "42.3152774590236,\n"
#~ "-71.1031627617667 42.3152960829043,-71.102923838298 42.3149156848307,\n"
#~ "-71.1023097974109 42.3151969047397,-71.1019285062273 42.3147384934248,\n"
#~ "-71.102505233663 42.3144722937587,-71.10277487471 42.3141658254797,\n"
#~ "-71.103113945163 42.3142739188902,-71.10324876416 42.31402489987,\n"
#~ "-71.1033002961013 42.3140393340215,-71.1033488797549 42.3139495090772,\n"
#~ "-71.103396240451 42.3138632439557,-71.1041521907712 42.3141153348029,\n"
#~ "-71.1041411411543 42.3141545014533,-71.1041287795912 42.3142114839058,\n"
#~ "-71.1041188134329 42.3142693656241,-71.1041112482575 42.3143272556118,\n"
#~ "-71.1041072845732 42.3143851580048,-71.1041057218871 42.3144430686681,\n"
#~ "-71.1041065602059 42.3145009876017,-71.1041097995362 42.3145589148055,\n"
#~ "-71.1041166403905 42.3146168544148,-71.1041258822717 42.3146748022936,\n"
#~ "-71.1041375307579 42.3147318674446,-71.1041492906949 42.3147711126569,\n"
#~ "-71.1041598612795 42.314808571739,-71.1042515013869 42.3151287620809,\n"
#~ "-71.1041173835118 42.3150739481917,-71.1040809891419 42.3151344119048,\n"
#~ "-71.1040438678912 42.3151191367447,-71.1040194562988 42.3151832057859,\n"
#~ "-71.1038734225584 42.3151140942995,-71.1038446938243 42.3151006300338,\n"
#~ "-71.1038315271889 42.315094347535,-71.1037393329282 42.315054824985,\n"
#~ "-71.1035447555574 42.3152608696313,-71.1033436658644 42.3151648370544,\n"
#~ "-71.1032580383161 42.3152269126061,-71.103223066939 42.3152517403219,\n"
#~ "-71.1031880899493 42.3152774590236)),\n"
#~ "((-71.1043632495873 42.315113108546,-71.1043583974082 42.3151211109857,\n"
#~ "-71.1043443253471 42.3150676015829,-71.1043850704575 "
#~ "42.3150793250568,-71.1043632495873 42.315113108546)))');"

#~ msgid ""
#~ "--3d circular string\n"
#~ "SELECT ST_GeomFromEWKT('CIRCULARSTRING(220268 150415 1,220227 150505 "
#~ "2,220227 150406 3)');"
#~ msgstr ""
#~ "--3d circular string\n"
#~ "SELECT ST_GeomFromEWKT('CIRCULARSTRING(220268 150415 1,220227 150505 "
#~ "2,220227 150406 3)');"

#~ msgid ""
#~ ", <xref linkend=\"ST_GeomFromText\"/>, <xref linkend=\"ST_GeomFromEWKT\"/>"
#~ msgstr ""
#~ ", <xref linkend=\"ST_GeomFromText\"/>, <xref linkend=\"ST_GeomFromEWKT\"/>"

#~ msgid "ST_GeometryFromText"
#~ msgstr "ST_GeometryFromText"

#~ msgid ""
#~ "Return a specified ST_Geometry value from Well-Known Text representation "
#~ "(WKT). This is an alias name for ST_GeomFromText"
#~ msgstr ""
#~ "Retourne un objet ST_Geometry à partir de sa représentation textuelle "
#~ "Well-Known Text (WKT). Alias pour ST_GeomFromText"

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_GeometryFromText</"
#~ "function></funcdef> <paramdef><type>text </type> <parameter>WKT</"
#~ "parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_GeometryFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_GeometryFromText</"
#~ "function></funcdef> <paramdef><type>text </type> <parameter>WKT</"
#~ "parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_GeometryFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"

#~ msgid "&sqlmm_compliant; SQL-MM 3: 5.1.40"
#~ msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.40"

#~ msgid "ST_GeomFromGeoHash"
#~ msgstr "ST_GeomFromGeoHash"

#~ msgid "Return a geometry from a GeoHash string."
#~ msgstr "Retourne une geometry depuis une chaîne GeoHash."

#~ msgid ""
#~ "<funcdef>geometry <function>ST_GeomFromGeoHash</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>geohash</parameter></paramdef> "
#~ "<paramdef choice=\"opt\"><type>integer </type> "
#~ "<parameter>precision=full_precision_of_geohash</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_GeomFromGeoHash</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>geohash</parameter></paramdef> "
#~ "<paramdef choice=\"opt\"><type>integer </type> "
#~ "<parameter>precision=full_precision_of_geohash</parameter></paramdef>"

#~ msgid ""
#~ "Return a geometry from a GeoHash string. The geometry will be a polygon "
#~ "representing the GeoHash bounds."
#~ msgstr ""
#~ "Retourne une Geometry à partir d'une chaîne GeoHash. La géométrie sera un "
#~ "polygone représentant les limites du GeoHash."

#~ msgid ""
#~ "If no <varname>precision</varname> is specified ST_GeomFromGeoHash "
#~ "returns a polygon based on full precision of the input GeoHash string."
#~ msgstr ""
#~ "Si aucune <varname>precision</varname> n'est spécifiée,  "
#~ "ST_GeomFromGeoHash retourne un polygone basé sur la précision complète de "
#~ "la chaîne GeoHash en entrée."

#~ msgid ""
#~ "If <varname>precision</varname> is specified ST_GeomFromGeoHash will use "
#~ "that many characters from the GeoHash to create the polygon."
#~ msgstr ""
#~ "Si <varname>precision</varname> est spécifié,  ST_GeomFromGeoHash utilise "
#~ "autant de caractère du GeoHash pour créer le polygone."

#~ msgid ""
#~ "<![CDATA[SELECT ST_AsText(ST_GeomFromGeoHash('9qqj7nmxncgyy4d0dbxqz0'));\n"
#~ "                                                        st_astext\n"
#~ "--------------------------------------------------------------------------------------------------------------------------\n"
#~ " POLYGON((-115.172816 36.114646,-115.172816 36.114646,-115.172816 "
#~ "36.114646,-115.172816 36.114646,-115.172816 36.114646))\n"
#~ "\n"
#~ "SELECT ST_AsText(ST_GeomFromGeoHash('9qqj7nmxncgyy4d0dbxqz0', 4));\n"
#~ "                                                          st_astext\n"
#~ "------------------------------------------------------------------------------------------------------------------------------\n"
#~ " POLYGON((-115.3125 36.03515625,-115.3125 36.2109375,-114.9609375 "
#~ "36.2109375,-114.9609375 36.03515625,-115.3125 36.03515625))\n"
#~ "\n"
#~ "SELECT ST_AsText(ST_GeomFromGeoHash('9qqj7nmxncgyy4d0dbxqz0', 10));\n"
#~ "                                                                                       st_astext\n"
#~ "----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n"
#~ " POLYGON((-115.17282128334 36.1146408319473,-115.17282128334 "
#~ "36.1146461963654,-115.172810554504 36.1146461963654,-115.172810554504 "
#~ "36.1146408319473,-115.17282128334 36.1146408319473))\n"
#~ "                ]]>"
#~ msgstr ""
#~ "<![CDATA[SELECT ST_AsText(ST_GeomFromGeoHash('9qqj7nmxncgyy4d0dbxqz0'));\n"
#~ "                                                        st_astext\n"
#~ "--------------------------------------------------------------------------------------------------------------------------\n"
#~ " POLYGON((-115.172816 36.114646,-115.172816 36.114646,-115.172816 "
#~ "36.114646,-115.172816 36.114646,-115.172816 36.114646))\n"
#~ "\n"
#~ "SELECT ST_AsText(ST_GeomFromGeoHash('9qqj7nmxncgyy4d0dbxqz0', 4));\n"
#~ "                                                          st_astext\n"
#~ "------------------------------------------------------------------------------------------------------------------------------\n"
#~ " POLYGON((-115.3125 36.03515625,-115.3125 36.2109375,-114.9609375 "
#~ "36.2109375,-114.9609375 36.03515625,-115.3125 36.03515625))\n"
#~ "\n"
#~ "SELECT ST_AsText(ST_GeomFromGeoHash('9qqj7nmxncgyy4d0dbxqz0', 10));\n"
#~ "                                                                                       st_astext\n"
#~ "----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n"
#~ " POLYGON((-115.17282128334 36.1146408319473,-115.17282128334 "
#~ "36.1146461963654,-115.172810554504 36.1146461963654,-115.172810554504 "
#~ "36.1146408319473,-115.17282128334 36.1146408319473))\n"
#~ "                ]]>"

#~ msgid ""
#~ ",<xref linkend=\"ST_Box2dFromGeoHash\"/>, <xref linkend="
#~ "\"ST_PointFromGeoHash\"/>"
#~ msgstr ""
#~ ",<xref linkend=\"ST_Box2dFromGeoHash\"/>, <xref linkend="
#~ "\"ST_PointFromGeoHash\"/>"

#~ msgid "ST_GeomFromGML"
#~ msgstr "ST_GeomFromGML"

#~ msgid ""
#~ "Takes as input GML representation of geometry and outputs a PostGIS "
#~ "geometry object"
#~ msgstr ""
#~ "Prend en paramètre une représentation GML d'une géométrie et renvoie un "
#~ "objet PostGIS de type geometry."

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_GeomFromGML</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>geomgml</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_GeomFromGML</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>geomgml</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_GeomFromGML</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>geomgml</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_GeomFromGML</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>geomgml</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"

#~ msgid ""
#~ "Constructs a PostGIS ST_Geometry object from the OGC GML representation."
#~ msgstr ""
#~ "Construit un objet PostGIS ST_Geometry à partir d'une représentation GML "
#~ "OGC."

#~ msgid ""
#~ "ST_GeomFromGML works only for GML Geometry fragments. It throws an error "
#~ "if you try to use it on a whole GML document."
#~ msgstr ""
#~ "La fonction ST_GeomFromGML fonctionne uniquement avec le fragment GML "
#~ "représentant la géométrie. Elle renvoie une error si un document GML "
#~ "complet est utilisé."

#~ msgid ""
#~ "OGC GML versions supported: <itemizedlist> <listitem> <para>GML 3.2.1 "
#~ "Namespace</para> </listitem> <listitem> <para>GML 3.1.1 Simple Features "
#~ "profile SF-2 (with GML 3.1.0 and 3.0.0 backward compatibility)</para> </"
#~ "listitem> <listitem> <para>GML 2.1.2</para> </listitem> </itemizedlist> "
#~ "OGC GML standards, cf: <ulink url=\"http://www.opengeospatial.org/"
#~ "standards/gml\">http://www.opengeospatial.org/standards/gml</ulink>:"
#~ msgstr ""
#~ "version OGC GML supportée: <itemizedlist> <listitem> <para>GML 3.2.1 "
#~ "Namespace</para> </listitem> <listitem> <para>GML 3.1.1 Simple Features "
#~ "profile SF-2 (with GML 3.1.0 and 3.0.0 backward compatibility)</para> </"
#~ "listitem> <listitem> <para>GML 2.1.2</para> </listitem> </itemizedlist> "
#~ "OGC GML standards, cf: <ulink url=\"http://www.opengeospatial.org/"
#~ "standards/gml\">http://www.opengeospatial.org/standards/gml</ulink>:"

#~ msgid "Availability: 1.5, requires libxml2 1.6+"
#~ msgstr "Disponibilité: 1.5, nécessite libxml2 1.6+"

#~ msgid ""
#~ "GML allow mixed dimensions (2D and 3D inside the same MultiGeometry for "
#~ "instance). As PostGIS geometries don't, ST_GeomFromGML convert the whole "
#~ "geometry to 2D if a missing Z dimension is found once."
#~ msgstr ""
#~ "Le format GML supporte des objets de dimensions différentes (2D et 3D "
#~ "dans la même MultiGeometry par exemple). PostGIS ne supportant pas cela, "
#~ "la fonction convertit toute la géometrie en 2D si une seule coordonnée Z "
#~ "manque."

#~ msgid ""
#~ "GML support mixed SRS inside the same MultiGeometry. As PostGIS "
#~ "geometries don't, ST_GeomFromGML, in this case, reproject all "
#~ "subgeometries to the SRS root node. If no srsName attribute available for "
#~ "the GML root node, the function throw an error."
#~ msgstr ""
#~ "Le format GML supporte des objets ayant des SRID différents dans la même "
#~ "MultiGeometry. PostGIS ne supportant pas cela, ST_GeomFromGML reprojète "
#~ "toutes les sous géométries dans le SRS du noeud racine. Si aucun attribut "
#~ "srsName n'est disponible pour le noeud racine GML, la fonction renvoie "
#~ "une erreur."

#~ msgid ""
#~ "ST_GeomFromGML function is not pedantic about an explicit GML namespace. "
#~ "You could avoid to mention it explicitly for common usages. But you need "
#~ "it if you want to use XLink feature inside GML."
#~ msgstr ""
#~ "La fonction ST_GeomFromGML n'impose pas d'utiliser un espace de noms GML "
#~ "explicite. Pour les usages courants, il peut être ignoré. Il est en "
#~ "revanche nécessaire en cas d'utilisation de la fonctionnalité XLink dans "
#~ "le GML."

#~ msgid "ST_GeomFromGML function not support SQL/MM curves geometries."
#~ msgstr ""
#~ "La fonction ST_GeomFromGML ne supporte pas les géométries de type SQL/MM "
#~ "courbes."

#~ msgid "Examples - A single geometry with srsName"
#~ msgstr "Exemple: une géométrie unique avec srsName"

#~ msgid ""
#~ "SELECT ST_GeomFromGML('<![CDATA[\n"
#~ "                <gml:LineString srsName=\"EPSG:4269\">\n"
#~ "                        <gml:coordinates>\n"
#~ "                                -71.16028,42.258729 -71.160837,42.259112 "
#~ "-71.161143,42.25932\n"
#~ "                        </gml:coordinates>\n"
#~ "                </gml:LineString>']]>);"
#~ msgstr ""
#~ "SELECT ST_GeomFromGML('<![CDATA[\n"
#~ "                <gml:LineString srsName=\"EPSG:4269\">\n"
#~ "                        <gml:coordinates>\n"
#~ "                                -71.16028,42.258729 -71.160837,42.259112 "
#~ "-71.161143,42.25932\n"
#~ "                        </gml:coordinates>\n"
#~ "                </gml:LineString>']]>);"

#~ msgid "Examples - Polyhedral Surface"
#~ msgstr "Exemple - Surface Polyhédrique"

#~ msgid ", <xref linkend=\"ST_AsGML\"/>, <xref linkend=\"ST_GMLToSQL\"/>"
#~ msgstr ", <xref linkend=\"ST_AsGML\"/>, <xref linkend=\"ST_GMLToSQL\"/>"

#~ msgid "ST_GeomFromGeoJSON"
#~ msgstr "ST_GeomFromGeoJSON"

#~ msgid ""
#~ "Takes as input a geojson representation of a geometry and outputs a "
#~ "PostGIS geometry object"
#~ msgstr ""
#~ "Prend en entrée une géométrie au format geojson et renvoie un objet "
#~ "Postgis de type geometry."

#~ msgid ""
#~ "Constructs a PostGIS geometry object from the GeoJSON representation."
#~ msgstr ""
#~ "Construit un objet Postgis de type geometry à partir d'une représentation "
#~ "GeoJSON."

#~ msgid ""
#~ "ST_GeomFromGeoJSON works only for JSON Geometry fragments. It throws an "
#~ "error if you try to use it on a whole JSON document."
#~ msgstr ""
#~ "La fonction ST_GeomFromGeoJSON fonctionne uniquement avec le fragment "
#~ "JSON représentant la géométrie. Elle renvoie une erreur si un document "
#~ "JSON complet est utilisé."

#~ msgid "Availability: 2.0.0 requires - JSON-C &gt;= 0.9"
#~ msgstr "Disponibilité: 2.0.0 nécessite JSON-C &gt;= 0.9"

#~ msgid ""
#~ "If you do not have JSON-C enabled, support you will get an error notice "
#~ "instead of seeing an output. To enable JSON-C, run configure --with-"
#~ "jsondir=/path/to/json-c. See <xref linkend=\"installation_configuration\"/"
#~ "> for details."
#~ msgstr ""
#~ "Si JSON-C  n'est pas disponible sur le système, une erreur est renvoyée. "
#~ "Pour activer JSON-C, lancer configure --with-jsondir=/path/to/json-c. Cf. "
#~ "<xref linkend=\"installation_configuration\"/> pour plus de détails."

#~ msgid ""
#~ "SELECT ST_AsText(ST_GeomFromGeoJSON('{\"type\":\"Point\",\"coordinates\":"
#~ "[-48.23456,20.12345]}')) As wkt;\n"
#~ "wkt\n"
#~ "------\n"
#~ "POINT(-48.23456 20.12345)"
#~ msgstr ""
#~ "SELECT ST_AsText(ST_GeomFromGeoJSON('{\"type\":\"Point\",\"coordinates\":"
#~ "[-48.23456,20.12345]}')) As wkt;\n"
#~ "wkt\n"
#~ "------\n"
#~ "POINT(-48.23456 20.12345)"

#~ msgid ""
#~ "-- a 3D linestring\n"
#~ "SELECT ST_AsText(ST_GeomFromGeoJSON('{\"type\":\"LineString\","
#~ "\"coordinates\":[[1,2,3],[4,5,6],[7,8,9]]}')) As wkt;\n"
#~ "\n"
#~ "wkt\n"
#~ "-------------------\n"
#~ "LINESTRING(1 2,4 5,7 8)"
#~ msgstr ""
#~ "-- a 3D linestring\n"
#~ "SELECT ST_AsText(ST_GeomFromGeoJSON('{\"type\":\"LineString\","
#~ "\"coordinates\":[[1,2,3],[4,5,6],[7,8,9]]}')) As wkt;\n"
#~ "\n"
#~ "wkt\n"
#~ "-------------------\n"
#~ "LINESTRING(1 2,4 5,7 8)"

#~ msgid ""
#~ ", <xref linkend=\"ST_AsGeoJSON\"/>, <xref linkend="
#~ "\"installation_configuration\"/>"
#~ msgstr ""
#~ ", <xref linkend=\"ST_AsGeoJSON\"/>, <xref linkend="
#~ "\"installation_configuration\"/>"

#~ msgid "ST_GeomFromKML"
#~ msgstr "ST_GeomFromKML"

#~ msgid ""
#~ "Takes as input KML representation of geometry and outputs a PostGIS "
#~ "geometry object"
#~ msgstr ""
#~ "Prend en entrée une géométrie au format KML et renvoie un objet Postgis "
#~ "de type geometry."

#~ msgid ""
#~ "<funcdef>geometry <function>ST_GeomFromKML</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>geomkml</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_GeomFromKML</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>geomkml</parameter></paramdef>"

#~ msgid ""
#~ "Constructs a PostGIS ST_Geometry object from the OGC KML representation."
#~ msgstr ""
#~ "Construit un objet Postgis de type geometry à partir d'une représentation "
#~ "OGC KML."

#~ msgid ""
#~ "ST_GeomFromKML works only for KML Geometry fragments. It throws an error "
#~ "if you try to use it on a whole KML document."
#~ msgstr ""
#~ "La fonction ST_GeomFromKML fonctionne uniquement avec le fragment KML "
#~ "représentant la géométrie. Elle renvoie une erreur si un document  KML "
#~ "complet est utilisé."

#~ msgid ""
#~ "OGC KML versions supported: <itemizedlist> <listitem> <para>KML 2.2.0 "
#~ "Namespace</para> </listitem> </itemizedlist> OGC KML standards, cf: "
#~ "<ulink url=\"http://www.opengeospatial.org/standards/kml\">http://www."
#~ "opengeospatial.org/standards/kml</ulink>:"
#~ msgstr ""
#~ "versions OGC KML supportées: <itemizedlist> <listitem> <para>KML 2.2.0 "
#~ "Namespace</para> </listitem> </itemizedlist> OGC KML standards, cf: "
#~ "<ulink url=\"http://www.opengeospatial.org/standards/kml\">http://www."
#~ "opengeospatial.org/standards/kml</ulink>:"

#~ msgid "Availability: 1.5,libxml2 2.6+"
#~ msgstr "Disponibilité: 1.5, ,libxml2 2.6+"

#~ msgid "ST_GeomFromKML function not support SQL/MM curves geometries."
#~ msgstr ""
#~ "La fonction ST_GeomFromGML ne supporte pas les géométries de type SQL/MM "
#~ "courbes."

#~ msgid "ST_GMLToSQL"
#~ msgstr "ST_GMLToSQL"

#~ msgid ""
#~ "Return a specified ST_Geometry value from GML representation. This is an "
#~ "alias name for ST_GeomFromGML"
#~ msgstr ""
#~ "Retourne un objet de type ST_Geometry à partir de sa représentation GML. "
#~ "Alias pour ST_GeomFromGML"

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_GMLToSQL</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>geomgml</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_GMLToSQL</function></funcdef> <paramdef><type>text </type> "
#~ "<parameter>geomgml</parameter></paramdef> <paramdef><type>integer </type> "
#~ "<parameter>srid</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_GMLToSQL</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>geomgml</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_GMLToSQL</function></funcdef> <paramdef><type>text </type> "
#~ "<parameter>geomgml</parameter></paramdef> <paramdef><type>integer </type> "
#~ "<parameter>srid</parameter></paramdef> </funcprototype>"

#~ msgid "&sqlmm_compliant; SQL-MM 3: 5.1.50 (except for curves support)."
#~ msgstr ""
#~ "&sqlmm_compliant; SQL-MM 3: 5.1.50 (sauf pour le support des courbes)."

#~ msgid ", <xref linkend=\"ST_GeomFromGML\"/>, <xref linkend=\"ST_AsGML\"/>"
#~ msgstr ", <xref linkend=\"ST_GeomFromGML\"/>, <xref linkend=\"ST_AsGML\"/>"

#~ msgid "ST_GeomFromText"
#~ msgstr "ST_GeomFromText"

#~ msgid ""
#~ "Return a specified ST_Geometry value from Well-Known Text representation "
#~ "(WKT)."
#~ msgstr ""
#~ "Retourne un objet ST_Geometry à partir de sa représentation textuelle "
#~ "Well-Known Text (WKT)."

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_GeomFromText</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>WKT</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_GeomFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_GeomFromText</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>WKT</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_GeomFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"

#~ msgid ""
#~ "Constructs a PostGIS ST_Geometry object from the OGC Well-Known text "
#~ "representation."
#~ msgstr ""
#~ "Construit un objet Postgis de type geometry à partir d'une représentation "
#~ "OGC Well-Known Text WKT."

#~ msgid ""
#~ "&sfs_compliant; s3.2.6.2 - option SRID is from the conformance suite."
#~ msgstr ""
#~ "&sfs_compliant; s3.2.6.2 - l'option SRID est issue des tests de "
#~ "conformité."

#~ msgid ""
#~ "Changed: 2.0.0 In prior versions of PostGIS "
#~ "ST_GeomFromText('GEOMETRYCOLLECTION(EMPTY)') was allowed. This is now "
#~ "illegal in PostGIS 2.0.0 to better conform with SQL/MM standards. This "
#~ "should now be written as ST_GeomFromText('GEOMETRYCOLLECTION EMPTY')"
#~ msgstr ""
#~ "Changement: 2.0.0 dans les version précédentes de PostGIS "
#~ "ST_GeomFromText('GEOMETRYCOLLECTION(EMPTY)') etait autorisé. C'est "
#~ "désormais interdit dans PostGIS 2.0.0 pour respecter la norme SQL/MM. La "
#~ "forme privilégiée désormais est:  ST_GeomFromText('GEOMETRYCOLLECTION "
#~ "EMPTY')"

#~ msgid ""
#~ "SELECT ST_GeomFromText('LINESTRING(-71.160281 42.258729,-71.160837 "
#~ "42.259113,-71.161144 42.25932)');\n"
#~ "SELECT ST_GeomFromText('LINESTRING(-71.160281 42.258729,-71.160837 "
#~ "42.259113,-71.161144 42.25932)',4269);\n"
#~ "\n"
#~ "SELECT ST_GeomFromText('MULTILINESTRING((-71.160281 42.258729,-71.160837 "
#~ "42.259113,-71.161144 42.25932))');\n"
#~ "\n"
#~ "SELECT ST_GeomFromText('POINT(-71.064544 42.28787)');\n"
#~ "\n"
#~ "SELECT ST_GeomFromText('POLYGON((-71.1776585052917 "
#~ "42.3902909739571,-71.1776820268866 42.3903701743239,\n"
#~ "-71.1776063012595 42.3903825660754,-71.1775826583081 "
#~ "42.3903033653531,-71.1776585052917 42.3902909739571))');\n"
#~ "\n"
#~ "SELECT ST_GeomFromText('MULTIPOLYGON(((-71.1031880899493 "
#~ "42.3152774590236,\n"
#~ "-71.1031627617667 42.3152960829043,-71.102923838298 42.3149156848307,\n"
#~ "-71.1023097974109 42.3151969047397,-71.1019285062273 42.3147384934248,\n"
#~ "-71.102505233663 42.3144722937587,-71.10277487471 42.3141658254797,\n"
#~ "-71.103113945163 42.3142739188902,-71.10324876416 42.31402489987,\n"
#~ "-71.1033002961013 42.3140393340215,-71.1033488797549 42.3139495090772,\n"
#~ "-71.103396240451 42.3138632439557,-71.1041521907712 42.3141153348029,\n"
#~ "-71.1041411411543 42.3141545014533,-71.1041287795912 42.3142114839058,\n"
#~ "-71.1041188134329 42.3142693656241,-71.1041112482575 42.3143272556118,\n"
#~ "-71.1041072845732 42.3143851580048,-71.1041057218871 42.3144430686681,\n"
#~ "-71.1041065602059 42.3145009876017,-71.1041097995362 42.3145589148055,\n"
#~ "-71.1041166403905 42.3146168544148,-71.1041258822717 42.3146748022936,\n"
#~ "-71.1041375307579 42.3147318674446,-71.1041492906949 42.3147711126569,\n"
#~ "-71.1041598612795 42.314808571739,-71.1042515013869 42.3151287620809,\n"
#~ "-71.1041173835118 42.3150739481917,-71.1040809891419 42.3151344119048,\n"
#~ "-71.1040438678912 42.3151191367447,-71.1040194562988 42.3151832057859,\n"
#~ "-71.1038734225584 42.3151140942995,-71.1038446938243 42.3151006300338,\n"
#~ "-71.1038315271889 42.315094347535,-71.1037393329282 42.315054824985,\n"
#~ "-71.1035447555574 42.3152608696313,-71.1033436658644 42.3151648370544,\n"
#~ "-71.1032580383161 42.3152269126061,-71.103223066939 42.3152517403219,\n"
#~ "-71.1031880899493 42.3152774590236)),\n"
#~ "((-71.1043632495873 42.315113108546,-71.1043583974082 42.3151211109857,\n"
#~ "-71.1043443253471 42.3150676015829,-71.1043850704575 "
#~ "42.3150793250568,-71.1043632495873 42.315113108546)))',4326);\n"
#~ "\n"
#~ "SELECT ST_GeomFromText('CIRCULARSTRING(220268 150415,220227 150505,220227 "
#~ "150406)');"
#~ msgstr ""
#~ "SELECT ST_GeomFromText('LINESTRING(-71.160281 42.258729,-71.160837 "
#~ "42.259113,-71.161144 42.25932)');\n"
#~ "SELECT ST_GeomFromText('LINESTRING(-71.160281 42.258729,-71.160837 "
#~ "42.259113,-71.161144 42.25932)',4269);\n"
#~ "\n"
#~ "SELECT ST_GeomFromText('MULTILINESTRING((-71.160281 42.258729,-71.160837 "
#~ "42.259113,-71.161144 42.25932))');\n"
#~ "\n"
#~ "SELECT ST_GeomFromText('POINT(-71.064544 42.28787)');\n"
#~ "\n"
#~ "SELECT ST_GeomFromText('POLYGON((-71.1776585052917 "
#~ "42.3902909739571,-71.1776820268866 42.3903701743239,\n"
#~ "-71.1776063012595 42.3903825660754,-71.1775826583081 "
#~ "42.3903033653531,-71.1776585052917 42.3902909739571))');\n"
#~ "\n"
#~ "SELECT ST_GeomFromText('MULTIPOLYGON(((-71.1031880899493 "
#~ "42.3152774590236,\n"
#~ "-71.1031627617667 42.3152960829043,-71.102923838298 42.3149156848307,\n"
#~ "-71.1023097974109 42.3151969047397,-71.1019285062273 42.3147384934248,\n"
#~ "-71.102505233663 42.3144722937587,-71.10277487471 42.3141658254797,\n"
#~ "-71.103113945163 42.3142739188902,-71.10324876416 42.31402489987,\n"
#~ "-71.1033002961013 42.3140393340215,-71.1033488797549 42.3139495090772,\n"
#~ "-71.103396240451 42.3138632439557,-71.1041521907712 42.3141153348029,\n"
#~ "-71.1041411411543 42.3141545014533,-71.1041287795912 42.3142114839058,\n"
#~ "-71.1041188134329 42.3142693656241,-71.1041112482575 42.3143272556118,\n"
#~ "-71.1041072845732 42.3143851580048,-71.1041057218871 42.3144430686681,\n"
#~ "-71.1041065602059 42.3145009876017,-71.1041097995362 42.3145589148055,\n"
#~ "-71.1041166403905 42.3146168544148,-71.1041258822717 42.3146748022936,\n"
#~ "-71.1041375307579 42.3147318674446,-71.1041492906949 42.3147711126569,\n"
#~ "-71.1041598612795 42.314808571739,-71.1042515013869 42.3151287620809,\n"
#~ "-71.1041173835118 42.3150739481917,-71.1040809891419 42.3151344119048,\n"
#~ "-71.1040438678912 42.3151191367447,-71.1040194562988 42.3151832057859,\n"
#~ "-71.1038734225584 42.3151140942995,-71.1038446938243 42.3151006300338,\n"
#~ "-71.1038315271889 42.315094347535,-71.1037393329282 42.315054824985,\n"
#~ "-71.1035447555574 42.3152608696313,-71.1033436658644 42.3151648370544,\n"
#~ "-71.1032580383161 42.3152269126061,-71.103223066939 42.3152517403219,\n"
#~ "-71.1031880899493 42.3152774590236)),\n"
#~ "((-71.1043632495873 42.315113108546,-71.1043583974082 42.3151211109857,\n"
#~ "-71.1043443253471 42.3150676015829,-71.1043850704575 "
#~ "42.3150793250568,-71.1043632495873 42.315113108546)))',4326);\n"
#~ "\n"
#~ "SELECT ST_GeomFromText('CIRCULARSTRING(220268 150415,220227 150505,220227 "
#~ "150406)');"

#~ msgid ", <xref linkend=\"ST_GeomFromWKB\"/>, <xref linkend=\"ST_SRID\"/>"
#~ msgstr ", <xref linkend=\"ST_GeomFromWKB\"/>, <xref linkend=\"ST_SRID\"/>"

#~ msgid "ST_GeomFromWKB"
#~ msgstr "ST_GeomFromWKB"

#~ msgid ""
#~ "Creates a geometry instance from a Well-Known Binary geometry "
#~ "representation (WKB) and optional SRID."
#~ msgstr ""
#~ "Retourne un objet de type geometry à partir de sa représentation binaire "
#~ "Well-Know Binary (WKB) et d'un SRID optionnel."

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_GeomFromWKB</function></"
#~ "funcdef> <paramdef><type>bytea </type> <parameter>geom</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_GeomFromWKB</function></funcdef> <paramdef><type>bytea </"
#~ "type> <parameter>geom</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_GeomFromWKB</function></"
#~ "funcdef> <paramdef><type>bytea </type> <parameter>geom</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_GeomFromWKB</function></funcdef> <paramdef><type>bytea </"
#~ "type> <parameter>geom</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"

#~ msgid ""
#~ "The <varname>ST_GeomFromWKB</varname> function, takes a well-known binary "
#~ "representation of a geometry and a Spatial Reference System ID "
#~ "(<varname>SRID</varname>) and creates an instance of the appropriate "
#~ "geometry type. This function plays the role of the Geometry Factory in "
#~ "SQL. This is an alternate name for ST_WKBToSQL."
#~ msgstr ""
#~ "<varname> ST_GeomFromWKB </varname> prend en paramètre une représentation "
#~ "binaire d'une géométrie (WKB ou EWKB) et un SRID optionnel "
#~ "(<varname>SRID</varname>) et crée une instance de type  geometry. Cette "
#~ "fonction assure le rôle de Geometry Factory en SQL. Alias pour "
#~ "ST_WKBToSQL."

#~ msgid "If SRID is not specified, it defaults to 0 (Unknown)."
#~ msgstr ""
#~ "Si le SRID n'est pas précisé, la valeur 0 (indéfini) est prise par défaut."

#~ msgid ""
#~ "&sfs_compliant; s3.2.7.2 - the optional SRID is from the conformance suite"
#~ msgstr ""
#~ "&sfs_compliant; s3.2.7.2 - le paramètre optionnel est issu des tests de "
#~ "conformité."

#~ msgid "&sqlmm_compliant; SQL-MM 3: 5.1.41"
#~ msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.41"

#~ msgid ""
#~ ", <xref linkend=\"ST_AsBinary\"/>, <xref linkend=\"ST_GeomFromEWKB\"/>"
#~ msgstr ""
#~ ", <xref linkend=\"ST_AsBinary\"/>, <xref linkend=\"ST_GeomFromEWKB\"/>"

#~ msgid "ST_LineFromEncodedPolyline"
#~ msgstr "ST_LineFromEncodedPolyline"

#~ msgid "Creates a LineString from an Encoded Polyline."
#~ msgstr ""
#~ "Crée une LineString depuis une polyligne encodée ( \"Encoded Polyline\" )"

#~ msgid ""
#~ "<funcdef>geometry <function>ST_LineFromEncodedPolyline</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>polyline</parameter></"
#~ "paramdef> <paramdef choice=\"opt\"><type>integer </type> "
#~ "<parameter>precision=5</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_LineFromEncodedPolyline</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>polyline</parameter></"
#~ "paramdef> <paramdef choice=\"opt\"><type>integer </type> "
#~ "<parameter>precision=5</parameter></paramdef>"

#~ msgid ""
#~ "See http://developers.google.com/maps/documentation/utilities/"
#~ "polylinealgorithm"
#~ msgstr ""
#~ "Voir http://developers.google.com/maps/documentation/utilities/"
#~ "polylinealgorithm"

#~ msgid "Availability: 2.2.0"
#~ msgstr "Disponibilité : 2.2.0"

#~ msgid ", <xref linkend=\"ST_Collect\"/>, <xref linkend=\"ST_MakeLine\"/>"
#~ msgstr ", <xref linkend=\"ST_Collect\"/>, <xref linkend=\"ST_MakeLine\"/>"

#~ msgid "ST_LineFromText"
#~ msgstr "ST_LineFromText"

#~ msgid ""
#~ "Makes a Geometry from WKT representation with the given SRID. If SRID is "
#~ "not given, it defaults to 0."
#~ msgstr ""
#~ "Construit une géométrie à partir d'une représentation WKT avec le SRID "
#~ "donné. Si aucun SRID n'est donné, la valeur par défaut est 0."

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_LineFromText</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>WKT</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_LineFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_LineFromText</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>WKT</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_LineFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"

#~ msgid "OGC SPEC 3.2.6.2 - option SRID is from the conformance suite."
#~ msgstr "OGC SPEC 3.2.6.2 - option SRID issue des tests de conformité."

#~ msgid ""
#~ "If you know all your geometries are LINESTRINGS, its more efficient to "
#~ "just use ST_GeomFromText. This just calls ST_GeomFromText and adds "
#~ "additional validation that it returns a linestring."
#~ msgstr ""
#~ "Si vous êtes sûrs que toutes les géométries WKT sont des LINESTRINGS, la "
#~ "fonction ST_GeomFromText est plus efficace car elle ne contrôle pas le "
#~ "type de la géométrie renvoyée."

#~ msgid "&sqlmm_compliant; SQL-MM 3: 7.2.8"
#~ msgstr "&sqlmm_compliant; SQL-MM 3: 7.2.8"

#~ msgid ""
#~ "SELECT ST_LineFromText('LINESTRING(1 2, 3 4)') AS aline, "
#~ "ST_LineFromText('POINT(1 2)') AS null_return;\n"
#~ "aline                            | null_return\n"
#~ "------------------------------------------------\n"
#~ "010200000002000000000000000000F ... | t"
#~ msgstr ""
#~ "SELECT ST_LineFromText('LINESTRING(1 2, 3 4)') AS aline, "
#~ "ST_LineFromText('POINT(1 2)') AS null_return;\n"
#~ "aline                            | null_return\n"
#~ "------------------------------------------------\n"
#~ "010200000002000000000000000000F ... | t"

#~ msgid "ST_LineFromWKB"
#~ msgstr "ST_LineFromWKB"

#~ msgid "Makes a <varname>LINESTRING</varname> from WKB with the given SRID"
#~ msgstr ""
#~ "Construit une <varname>LINESTRING</varname> depuis la représentation "
#~ "binaire WKB et le srid donné."

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_LineFromWKB</function></"
#~ "funcdef> <paramdef><type>bytea </type> <parameter>WKB</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_LineFromWKB</function></funcdef> <paramdef><type>bytea </"
#~ "type> <parameter>WKB</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_LineFromWKB</function></"
#~ "funcdef> <paramdef><type>bytea </type> <parameter>WKB</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_LineFromWKB</function></funcdef> <paramdef><type>bytea </"
#~ "type> <parameter>WKB</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"

#~ msgid ""
#~ "The <varname>ST_LineFromWKB</varname> function, takes a well-known binary "
#~ "representation of geometry and a Spatial Reference System ID "
#~ "(<varname>SRID</varname>) and creates an instance of the appropriate "
#~ "geometry type - in this case, a <varname>LINESTRING</varname> geometry. "
#~ "This function plays the role of the Geometry Factory in SQL."
#~ msgstr ""
#~ "<varname> ST_LineFromWKB </varname> prend en paramètre une représentation "
#~ "binaire d'une géométrie (WKB ou EWKB) et un SRID  (<varname>SRID</"
#~ "varname>) et crée une instance du bon type géométrique, en l'occurence "
#~ "une <varname>LINESTRING</varname>. Cette fonction assure le rôle de "
#~ "Geometry Factory en SQL."

#~ msgid ""
#~ "If an SRID is not specified, it defaults to 0. <varname>NULL</varname> is "
#~ "returned if the input <varname>bytea</varname> does not represent a "
#~ "<varname>LINESTRING</varname>."
#~ msgstr ""
#~ "Si le SRID n'est pas précisé, la valeur 0 est prise par défaut.  "
#~ "<varname>NULL</varname> est retourné si le paramètre <varname>bytea</"
#~ "varname> donné ne représente pas une  <varname>LINESTRING</varname>."

#~ msgid ""
#~ "If you know all your geometries are <varname>LINESTRING</varname>s, its "
#~ "more efficient to just use <xref linkend=\"ST_GeomFromWKB\"/>. This "
#~ "function just calls <xref linkend=\"ST_GeomFromWKB\"/> and adds "
#~ "additional validation that it returns a linestring."
#~ msgstr ""
#~ "Si vous êtes sûrs que toutes les géométries WKT sont des "
#~ "<varname>LINESTRING</varname>s, la fonction <xref linkend=\"ST_GeomFromWKB"
#~ "\"/> est plus efficace car elle ne contrôle pas le type de la géométrie "
#~ "renvoyée."

#~ msgid "&sqlmm_compliant; SQL-MM 3: 7.2.9"
#~ msgstr "&sqlmm_compliant; SQL-MM 3: 7.2.9"

#~ msgid ""
#~ "SELECT ST_LineFromWKB(ST_AsBinary(ST_GeomFromText('LINESTRING(1 2, 3 "
#~ "4)'))) AS aline,\n"
#~ "                ST_LineFromWKB(ST_AsBinary(ST_GeomFromText('POINT(1 "
#~ "2)'))) IS NULL AS null_return;\n"
#~ "aline                            | null_return\n"
#~ "------------------------------------------------\n"
#~ "010200000002000000000000000000F ... | t"
#~ msgstr ""
#~ "SELECT ST_LineFromWKB(ST_AsBinary(ST_GeomFromText('LINESTRING(1 2, 3 "
#~ "4)'))) AS aline,\n"
#~ "                ST_LineFromWKB(ST_AsBinary(ST_GeomFromText('POINT(1 "
#~ "2)'))) IS NULL AS null_return;\n"
#~ "aline                            | null_return\n"
#~ "------------------------------------------------\n"
#~ "010200000002000000000000000000F ... | t"

#~ msgid ", <xref linkend=\"ST_LinestringFromWKB\"/>"
#~ msgstr ", <xref linkend=\"ST_LinestringFromWKB\"/>"

#~ msgid "ST_LinestringFromWKB"
#~ msgstr "ST_LinestringFromWKB"

#~ msgid "Makes a geometry from WKB with the given SRID."
#~ msgstr ""
#~ "Construit une géométrie depuis la représentation binaire WKB et le SRID "
#~ "donné."

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_LinestringFromWKB</"
#~ "function></funcdef> <paramdef><type>bytea </type> <parameter>WKB</"
#~ "parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_LinestringFromWKB</function></funcdef> <paramdef><type>bytea "
#~ "</type> <parameter>WKB</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_LinestringFromWKB</"
#~ "function></funcdef> <paramdef><type>bytea </type> <parameter>WKB</"
#~ "parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_LinestringFromWKB</function></funcdef> <paramdef><type>bytea "
#~ "</type> <parameter>WKB</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"

#~ msgid ""
#~ "The <varname>ST_LinestringFromWKB</varname> function, takes a well-known "
#~ "binary representation of geometry and a Spatial Reference System ID "
#~ "(<varname>SRID</varname>) and creates an instance of the appropriate "
#~ "geometry type - in this case, a <varname>LINESTRING</varname> geometry. "
#~ "This function plays the role of the Geometry Factory in SQL."
#~ msgstr ""
#~ "La fonction <varname> ST_LinestringFromWKB </varname> prend en paramètre "
#~ "une représentation binaire d'une géométrie (WKB ou EWKB) et un SRID  "
#~ "(<varname>SRID</varname>) et crée une instance du bon type géométrique, "
#~ "en l'occurence une <varname>LINESTRING</varname>. Cette fonction assure "
#~ "le rôle de Geometry Factory en SQL."

#~ msgid ""
#~ "If an SRID is not specified, it defaults to 0. <varname>NULL</varname> is "
#~ "returned if the input <varname>bytea</varname> does not represent a "
#~ "<varname>LINESTRING</varname> geometry. This an alias for <xref linkend="
#~ "\"ST_LineFromWKB\"/>."
#~ msgstr ""
#~ "Si le SRID n'est pas précisé, la valeur 0 est prise par défaut.  "
#~ "<varname>NULL</varname> est retourné si le paramètre <varname>bytea</"
#~ "varname> donné ne représente pas une  <varname>LINESTRING</varname>. "
#~ "Alias pour <xref linkend=\"ST_LineFromWKB\"/>."

#~ msgid "OGC SPEC 3.2.6.2 - optional SRID is from the conformance suite."
#~ msgstr "OGC SPEC 3.2.6.2 - SRID optionnel issu des tests de conformité."

#~ msgid ""
#~ "If you know all your geometries are <varname>LINESTRING</varname>s, it's "
#~ "more efficient to just use <xref linkend=\"ST_GeomFromWKB\"/>. This "
#~ "function just calls <xref linkend=\"ST_GeomFromWKB\"/> and adds "
#~ "additional validation that it returns a <varname>LINESTRING</varname>."
#~ msgstr ""
#~ "Si vous êtes sûrs que toutes les géométries WKT sont des "
#~ "<varname>LINESTRING</varname>s, la fonction <xref linkend=\"ST_GeomFromWKB"
#~ "\"/> est plus efficace car elle ne contrôle pas le type de la géométrie "
#~ "renvoyée."

#~ msgid ""
#~ "SELECT\n"
#~ "  ST_LineStringFromWKB(\n"
#~ "        ST_AsBinary(ST_GeomFromText('LINESTRING(1 2, 3 4)'))\n"
#~ "  ) AS aline,\n"
#~ "  ST_LinestringFromWKB(\n"
#~ "        ST_AsBinary(ST_GeomFromText('POINT(1 2)'))\n"
#~ "  ) IS NULL AS null_return;\n"
#~ "   aline                            | null_return\n"
#~ "------------------------------------------------\n"
#~ "010200000002000000000000000000F ... | t"
#~ msgstr ""
#~ "SELECT\n"
#~ "  ST_LineStringFromWKB(\n"
#~ "        ST_AsBinary(ST_GeomFromText('LINESTRING(1 2, 3 4)'))\n"
#~ "  ) AS aline,\n"
#~ "  ST_LinestringFromWKB(\n"
#~ "        ST_AsBinary(ST_GeomFromText('POINT(1 2)'))\n"
#~ "  ) IS NULL AS null_return;\n"
#~ "   aline                            | null_return\n"
#~ "------------------------------------------------\n"
#~ "010200000002000000000000000000F ... | t"

#~ msgid ", <xref linkend=\"ST_LineFromWKB\"/>"
#~ msgstr ", <xref linkend=\"ST_LineFromWKB\"/>"

#~ msgid "ST_MakeBox2D"
#~ msgstr "ST_MakeBox2D"

#~ msgid ""
#~ "<funcdef>box2d <function>ST_MakeBox2D</function></funcdef> "
#~ "<paramdef><type>geometry </type> <parameter>pointLowLeft</parameter></"
#~ "paramdef> <paramdef><type>geometry </type> <parameter>pointUpRight</"
#~ "parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>box2d <function>ST_MakeBox2D</function></funcdef> "
#~ "<paramdef><type>geometry </type> <parameter>pointLowLeft</parameter></"
#~ "paramdef> <paramdef><type>geometry </type> <parameter>pointUpRight</"
#~ "parameter></paramdef>"

#~ msgid ""
#~ "Creates a BOX2D defined by the given point geometries. This is useful for "
#~ "doing range queries"
#~ msgstr ""
#~ "Construit un objet BOX2D à partir des géométries POINT données. Utile "
#~ "lors de requêtes sur des intervals."

#~ msgid ""
#~ "--Return all features that fall reside or partly reside in a US national "
#~ "atlas coordinate bounding box\n"
#~ "--It is assumed here that the geometries are stored with SRID = 2163 (US "
#~ "National atlas equal area)\n"
#~ "SELECT feature_id, feature_name, the_geom\n"
#~ "FROM features\n"
#~ "WHERE the_geom &amp;&amp; ST_SetSRID(ST_MakeBox2D(ST_Point(-989502.1875, "
#~ "528439.5625),\n"
#~ "        ST_Point(-987121.375 ,529933.1875)),2163)"
#~ msgstr ""
#~ "--Return all features that fall reside or partly reside in a US national "
#~ "atlas coordinate bounding box\n"
#~ "--It is assumed here that the geometries are stored with SRID = 2163 (US "
#~ "National atlas equal area)\n"
#~ "SELECT feature_id, feature_name, the_geom\n"
#~ "FROM features\n"
#~ "WHERE the_geom &amp;&amp; ST_SetSRID(ST_MakeBox2D(ST_Point(-989502.1875, "
#~ "528439.5625),\n"
#~ "        ST_Point(-987121.375 ,529933.1875)),2163)"

#~ msgid "ST_3DMakeBox"
#~ msgstr "ST_3DMakeBox"

#~ msgid "Creates a BOX3D defined by the given 3d point geometries."
#~ msgstr "Construit un objet BOX3D à partir des géométries 3D POINT données. "

#~ msgid ""
#~ "<funcdef>box3d <function>ST_3DMakeBox</function></funcdef> "
#~ "<paramdef><type>geometry </type> <parameter>point3DLowLeftBottom</"
#~ "parameter></paramdef> <paramdef><type>geometry </type> "
#~ "<parameter>point3DUpRightTop</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>box3d <function>ST_3DMakeBox</function></funcdef> "
#~ "<paramdef><type>geometry </type> <parameter>point3DLowLeftBottom</"
#~ "parameter></paramdef> <paramdef><type>geometry </type> "
#~ "<parameter>point3DUpRightTop</parameter></paramdef>"

#~ msgid "This function supports 3d and will not drop the z-index."
#~ msgstr "Cette fonction supporte la 3d et ne supprime pas la coordonnées Z."

#~ msgid "Changed: 2.0.0 In prior versions this used to be called ST_MakeBox3D"
#~ msgstr ""
#~ "Changement: 2.0.0 dans les versions antérieures, le nom était ST_MakeBox3D"

#~ msgid ""
#~ "SELECT ST_3DMakeBox(ST_MakePoint(-989502.1875, 528439.5625, 10),\n"
#~ "        ST_MakePoint(-987121.375 ,529933.1875, 10)) As abb3d\n"
#~ "\n"
#~ "--bb3d--\n"
#~ "--------\n"
#~ "BOX3D(-989502.1875 528439.5625 10,-987121.375 529933.1875 10)"
#~ msgstr ""
#~ "SELECT ST_3DMakeBox(ST_MakePoint(-989502.1875, 528439.5625, 10),\n"
#~ "        ST_MakePoint(-987121.375 ,529933.1875, 10)) As abb3d\n"
#~ "\n"
#~ "--bb3d--\n"
#~ "--------\n"
#~ "BOX3D(-989502.1875 528439.5625 10,-987121.375 529933.1875 10)"

#~ msgid ", <xref linkend=\"ST_SetSRID\"/>, <xref linkend=\"ST_SRID\"/>"
#~ msgstr ", <xref linkend=\"ST_SetSRID\"/>, <xref linkend=\"ST_SRID\"/>"

#~ msgid "Examples: Non-Spatial Aggregate version"
#~ msgstr "Exemples: Utilisation de la fonction normale"

#~ msgid ""
#~ "First example is a simple one off line string composed of 2 points. The "
#~ "second formulates line strings from 2 points a user draws. The third is a "
#~ "one-off that joins 2 3d points to create a line in 3d space."
#~ msgstr ""
#~ "Le premier example est une simple ligne composée de deux points. Le "
#~ "deuxième construit une ligne à partir de deux points dessinés par un "
#~ "utilisateur. Le troisième créé une ligne 3D à partir de deux points 3D."

#~ msgid ""
#~ "SELECT ST_AsText(ST_MakeLine(ST_MakePoint(1,2), ST_MakePoint(3,4)));\n"
#~ "          st_astext\n"
#~ "---------------------\n"
#~ " LINESTRING(1 2,3 4)\n"
#~ "\n"
#~ "SELECT userpoints.id, ST_MakeLine(startpoint, endpoint) As drawn_line\n"
#~ "        FROM userpoints ;\n"
#~ "\n"
#~ "SELECT ST_AsEWKT(ST_MakeLine(ST_MakePoint(1,2,3), ST_MakePoint(3,4,5)));\n"
#~ "                st_asewkt\n"
#~ "-------------------------\n"
#~ " LINESTRING(1 2 3,3 4 5)"
#~ msgstr ""
#~ "SELECT ST_AsText(ST_MakeLine(ST_MakePoint(1,2), ST_MakePoint(3,4)));\n"
#~ "          st_astext\n"
#~ "---------------------\n"
#~ " LINESTRING(1 2,3 4)\n"
#~ "\n"
#~ "SELECT userpoints.id, ST_MakeLine(startpoint, endpoint) As drawn_line\n"
#~ "        FROM userpoints ;\n"
#~ "\n"
#~ "SELECT ST_AsEWKT(ST_MakeLine(ST_MakePoint(1,2,3), ST_MakePoint(3,4,5)));\n"
#~ "                st_asewkt\n"
#~ "-------------------------\n"
#~ " LINESTRING(1 2 3,3 4 5)"

#~ msgid ""
#~ "Creates a Polygon formed by the given shell. Input geometries must be "
#~ "closed LINESTRINGS. Comes in 2 variants."
#~ msgstr ""
#~ "Crée un Polygon à partir du contour donné. Les géométries en entrées "
#~ "doivent être des LINESTRING fermées. Existe en 2 versions."

#~ msgid ""
#~ "Variant 2: Creates a Polygon formed by the given shell and array of "
#~ "holes. You can construct a geometry array using ST_Accum or the "
#~ "PostgreSQL ARRAY[] and ARRAY() constructs. Input geometries must be "
#~ "closed LINESTRINGS."
#~ msgstr ""
#~ "Version 2: Crée un polygone constitué par le contour et un tableau des "
#~ "trous passés en paramètre. Le tableau de géométrie peut être construit "
#~ "avec la fonction ST_Accum ou avec les constructions PostgreSQL ARRAY[] et "
#~ "ARRAY(). Les géométries en paramètre doivent être fermées."

#~ msgid "Examples: Single closed LINESTRING"
#~ msgstr "Exemples: LINESTRING fermée"

#~ msgid ""
#~ "--2d line\n"
#~ "SELECT ST_MakePolygon(ST_GeomFromText('LINESTRING(75.15 29.53,77 29,77.6 "
#~ "29.5, 75.15 29.53)'));\n"
#~ "--If linestring is not closed\n"
#~ "--you can add the start point to close it\n"
#~ "SELECT ST_MakePolygon(ST_AddPoint(foo.open_line, ST_StartPoint(foo."
#~ "open_line)))\n"
#~ "FROM (\n"
#~ "SELECT ST_GeomFromText('LINESTRING(75.15 29.53,77 29,77.6 29.5)') As "
#~ "open_line) As foo;\n"
#~ "\n"
#~ "--3d closed line\n"
#~ "SELECT ST_MakePolygon(ST_GeomFromText('LINESTRING(75.15 29.53 1,77 29 "
#~ "1,77.6 29.5 1, 75.15 29.53 1)'));\n"
#~ "\n"
#~ "st_asewkt\n"
#~ "-----------\n"
#~ "POLYGON((75.15 29.53 1,77 29 1,77.6 29.5 1,75.15 29.53 1))\n"
#~ "\n"
#~ "--measured line --\n"
#~ "SELECT ST_MakePolygon(ST_GeomFromText('LINESTRINGM(75.15 29.53 1,77 29 "
#~ "1,77.6 29.5 2, 75.15 29.53 2)'));\n"
#~ "\n"
#~ "st_asewkt\n"
#~ "----------\n"
#~ "POLYGONM((75.15 29.53 1,77 29 1,77.6 29.5 2,75.15 29.53 2))"
#~ msgstr ""
#~ "--2d line\n"
#~ "SELECT ST_MakePolygon(ST_GeomFromText('LINESTRING(75.15 29.53,77 29,77.6 "
#~ "29.5, 75.15 29.53)'));\n"
#~ "--If linestring is not closed\n"
#~ "--you can add the start point to close it\n"
#~ "SELECT ST_MakePolygon(ST_AddPoint(foo.open_line, ST_StartPoint(foo."
#~ "open_line)))\n"
#~ "FROM (\n"
#~ "SELECT ST_GeomFromText('LINESTRING(75.15 29.53,77 29,77.6 29.5)') As "
#~ "open_line) As foo;\n"
#~ "\n"
#~ "--3d closed line\n"
#~ "SELECT ST_MakePolygon(ST_GeomFromText('LINESTRING(75.15 29.53 1,77 29 "
#~ "1,77.6 29.5 1, 75.15 29.53 1)'));\n"
#~ "\n"
#~ "st_asewkt\n"
#~ "-----------\n"
#~ "POLYGON((75.15 29.53 1,77 29 1,77.6 29.5 1,75.15 29.53 1))\n"
#~ "\n"
#~ "--measured line --\n"
#~ "SELECT ST_MakePolygon(ST_GeomFromText('LINESTRINGM(75.15 29.53 1,77 29 "
#~ "1,77.6 29.5 2, 75.15 29.53 2)'));\n"
#~ "\n"
#~ "st_asewkt\n"
#~ "----------\n"
#~ "POLYGONM((75.15 29.53 1,77 29 1,77.6 29.5 2,75.15 29.53 2))"

#~ msgid ""
#~ "<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
#~ "<paramdef><type>double precision</type> <parameter>x</parameter></"
#~ "paramdef> <paramdef><type>double precision</type> <parameter>y</"
#~ "parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
#~ "<paramdef><type>double precision</type> <parameter>x</parameter></"
#~ "paramdef> <paramdef><type>double precision</type> <parameter>y</"
#~ "parameter></paramdef>"

#~ msgid ""
#~ "<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
#~ "<paramdef><type>double precision</type> <parameter>x</parameter></"
#~ "paramdef> <paramdef><type>double precision</type> <parameter>y</"
#~ "parameter></paramdef> <paramdef><type>double precision</type> "
#~ "<parameter>z</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
#~ "<paramdef><type>double precision</type> <parameter>x</parameter></"
#~ "paramdef> <paramdef><type>double precision</type> <parameter>y</"
#~ "parameter></paramdef> <paramdef><type>double precision</type> "
#~ "<parameter>z</parameter></paramdef>"

#~ msgid "Note x is longitude and y is latitude"
#~ msgstr "Note: x: longitude, y: latitude"

#~ msgid "Creates a point geometry with an x y and m coordinate."
#~ msgstr "Crée un point à partir de coordonnées x, y et m."

#~ msgid "Note x is longitude and y is latitude."
#~ msgstr "Note: x: longitude, y: latitude"

#~ msgid ""
#~ "We use ST_AsEWKT in these examples to show the text representation "
#~ "instead of ST_AsText because ST_AsText does not support returning M."
#~ msgstr ""
#~ "Utilisation de ST_AsEWKT à la place de ST_AsText pour représenter les "
#~ "géométries sous forme textuelle car ST_AsText  ne support pas la "
#~ "coordonnée M."

#~ msgid ""
#~ "--Return EWKT representation of point with unknown SRID\n"
#~ "SELECT ST_AsEWKT(ST_MakePointM(-71.1043443253471, 42.3150676015829, "
#~ "10));\n"
#~ "\n"
#~ "--result\n"
#~ "                                   st_asewkt\n"
#~ "-----------------------------------------------\n"
#~ " POINTM(-71.1043443253471 42.3150676015829 10)\n"
#~ "\n"
#~ "--Return EWKT representation of point with measure marked as WGS 84 long "
#~ "lat\n"
#~ "SELECT ST_AsEWKT(ST_SetSRID(ST_MakePointM(-71.1043443253471, "
#~ "42.3150676015829,10),4326));\n"
#~ "\n"
#~ "                                                st_asewkt\n"
#~ "---------------------------------------------------------\n"
#~ "SRID=4326;POINTM(-71.1043443253471 42.3150676015829 10)\n"
#~ "\n"
#~ "--Return a 3d point (e.g. has altitude)\n"
#~ "SELECT ST_MakePoint(1, 2,1.5);\n"
#~ "\n"
#~ "--Get m of point\n"
#~ "SELECT ST_M(ST_MakePointM(-71.1043443253471, 42.3150676015829,10));\n"
#~ "result\n"
#~ "-------\n"
#~ "10"
#~ msgstr ""
#~ "--Return EWKT representation of point with unknown SRID\n"
#~ "SELECT ST_AsEWKT(ST_MakePointM(-71.1043443253471, 42.3150676015829, "
#~ "10));\n"
#~ "\n"
#~ "--result\n"
#~ "                                   st_asewkt\n"
#~ "-----------------------------------------------\n"
#~ " POINTM(-71.1043443253471 42.3150676015829 10)\n"
#~ "\n"
#~ "--Return EWKT representation of point with measure marked as WGS 84 long "
#~ "lat\n"
#~ "SELECT ST_AsEWKT(ST_SetSRID(ST_MakePointM(-71.1043443253471, "
#~ "42.3150676015829,10),4326));\n"
#~ "\n"
#~ "                                                st_asewkt\n"
#~ "---------------------------------------------------------\n"
#~ "SRID=4326;POINTM(-71.1043443253471 42.3150676015829 10)\n"
#~ "\n"
#~ "--Return a 3d point (e.g. has altitude)\n"
#~ "SELECT ST_MakePoint(1, 2,1.5);\n"
#~ "\n"
#~ "--Get m of point\n"
#~ "SELECT ST_M(ST_MakePointM(-71.1043443253471, 42.3150676015829,10));\n"
#~ "result\n"
#~ "-------\n"
#~ "10"

#~ msgid "ST_MLineFromText"
#~ msgstr "ST_MLineFromText"

#~ msgid "Return a specified ST_MultiLineString value from WKT representation."
#~ msgstr ""
#~ "Retourne un objet de type ST_MultiLineString à partir de sa "
#~ "représentation WKT."

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_MLineFromText</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>WKT</parameter></"
#~ "paramdef> <paramdef><type>integer </type> <parameter>srid</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_MLineFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_MLineFromText</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>WKT</parameter></"
#~ "paramdef> <paramdef><type>integer </type> <parameter>srid</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_MLineFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> </funcprototype>"

#~ msgid "Returns null if the WKT is not a MULTILINESTRING"
#~ msgstr "Retourne NULL si le WKT n'est pas une MULTILINESTRING"

#~ msgid ""
#~ "If you are absolutely sure all your WKT geometries are points, don't use "
#~ "this function. It is slower than ST_GeomFromText since it adds an "
#~ "additional validation step."
#~ msgstr ""
#~ "Si vous êtes absolument sûrs que toutes les géométries WKT sont des "
#~ "points, ne pas utiliser cette fonction. Elle est plus lente que "
#~ "ST_GeomFromText à cause d'une étape de validation supplémentaire."

#~ msgid "&sqlmm_compliant;SQL-MM 3: 9.4.4"
#~ msgstr "&sqlmm_compliant;SQL-MM 3: 9.4.4"

#~ msgid "ST_MPointFromText"
#~ msgstr "ST_MPointFromText"

#~ msgid ""
#~ "<refpurpose>Makes a Geometry from WKT with the given SRID. If SRID is not "
#~ "given, it defaults to 0.</refpurpose>"
#~ msgstr ""
#~ "<refpurpose>Créé une Geometry depuis un WKT avec le SRID donné. Si le "
#~ "SRID n'est pas fourni, il sera défini par défaut à 0.</refpurpose>"

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_MPointFromText</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>WKT</parameter></"
#~ "paramdef> <paramdef><type>integer </type> <parameter>srid</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_MPointFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_MPointFromText</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>WKT</parameter></"
#~ "paramdef> <paramdef><type>integer </type> <parameter>srid</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_MPointFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> </funcprototype>"

#~ msgid ""
#~ "<para>Makes a Geometry from WKT with the given SRID. If SRID is not "
#~ "given, it defaults to 0.</para>"
#~ msgstr ""
#~ "<para>Créé une Geometry depuis un WKT avec le SRID donné. Si le SRID "
#~ "n'est pas fourni, il sera défini par défaut à 0. </para>"

#~ msgid "Returns null if the WKT is not a MULTIPOINT"
#~ msgstr "Retourne NULL si le WKT n'est pas une MULTIPOINT"

#~ msgid "&sfs_compliant; 3.2.6.2"
#~ msgstr "&sfs_compliant; 3.2.6.2"

#~ msgid "&sqlmm_compliant; SQL-MM 3: 9.2.4"
#~ msgstr "&sqlmm_compliant; SQL-MM 3: 9.2.4"

#~ msgid ""
#~ "SELECT ST_MPointFromText('MULTIPOINT(1 2, 3 4)');\n"
#~ "SELECT ST_MPointFromText('MULTIPOINT(-70.9590 42.1180, -70.9611 "
#~ "42.1223)', 4326);"
#~ msgstr ""
#~ "SELECT ST_MPointFromText('MULTIPOINT(1 2, 3 4)');\n"
#~ "SELECT ST_MPointFromText('MULTIPOINT(-70.9590 42.1180, -70.9611 "
#~ "42.1223)', 4326);"

#~ msgid "ST_MPolyFromText"
#~ msgstr "ST_MPolyFromText"

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_MPolyFromText</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>WKT</parameter></"
#~ "paramdef> <paramdef><type>integer </type> <parameter>srid</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_MPolyFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_MPolyFromText</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>WKT</parameter></"
#~ "paramdef> <paramdef><type>integer </type> <parameter>srid</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_MPolyFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> </funcprototype>"

#~ msgid "Throws an error if the WKT is not a MULTIPOLYGON"
#~ msgstr "Retourne une erreur si le WKT n'est pas un MULTIPOLYGON"

#~ msgid ""
#~ "If you are absolutely sure all your WKT geometries are multipolygons, "
#~ "don't use this function. It is slower than ST_GeomFromText since it adds "
#~ "an additional validation step."
#~ msgstr ""
#~ "Si vous êtes absolument sûrs que toutes les géométries WKT sont des "
#~ "multipolygones, ne pas utiliser cette fonction. Elle est plus lente que "
#~ "ST_GeomFromText à cause d'une étape de validation supplémentaire."

#~ msgid "&sqlmm_compliant; SQL-MM 3: 9.6.4"
#~ msgstr "&sqlmm_compliant; SQL-MM 3: 9.6.4"

#~ msgid ""
#~ "SELECT ST_MPolyFromText('MULTIPOLYGON(((0 0 1,20 0 1,20 20 1,0 20 1,0 0 "
#~ "1),(5 5 3,5 7 3,7 7 3,7 5 3,5 5 3)))');\n"
#~ "SELECt ST_MPolyFromText('MULTIPOLYGON(((-70.916 42.1002,-70.9468 "
#~ "42.0946,-70.9765 42.0872,-70.9754 42.0875,-70.9749 42.0879,-70.9752 "
#~ "42.0881,-70.9754 42.0891,-70.9758 42.0894,-70.9759 42.0897,-70.9759 "
#~ "42.0899,-70.9754 42.0902,-70.9756 42.0906,-70.9753 42.0907,-70.9753 "
#~ "42.0917,-70.9757 42.0924,-70.9755 42.0928,-70.9755 42.0942,-70.9751 "
#~ "42.0948,-70.9755 42.0953,-70.9751 42.0958,-70.9751 42.0962,-70.9759 "
#~ "42.0983,-70.9767 42.0987,-70.9768 42.0991,-70.9771 42.0997,-70.9771 "
#~ "42.1003,-70.9768 42.1005,-70.977 42.1011,-70.9766 42.1019,-70.9768 "
#~ "42.1026,-70.9769 42.1033,-70.9775 42.1042,-70.9773 42.1043,-70.9776 "
#~ "42.1043,-70.9778 42.1048,-70.9773 42.1058,-70.9774 42.1061,-70.9779 "
#~ "42.1065,-70.9782 42.1078,-70.9788 42.1085,-70.9798 42.1087,-70.9806 "
#~ "42.109,-70.9807 42.1093,-70.9806 42.1099,-70.9809 42.1109,-70.9808 "
#~ "42.1112,-70.9798 42.1116,-70.9792 42.1127,-70.979 42.1129,-70.9787 "
#~ "42.1134,-70.979 42.1139,-70.9791 42.1141,-70.9987 42.1116,-71.0022 "
#~ "42.1273,\n"
#~ "        -70.9408 42.1513,-70.9315 42.1165,-70.916 42.1002)))',4326);"
#~ msgstr ""
#~ "SELECT ST_MPolyFromText('MULTIPOLYGON(((0 0 1,20 0 1,20 20 1,0 20 1,0 0 "
#~ "1),(5 5 3,5 7 3,7 7 3,7 5 3,5 5 3)))');\n"
#~ "SELECt ST_MPolyFromText('MULTIPOLYGON(((-70.916 42.1002,-70.9468 "
#~ "42.0946,-70.9765 42.0872,-70.9754 42.0875,-70.9749 42.0879,-70.9752 "
#~ "42.0881,-70.9754 42.0891,-70.9758 42.0894,-70.9759 42.0897,-70.9759 "
#~ "42.0899,-70.9754 42.0902,-70.9756 42.0906,-70.9753 42.0907,-70.9753 "
#~ "42.0917,-70.9757 42.0924,-70.9755 42.0928,-70.9755 42.0942,-70.9751 "
#~ "42.0948,-70.9755 42.0953,-70.9751 42.0958,-70.9751 42.0962,-70.9759 "
#~ "42.0983,-70.9767 42.0987,-70.9768 42.0991,-70.9771 42.0997,-70.9771 "
#~ "42.1003,-70.9768 42.1005,-70.977 42.1011,-70.9766 42.1019,-70.9768 "
#~ "42.1026,-70.9769 42.1033,-70.9775 42.1042,-70.9773 42.1043,-70.9776 "
#~ "42.1043,-70.9778 42.1048,-70.9773 42.1058,-70.9774 42.1061,-70.9779 "
#~ "42.1065,-70.9782 42.1078,-70.9788 42.1085,-70.9798 42.1087,-70.9806 "
#~ "42.109,-70.9807 42.1093,-70.9806 42.1099,-70.9809 42.1109,-70.9808 "
#~ "42.1112,-70.9798 42.1116,-70.9792 42.1127,-70.979 42.1129,-70.9787 "
#~ "42.1134,-70.979 42.1139,-70.9791 42.1141,-70.9987 42.1116,-71.0022 "
#~ "42.1273,\n"
#~ "        -70.9408 42.1513,-70.9315 42.1165,-70.916 42.1002)))',4326);"

#~ msgid ""
#~ "-- the :: is PostgreSQL short-hand for casting.\n"
#~ "SELECT ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326)::"
#~ "geography;"
#~ msgstr ""
#~ "-- the :: is PostgreSQL short-hand for casting.\n"
#~ "SELECT ST_SetSRID(ST_Point(-71.1043443253471, 42.3150676015829),4326)::"
#~ "geography;"

#~ msgid ""
#~ "--If your point coordinates are in a different spatial reference from "
#~ "WGS-84 long lat, then you need to transform before casting\n"
#~ "-- This example we convert a point in Pennsylvania State Plane feet to "
#~ "WGS 84 and then geography\n"
#~ "SELECT ST_Transform(ST_SetSRID(ST_Point(3637510, 3014852),2273),4326)::"
#~ "geography;"
#~ msgstr ""
#~ "--If your point coordinates are in a different spatial reference from "
#~ "WGS-84 long lat, then you need to transform before casting\n"
#~ "-- This example we convert a point in Pennsylvania State Plane feet to "
#~ "WGS 84 and then geography\n"
#~ "SELECT ST_Transform(ST_SetSRID(ST_Point(3637510, 3014852),2273),4326)::"
#~ "geography;"

#~ msgid "ST_PointFromGeoHash"
#~ msgstr "ST_PointFromGeoHash"

#~ msgid "Return a point from a GeoHash string."
#~ msgstr "Retourne un point à partir d'une chaîne GeoHash."

#~ msgid ""
#~ "<funcdef>point <function>ST_PointFromGeoHash</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>geohash</parameter></paramdef> "
#~ "<paramdef choice=\"opt\"><type>integer </type> "
#~ "<parameter>precision=full_precision_of_geohash</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>point <function>ST_PointFromGeoHash</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>geohash</parameter></paramdef> "
#~ "<paramdef choice=\"opt\"><type>integer </type> "
#~ "<parameter>precision=full_precision_of_geohash</parameter></paramdef>"

#~ msgid ""
#~ "Return a point from a GeoHash string. The point represents the center "
#~ "point of the GeoHash."
#~ msgstr ""
#~ "Retourne une point à partir d'une chaîne GeoHash. Le point représente le "
#~ "centre du GeoHash."

#~ msgid ""
#~ "If no <varname>precision</varname> is specified ST_PointFromGeoHash "
#~ "returns a point based on full precision of the input GeoHash string."
#~ msgstr ""
#~ "Si aucune <varname>precision</varname> n'est spécifiée,  "
#~ "ST_PointFromGeoHash retourne une un point basé sur la précision complète "
#~ "de la chaîne GeoHash en entrée."

#~ msgid ""
#~ "If <varname>precision</varname> is specified ST_PointFromGeoHash will use "
#~ "that many characters from the GeoHash to create the point."
#~ msgstr ""
#~ "Si <varname>precision</varname> est spécifié,  ST_PointFromGeoHash "
#~ "utilise autant de caractère du GeoHash pour créer le point."

#~ msgid ""
#~ "<![CDATA[SELECT "
#~ "ST_AsText(ST_PointFromGeoHash('9qqj7nmxncgyy4d0dbxqz0'));\n"
#~ "          st_astext\n"
#~ "------------------------------\n"
#~ " POINT(-115.172816 36.114646)\n"
#~ "\n"
#~ "SELECT ST_AsText(ST_PointFromGeoHash('9qqj7nmxncgyy4d0dbxqz0', 4));\n"
#~ "             st_astext\n"
#~ "-----------------------------------\n"
#~ " POINT(-115.13671875 36.123046875)\n"
#~ "\n"
#~ "SELECT ST_AsText(ST_PointFromGeoHash('9qqj7nmxncgyy4d0dbxqz0', 10));\n"
#~ "                 st_astext\n"
#~ "-------------------------------------------\n"
#~ " POINT(-115.172815918922 36.1146435141563)\n"
#~ "                ]]>"
#~ msgstr ""
#~ "<![CDATA[SELECT "
#~ "ST_AsText(ST_PointFromGeoHash('9qqj7nmxncgyy4d0dbxqz0'));\n"
#~ "          st_astext\n"
#~ "------------------------------\n"
#~ " POINT(-115.172816 36.114646)\n"
#~ "\n"
#~ "SELECT ST_AsText(ST_PointFromGeoHash('9qqj7nmxncgyy4d0dbxqz0', 4));\n"
#~ "             st_astext\n"
#~ "-----------------------------------\n"
#~ " POINT(-115.13671875 36.123046875)\n"
#~ "\n"
#~ "SELECT ST_AsText(ST_PointFromGeoHash('9qqj7nmxncgyy4d0dbxqz0', 10));\n"
#~ "                 st_astext\n"
#~ "-------------------------------------------\n"
#~ " POINT(-115.172815918922 36.1146435141563)\n"
#~ "                ]]>"

#~ msgid ""
#~ ", <xref linkend=\"ST_Box2dFromGeoHash\"/>, <xref linkend="
#~ "\"ST_GeomFromGeoHash\"/>"
#~ msgstr ""
#~ ", <xref linkend=\"ST_Box2dFromGeoHash\"/>, <xref linkend="
#~ "\"ST_GeomFromGeoHash\"/>"

#~ msgid "ST_PointFromText"
#~ msgstr "ST_PointFromText"

#~ msgid ""
#~ "Makes a point Geometry from WKT with the given SRID. If SRID is not "
#~ "given, it defaults to unknown."
#~ msgstr ""
#~ "Construit une géométrie point à partir d'une représentation WKT et le "
#~ "SRID donné. Si aucun SRID n'est donné, la valeur par défaut est 0."

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_PointFromText</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>WKT</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_PointFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_PointFromText</function></"
#~ "funcdef> <paramdef><type>text </type> <parameter>WKT</parameter></"
#~ "paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_PointFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"

#~ msgid ""
#~ "There are 2 variants of ST_PointFromText function, the first takes no "
#~ "SRID and returns a geometry with no defined spatial reference system. The "
#~ "second takes a spatial reference id as the second argument and returns an "
#~ "ST_Geometry that includes this srid as part of its meta-data. The srid "
#~ "must be defined in the spatial_ref_sys table."
#~ msgstr ""
#~ "Il existe 2 versions de la fonction ST_PointFromText: la première ne "
#~ "prend pas de SRID en paramètre et retourne une geometry sans système de "
#~ "coordonnées. La seconde prend un SRID en second paramètre et retourne une "
#~ "ST_Geometry incluant un SRID dans ses métadonnées. Ce SRID doit "
#~ "obligatoirement exister dans la table spatial_ref_sys."

#~ msgid ""
#~ "If you are absolutely sure all your WKT geometries are points, don't use "
#~ "this function. It is slower than ST_GeomFromText since it adds an "
#~ "additional validation step. If you are building points from long lat "
#~ "coordinates and care more about performance and accuracy than OGC "
#~ "compliance, use <xref linkend=\"ST_MakePoint\"/> or OGC compliant alias "
#~ "<xref linkend=\"ST_Point\"/>."
#~ msgstr ""
#~ "Si vous êtes absolument sûrs que toutes les géométries WKT sont des "
#~ "points, ne pas utiliser cette fonction. Elle est plus lente que "
#~ "ST_GeomFromText à cause d'une étape de validation supplémentaire. Si le "
#~ "point doit être construit à partir de coordonnées latitude longitude et "
#~ "que la performance est recherchée, utiliser la fonction <xref linkend="
#~ "\"ST_MakePoint\"/> ou son équivalent OGC <xref linkend=\"ST_Point\"/>."

#~ msgid "&sqlmm_compliant; SQL-MM 3: 6.1.8"
#~ msgstr "&sqlmm_compliant; SQL-MM 3: 6.1.8"

#~ msgid ""
#~ "SELECT ST_PointFromText('POINT(-71.064544 42.28787)');\n"
#~ "SELECT ST_PointFromText('POINT(-71.064544 42.28787)', 4326);"
#~ msgstr ""
#~ "SELECT ST_PointFromText('POINT(-71.064544 42.28787)');\n"
#~ "SELECT ST_PointFromText('POINT(-71.064544 42.28787)', 4326);"

#~ msgid "ST_PointFromWKB"
#~ msgstr "ST_PointFromWKB"

#~ msgid "Makes a geometry from WKB with the given SRID"
#~ msgstr ""
#~ "Construit une géométrie depuis la représentation binaire WKB et le SRID "
#~ "donné."

#~ msgid ""
#~ "The <varname>ST_PointFromWKB</varname> function, takes a well-known "
#~ "binary representation of geometry and a Spatial Reference System ID "
#~ "(<varname>SRID</varname>) and creates an instance of the appropriate "
#~ "geometry type - in this case, a <varname>POINT</varname> geometry. This "
#~ "function plays the role of the Geometry Factory in SQL."
#~ msgstr ""
#~ "<varname> ST_PointFromWKB </varname> prend en paramètre une "
#~ "représentation binaire d'une géométrie et un SRID (<varname>SRID</"
#~ "varname>) et crée une instance du bon type géométrique, en l'occurence "
#~ "une <varname> POINT </varname>. Cette fonction assure le rôle de Geometry "
#~ "Factory en SQL."

#~ msgid ""
#~ "If an SRID is not specified, it defaults to 0. <varname>NULL</varname> is "
#~ "returned if the input <varname>bytea</varname> does not represent a "
#~ "<varname>POINT</varname> geometry."
#~ msgstr ""
#~ "Si le SRID n'est pas précisé, la valeur 0 est prise par défaut.  "
#~ "<varname>NULL</varname> est retourné si le paramètre <varname>bytea</"
#~ "varname> donné ne représente pas une  géométrie <varname>POINT</varname>."

#~ msgid "&sfs_compliant; s3.2.7.2"
#~ msgstr "&sfs_compliant; s3.2.7.2"

#~ msgid "&sqlmm_compliant; SQL-MM 3: 6.1.9"
#~ msgstr "&sqlmm_compliant; SQL-MM 3: 6.1.9"

#~ msgid ""
#~ "SELECT\n"
#~ "  ST_AsText(\n"
#~ "        ST_PointFromWKB(\n"
#~ "          ST_AsEWKB('POINT(2 5)'::geometry)\n"
#~ "        )\n"
#~ "  );\n"
#~ " st_astext\n"
#~ "------------\n"
#~ " POINT(2 5)\n"
#~ "(1 row)\n"
#~ "\n"
#~ "SELECT\n"
#~ "  ST_AsText(\n"
#~ "        ST_PointFromWKB(\n"
#~ "          ST_AsEWKB('LINESTRING(2 5, 2 6)'::geometry)\n"
#~ "        )\n"
#~ "  );\n"
#~ " st_astext\n"
#~ "-----------\n"
#~ "\n"
#~ "(1 row)"
#~ msgstr ""
#~ "SELECT\n"
#~ "  ST_AsText(\n"
#~ "        ST_PointFromWKB(\n"
#~ "          ST_AsEWKB('POINT(2 5)'::geometry)\n"
#~ "        )\n"
#~ "  );\n"
#~ " st_astext\n"
#~ "------------\n"
#~ " POINT(2 5)\n"
#~ "(1 row)\n"
#~ "\n"
#~ "SELECT\n"
#~ "  ST_AsText(\n"
#~ "        ST_PointFromWKB(\n"
#~ "          ST_AsEWKB('LINESTRING(2 5, 2 6)'::geometry)\n"
#~ "        )\n"
#~ "  );\n"
#~ " st_astext\n"
#~ "-----------\n"
#~ "\n"
#~ "(1 row)"

#~ msgid ""
#~ "<refpurpose>Returns a polygon built from the specified linestring and "
#~ "SRID.</refpurpose>"
#~ msgstr ""
#~ "<refpurpose>Retourne un polygone contruit à partir de la ligne et du SRID "
#~ "donnés.</refpurpose>"

#~ msgid ""
#~ "<para>Returns a polygon built from the specified linestring and SRID.</"
#~ "para>"
#~ msgstr ""
#~ "<para>Retourne un polygone construit à partir de la ligne et du SRID "
#~ "donnés.</para>"

#~ msgid ""
#~ "--a 2d polygon\n"
#~ "SELECT ST_Polygon(ST_GeomFromText('LINESTRING(75.15 29.53,77 29,77.6 "
#~ "29.5, 75.15 29.53)'), 4326);\n"
#~ "\n"
#~ "--result--\n"
#~ "POLYGON((75.15 29.53,77 29,77.6 29.5,75.15 29.53))\n"
#~ "--a 3d polygon\n"
#~ "SELECT ST_AsEWKT(ST_Polygon(ST_GeomFromEWKT('LINESTRING(75.15 29.53 1,77 "
#~ "29 1,77.6 29.5 1, 75.15 29.53 1)'), 4326));\n"
#~ "\n"
#~ "result\n"
#~ "------\n"
#~ "SRID=4326;POLYGON((75.15 29.53 1,77 29 1,77.6 29.5 1,75.15 29.53 1))"
#~ msgstr ""
#~ "--a 2d polygon\n"
#~ "SELECT ST_Polygon(ST_GeomFromText('LINESTRING(75.15 29.53,77 29,77.6 "
#~ "29.5, 75.15 29.53)'), 4326);\n"
#~ "\n"
#~ "--result--\n"
#~ "POLYGON((75.15 29.53,77 29,77.6 29.5,75.15 29.53))\n"
#~ "--a 3d polygon\n"
#~ "SELECT ST_AsEWKT(ST_Polygon(ST_GeomFromEWKT('LINESTRING(75.15 29.53 1,77 "
#~ "29 1,77.6 29.5 1, 75.15 29.53 1)'), 4326));\n"
#~ "\n"
#~ "result\n"
#~ "------\n"
#~ "SRID=4326;POLYGON((75.15 29.53 1,77 29 1,77.6 29.5 1,75.15 29.53 1))"

#~ msgid "ST_PolygonFromText"
#~ msgstr "ST_PolygonFromText"

#~ msgid ""
#~ "<funcprototype> <funcdef>geometry <function>ST_PolygonFromText</"
#~ "function></funcdef> <paramdef><type>text </type> <parameter>WKT</"
#~ "parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_PolygonFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"
#~ msgstr ""
#~ "<funcprototype> <funcdef>geometry <function>ST_PolygonFromText</"
#~ "function></funcdef> <paramdef><type>text </type> <parameter>WKT</"
#~ "parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
#~ "<function>ST_PolygonFromText</function></funcdef> <paramdef><type>text </"
#~ "type> <parameter>WKT</parameter></paramdef> <paramdef><type>integer </"
#~ "type> <parameter>srid</parameter></paramdef> </funcprototype>"

#~ msgid ""
#~ "If you are absolutely sure all your WKT geometries are polygons, don't "
#~ "use this function. It is slower than ST_GeomFromText since it adds an "
#~ "additional validation step."
#~ msgstr ""
#~ "Si vous êtes absolument sûrs que toutes les géométries WKT sont des "
#~ "polygones, ne pas utiliser cette fonction. Elle est plus lente que "
#~ "ST_GeomFromText à cause d'une étape de validation supplémentaire."

#~ msgid "&sqlmm_compliant; SQL-MM 3: 8.3.6"
#~ msgstr "&sqlmm_compliant; SQL-MM 3: 8.3.6"

#~ msgid ""
#~ "SELECT ST_PolygonFromText('POLYGON((-71.1776585052917 "
#~ "42.3902909739571,-71.1776820268866 42.3903701743239,\n"
#~ "-71.1776063012595 42.3903825660754,-71.1775826583081 "
#~ "42.3903033653531,-71.1776585052917 42.3902909739571))');\n"
#~ "st_polygonfromtext\n"
#~ "------------------\n"
#~ "010300000001000000050000006...\n"
#~ "\n"
#~ "\n"
#~ "SELECT ST_PolygonFromText('POINT(1 2)') IS NULL as point_is_notpoly;\n"
#~ "\n"
#~ "point_is_not_poly\n"
#~ "----------\n"
#~ "t"
#~ msgstr ""
#~ "SELECT ST_PolygonFromText('POLYGON((-71.1776585052917 "
#~ "42.3902909739571,-71.1776820268866 42.3903701743239,\n"
#~ "-71.1776063012595 42.3903825660754,-71.1775826583081 "
#~ "42.3903033653531,-71.1776585052917 42.3902909739571))');\n"
#~ "st_polygonfromtext\n"
#~ "------------------\n"
#~ "010300000001000000050000006...\n"
#~ "\n"
#~ "\n"
#~ "SELECT ST_PolygonFromText('POINT(1 2)') IS NULL as point_is_notpoly;\n"
#~ "\n"
#~ "point_is_not_poly\n"
#~ "----------\n"
#~ "t"

#~ msgid "ST_WKBToSQL"
#~ msgstr "ST_WKBToSQL"

#~ msgid ""
#~ "Return a specified ST_Geometry value from Well-Known Binary "
#~ "representation (WKB). This is an alias name for ST_GeomFromWKB that takes "
#~ "no srid"
#~ msgstr ""
#~ "Retourne un objet ST_Geometry à partir de sa représentation textuelle "
#~ "Well-Known Binary (WKB). Alias pour ST_GeomFromWKB sans SRID"

#~ msgid ""
#~ "<funcdef>geometry <function>ST_WKBToSQL</function></funcdef> "
#~ "<paramdef><type>bytea </type> <parameter>WKB</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_WKBToSQL</function></funcdef> "
#~ "<paramdef><type>bytea </type> <parameter>WKB</parameter></paramdef>"

#~ msgid "&sqlmm_compliant; SQL-MM 3: 5.1.36"
#~ msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.36"

#~ msgid "ST_WKTToSQL"
#~ msgstr "ST_WKTToSQL"

#~ msgid ""
#~ "<funcdef>geometry <function>ST_WKTToSQL</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>WKT</parameter></paramdef>"
#~ msgstr ""
#~ "<funcdef>geometry <function>ST_WKTToSQL</function></funcdef> "
#~ "<paramdef><type>text </type> <parameter>WKT</parameter></paramdef>"

#~ msgid "&sqlmm_compliant; SQL-MM 3: 5.1.34"
#~ msgstr "&sqlmm_compliant; SQL-MM 3: 5.1.34"
