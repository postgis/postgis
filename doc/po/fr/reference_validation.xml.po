# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: https://bugs.kde.org\n"
"POT-Creation-Date: 2020-02-01 19:39+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <kde-i18n-doc@kde.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: para
#: reference_validation.xml:7
#, no-c-format
msgid ""
"These functions test whether geometries are valid according to the OGC SFS "
"standard. They also provide information about the nature and location of "
"invalidity."
msgstr ""

#. Tag: title
#: reference_validation.xml:14
#, no-c-format
msgid "Geometry Validation"
msgstr ""

#. Tag: refname
#: reference_validation.xml:18
#, no-c-format
msgid "ST_IsValid"
msgstr ""

#. Tag: refpurpose
#: reference_validation.xml:20
#, no-c-format
msgid "Tests if a geometry is well-formed in 2D."
msgstr ""

#. Tag: funcsynopsis
#: reference_validation.xml:25
#, no-c-format
msgid ""
"<funcprototype> <funcdef>boolean <function>ST_IsValid</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>boolean <function>ST_IsValid</"
"function></funcdef> <paramdef><type>geometry </type> <parameter>g</"
"parameter></paramdef> <paramdef><type>integer </type> <parameter>flags</"
"parameter></paramdef> </funcprototype>"
msgstr ""

#. Tag: title
#: reference_validation.xml:41 reference_validation.xml:115
#: reference_validation.xml:177
#, no-c-format
msgid "Description"
msgstr ""

#. Tag: para
#: reference_validation.xml:43
#, no-c-format
msgid ""
"Test if an ST_Geometry value is well-formed in 2D according to the OGC "
"rules. For geometries that are invalid, the PostgreSQL NOTICE will provide "
"details of why it is not valid. For geometries with 3 and 4 dimensions, the "
"validity still only tested in 2 dimensions."
msgstr ""

#. Tag: para
#: reference_validation.xml:48
#, no-c-format
msgid ""
"For the version with flags, supported <varname>flags</varname> are "
"documented in <xref linkend=\"ST_IsValidDetail\"/> This version does not "
"print a NOTICE explaining invalidity."
msgstr ""

#. Tag: para
#: reference_validation.xml:53
#, no-c-format
msgid ""
"For more information on the definition of geometry validity, refer to <link "
"linkend=\"OGC_Validity\">\"Ensuring OpenGIS compliancy of geometries\"</link>"
msgstr ""

#. Tag: para
#: reference_validation.xml:57
#, no-c-format
msgid ""
"SQL-MM defines the result of ST_IsValid(NULL) to be 0, while PostGIS returns "
"NULL."
msgstr ""

#. Tag: para
#: reference_validation.xml:60 reference_validation.xml:133
#: reference_validation.xml:186
#, no-c-format
msgid "Performed by the GEOS module."
msgstr ""

#. Tag: para
#: reference_validation.xml:62
#, no-c-format
msgid "The version accepting flags is available starting with 2.0.0."
msgstr ""

#. Tag: para
#: reference_validation.xml:65
#, no-c-format
msgid "&sfs_compliant;"
msgstr ""

#. Tag: para
#: reference_validation.xml:66
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.9"
msgstr ""

#. Tag: para
#: reference_validation.xml:69
#, no-c-format
msgid ""
"Neither OGC-SFS nor SQL-MM specifications include a flag argument for "
"ST_IsValid. The flag is a PostGIS extension."
msgstr ""

#. Tag: title
#: reference_validation.xml:79 reference_validation.xml:138
#: reference_validation.xml:191
#, no-c-format
msgid "Examples"
msgstr ""

#. Tag: programlisting
#: reference_validation.xml:81
#, no-c-format
msgid ""
"SELECT ST_IsValid(ST_GeomFromText('LINESTRING(0 0, 1 1)')) As good_line,\n"
"        ST_IsValid(ST_GeomFromText('POLYGON((0 0, 1 1, 1 2, 1 1, 0 0))')) As "
"bad_poly\n"
"--results\n"
"NOTICE:  Self-intersection at or near point 0 0\n"
" good_line | bad_poly\n"
"-----------+----------\n"
" t         | f"
msgstr ""

#. Tag: title
#: reference_validation.xml:85 reference_validation.xml:145
#: reference_validation.xml:198
#, no-c-format
msgid "See Also"
msgstr ""

#. Tag: para
#: reference_validation.xml:87
#, no-c-format
msgid ""
", <xref linkend=\"ST_IsValidReason\"/>, <xref linkend=\"ST_IsValidDetail\"/"
">, <xref linkend=\"ST_Summary\"/>"
msgstr ""

#. Tag: refname
#: reference_validation.xml:99
#, no-c-format
msgid "ST_IsValidDetail"
msgstr ""

#. Tag: refpurpose
#: reference_validation.xml:101
#, no-c-format
msgid ""
"Returns a <varname>valid_detail</varname> row stating if a geometry is "
"valid, and if not a reason why and a location."
msgstr ""

#. Tag: funcprototype
#: reference_validation.xml:106
#, no-c-format
msgid ""
"<funcdef>valid_detail <function>ST_IsValidDetail</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geom</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>integer </type> <parameter>flags</parameter></"
"paramdef>"
msgstr ""

#. Tag: para
#: reference_validation.xml:117
#, no-c-format
msgid ""
"Returns a valid_detail row, formed by a boolean (valid) stating if a "
"geometry is valid, a varchar (reason) stating a reason why it is invalid and "
"a geometry (location) pointing out where it is invalid."
msgstr ""

#. Tag: para
#: reference_validation.xml:119
#, no-c-format
msgid ""
"Useful to substitute and improve the combination of ST_IsValid and "
"ST_IsValidReason to generate a detailed report of invalid geometries."
msgstr ""

#. Tag: para
#: reference_validation.xml:121
#, no-c-format
msgid "The 'flags' argument is a bitfield. It can have the following values:"
msgstr ""

#. Tag: para
#: reference_validation.xml:125
#, no-c-format
msgid ""
"1: Consider self-intersecting rings forming holes as valid. This is also "
"know as \"the ESRI flag\". Note that this is against the OGC model."
msgstr ""

#. Tag: para
#: reference_validation.xml:134
#, no-c-format
msgid "Availability: 2.0.0"
msgstr ""

#. Tag: programlisting
#: reference_validation.xml:140
#, no-c-format
msgid ""
"--First 3 Rejects from a successful quintuplet experiment\n"
"SELECT gid, reason(ST_IsValidDetail(the_geom)), "
"ST_AsText(location(ST_IsValidDetail(the_geom))) as location\n"
"FROM\n"
"(SELECT ST_MakePolygon(ST_ExteriorRing(e.buff), array_agg(f.line)) As "
"the_geom, gid\n"
"FROM (SELECT ST_Buffer(ST_MakePoint(x1*10,y1), z1) As buff, x1*10 + y1*100 + "
"z1*1000 As gid\n"
"        FROM generate_series(-4,6) x1\n"
"        CROSS JOIN generate_series(2,5) y1\n"
"        CROSS JOIN generate_series(1,8) z1\n"
"        WHERE x1 &gt; y1*0.5 AND z1 &lt; x1*y1) As e\n"
"        INNER JOIN (SELECT "
"ST_Translate(ST_ExteriorRing(ST_Buffer(ST_MakePoint(x1*10,y1), z1)),y1*1, "
"z1*2) As line\n"
"        FROM generate_series(-3,6) x1\n"
"        CROSS JOIN generate_series(2,5) y1\n"
"        CROSS JOIN generate_series(1,10) z1\n"
"        WHERE x1 &gt; y1*0.75 AND z1 &lt; x1*y1) As f\n"
"ON (ST_Area(e.buff) &gt; 78 AND ST_Contains(e.buff, f.line))\n"
"GROUP BY gid, e.buff) As quintuplet_experiment\n"
"WHERE ST_IsValid(the_geom) = false\n"
"ORDER BY gid\n"
"LIMIT 3;\n"
"\n"
" gid  |      reason       |  location\n"
"------+-------------------+-------------\n"
" 5330 | Self-intersection | POINT(32 5)\n"
" 5340 | Self-intersection | POINT(42 5)\n"
" 5350 | Self-intersection | POINT(52 5)\n"
"\n"
" --simple example\n"
"SELECT * FROM ST_IsValidDetail('LINESTRING(220227 150406,2220227 "
"150407,222020 150410)');\n"
"\n"
" valid | reason | location\n"
"-------+--------+----------\n"
" t     |        |"
msgstr ""

#. Tag: para
#: reference_validation.xml:147
#, no-c-format
msgid ", <xref linkend=\"ST_IsValidReason\"/>"
msgstr ""

#. Tag: refname
#: reference_validation.xml:156
#, no-c-format
msgid "ST_IsValidReason"
msgstr ""

#. Tag: refpurpose
#: reference_validation.xml:158
#, no-c-format
msgid ""
"Returns text stating if a geometry is valid, or a reason for invalidity."
msgstr ""

#. Tag: funcsynopsis
#: reference_validation.xml:162
#, no-c-format
msgid ""
"<funcprototype> <funcdef>text <function>ST_IsValidReason</function></"
"funcdef> <paramdef><type>geometry </type> <parameter>geomA</parameter></"
"paramdef> <paramdef><type>integer </type> <parameter>flags</parameter></"
"paramdef> </funcprototype> <funcprototype> <funcdef>text "
"<function>ST_IsValidReason</function></funcdef> <paramdef><type>geometry </"
"type> <parameter>geomA</parameter></paramdef> </funcprototype>"
msgstr ""

#. Tag: para
#: reference_validation.xml:179
#, no-c-format
msgid ""
"Returns text stating if a geometry is valid or not an if not valid, a reason "
"why."
msgstr ""

#. Tag: para
#: reference_validation.xml:181
#, no-c-format
msgid ""
"Useful in combination with ST_IsValid to generate a detailed report of "
"invalid geometries and reasons."
msgstr ""

#. Tag: para
#: reference_validation.xml:183
#, no-c-format
msgid ""
"Allowed <varname>flags</varname> are documented in <xref linkend="
"\"ST_IsValidDetail\"/>."
msgstr ""

#. Tag: para
#: reference_validation.xml:187
#, no-c-format
msgid "Availability: 1.4"
msgstr ""

#. Tag: para
#: reference_validation.xml:188
#, no-c-format
msgid "Availability: 2.0 version taking flags."
msgstr ""

#. Tag: programlisting
#: reference_validation.xml:193
#, no-c-format
msgid ""
"--First 3 Rejects from a successful quintuplet experiment\n"
"SELECT gid, ST_IsValidReason(the_geom) as validity_info\n"
"FROM\n"
"(SELECT ST_MakePolygon(ST_ExteriorRing(e.buff), array_agg(f.line)) As "
"the_geom, gid\n"
"FROM (SELECT ST_Buffer(ST_MakePoint(x1*10,y1), z1) As buff, x1*10 + y1*100 + "
"z1*1000 As gid\n"
"        FROM generate_series(-4,6) x1\n"
"        CROSS JOIN generate_series(2,5) y1\n"
"        CROSS JOIN generate_series(1,8) z1\n"
"        WHERE x1 &gt; y1*0.5 AND z1 &lt; x1*y1) As e\n"
"        INNER JOIN (SELECT "
"ST_Translate(ST_ExteriorRing(ST_Buffer(ST_MakePoint(x1*10,y1), z1)),y1*1, "
"z1*2) As line\n"
"        FROM generate_series(-3,6) x1\n"
"        CROSS JOIN generate_series(2,5) y1\n"
"        CROSS JOIN generate_series(1,10) z1\n"
"        WHERE x1 &gt; y1*0.75 AND z1 &lt; x1*y1) As f\n"
"ON (ST_Area(e.buff) &gt; 78 AND ST_Contains(e.buff, f.line))\n"
"GROUP BY gid, e.buff) As quintuplet_experiment\n"
"WHERE ST_IsValid(the_geom) = false\n"
"ORDER BY gid\n"
"LIMIT 3;\n"
"\n"
" gid  |      validity_info\n"
"------+--------------------------\n"
" 5330 | Self-intersection [32 5]\n"
" 5340 | Self-intersection [42 5]\n"
" 5350 | Self-intersection [52 5]\n"
"\n"
" --simple example\n"
"SELECT ST_IsValidReason('LINESTRING(220227 150406,2220227 150407,222020 "
"150410)');\n"
"\n"
" st_isvalidreason\n"
"------------------\n"
" Valid Geometry"
msgstr ""

#. Tag: para
#: reference_validation.xml:200
#, no-c-format
msgid ", <xref linkend=\"ST_Summary\"/>"
msgstr ""
