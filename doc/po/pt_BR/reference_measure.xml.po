# SOME DESCRIPTIVE TITLE.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: http://bugs.kde.org\n"
"POT-Creation-Date: 2014-03-10 11:45+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <kde-i18n-doc@kde.org>\n"
"Language: \n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#. Tag: title
#: reference_measure.xml:3
#, no-c-format
msgid "Spatial Relationships and Measurements"
msgstr ""

#. Tag: refname
#: reference_measure.xml:6
#, no-c-format
msgid "ST_3DClosestPoint"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:8
#, no-c-format
msgid ""
"Returns the 3-dimensional point on g1 that is closest to g2. This is the "
"first point of the 3D shortest line."
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:14
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_3DClosestPoint</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>g2</parameter></paramdef>"
msgstr ""

#. Tag: title
#: reference_measure.xml:27 reference_measure.xml:92 reference_measure.xml:144
#: reference_measure.xml:196 reference_measure.xml:253
#: reference_measure.xml:303 reference_measure.xml:372
#: reference_measure.xml:418 reference_measure.xml:490
#: reference_measure.xml:549 reference_measure.xml:620
#: reference_measure.xml:738 reference_measure.xml:811
#: reference_measure.xml:963 reference_measure.xml:1044
#: reference_measure.xml:1126 reference_measure.xml:1186
#: reference_measure.xml:1352 reference_measure.xml:1487
#: reference_measure.xml:1565 reference_measure.xml:1635
#: reference_measure.xml:1690 reference_measure.xml:1736
#: reference_measure.xml:1785 reference_measure.xml:1838
#: reference_measure.xml:1920 reference_measure.xml:1984
#: reference_measure.xml:2033 reference_measure.xml:2093
#: reference_measure.xml:2159 reference_measure.xml:2210
#: reference_measure.xml:2243 reference_measure.xml:2288
#: reference_measure.xml:2340 reference_measure.xml:2391
#: reference_measure.xml:2443 reference_measure.xml:2531
#: reference_measure.xml:2574 reference_measure.xml:2665
#: reference_measure.xml:2714 reference_measure.xml:2751
#: reference_measure.xml:2793 reference_measure.xml:2840
#: reference_measure.xml:2906 reference_measure.xml:2972
#: reference_measure.xml:3015 reference_measure.xml:3094
#: reference_measure.xml:3242
#, no-c-format
msgid "Description"
msgstr ""

#. Tag: para
#: reference_measure.xml:29
#, no-c-format
msgid ""
"Returns the 3-dimensional point on g1 that is closest to g2. This is the "
"first point of the 3D shortest line. The 3D length of the 3D shortest line "
"is the 3D distance."
msgstr ""

#. Tag: para
#: reference_measure.xml:32 reference_measure.xml:97 reference_measure.xml:149
#: reference_measure.xml:211 reference_measure.xml:266
#: reference_measure.xml:312 reference_measure.xml:377
#: reference_measure.xml:431 reference_measure.xml:2038
#: reference_measure.xml:2247 reference_measure.xml:2302
#: reference_measure.xml:2399 reference_measure.xml:2755
#: reference_measure.xml:2801
#, no-c-format
msgid "&Z_support;"
msgstr ""

#. Tag: para
#: reference_measure.xml:34 reference_measure.xml:99 reference_measure.xml:151
#: reference_measure.xml:213 reference_measure.xml:268
#: reference_measure.xml:314 reference_measure.xml:379
#: reference_measure.xml:433 reference_measure.xml:500
#, no-c-format
msgid "&P_support;"
msgstr ""

#. Tag: para
#: reference_measure.xml:35 reference_measure.xml:103
#: reference_measure.xml:154 reference_measure.xml:210
#: reference_measure.xml:260 reference_measure.xml:311
#: reference_measure.xml:381 reference_measure.xml:430
#: reference_measure.xml:2847
#, no-c-format
msgid "Availability: 2.0.0"
msgstr ""

#. Tag: title
#: reference_measure.xml:39 reference_measure.xml:107
#: reference_measure.xml:158 reference_measure.xml:218
#: reference_measure.xml:318 reference_measure.xml:385
#: reference_measure.xml:437 reference_measure.xml:507
#: reference_measure.xml:564 reference_measure.xml:646
#: reference_measure.xml:748 reference_measure.xml:849
#: reference_measure.xml:1002 reference_measure.xml:1080
#: reference_measure.xml:1155 reference_measure.xml:1252
#: reference_measure.xml:1387 reference_measure.xml:1510
#: reference_measure.xml:1660 reference_measure.xml:1702
#: reference_measure.xml:1751 reference_measure.xml:1799
#: reference_measure.xml:1856 reference_measure.xml:1954
#: reference_measure.xml:2003 reference_measure.xml:2044
#: reference_measure.xml:2253 reference_measure.xml:2307
#: reference_measure.xml:2359 reference_measure.xml:2405
#: reference_measure.xml:2453 reference_measure.xml:2546
#: reference_measure.xml:2596 reference_measure.xml:2761
#: reference_measure.xml:2805 reference_measure.xml:2942
#: reference_measure.xml:2982 reference_measure.xml:3031
#: reference_measure.xml:3144 reference_measure.xml:3274
#, no-c-format
msgid "Examples"
msgstr ""

#. Tag: para
#: reference_measure.xml:44
#, no-c-format
msgid "linestring and point -- both 3d and 2d closest point"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:45
#, no-c-format
msgid ""
"SELECT ST_AsEWKT(ST_3DClosestPoint(line,pt)) AS cp3d_line_pt, \n"
"                ST_AsEWKT(ST_ClosestPoint(line,pt)) As cp2d_line_pt\n"
"        FROM (SELECT 'POINT(100 100 30)'::geometry As pt, \n"
"                        'LINESTRING (20 80 20, 98 190 1, 110 180 3, 50 75 "
"1000)'::geometry As line\n"
"                ) As foo;\n"
"        \n"
"                \n"
" cp3d_line_pt                                                                        "
"|               cp2d_line_pt\n"
"-----------------------------------------------------------"
"+------------------------------------------\n"
" POINT(54.6993798867619 128.935022917228 11.5475869506606) | "
"POINT(73.0769230769231 115.384615384615)"
msgstr ""

#. Tag: para
#: reference_measure.xml:49
#, no-c-format
msgid "linestring and multipoint -- both 3d and 2d closest point"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:50
#, no-c-format
msgid ""
"SELECT ST_AsEWKT(ST_3DClosestPoint(line,pt)) AS cp3d_line_pt, \n"
"                ST_AsEWKT(ST_ClosestPoint(line,pt)) As cp2d_line_pt\n"
"        FROM (SELECT 'MULTIPOINT(100 100 30, 50 74 1000)'::geometry As pt, \n"
"                        'LINESTRING (20 80 20, 98 190 1, 110 180 3, 50 75 "
"900)'::geometry As line\n"
"                ) As foo;\n"
"        \n"
"                \n"
"                       cp3d_line_pt                        | cp2d_line_pt\n"
"-----------------------------------------------------------+--------------\n"
" POINT(54.6993798867619 128.935022917228 11.5475869506606) | POINT(50 75)"
msgstr ""

#. Tag: para
#: reference_measure.xml:54
#, no-c-format
msgid "Multilinestring and polygon both 3d and 2d closest point"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:55
#, no-c-format
msgid ""
"SELECT ST_AsEWKT(ST_3DClosestPoint(poly, mline)) As cp3d,\n"
"    ST_AsEWKT(ST_ClosestPoint(poly, mline)) As cp2d \n"
"        FROM (SELECT  ST_GeomFromEWKT('POLYGON((175 150 5, 20 40 5, 35 45 5, "
"50 60 5, 100 100 5, 175 150 5))') As poly,\n"
"                ST_GeomFromEWKT('MULTILINESTRING((175 155 2, 20 40 20, 50 60 "
"-2, 125 100 1, 175 155 1),\n"
"                (1 10 2, 5 20 1))') As mline ) As foo;\n"
"                   cp3d                    |     cp2d\n"
"-------------------------------------------+--------------\n"
" POINT(39.993580415989 54.1889925532825 5) | POINT(20 40)"
msgstr ""

#. Tag: title
#: reference_measure.xml:65 reference_measure.xml:114
#: reference_measure.xml:164 reference_measure.xml:223
#: reference_measure.xml:276 reference_measure.xml:344
#: reference_measure.xml:391 reference_measure.xml:463
#: reference_measure.xml:523 reference_measure.xml:595
#: reference_measure.xml:709 reference_measure.xml:783
#: reference_measure.xml:936 reference_measure.xml:1007
#: reference_measure.xml:1088 reference_measure.xml:1160
#: reference_measure.xml:1457 reference_measure.xml:1516
#: reference_measure.xml:1594 reference_measure.xml:1710
#: reference_measure.xml:1758 reference_measure.xml:1806
#: reference_measure.xml:1861 reference_measure.xml:1959
#: reference_measure.xml:2009 reference_measure.xml:2051
#: reference_measure.xml:2135 reference_measure.xml:2187
#: reference_measure.xml:2219 reference_measure.xml:2262
#: reference_measure.xml:2314 reference_measure.xml:2366
#: reference_measure.xml:2412 reference_measure.xml:2506
#: reference_measure.xml:2551 reference_measure.xml:2638
#: reference_measure.xml:2691 reference_measure.xml:2727
#: reference_measure.xml:2768 reference_measure.xml:2811
#: reference_measure.xml:2864 reference_measure.xml:2948
#: reference_measure.xml:2988 reference_measure.xml:3065
#: reference_measure.xml:3285
#, no-c-format
msgid "See Also"
msgstr ""

#. Tag: para
#: reference_measure.xml:67
#, no-c-format
msgid ""
", <xref linkend=\"ST_ClosestPoint\"/>, <xref linkend=\"ST_3DDistance\"/>, "
"<xref linkend=\"ST_3DShortestLine\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:72
#, no-c-format
msgid "ST_3DDistance"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:74
#, no-c-format
msgid ""
"For geometry type Returns the 3-dimensional cartesian minimum distance "
"(based on spatial ref) between two geometries in projected units."
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:79
#, no-c-format
msgid ""
"<funcdef>float <function>ST_3DDistance</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>g2</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:94
#, no-c-format
msgid ""
"For geometry type returns the 3-dimensional minimum cartesian distance "
"between two geometries in projected units (spatial ref units)."
msgstr ""

#. Tag: para
#: reference_measure.xml:100 reference_measure.xml:152
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM ?"
msgstr ""

#. Tag: para
#: reference_measure.xml:101 reference_measure.xml:503
#: reference_measure.xml:1574 reference_measure.xml:2124
#: reference_measure.xml:2172
#, no-c-format
msgid "&sfcgal_enhanced;"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:109
#, no-c-format
msgid ""
"-- Geometry example - units in meters (SRID: 2163 US National Atlas Equal "
"area) (3D point and line compared 2D point and line)\n"
"-- Note: currently no vertical datum support so Z is not transformed and "
"assumed to be same units as final.\n"
"SELECT ST_3DDistance(\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;"
"POINT(-72.1235 42.3521 4)'),2163),\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;"
"LINESTRING(-72.1260 42.45 15, -72.123 42.1546 20)'),2163)\n"
"                ) As dist_3d,\n"
"                ST_Distance(\n"
"                        ST_Transform(ST_GeomFromText('POINT(-72.1235 "
"42.3521)',4326),2163),\n"
"                        ST_Transform(ST_GeomFromText('LINESTRING(-72.1260 "
"42.45, -72.123 42.1546)', 4326),2163)\n"
"                ) As dist_2d;\n"
"\n"
"     dist_3d      |     dist_2d\n"
"------------------+-----------------\n"
" 127.295059324629 | 126.66425605671"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:110
#, no-c-format
msgid ""
"-- Multilinestring and polygon both 3d and 2d distance\n"
"-- Same example as 3D closest point example\n"
"SELECT ST_3DDistance(poly, mline) As dist3d,\n"
"    ST_Distance(poly, mline) As dist2d \n"
"        FROM (SELECT  ST_GeomFromEWKT('POLYGON((175 150 5, 20 40 5, 35 45 5, "
"50 60 5, 100 100 5, 175 150 5))') As poly,\n"
"                ST_GeomFromEWKT('MULTILINESTRING((175 155 2, 20 40 20, 50 60 "
"-2, 125 100 1, 175 155 1),\n"
"                (1 10 2, 5 20 1))') As mline ) As foo;\n"
"      dist3d       | dist2d\n"
"-------------------+--------\n"
" 0.716635696066337 |      0"
msgstr ""

#. Tag: para
#: reference_measure.xml:116
#, no-c-format
msgid ""
", <xref linkend=\"ST_3DClosestPoint\"/>, <xref linkend=\"ST_3DDWithin\"/>, "
"<xref linkend=\"ST_3DMaxDistance\"/>, <xref linkend=\"ST_3DShortestLine\"/>, "
"<xref linkend=\"ST_Transform\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:122
#, no-c-format
msgid "ST_3DDWithin"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:124
#, no-c-format
msgid ""
"For 3d (z) geometry type Returns true if two geometries 3d distance is "
"within number of units."
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:128
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_3DDWithin</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>g2</parameter></paramdef> "
"<paramdef><type>double precision </type> <parameter>distance_of_srid</"
"parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:146
#, no-c-format
msgid ""
"For geometry type returns true if the 3d distance between two objects is "
"within distance_of_srid specified projected units (spatial ref units)."
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:160
#, no-c-format
msgid ""
"-- Geometry example - units in meters (SRID: 2163 US National Atlas Equal "
"area) (3D point and line compared 2D point and line)\n"
"-- Note: currently no vertical datum support so Z is not transformed and "
"assumed to be same units as final.\n"
"SELECT ST_3DDWithin(\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;"
"POINT(-72.1235 42.3521 4)'),2163),\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;"
"LINESTRING(-72.1260 42.45 15, -72.123 42.1546 20)'),2163),\n"
"                        126.8\n"
"                ) As within_dist_3d,\n"
"ST_DWithin(\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;"
"POINT(-72.1235 42.3521 4)'),2163),\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;"
"LINESTRING(-72.1260 42.45 15, -72.123 42.1546 20)'),2163),\n"
"                        126.8\n"
"                ) As within_dist_2d;\n"
"\n"
" within_dist_3d | within_dist_2d\n"
"----------------+----------------\n"
" f              | t"
msgstr ""

#. Tag: para
#: reference_measure.xml:166
#, no-c-format
msgid ""
", <xref linkend=\"ST_Distance\"/>, <xref linkend=\"ST_DWithin\"/>, <xref "
"linkend=\"ST_3DMaxDistance\"/>, <xref linkend=\"ST_Transform\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:172
#, no-c-format
msgid "ST_3DDFullyWithin"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:174
#, no-c-format
msgid ""
"Returns true if all of the 3D geometries are within the specified distance "
"of one another."
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:180
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_3DDFullyWithin</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>g2</parameter></paramdef> "
"<paramdef><type>double precision </type> <parameter>distance</parameter></"
"paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:198
#, no-c-format
msgid ""
"Returns true if the 3D geometries are fully within the specified distance of "
"one another. The distance is specified in units defined by the spatial "
"reference system of the geometries. For this function to make sense, the "
"source geometries must both be of the same coordinate projection, having the "
"same SRID."
msgstr ""

#. Tag: para
#: reference_measure.xml:205 reference_measure.xml:262
#: reference_measure.xml:1242 reference_measure.xml:1847
#: reference_measure.xml:1933 reference_measure.xml:2108
#, no-c-format
msgid ""
"This function call will automatically include a bounding box comparison that "
"will make use of any indexes that are available on the geometries."
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:219
#, no-c-format
msgid ""
"-- This compares the difference between fully within and distance within as "
"well\n"
"                -- as the distance fully within for the 2D footprint of the "
"line/point vs. the 3d fully within\n"
"                SELECT ST_3DDFullyWithin(geom_a, geom_b, 10) as "
"D3DFullyWithin10, ST_3DDWithin(geom_a, geom_b, 10) as D3DWithin10, \n"
"        ST_DFullyWithin(geom_a, geom_b, 20) as D2DFullyWithin20, \n"
"        ST_3DDFullyWithin(geom_a, geom_b, 20) as D3DFullyWithin20 from \n"
"                (select ST_GeomFromEWKT('POINT(1 1 2)') as geom_a,\n"
"                ST_GeomFromEWKT('LINESTRING(1 5 2, 2 7 20, 1 9 100, 14 12 "
"3)') as geom_b) t1;\n"
" d3dfullywithin10 | d3dwithin10 | d2dfullywithin20 | d3dfullywithin20\n"
"------------------+-------------+------------------+------------------\n"
" f                | t           | t                | f"
msgstr ""

#. Tag: para
#: reference_measure.xml:225
#, no-c-format
msgid ""
", <xref linkend=\"ST_3DDWithin\"/>, <xref linkend=\"ST_DWithin\"/>, <xref "
"linkend=\"ST_DFullyWithin\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:231
#, no-c-format
msgid "ST_3DIntersects"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:233
#, no-c-format
msgid ""
"Returns TRUE if the Geometries \"spatially intersect\" in 3d - only for "
"points and linestrings"
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:239
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_3DIntersects</function></funcdef> <paramdef> "
"<type>geometry</type> <parameter>geomA</parameter> </paramdef> <paramdef> "
"<type>geometry</type> <parameter>geomB</parameter> </paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:254 reference_measure.xml:2096
#, no-c-format
msgid ""
"Overlaps, Touches, Within all imply spatial intersection. If any of the "
"aforementioned returns true, then the geometries also spatially intersect. "
"Disjoint implies false for spatial intersection."
msgstr ""

#. Tag: para
#: reference_measure.xml:269
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: ?"
msgstr ""

#. Tag: title
#: reference_measure.xml:272 reference_measure.xml:2127
#: reference_measure.xml:2176
#, no-c-format
msgid "Geometry Examples"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:273
#, no-c-format
msgid ""
"SELECT ST_3DIntersects(pt, line), ST_Intersects(pt,line) \n"
"        FROM (SELECT 'POINT(0 0 2)'::geometry As pt, \n"
"                'LINESTRING (0 0 1, 0 2 3 )'::geometry As line) As foo;\n"
" st_3dintersects | st_intersects\n"
"-----------------+---------------\n"
" f               | t\n"
"(1 row)"
msgstr ""

#. Tag: refname
#: reference_measure.xml:283
#, no-c-format
msgid "ST_3DLongestLine"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:285
#, no-c-format
msgid "Returns the 3-dimensional longest line between two geometries"
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:290
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_3DLongestLine</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>g2</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:305
#, no-c-format
msgid ""
"Returns the 3-dimensional longest line between two geometries. The function "
"will only return the first longest line if more than one. The line returned "
"will always start in g1 and end in g2. The 3D length of the line this "
"function returns will always be the same as <xref linkend=\"ST_3DMaxDistance"
"\"/> returns for g1 and g2."
msgstr ""

#. Tag: para
#: reference_measure.xml:323
#, no-c-format
msgid "linestring and point -- both 3d and 2d longest line"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:324
#, no-c-format
msgid ""
"SELECT ST_AsEWKT(ST_3DLongestLine(line,pt)) AS lol3d_line_pt, \n"
"                ST_AsEWKT(ST_LongestLine(line,pt)) As lol2d_line_pt\n"
"        FROM (SELECT 'POINT(100 100 30)'::geometry As pt, \n"
"                        'LINESTRING (20 80 20, 98 190 1, 110 180 3, 50 75 "
"1000)'::geometry As line\n"
"                ) As foo;\n"
"        \n"
"                \n"
"           lol3d_line_pt           |       lol2d_line_pt\n"
"-----------------------------------+----------------------------\n"
" LINESTRING(50 75 1000,100 100 30) | LINESTRING(98 190,100 100)"
msgstr ""

#. Tag: para
#: reference_measure.xml:328
#, no-c-format
msgid "linestring and multipoint -- both 3d and 2d longest line"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:329
#, no-c-format
msgid ""
"SELECT ST_AsEWKT(ST_3DLongestLine(line,pt)) AS lol3d_line_pt, \n"
"                ST_AsEWKT(ST_LongestLine(line,pt)) As lol2d_line_pt\n"
"        FROM (SELECT 'MULTIPOINT(100 100 30, 50 74 1000)'::geometry As pt, \n"
"                        'LINESTRING (20 80 20, 98 190 1, 110 180 3, 50 75 "
"900)'::geometry As line\n"
"                ) As foo;\n"
"        \n"
"                \n"
"          lol3d_line_pt          |      lol2d_line_pt\n"
"---------------------------------+--------------------------\n"
" LINESTRING(98 190 1,50 74 1000) | LINESTRING(98 190,50 74)"
msgstr ""

#. Tag: para
#: reference_measure.xml:333
#, no-c-format
msgid "Multilinestring and polygon both 3d and 2d longest line"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:334
#, no-c-format
msgid ""
"SELECT ST_AsEWKT(ST_3DLongestLine(poly, mline)) As lol3d,\n"
"    ST_AsEWKT(ST_LongestLine(poly, mline)) As lol2d \n"
"        FROM (SELECT  ST_GeomFromEWKT('POLYGON((175 150 5, 20 40 5, 35 45 5, "
"50 60 5, 100 100 5, 175 150 5))') As poly,\n"
"                ST_GeomFromEWKT('MULTILINESTRING((175 155 2, 20 40 20, 50 60 "
"-2, 125 100 1, 175 155 1),\n"
"                (1 10 2, 5 20 1))') As mline ) As foo;\n"
"            lol3d             |          lol2d\n"
"------------------------------+--------------------------\n"
" LINESTRING(175 150 5,1 10 2) | LINESTRING(175 150,1 10)"
msgstr ""

#. Tag: para
#: reference_measure.xml:346
#, no-c-format
msgid ""
", <xref linkend=\"ST_3DDistance\"/>, <xref linkend=\"ST_LongestLine\"/>, "
"<xref linkend=\"ST_3DShortestLine\"/>, <xref linkend=\"ST_3DMaxDistance\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:352
#, no-c-format
msgid "ST_3DMaxDistance"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:354
#, no-c-format
msgid ""
"For geometry type Returns the 3-dimensional cartesian maximum distance "
"(based on spatial ref) between two geometries in projected units."
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:359
#, no-c-format
msgid ""
"<funcdef>float <function>ST_3DMaxDistance</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>g2</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:374
#, no-c-format
msgid ""
"For geometry type returns the 3-dimensional maximum cartesian distance "
"between two geometries in projected units (spatial ref units)."
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:387
#, no-c-format
msgid ""
"-- Geometry example - units in meters (SRID: 2163 US National Atlas Equal "
"area) (3D point and line compared 2D point and line)\n"
"-- Note: currently no vertical datum support so Z is not transformed and "
"assumed to be same units as final.\n"
"SELECT ST_3DMaxDistance(\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;"
"POINT(-72.1235 42.3521 10000)'),2163),\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;"
"LINESTRING(-72.1260 42.45 15, -72.123 42.1546 20)'),2163)\n"
"                ) As dist_3d,\n"
"                ST_MaxDistance(\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;"
"POINT(-72.1235 42.3521 10000)'),2163),\n"
"                        ST_Transform(ST_GeomFromEWKT('SRID=4326;"
"LINESTRING(-72.1260 42.45 15, -72.123 42.1546 20)'),2163)\n"
"                ) As dist_2d;\n"
"\n"
"     dist_3d      |     dist_2d\n"
"------------------+------------------\n"
" 24383.7467488441 | 22247.8472107251"
msgstr ""

#. Tag: para
#: reference_measure.xml:393
#, no-c-format
msgid ""
", <xref linkend=\"ST_3DDWithin\"/>, <xref linkend=\"ST_3DMaxDistance\"/>, "
"<xref linkend=\"ST_Transform\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:398
#, no-c-format
msgid "ST_3DShortestLine"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:400
#, no-c-format
msgid "Returns the 3-dimensional shortest line between two geometries"
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:405
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_3DShortestLine</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>g2</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:420
#, no-c-format
msgid ""
"Returns the 3-dimensional shortest line between two geometries. The function "
"will only return the first shortest line if more than one, that the function "
"finds. If g1 and g2 intersects in just one point the function will return a "
"line with both start and end in that intersection-point. If g1 and g2 are "
"intersecting with more than one point the function will return a line with "
"start and end in the same point but it can be any of the intersecting "
"points. The line returned will always start in g1 and end in g2. The 3D "
"length of the line this function returns will always be the same as <xref "
"linkend=\"ST_3DDistance\"/> returns for g1 and g2."
msgstr ""

#. Tag: para
#: reference_measure.xml:442
#, no-c-format
msgid "linestring and point -- both 3d and 2d shortest line"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:443
#, no-c-format
msgid ""
"SELECT ST_AsEWKT(ST_3DShortestLine(line,pt)) AS shl3d_line_pt, \n"
"                ST_AsEWKT(ST_ShortestLine(line,pt)) As shl2d_line_pt\n"
"        FROM (SELECT 'POINT(100 100 30)'::geometry As pt, \n"
"                        'LINESTRING (20 80 20, 98 190 1, 110 180 3, 50 75 "
"1000)'::geometry As line\n"
"                ) As foo;\n"
"        \n"
"                \n"
" shl3d_line_pt                                                                                         "
"|               shl2d_line_pt\n"
"----------------------------------------------------------------------------"
"+------------------------------------------------------\n"
" LINESTRING(54.6993798867619 128.935022917228 11.5475869506606,100 100 30)  "
"| LINESTRING(73.0769230769231 115.384615384615,100 100)"
msgstr ""

#. Tag: para
#: reference_measure.xml:447
#, no-c-format
msgid "linestring and multipoint -- both 3d and 2d shortest line"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:448
#, no-c-format
msgid ""
"SELECT ST_AsEWKT(ST_3DShortestLine(line,pt)) AS shl3d_line_pt, \n"
"                ST_AsEWKT(ST_ShortestLine(line,pt)) As shl2d_line_pt\n"
"        FROM (SELECT 'MULTIPOINT(100 100 30, 50 74 1000)'::geometry As pt, \n"
"                        'LINESTRING (20 80 20, 98 190 1, 110 180 3, 50 75 "
"900)'::geometry As line\n"
"                ) As foo;\n"
"        \n"
"                \n"
"                       shl3d_line_pt                                       | "
"shl2d_line_pt\n"
"---------------------------------------------------------------------------"
"+------------------------\n"
" LINESTRING(54.6993798867619 128.935022917228 11.5475869506606,100 100 30) | "
"LINESTRING(50 75,50 74)"
msgstr ""

#. Tag: para
#: reference_measure.xml:452
#, no-c-format
msgid "Multilinestring and polygon both 3d and 2d shortest line"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:453
#, no-c-format
msgid ""
"SELECT ST_AsEWKT(ST_3DShortestLine(poly, mline)) As shl3d,\n"
"    ST_AsEWKT(ST_ShortestLine(poly, mline)) As shl2d \n"
"        FROM (SELECT  ST_GeomFromEWKT('POLYGON((175 150 5, 20 40 5, 35 45 5, "
"50 60 5, 100 100 5, 175 150 5))') As poly,\n"
"                ST_GeomFromEWKT('MULTILINESTRING((175 155 2, 20 40 20, 50 60 "
"-2, 125 100 1, 175 155 1),\n"
"                (1 10 2, 5 20 1))') As mline ) As foo;\n"
"                   shl3d                                                                           "
"|     shl2d\n"
"---------------------------------------------------------------------------------------------------"
"+------------------------\n"
" LINESTRING(39.993580415989 54.1889925532825 5,40.4078575708294 "
"53.6052383805529 5.03423778139177) | LINESTRING(20 40,20 40)"
msgstr ""

#. Tag: para
#: reference_measure.xml:465
#, no-c-format
msgid ""
", <xref linkend=\"ST_3DDistance\"/>, <xref linkend=\"ST_LongestLine\"/>, "
"<xref linkend=\"ST_ShortestLine\"/>, <xref linkend=\"ST_3DMaxDistance\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:470
#, no-c-format
msgid "ST_Area"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:472
#, no-c-format
msgid ""
"Returns the area of the surface if it is a polygon or multi-polygon. For "
"\"geometry\" type area is in SRID units. For \"geography\" area is in square "
"meters."
msgstr ""

#. Tag: funcsynopsis
#: reference_measure.xml:476
#, no-c-format
msgid ""
"<funcprototype> <funcdef>float <function>ST_Area</function></funcdef> "
"<paramdef><type>geometry </type><parameter>g1</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>float <function>ST_Area</function></"
"funcdef> <paramdef><type>geography </type><parameter>geog</parameter></"
"paramdef> <paramdef choice=\"opt\"><type>boolean </"
"type><parameter>use_spheroid=true</parameter></paramdef> </funcprototype>"
msgstr ""

#. Tag: para
#: reference_measure.xml:492
#, no-c-format
msgid ""
"Returns the area of the geometry if it is a polygon or multi-polygon. Return "
"the area measurement of an ST_Surface or ST_MultiSurface value. For geometry "
"Area is in the units of the srid. For geography area is in square meters and "
"defaults to measuring about the spheroid of the geography (currently only "
"WGS84). To measure around the faster but less accurate sphere -- "
"ST_Area(geog,false)."
msgstr ""

#. Tag: para
#: reference_measure.xml:497
#, no-c-format
msgid "Enhanced: 2.0.0 - support for 2D polyhedral surfaces was introduced."
msgstr ""

#. Tag: para
#: reference_measure.xml:498 reference_measure.xml:641
#: reference_measure.xml:1571 reference_measure.xml:1947
#, no-c-format
msgid "&sfs_compliant;"
msgstr ""

#. Tag: para
#: reference_measure.xml:499
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 8.1.2, 9.5.3"
msgstr ""

#. Tag: para
#: reference_measure.xml:501
#, no-c-format
msgid ""
"For polyhedral surfaces, only supports 2D polyhedral surfaces (not 2.5D). "
"For 2.5D, may give a non-zero answer, but only for the faces that sit "
"completely in XY plane."
msgstr ""

#. Tag: para
#: reference_measure.xml:508
#, no-c-format
msgid ""
"Return area in square feet for a plot of Massachusetts land and multiply by "
"conversion to get square meters. Note this is in square feet because 2249 is "
"Mass State Plane Feet"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:511
#, no-c-format
msgid ""
"SELECT ST_Area(the_geom) As sqft, ST_Area(the_geom)*POWER(0.3048,2) As sqm\n"
"                FROM (SELECT\n"
"                ST_GeomFromText('POLYGON((743238 2967416,743238 2967450,\n"
"                        743265 2967450,743265.625 2967416,743238 "
"2967416))',2249) ) As foo(the_geom);\n"
"  sqft   |     sqm\n"
"---------+-------------\n"
" 928.625 | 86.27208552"
msgstr ""

#. Tag: para
#: reference_measure.xml:512
#, no-c-format
msgid ""
"Return area square feet and transform to Massachusetts state plane meters "
"(26986) to get square meters. Note this is in square feet because 2249 is "
"Mass State Plane Feet and transformed area is in square meters since 26986 "
"is state plane mass meters"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:515
#, no-c-format
msgid ""
"SELECT ST_Area(the_geom) As sqft, ST_Area(ST_Transform(the_geom,26986)) As "
"sqm\n"
"                FROM (SELECT\n"
"                ST_GeomFromText('POLYGON((743238 2967416,743238 2967450,\n"
"                        743265 2967450,743265.625 2967416,743238 "
"2967416))',2249) ) As foo(the_geom);\n"
"  sqft   |       sqm\n"
"---------+------------------\n"
" 928.625 | 86.2724304199219"
msgstr ""

#. Tag: para
#: reference_measure.xml:517
#, no-c-format
msgid ""
"Return area square feet and square meters using Geography data type. Note "
"that we transform to our geometry to geography (before you can do that make "
"sure your geometry is in WGS 84 long lat 4326). Geography always measures in "
"meters. This is just for demonstration to compare. Normally your table will "
"be stored in geography data type already."
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:520
#, no-c-format
msgid ""
"SELECT ST_Area(the_geog)/POWER(0.3048,2) As sqft_spheroid,  ST_Area(the_geog,"
"false)/POWER(0.3048,2) As sqft_sphere, ST_Area(the_geog) As sqm_spheroid\n"
"                FROM (SELECT\n"
"                geography(\n"
"                ST_Transform(\n"
"                        ST_GeomFromText('POLYGON((743238 2967416,743238 "
"2967450,743265 2967450,743265.625 2967416,743238 2967416))',\n"
"                                2249\n"
"                                ) ,4326\n"
"                        )\n"
"                )\n"
"        ) As foo(the_geog);\n"
" sqft_spheroid   |   sqft_sphere    |   sqm_spheroid\n"
"-----------------+------------------+------------------\n"
"928.684405217197 | 927.186481558724 | 86.2776044452694\n"
"\n"
" --if your data is in geography already\n"
" SELECT ST_Area(the_geog)/POWER(0.3048,2) As  sqft, ST_Area(the_geog) As "
"sqm\n"
"        FROM somegeogtable;"
msgstr ""

#. Tag: para
#: reference_measure.xml:524
#, no-c-format
msgid ""
", <xref linkend=\"ST_GeographyFromText\"/>, <xref linkend=\"ST_SetSRID\"/>, "
"<xref linkend=\"ST_Transform\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:530
#, no-c-format
msgid "ST_Azimuth"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:532
#, no-c-format
msgid ""
"Returns the north-based azimuth as the angle in radians measured clockwise "
"from the vertical on pointA to pointB."
msgstr ""

#. Tag: funcsynopsis
#: reference_measure.xml:535
#, no-c-format
msgid ""
"<funcprototype> <funcdef>float <function>ST_Azimuth</function></funcdef> "
"<paramdef><type>geometry </type><parameter>pointA</parameter></paramdef> "
"<paramdef><type>geometry </type><parameter>pointB</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>float <function>ST_Azimuth</"
"function></funcdef> <paramdef><type>geography </type><parameter>pointA</"
"parameter></paramdef> <paramdef><type>geography </type><parameter>pointB</"
"parameter></paramdef> </funcprototype>"
msgstr ""

#. Tag: para
#: reference_measure.xml:551
#, no-c-format
msgid ""
"Returns the azimuth in radians of the segment defined by the given point-"
"geometries, or NULL if the two points are coincident. The azimuth is north-"
"based and is measured clockwise: North = 0; East = PI/2; South = PI; West = "
"3PI/2."
msgstr ""

#. Tag: para
#: reference_measure.xml:554
#, no-c-format
msgid ""
"The Azimuth is mathematical concept defined as the angle, in this case "
"measured in radian, between a reference plane and a point."
msgstr ""

#. Tag: para
#: reference_measure.xml:557
#, no-c-format
msgid "Availability: 1.1.0"
msgstr ""

#. Tag: para
#: reference_measure.xml:558
#, no-c-format
msgid "Enhanced: 2.0.0 support for geography was introduced."
msgstr ""

#. Tag: para
#: reference_measure.xml:559
#, no-c-format
msgid ""
"Azimuth is especially useful in conjunction with ST_Translate for shifting "
"an object along its perpendicular axis. See upgis_lineshift <ulink url="
"\"http://trac.osgeo.org/postgis/wiki/UsersWikiplpgsqlfunctions"
"\">Plpgsqlfunctions PostGIS wiki section</ulink> for example of this."
msgstr ""

#. Tag: para
#: reference_measure.xml:565
#, no-c-format
msgid "Geometry Azimuth in degrees"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:566
#, no-c-format
msgid ""
"SELECT ST_Azimuth(ST_Point(25,45), ST_Point(75,100))/(2*pi())*360 as "
"degA_B,\n"
"        ST_Azimuth(ST_Point(75,100), ST_Point(25,45))/(2*pi())*360 As "
"degB_A;\n"
"        \n"
"-- NOTE easier to remember syntax using PostgreSQL built-in degrees function "
"--\n"
"-- Both yield same answer --\n"
"SELECT degrees( ST_Azimuth(ST_Point(25,45), ST_Point(75,100)) ) as degA_B,\n"
"        degrees( ST_Azimuth(ST_Point(75,100), ST_Point(25,45)) ) As degB_A;\n"
"\n"
"      dega_b       |     degb_a\n"
"------------------+------------------\n"
" 42.2736890060937 | 222.273689006094"
msgstr ""

#. Tag: para
#: reference_measure.xml:576
#, no-c-format
msgid ""
"Green: the start Point(25,45) with its vertical. Yellow: degA_B as the path "
"to travel (azimuth)."
msgstr ""

#. Tag: para
#: reference_measure.xml:585
#, no-c-format
msgid ""
"Green: the start Point(75,100) with its vertical. Yellow: degB_A as the path "
"to travel (azimuth)."
msgstr ""

#. Tag: para
#: reference_measure.xml:596
#, no-c-format
msgid ""
", <xref linkend=\"ST_Translate\"/>, <xref linkend=\"ST_Project\"/>, <ulink "
"url=\"http://www.postgresql.org/docs/current/interactive/functions-math.html"
"\">PostgreSQL Math Functions</ulink>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:603
#, no-c-format
msgid "ST_Centroid"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:605
#, no-c-format
msgid "Returns the geometric center of a geometry."
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:610
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_Centroid</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:622
#, no-c-format
msgid ""
"Computes the geometric center of a geometry, or equivalently, the center of "
"mass of the geometry as a <varname>POINT</varname>. For [<varname>MULTI</"
"varname>]<varname>POINT</varname>s, this is computed as the arithmetic mean "
"of the input coordinates. For [<varname>MULTI</varname>]<varname>LINESTRING</"
"varname>s, this is computed as the weighted length of each line segment. For "
"[<varname>MULTI</varname>]<varname>POLYGON</varname>s, \"weight\" is thought "
"in terms of area. If an empty geometry is supplied, an empty "
"<varname>GEOMETRYCOLLECTION</varname> is returned. If <varname>NULL</"
"varname> is supplied, <varname>NULL</varname> is returned."
msgstr ""

#. Tag: para
#: reference_measure.xml:634
#, no-c-format
msgid ""
"The centroid is equal to the centroid of the set of component Geometries of "
"highest dimension (since the lower-dimension geometries contribute zero "
"\"weight\" to the centroid)."
msgstr ""

#. Tag: para
#: reference_measure.xml:638
#, no-c-format
msgid ""
"Computation will be more accurate if performed by the GEOS module (enabled "
"at compile time)."
msgstr ""

#. Tag: para
#: reference_measure.xml:642
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 8.1.4, 9.5.5"
msgstr ""

#. Tag: para
#: reference_measure.xml:648
#, no-c-format
msgid ""
"In each of the following illustrations, the blue dot represents the centroid "
"of the source geometry."
msgstr ""

#. Tag: para
#: reference_measure.xml:661
#, no-c-format
msgid "Centroid of a <varname>MULTIPOINT</varname>"
msgstr ""

#. Tag: para
#: reference_measure.xml:672
#, no-c-format
msgid "Centroid of a <varname>LINESTRING</varname>"
msgstr ""

#. Tag: para
#: reference_measure.xml:685
#, no-c-format
msgid "Centroid of a <varname>POLYGON</varname>"
msgstr ""

#. Tag: para
#: reference_measure.xml:696
#, no-c-format
msgid "Centroid of a <varname>GEOMETRYCOLLECTION</varname>"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:705
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_Centroid('MULTIPOINT ( -1 0, -1 2, -1 3, -1 4, -1 7, 0 "
"1, 0 3, 1 1, 2 0, 6 0, 7 8, 9 8, 10 6 )'));\n"
"                                st_astext\n"
"------------------------------------------\n"
" POINT(2.30769230769231 3.30769230769231)\n"
"(1 row)"
msgstr ""

#. Tag: refname
#: reference_measure.xml:717
#, no-c-format
msgid "ST_ClosestPoint"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:719
#, no-c-format
msgid ""
"<refpurpose>Returns the 2-dimensional point on g1 that is closest to g2. "
"This is the first point of the shortest line.</refpurpose>"
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:725
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_ClosestPoint</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>g2</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:740
#, no-c-format
msgid ""
"<para>Returns the 2-dimensional point on g1 that is closest to g2. This is "
"the first point of the shortest line.</para>"
msgstr ""

#. Tag: para
#: reference_measure.xml:743
#, no-c-format
msgid ""
"If you have a 3D Geometry, you may prefer to use <xref linkend="
"\"ST_3DClosestPoint\"/>."
msgstr ""

#. Tag: para
#: reference_measure.xml:744 reference_measure.xml:1699
#: reference_measure.xml:1852 reference_measure.xml:2448
#: reference_measure.xml:3027
#, no-c-format
msgid "Availability: 1.5.0"
msgstr ""

#. Tag: para
#: reference_measure.xml:758
#, no-c-format
msgid ""
"Closest between point and linestring is the point itself, but closest point "
"between a linestring and point is the point on line string that is closest."
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:762
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_ClosestPoint(pt,line)) AS cp_pt_line, \n"
"        ST_AsText(ST_ClosestPoint(line,pt)) As cp_line_pt\n"
"FROM (SELECT 'POINT(100 100)'::geometry As pt, \n"
"                'LINESTRING (20 80, 98 190, 110 180, 50 75 )'::geometry As "
"line\n"
"        ) As foo;\n"
"\n"
"        \n"
"   cp_pt_line   |                cp_line_pt\n"
"----------------+------------------------------------------\n"
" POINT(100 100) | POINT(73.0769230769231 115.384615384615)"
msgstr ""

#. Tag: para
#: reference_measure.xml:770
#, no-c-format
msgid "closest point on polygon A to polygon B"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:773
#, no-c-format
msgid ""
"SELECT ST_AsText(\n"
"                ST_ClosestPoint(\n"
"                        ST_GeomFromText('POLYGON((175 150, 20 40, 50 60, 125 "
"100, 175 150))'),\n"
"                        ST_Buffer(ST_GeomFromText('POINT(110 170)'), 20)\n"
"                        ) \n"
"                ) As ptwkt;\n"
"                \n"
"                  ptwkt\n"
"------------------------------------------\n"
" POINT(140.752120669087 125.695053378061)"
msgstr ""

#. Tag: para
#: reference_measure.xml:785
#, no-c-format
msgid ""
",<xref linkend=\"ST_Distance\"/>, <xref linkend=\"ST_LongestLine\"/>, <xref "
"linkend=\"ST_ShortestLine\"/>, <xref linkend=\"ST_MaxDistance\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:791
#, no-c-format
msgid "ST_Contains"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:793
#, no-c-format
msgid ""
"Returns true if and only if no points of B lie in the exterior of A, and at "
"least one point of the interior of B lies in the interior of A."
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:798
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_Contains</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>geomB</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:813
#, no-c-format
msgid ""
"Geometry A contains Geometry B if and only if no points of B lie in the "
"exterior of A, and at least one point of the interior of B lies in the "
"interior of A. An important subtlety of this definition is that A does not "
"contain its boundary, but A does contain itself. Contrast that to <xref "
"linkend=\"ST_ContainsProperly\"/> where geometry A does not Contain Properly "
"itself."
msgstr ""

#. Tag: para
#: reference_measure.xml:817
#, no-c-format
msgid ""
"Returns TRUE if geometry B is completely inside geometry A. For this "
"function to make sense, the source geometries must both be of the same "
"coordinate projection, having the same SRID. ST_Contains is the inverse of "
"ST_Within. So ST_Contains(A,B) implies ST_Within(B,A) except in the case of "
"invalid geometries where the result is always false regardless or not "
"defined."
msgstr ""

#. Tag: para
#: reference_measure.xml:822 reference_measure.xml:1049
#: reference_measure.xml:1131 reference_measure.xml:1496
#: reference_measure.xml:2579 reference_measure.xml:2932
#: reference_measure.xml:3249
#, no-c-format
msgid "Performed by the GEOS module"
msgstr ""

#. Tag: para
#: reference_measure.xml:825 reference_measure.xml:987
#: reference_measure.xml:1052 reference_measure.xml:1134
#: reference_measure.xml:1238 reference_measure.xml:1493
#: reference_measure.xml:3130 reference_measure.xml:3252
#, no-c-format
msgid "Do not call with a <varname>GEOMETRYCOLLECTION</varname> as an argument"
msgstr ""

#. Tag: para
#: reference_measure.xml:829 reference_measure.xml:991
#: reference_measure.xml:1060 reference_measure.xml:1138
#: reference_measure.xml:3256
#, no-c-format
msgid ""
"Do not use this function with invalid geometries. You will get unexpected "
"results."
msgstr ""

#. Tag: para
#: reference_measure.xml:832
#, no-c-format
msgid ""
"This function call will automatically include a bounding box comparison that "
"will make use of any indexes that are available on the geometries. To avoid "
"index use, use the function _ST_Contains."
msgstr ""

#. Tag: para
#: reference_measure.xml:837 reference_measure.xml:1071
#: reference_measure.xml:1146 reference_measure.xml:1502
#: reference_measure.xml:2117 reference_measure.xml:2588
#: reference_measure.xml:3264
#, no-c-format
msgid ""
"NOTE: this is the \"allowable\" version that returns a boolean, not an "
"integer."
msgstr ""

#. Tag: para
#: reference_measure.xml:840
#, no-c-format
msgid ""
"&sfs_compliant; s2.1.1.2 // s2.1.13.3 - same as within(geometry B, geometry "
"A)"
msgstr ""

#. Tag: para
#: reference_measure.xml:842
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.31"
msgstr ""

#. Tag: para
#: reference_measure.xml:844 reference_measure.xml:1075
#: reference_measure.xml:1150
#, no-c-format
msgid ""
"There are certain subtleties to ST_Contains and ST_Within that are not "
"intuitively obvious. For details check out <ulink url=\"http://lin-ear-th-"
"inking.blogspot.com/2007/06/subtleties-of-ogc-covers-spatial.html"
"\">Subtleties of OGC Covers, Contains, Within</ulink>"
msgstr ""

#. Tag: para
#: reference_measure.xml:851
#, no-c-format
msgid ""
"The <function>ST_Contains</function> predicate returns <varname>TRUE</"
"varname> in all the following illustrations."
msgstr ""

#. Tag: para
#: reference_measure.xml:863
#, no-c-format
msgid "<varname>LINESTRING</varname> / <varname>MULTIPOINT</varname>"
msgstr ""

#. Tag: para
#: reference_measure.xml:873 reference_measure.xml:3208
#, no-c-format
msgid "<varname>POLYGON</varname> / <varname>POINT</varname>"
msgstr ""

#. Tag: para
#: reference_measure.xml:884 reference_measure.xml:924
#: reference_measure.xml:3177
#, no-c-format
msgid "<varname>POLYGON</varname> / <varname>LINESTRING</varname>"
msgstr ""

#. Tag: para
#: reference_measure.xml:894 reference_measure.xml:2625
#: reference_measure.xml:3157 reference_measure.xml:3167
#, no-c-format
msgid "<varname>POLYGON</varname> / <varname>POLYGON</varname>"
msgstr ""

#. Tag: para
#: reference_measure.xml:902
#, no-c-format
msgid ""
"The <function>ST_Contains</function> predicate returns <varname>FALSE</"
"varname> in all the following illustrations."
msgstr ""

#. Tag: para
#: reference_measure.xml:914
#, no-c-format
msgid "<varname>POLYGON</varname> / <varname>MULTIPOINT</varname>"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:932
#, no-c-format
msgid ""
"-- A circle within a circle\n"
"SELECT ST_Contains(smallc, bigc) As smallcontainsbig,\n"
"           ST_Contains(bigc,smallc) As bigcontainssmall,\n"
"           ST_Contains(bigc, ST_Union(smallc, bigc)) as bigcontainsunion,\n"
"           ST_Equals(bigc, ST_Union(smallc, bigc)) as bigisunion,\n"
"           ST_Covers(bigc, ST_ExteriorRing(bigc)) As bigcoversexterior,\n"
"           ST_Contains(bigc, ST_ExteriorRing(bigc)) As bigcontainsexterior\n"
"FROM (SELECT ST_Buffer(ST_GeomFromText('POINT(1 2)'), 10) As smallc,\n"
"                         ST_Buffer(ST_GeomFromText('POINT(1 2)'), 20) As "
"bigc) As foo;\n"
"\n"
"-- Result\n"
"  smallcontainsbig | bigcontainssmall | bigcontainsunion | bigisunion | "
"bigcoversexterior | bigcontainsexterior\n"
"------------------+------------------+------------------+------------"
"+-------------------+---------------------\n"
" f                | t                | t                | t          | "
"t        | f\n"
"\n"
"-- Example demonstrating difference between contains and contains properly\n"
"SELECT ST_GeometryType(geomA) As geomtype, ST_Contains(geomA,geomA) AS "
"acontainsa, ST_ContainsProperly(geomA, geomA) AS acontainspropa,\n"
"   ST_Contains(geomA, ST_Boundary(geomA)) As acontainsba, "
"ST_ContainsProperly(geomA, ST_Boundary(geomA)) As acontainspropba\n"
"FROM (VALUES ( ST_Buffer(ST_Point(1,1), 5,1) ),\n"
"                         ( ST_MakeLine(ST_Point(1,1), ST_Point(-1,-1) ) ),\n"
"                         ( ST_Point(1,1) )\n"
"          ) As foo(geomA);\n"
"\n"
"  geomtype    | acontainsa | acontainspropa | acontainsba | acontainspropba\n"
"--------------+------------+----------------+-------------"
"+-----------------\n"
"ST_Polygon    | t          | f              | f           | f\n"
"ST_LineString | t          | f              | f           | f\n"
"ST_Point      | t          | t              | f           | f"
msgstr ""

#. Tag: para
#: reference_measure.xml:937
#, no-c-format
msgid ""
", <xref linkend=\"ST_ContainsProperly\"/>, <xref linkend=\"ST_Covers\"/>, "
"<xref linkend=\"ST_CoveredBy\"/>, <xref linkend=\"ST_Equals\"/>, <xref "
"linkend=\"ST_Within\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:943
#, no-c-format
msgid "ST_ContainsProperly"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:945
#, no-c-format
msgid ""
"Returns true if B intersects the interior of A but not the boundary (or "
"exterior). A does not contain properly itself, but does contain itself."
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:950
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_ContainsProperly</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>geomB</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:965
#, no-c-format
msgid ""
"Returns true if B intersects the interior of A but not the boundary (or "
"exterior)."
msgstr ""

#. Tag: para
#: reference_measure.xml:967
#, no-c-format
msgid "A does not contain properly itself, but does contain itself."
msgstr ""

#. Tag: para
#: reference_measure.xml:968
#, no-c-format
msgid ""
"Every point of the other geometry is a point of this geometry's interior. "
"The DE-9IM Intersection Matrix for the two geometries matches [T**FF*FF*] "
"used in <xref linkend=\"ST_Relate\"/>"
msgstr ""

#. Tag: para
#: reference_measure.xml:972
#, no-c-format
msgid ""
"From JTS docs slightly reworded: The advantage to using this predicate over "
"<xref linkend=\"ST_Contains\"/> and <xref linkend=\"ST_Intersects\"/> is "
"that it can be computed efficiently, with no need to compute topology at "
"individual points."
msgstr ""

#. Tag: para
#: reference_measure.xml:974
#, no-c-format
msgid ""
"An example use case for this predicate is computing the intersections of a "
"set of geometries with a large polygonal geometry. Since intersection is a "
"fairly slow operation, it can be more efficient to use containsProperly to "
"filter out test geometries which lie wholly inside the area. In these cases "
"the intersection is known a priori to be exactly the original test geometry."
msgstr ""

#. Tag: para
#: reference_measure.xml:984
#, no-c-format
msgid "Availability: 1.4.0 - requires GEOS &gt;= 3.1.0."
msgstr ""

#. Tag: para
#: reference_measure.xml:994
#, no-c-format
msgid ""
"This function call will automatically include a bounding box comparison that "
"will make use of any indexes that are available on the geometries. To avoid "
"index use, use the function _ST_ContainsProperly."
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:1003
#, no-c-format
msgid ""
"--a circle within a circle\n"
"        SELECT ST_ContainsProperly(smallc, bigc) As smallcontainspropbig,\n"
"        ST_ContainsProperly(bigc,smallc) As bigcontainspropsmall,\n"
"        ST_ContainsProperly(bigc, ST_Union(smallc, bigc)) as "
"bigcontainspropunion,\n"
"        ST_Equals(bigc, ST_Union(smallc, bigc)) as bigisunion,\n"
"        ST_Covers(bigc, ST_ExteriorRing(bigc)) As bigcoversexterior,\n"
"        ST_ContainsProperly(bigc, ST_ExteriorRing(bigc)) As "
"bigcontainsexterior\n"
"        FROM (SELECT ST_Buffer(ST_GeomFromText('POINT(1 2)'), 10) As "
"smallc,\n"
"        ST_Buffer(ST_GeomFromText('POINT(1 2)'), 20) As bigc) As foo;\n"
"        --Result\n"
"  smallcontainspropbig | bigcontainspropsmall | bigcontainspropunion | "
"bigisunion | bigcoversexterior | bigcontainsexterior\n"
"------------------+------------------+------------------+------------"
"+-------------------+---------------------\n"
" f                     | t                    | f                    | "
"t          | t                 | f\n"
"\n"
" --example demonstrating difference between contains and contains properly\n"
" SELECT ST_GeometryType(geomA) As geomtype, ST_Contains(geomA,geomA) AS "
"acontainsa, ST_ContainsProperly(geomA, geomA) AS acontainspropa,\n"
" ST_Contains(geomA, ST_Boundary(geomA)) As acontainsba, "
"ST_ContainsProperly(geomA, ST_Boundary(geomA)) As acontainspropba\n"
" FROM (VALUES ( ST_Buffer(ST_Point(1,1), 5,1) ),\n"
"                  ( ST_MakeLine(ST_Point(1,1), ST_Point(-1,-1) ) ),\n"
"                  ( ST_Point(1,1) )\n"
"        ) As foo(geomA);\n"
"\n"
"  geomtype    | acontainsa | acontainspropa | acontainsba | acontainspropba\n"
"--------------+------------+----------------+-------------"
"+-----------------\n"
"ST_Polygon    | t          | f              | f           | f\n"
"ST_LineString | t          | f              | f           | f\n"
"ST_Point      | t          | t              | f           | f"
msgstr ""

#. Tag: para
#: reference_measure.xml:1008
#, no-c-format
msgid ""
", <xref linkend=\"ST_Boundary\"/>, <xref linkend=\"ST_Contains\"/>, <xref "
"linkend=\"ST_Covers\"/>, <xref linkend=\"ST_CoveredBy\"/>, <xref linkend="
"\"ST_Equals\"/>, <xref linkend=\"ST_Relate\"/>, <xref linkend=\"ST_Within\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:1014
#, no-c-format
msgid "ST_Covers"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:1016
#, no-c-format
msgid "Returns 1 (TRUE) if no point in Geometry B is outside Geometry A"
msgstr ""

#. Tag: funcsynopsis
#: reference_measure.xml:1021
#, no-c-format
msgid ""
"<funcprototype> <funcdef>boolean <function>ST_Covers</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>geomB</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>boolean <function>ST_Covers</"
"function></funcdef> <paramdef><type>geography </type> <parameter>geogpolyA</"
"parameter></paramdef> <paramdef><type>geography </type> "
"<parameter>geogpointB</parameter></paramdef> </funcprototype>"
msgstr ""

#. Tag: para
#: reference_measure.xml:1046
#, no-c-format
msgid ""
"Returns 1 (TRUE) if no point in Geometry/Geography B is outside Geometry/"
"Geography A"
msgstr ""

#. Tag: para
#: reference_measure.xml:1056
#, no-c-format
msgid "For geography only Polygon covers point is supported."
msgstr ""

#. Tag: para
#: reference_measure.xml:1063
#, no-c-format
msgid ""
"This function call will automatically include a bounding box comparison that "
"will make use of any indexes that are available on the geometries. To avoid "
"index use, use the function _ST_Covers."
msgstr ""

#. Tag: para
#: reference_measure.xml:1068 reference_measure.xml:1140
#, no-c-format
msgid "Availability: 1.2.2 - requires GEOS &gt;= 3.0"
msgstr ""

#. Tag: para
#: reference_measure.xml:1069
#, no-c-format
msgid "Availability: 1.5 - support for geography was introduced."
msgstr ""

#. Tag: para
#: reference_measure.xml:1074 reference_measure.xml:1149
#, no-c-format
msgid "Not an OGC standard, but Oracle has it too."
msgstr ""

#. Tag: para
#: reference_measure.xml:1081
#, no-c-format
msgid "Geometry example"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:1082
#, no-c-format
msgid ""
"--a circle covering a circle\n"
"SELECT ST_Covers(smallc,smallc) As smallinsmall,\n"
"        ST_Covers(smallc, bigc) As smallcoversbig,\n"
"        ST_Covers(bigc, ST_ExteriorRing(bigc)) As bigcoversexterior,\n"
"        ST_Contains(bigc, ST_ExteriorRing(bigc)) As bigcontainsexterior\n"
"FROM (SELECT ST_Buffer(ST_GeomFromText('POINT(1 2)'), 10) As smallc,\n"
"        ST_Buffer(ST_GeomFromText('POINT(1 2)'), 20) As bigc) As foo;\n"
"        --Result\n"
" smallinsmall | smallcoversbig | bigcoversexterior | bigcontainsexterior\n"
"--------------+----------------+-------------------+---------------------\n"
" t            | f              | t                 | f\n"
"(1 row)"
msgstr ""

#. Tag: para
#: reference_measure.xml:1083
#, no-c-format
msgid "Geeography Example"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:1084
#, no-c-format
msgid ""
"-- a point with a 300 meter buffer compared to a point, a point and its 10 "
"meter buffer\n"
"SELECT ST_Covers(geog_poly, geog_pt) As poly_covers_pt, \n"
"        ST_Covers(ST_Buffer(geog_pt,10), geog_pt) As buff_10m_covers_cent\n"
"        FROM (SELECT ST_Buffer(ST_GeogFromText('SRID=4326;POINT(-99.327 "
"31.4821)'), 300) As geog_poly,\n"
"                                ST_GeogFromText('SRID=4326;POINT(-99.33 "
"31.483)') As geog_pt ) As foo;\n"
"                                \n"
" poly_covers_pt | buff_10m_covers_cent\n"
"----------------+------------------\n"
" f              | t"
msgstr ""

#. Tag: para
#: reference_measure.xml:1089
#, no-c-format
msgid ", <xref linkend=\"ST_CoveredBy\"/>, <xref linkend=\"ST_Within\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:1095
#, no-c-format
msgid "ST_CoveredBy"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:1097
#, no-c-format
msgid ""
"<refpurpose>Returns 1 (TRUE) if no point in Geometry/Geography A is outside "
"Geometry/Geography B</refpurpose>"
msgstr ""

#. Tag: funcsynopsis
#: reference_measure.xml:1102
#, no-c-format
msgid ""
"<funcprototype> <funcdef>boolean <function>ST_CoveredBy</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>geomB</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>boolean <function>ST_CoveredBy</"
"function></funcdef> <paramdef><type>geography </type> <parameter>geogA</"
"parameter></paramdef> <paramdef><type>geography </type> <parameter>geogB</"
"parameter></paramdef> </funcprototype>"
msgstr ""

#. Tag: para
#: reference_measure.xml:1128
#, no-c-format
msgid ""
"<para>Returns 1 (TRUE) if no point in Geometry/Geography A is outside "
"Geometry/Geography B</para>"
msgstr ""

#. Tag: para
#: reference_measure.xml:1141
#, no-c-format
msgid ""
"This function call will automatically include a bounding box comparison that "
"will make use of any indexes that are available on the geometries. To avoid "
"index use, use the function _ST_CoveredBy."
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:1156
#, no-c-format
msgid ""
"--a circle coveredby a circle\n"
"SELECT ST_CoveredBy(smallc,smallc) As smallinsmall,\n"
"        ST_CoveredBy(smallc, bigc) As smallcoveredbybig,\n"
"        ST_CoveredBy(ST_ExteriorRing(bigc), bigc) As exteriorcoveredbybig,\n"
"        ST_Within(ST_ExteriorRing(bigc),bigc) As exeriorwithinbig\n"
"FROM (SELECT ST_Buffer(ST_GeomFromText('POINT(1 2)'), 10) As smallc,\n"
"        ST_Buffer(ST_GeomFromText('POINT(1 2)'), 20) As bigc) As foo;\n"
"        --Result\n"
" smallinsmall | smallcoveredbybig | exteriorcoveredbybig | exeriorwithinbig\n"
"--------------+-------------------+----------------------"
"+------------------\n"
" t            | t                 | t                    | f\n"
"(1 row)"
msgstr ""

#. Tag: para
#: reference_measure.xml:1161
#, no-c-format
msgid ""
", <xref linkend=\"ST_Covers\"/>, <xref linkend=\"ST_ExteriorRing\"/>, <xref "
"linkend=\"ST_Within\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:1167
#, no-c-format
msgid "ST_Crosses"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:1169
#, no-c-format
msgid ""
"Returns <varname>TRUE</varname> if the supplied geometries have some, but "
"not all, interior points in common."
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:1175
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_Crosses</function></funcdef> "
"<paramdef><type>geometry </type><parameter>g1</parameter></paramdef> "
"<paramdef><type>geometry </type><parameter>g2</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:1188
#, no-c-format
msgid ""
"<function>ST_Crosses</function> takes two geometry objects and returns "
"<varname>TRUE</varname> if their intersection \"spatially cross\", that is, "
"the geometries have some, but not all interior points in common. The "
"intersection of the interiors of the geometries must not be the empty set "
"and must have a dimensionality less than the the maximum dimension of the "
"two input geometries. Additionally, the intersection of the two geometries "
"must not equal either of the source geometries. Otherwise, it returns "
"<varname>FALSE</varname>."
msgstr ""

#. Tag: para
#: reference_measure.xml:1197
#, no-c-format
msgid "In mathematical terms, this is expressed as:"
msgstr ""

#. Tag: remark
#: reference_measure.xml:1199
#, no-c-format
msgid ""
"TODO: Insert appropriate MathML markup here or use a gif. Simple HTML markup "
"does not work well in both IE and Firefox."
msgstr ""

#. Tag: para
#: reference_measure.xml:1210
#, no-c-format
msgid "The DE-9IM Intersection Matrix for the two geometries is:"
msgstr ""

#. Tag: para
#: reference_measure.xml:1214
#, no-c-format
msgid ""
"<markup>T*T******</markup> (for Point/Line, Point/Area, and Line/Area "
"situations)"
msgstr ""

#. Tag: para
#: reference_measure.xml:1219
#, no-c-format
msgid ""
"<markup>T*****T**</markup> (for Line/Point, Area/Point, and Area/Line "
"situations)"
msgstr ""

#. Tag: para
#: reference_measure.xml:1224
#, no-c-format
msgid "<markup>0********</markup> (for Line/Line situations)"
msgstr ""

#. Tag: para
#: reference_measure.xml:1228
#, no-c-format
msgid "For any other combination of dimensions this predicate returns false."
msgstr ""

#. Tag: para
#: reference_measure.xml:1231
#, no-c-format
msgid ""
"The OpenGIS Simple Features Specification defines this predicate only for "
"Point/Line, Point/Area, Line/Line, and Line/Area situations. JTS / GEOS "
"extends the definition to apply to Line/Point, Area/Point and Area/Line "
"situations as well. This makes the relation symmetric."
msgstr ""

#. Tag: para
#: reference_measure.xml:1247
#, no-c-format
msgid "&sfs_compliant; s2.1.13.3"
msgstr ""

#. Tag: para
#: reference_measure.xml:1248
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.29"
msgstr ""

#. Tag: para
#: reference_measure.xml:1254 reference_measure.xml:2597
#, no-c-format
msgid "The following illustrations all return <varname>TRUE</varname>."
msgstr ""

#. Tag: para
#: reference_measure.xml:1266
#, no-c-format
msgid "<varname>MULTIPOINT</varname> / <varname>LINESTRING</varname>"
msgstr ""

#. Tag: para
#: reference_measure.xml:1276
#, no-c-format
msgid "<varname>MULTIPOINT</varname> / <varname>POLYGON</varname>"
msgstr ""

#. Tag: para
#: reference_measure.xml:1288
#, no-c-format
msgid "<varname>LINESTRING</varname> / <varname>POLYGON</varname>"
msgstr ""

#. Tag: para
#: reference_measure.xml:1298 reference_measure.xml:2617
#: reference_measure.xml:3188 reference_measure.xml:3198
#, no-c-format
msgid "<varname>LINESTRING</varname> / <varname>LINESTRING</varname>"
msgstr ""

#. Tag: para
#: reference_measure.xml:1306
#, no-c-format
msgid ""
"Consider a situation where a user has two tables: a table of roads and a "
"table of highways."
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:1314
#, no-c-format
msgid ""
"CREATE TABLE roads (\n"
"  id serial NOT NULL,\n"
"  the_geom geometry,\n"
"  CONSTRAINT roads_pkey PRIMARY KEY (road_id)\n"
");"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:1318
#, no-c-format
msgid ""
"CREATE TABLE highways (\n"
"  id serial NOT NULL,\n"
"  the_gem geometry,\n"
"  CONSTRAINT roads_pkey PRIMARY KEY (road_id)\n"
");"
msgstr ""

#. Tag: para
#: reference_measure.xml:1325
#, no-c-format
msgid ""
"To determine a list of roads that cross a highway, use a query similiar to:"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:1329
#, no-c-format
msgid ""
"SELECT roads.id\n"
"FROM roads, highways\n"
"WHERE ST_Crosses(roads.the_geom, highways.the_geom);"
msgstr ""

#. Tag: refname
#: reference_measure.xml:1336
#, no-c-format
msgid "ST_LineCrossingDirection"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:1338
#, no-c-format
msgid ""
"Given 2 linestrings, returns a number between -3 and 3 denoting what kind of "
"crossing behavior. 0 is no crossing."
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:1343
#, no-c-format
msgid ""
"<funcdef>integer <function>ST_LineCrossingDirection</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>linestringA</parameter></"
"paramdef> <paramdef><type>geometry </type> <parameter>linestringB</"
"parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:1354
#, no-c-format
msgid ""
"Given 2 linestrings, returns a number between -3 and 3 denoting what kind of "
"crossing behavior. 0 is no crossing. This is only supported for "
"<varname>LINESTRING</varname>"
msgstr ""

#. Tag: para
#: reference_measure.xml:1355
#, no-c-format
msgid "Definition of integer constants is as follows:"
msgstr ""

#. Tag: para
#: reference_measure.xml:1358
#, no-c-format
msgid "0: LINE NO CROSS"
msgstr ""

#. Tag: para
#: reference_measure.xml:1361
#, no-c-format
msgid "-1: LINE CROSS LEFT"
msgstr ""

#. Tag: para
#: reference_measure.xml:1364
#, no-c-format
msgid "1: LINE CROSS RIGHT"
msgstr ""

#. Tag: para
#: reference_measure.xml:1367
#, no-c-format
msgid "-2: LINE MULTICROSS END LEFT"
msgstr ""

#. Tag: para
#: reference_measure.xml:1370
#, no-c-format
msgid "2: LINE MULTICROSS END RIGHT"
msgstr ""

#. Tag: para
#: reference_measure.xml:1373
#, no-c-format
msgid "-3: LINE MULTICROSS END SAME FIRST LEFT"
msgstr ""

#. Tag: para
#: reference_measure.xml:1376
#, no-c-format
msgid "3: LINE MULTICROSS END SAME FIRST RIGHT"
msgstr ""

#. Tag: para
#: reference_measure.xml:1380
#, no-c-format
msgid "Availability: 1.4"
msgstr ""

#. Tag: para
#: reference_measure.xml:1398
#, no-c-format
msgid ""
"Line 1 (green), Line 2 ball is start point, triangle are end points. Query "
"below."
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:1402
#, no-c-format
msgid ""
"SELECT ST_LineCrossingDirection(foo.line1, foo.line2) As l1_cross_l2 ,\n"
"          ST_LineCrossingDirection(foo.line2, foo.line1) As l2_cross_l1\n"
"FROM (\n"
"SELECT\n"
" ST_GeomFromText('LINESTRING(25 169,89 114,40 70,86 43)') As line1,\n"
" ST_GeomFromText('LINESTRING(171 154,20 140,71 74,161 53)') As line2\n"
"        ) As foo;\n"
"\n"
" l1_cross_l2 | l2_cross_l1\n"
"-------------+-------------\n"
"           3 |          -3"
msgstr ""

#. Tag: para
#: reference_measure.xml:1412 reference_measure.xml:1426
#: reference_measure.xml:1440
#, no-c-format
msgid ""
"Line 1 (green), Line 2 (blue) ball is start point, triangle are end points. "
"Query below."
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:1416
#, no-c-format
msgid ""
"SELECT ST_LineCrossingDirection(foo.line1, foo.line2) As l1_cross_l2 ,\n"
"          ST_LineCrossingDirection(foo.line2, foo.line1) As l2_cross_l1\n"
"FROM (\n"
" SELECT\n"
"  ST_GeomFromText('LINESTRING(25 169,89 114,40 70,86 43)') As line1,\n"
"  ST_GeomFromText('LINESTRING (171 154, 20 140, 71 74, 2.99 90.16)') As "
"line2\n"
") As foo;\n"
"\n"
" l1_cross_l2 | l2_cross_l1\n"
"-------------+-------------\n"
"           2 |          -2"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:1430
#, no-c-format
msgid ""
"SELECT\n"
"        ST_LineCrossingDirection(foo.line1, foo.line2) As l1_cross_l2 ,\n"
"        ST_LineCrossingDirection(foo.line2, foo.line1) As l2_cross_l1\n"
"FROM (\n"
" SELECT\n"
"  ST_GeomFromText('LINESTRING(25 169,89 114,40 70,86 43)') As line1,\n"
"  ST_GeomFromText('LINESTRING (20 140, 71 74, 161 53)') As line2\n"
"  ) As foo;\n"
"\n"
" l1_cross_l2 | l2_cross_l1\n"
"-------------+-------------\n"
"          -1 |          1"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:1444
#, no-c-format
msgid ""
"SELECT ST_LineCrossingDirection(foo.line1, foo.line2) As l1_cross_l2 ,\n"
"          ST_LineCrossingDirection(foo.line2, foo.line1) As l2_cross_l1\n"
"FROM (SELECT\n"
"        ST_GeomFromText('LINESTRING(25 169,89 114,40 70,86 43)') As line1,\n"
"        ST_GeomFromText('LINESTRING(2.99 90.16,71 74,20 140,171 154)') As "
"line2\n"
"        ) As foo;\n"
"\n"
" l1_cross_l2 | l2_cross_l1\n"
"-------------+-------------\n"
"          -2 |          2"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:1452
#, no-c-format
msgid ""
"SELECT s1.gid, s2.gid, ST_LineCrossingDirection(s1.the_geom, s2.the_geom)\n"
"        FROM streets s1 CROSS JOIN streets s2 ON (s1.gid != s2.gid AND s1."
"the_geom &amp;&amp; s2.the_geom )\n"
"WHERE ST_CrossingDirection(s1.the_geom, s2.the_geom) > 0;"
msgstr ""

#. Tag: refname
#: reference_measure.xml:1465
#, no-c-format
msgid "ST_Disjoint"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:1467
#, no-c-format
msgid ""
"Returns TRUE if the Geometries do not \"spatially intersect\" - if they do "
"not share any space together."
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:1473
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_Disjoint</function></funcdef> <paramdef> "
"<type>geometry</type> <parameter>A</parameter> </paramdef> <paramdef> "
"<type>geometry</type> <parameter>B</parameter> </paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:1488
#, no-c-format
msgid ""
"Overlaps, Touches, Within all imply geometries are not spatially disjoint. "
"If any of the aforementioned returns true, then the geometries are not "
"spatially disjoint. Disjoint implies false for spatial intersection."
msgstr ""

#. Tag: para
#: reference_measure.xml:1498
#, no-c-format
msgid "This function call does not use indexes"
msgstr ""

#. Tag: para
#: reference_measure.xml:1505
#, no-c-format
msgid "&sfs_compliant; s2.1.1.2 //s2.1.13.3 - a.Relate(b, 'FF*FF****')"
msgstr ""

#. Tag: para
#: reference_measure.xml:1507
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.26"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:1512
#, no-c-format
msgid ""
"SELECT ST_Disjoint('POINT(0 0)'::geometry, 'LINESTRING ( 2 0, 0 2 )'::"
"geometry);\n"
" st_disjoint\n"
"---------------\n"
" t\n"
"(1 row)\n"
"SELECT ST_Disjoint('POINT(0 0)'::geometry, 'LINESTRING ( 0 0, 0 2 )'::"
"geometry);\n"
" st_disjoint\n"
"---------------\n"
" f\n"
"(1 row)"
msgstr ""

#. Tag: para
#: reference_measure.xml:1517
#, no-c-format
msgid "<para>ST_Intersects</para>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:1523
#, no-c-format
msgid "ST_Distance"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:1525
#, no-c-format
msgid ""
"For geometry type Returns the 2-dimensional cartesian minimum distance "
"(based on spatial ref) between two geometries in projected units. For "
"geography type defaults to return spheroidal minimum distance between two "
"geographies in meters."
msgstr ""

#. Tag: funcsynopsis
#: reference_measure.xml:1529
#, no-c-format
msgid ""
"<funcprototype> <funcdef>float <function>ST_Distance</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>g2</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>float <function>ST_Distance</"
"function></funcdef> <paramdef><type>geography </type> <parameter>gg1</"
"parameter></paramdef> <paramdef><type>geography </type> <parameter>gg2</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>float "
"<function>ST_Distance</function></funcdef> <paramdef><type>geography </type> "
"<parameter>gg1</parameter></paramdef> <paramdef><type>geography </type> "
"<parameter>gg2</parameter></paramdef> <paramdef><type>boolean </type> "
"<parameter>use_spheroid</parameter></paramdef> </funcprototype>"
msgstr ""

#. Tag: para
#: reference_measure.xml:1567
#, no-c-format
msgid ""
"For geometry type returns the 2-dimensional minimum cartesian distance "
"between two geometries in projected units (spatial ref units). For geography "
"type defaults to return the minimum distance around WGS 84 spheroid between "
"two geographies in meters. Pass in false to return answer in sphere instead "
"of spheroid."
msgstr ""

#. Tag: para
#: reference_measure.xml:1572
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.23"
msgstr ""

#. Tag: para
#: reference_measure.xml:1573 reference_measure.xml:2039
#, no-c-format
msgid "&curve_support;"
msgstr ""

#. Tag: para
#: reference_measure.xml:1576
#, no-c-format
msgid ""
"Availability: 1.5.0 geography support was introduced in 1.5. Speed "
"improvements for planar to better handle large or many vertex geometries"
msgstr ""

#. Tag: para
#: reference_measure.xml:1577 reference_measure.xml:1949
#, no-c-format
msgid ""
"Enhanced: 2.1.0 improved speed for geography. See <ulink url=\"http://blog."
"opengeo.org/2012/07/12/making-geography-faster/\">Making Geography faster</"
"ulink> for details."
msgstr ""

#. Tag: para
#: reference_measure.xml:1578
#, no-c-format
msgid "Enhanced: 2.1.0 - support for curved geometries was introduced."
msgstr ""

#. Tag: title
#: reference_measure.xml:1582
#, no-c-format
msgid "Basic Geometry Examples"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:1584
#, no-c-format
msgid ""
"--Geometry example - units in planar degrees 4326 is WGS 84 long lat "
"unit=degrees\n"
"SELECT ST_Distance(\n"
"                ST_GeomFromText('POINT(-72.1235 42.3521)',4326),\n"
"                ST_GeomFromText('LINESTRING(-72.1260 42.45, -72.123 "
"42.1546)', 4326)\n"
"        );\n"
"st_distance\n"
"-----------------\n"
"0.00150567726382282\n"
"\n"
"-- Geometry example - units in meters (SRID: 26986 Massachusetts state plane "
"meters) (most accurate for Massachusetts)\n"
"SELECT ST_Distance(\n"
"                        ST_Transform(ST_GeomFromText('POINT(-72.1235 "
"42.3521)',4326),26986),\n"
"                        ST_Transform(ST_GeomFromText('LINESTRING(-72.1260 "
"42.45, -72.123 42.1546)', 4326),26986)\n"
"                );\n"
"st_distance\n"
"-----------------\n"
"123.797937878454\n"
"\n"
"-- Geometry example - units in meters (SRID: 2163 US National Atlas Equal "
"area) (least accurate)\n"
"SELECT ST_Distance(\n"
"                        ST_Transform(ST_GeomFromText('POINT(-72.1235 "
"42.3521)',4326),2163),\n"
"                        ST_Transform(ST_GeomFromText('LINESTRING(-72.1260 "
"42.45, -72.123 42.1546)', 4326),2163)\n"
"                );\n"
"\n"
"st_distance\n"
"------------------\n"
"126.664256056812"
msgstr ""

#. Tag: title
#: reference_measure.xml:1587 reference_measure.xml:2131
#: reference_measure.xml:2182
#, no-c-format
msgid "Geography Examples"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:1588
#, no-c-format
msgid ""
"-- same as geometry example but note units in meters - use sphere for "
"slightly faster less accurate\n"
"SELECT ST_Distance(gg1, gg2) As spheroid_dist, ST_Distance(gg1, gg2, false) "
"As sphere_dist \n"
"FROM (SELECT\n"
"        ST_GeographyFromText('SRID=4326;POINT(-72.1235 42.3521)') As gg1,\n"
"        ST_GeographyFromText('SRID=4326;LINESTRING(-72.1260 42.45, -72.123 "
"42.1546)') As gg2\n"
"        ) As foo  ;\n"
"\n"
"  spheroid_dist   |   sphere_dist\n"
"------------------+------------------\n"
" 123.802076746848 | 123.475736916397"
msgstr ""

#. Tag: para
#: reference_measure.xml:1596
#, no-c-format
msgid ""
", <xref linkend=\"ST_DWithin\"/>, <xref linkend=\"ST_Distance_Sphere\"/>, "
"<xref linkend=\"ST_Distance_Spheroid\"/>, <xref linkend=\"ST_MaxDistance\"/"
">, <xref linkend=\"ST_Transform\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:1602
#, no-c-format
msgid "ST_HausdorffDistance"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:1604
#, no-c-format
msgid ""
"Returns the Hausdorff distance between two geometries. Basically a measure "
"of how similar or dissimilar 2 geometries are. Units are in the units of the "
"spatial reference system of the geometries."
msgstr ""

#. Tag: funcsynopsis
#: reference_measure.xml:1609
#, no-c-format
msgid ""
"<funcprototype> <funcdef>float <function>ST_HausdorffDistance</function></"
"funcdef> <paramdef><type>geometry </type> <parameter>g1</parameter></"
"paramdef> <paramdef><type>geometry </type> <parameter>g2</parameter></"
"paramdef> </funcprototype> <funcprototype> <funcdef>float "
"<function>ST_HausdorffDistance</function></funcdef> <paramdef><type>geometry "
"</type> <parameter>g1</parameter></paramdef> <paramdef><type>geometry </"
"type> <parameter>g2</parameter></paramdef> <paramdef><type>float</type> "
"<parameter>densifyFrac</parameter></paramdef> </funcprototype>"
msgstr ""

#. Tag: para
#: reference_measure.xml:1637
#, no-c-format
msgid ""
"Implements algorithm for computing a distance metric which can be thought of "
"as the \"Discrete Hausdorff Distance\". This is the Hausdorff distance "
"restricted to discrete points for one of the geometries. <ulink url=\"http://"
"en.wikipedia.org/wiki/Hausdorff_distance\">Wikipedia article on Hausdorff "
"distance</ulink> <ulink url=\"http://lin-ear-th-inking.blogspot.com/2009/01/"
"computing-geometric-similarity.html\">Martin Davis note on how Hausdorff "
"Distance calculation was used to prove correctness of the "
"CascadePolygonUnion approach.</ulink>"
msgstr ""

#. Tag: para
#: reference_measure.xml:1640
#, no-c-format
msgid ""
"When densifyFrac is specified, this function performs a segment "
"densification before computing the discrete hausdorff distance. The "
"densifyFrac parameter sets the fraction by which to densify each segment. "
"Each segment will be split into a number of equal-length subsegments, whose "
"fraction of the total length is closest to the given fraction."
msgstr ""

#. Tag: para
#: reference_measure.xml:1645
#, no-c-format
msgid ""
"The current implementation supports only vertices as the discrete locations. "
"This could be extended to allow an arbitrary density of points to be used."
msgstr ""

#. Tag: para
#: reference_measure.xml:1650
#, no-c-format
msgid ""
"This algorithm is NOT equivalent to the standard Hausdorff distance. "
"However, it computes an approximation that is correct for a large subset of "
"useful cases. One important part of this subset is Linestrings that are "
"roughly parallel to each other, and roughly equal in length. This is a "
"useful metric for line matching."
msgstr ""

#. Tag: para
#: reference_measure.xml:1655
#, no-c-format
msgid "Availability: 1.5.0 - requires GEOS &gt;= 3.2.0"
msgstr ""

#. Tag: para
#: reference_measure.xml:1661
#, no-c-format
msgid ""
"For each building, find the parcel that best represents it. First we require "
"the parcel intersect with the geometry. DISTINCT ON guarantees we get each "
"building listed only once, the ORDER BY .. ST_HausdorffDistance gives us a "
"preference of parcel that is most similar to the building."
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:1663
#, no-c-format
msgid ""
"SELECT DISTINCT ON(buildings.gid) buildings.gid, parcels.parcel_id \n"
"   FROM buildings INNER JOIN parcels ON ST_Intersects(buildings.geom,parcels."
"geom) \n"
"     ORDER BY buildings.gid, ST_HausdorffDistance(buildings.geom, parcels."
"geom);"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:1665
#, no-c-format
msgid ""
"postgis=# SELECT ST_HausdorffDistance(\n"
"                                'LINESTRING (0 0, 2 0)'::geometry,\n"
"                                'MULTIPOINT (0 1, 1 0, 2 1)'::geometry);\n"
" st_hausdorffdistance\n"
" ----------------------\n"
"                                         1\n"
"(1 row)"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:1666
#, no-c-format
msgid ""
"postgis=# SELECT st_hausdorffdistance('LINESTRING (130 0, 0 0, 0 150)'::"
"geometry, 'LINESTRING (10 10, 10 150, 130 10)'::geometry, 0.5);\n"
" st_hausdorffdistance\n"
" ----------------------\n"
"                                        70\n"
"(1 row)"
msgstr ""

#. Tag: refname
#: reference_measure.xml:1673
#, no-c-format
msgid "ST_MaxDistance"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:1675
#, no-c-format
msgid ""
"Returns the 2-dimensional largest distance between two geometries in "
"projected units."
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:1681
#, no-c-format
msgid ""
"<funcdef>float <function>ST_MaxDistance</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>g2</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:1694
#, no-c-format
msgid ""
"Returns the 2-dimensional maximum distance between two geometries in "
"projected units. If g1 and g2 is the same geometry the function will return "
"the distance between the two vertices most far from each other in that "
"geometry."
msgstr ""

#. Tag: para
#: reference_measure.xml:1704
#, no-c-format
msgid "Basic furthest distance the point is to any part of the line"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:1705
#, no-c-format
msgid ""
"postgis=# SELECT ST_MaxDistance('POINT(0 0)'::geometry, 'LINESTRING ( 2 0, 0 "
"2 )'::geometry);\n"
"   st_maxdistance\n"
"-----------------\n"
" 2\n"
"(1 row)\n"
"\n"
"postgis=# SELECT ST_MaxDistance('POINT(0 0)'::geometry, 'LINESTRING ( 2 2, 2 "
"2 )'::geometry);\n"
"  st_maxdistance  \n"
"------------------\n"
" 2.82842712474619\n"
"(1 row)"
msgstr ""

#. Tag: para
#: reference_measure.xml:1711
#, no-c-format
msgid ""
", <xref linkend=\"ST_LongestLine\"/>, <xref linkend=\"ST_DFullyWithin\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:1717
#, no-c-format
msgid "ST_Distance_Sphere"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:1719
#, no-c-format
msgid ""
"Returns minimum distance in meters between two lon/lat geometries. Uses a "
"spherical earth and radius of 6370986 meters. Faster than "
"ST_Distance_Spheroid <xref linkend=\"ST_Distance_Spheroid\"/>, but less "
"accurate. PostGIS versions prior to 1.5 only implemented for points."
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:1727
#, no-c-format
msgid ""
"<funcdef>float <function>ST_Distance_Sphere</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomlonlatA</parameter></"
"paramdef> <paramdef><type>geometry </type> <parameter>geomlonlatB</"
"parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:1738
#, no-c-format
msgid ""
"Returns minimum distance in meters between two lon/lat points. Uses a "
"spherical earth and radius of 6370986 meters. Faster than <xref linkend="
"\"ST_Distance_Spheroid\"/>, but less accurate. PostGIS Versions prior to 1.5 "
"only implemented for points."
msgstr ""

#. Tag: para
#: reference_measure.xml:1743
#, no-c-format
msgid ""
"This function currently does not look at the SRID of a geometry and will "
"always assume its in WGS 84 long lat. Prior versions of this function only "
"support points."
msgstr ""

#. Tag: para
#: reference_measure.xml:1746 reference_measure.xml:1794
#, no-c-format
msgid ""
"Availability: 1.5 - support for other geometry types besides points was "
"introduced. Prior versions only work with points."
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:1753
#, no-c-format
msgid ""
"SELECT round(CAST(ST_Distance_Sphere(ST_Centroid(the_geom), "
"ST_GeomFromText('POINT(-118 38)',4326)) As numeric),2) As dist_meters,\n"
"round(CAST(ST_Distance(ST_Transform(ST_Centroid(the_geom),32611),\n"
"                ST_Transform(ST_GeomFromText('POINT(-118 38)', 4326),32611)) "
"As numeric),2) As dist_utm11_meters,\n"
"round(CAST(ST_Distance(ST_Centroid(the_geom), ST_GeomFromText('POINT(-118 "
"38)', 4326)) As numeric),5) As dist_degrees,\n"
"round(CAST(ST_Distance(ST_Transform(the_geom,32611),\n"
"                ST_Transform(ST_GeomFromText('POINT(-118 38)', 4326),32611)) "
"As numeric),2) As min_dist_line_point_meters\n"
"FROM\n"
"        (SELECT ST_GeomFromText('LINESTRING(-118.584 38.374,-118.583 38.5)', "
"4326) As the_geom) as foo;\n"
"         dist_meters | dist_utm11_meters | dist_degrees | "
"min_dist_line_point_meters\n"
"        -------------+-------------------+--------------"
"+----------------------------\n"
"                70424.47 |          70438.00 |      0.72900 "
"|                   65871.18"
msgstr ""

#. Tag: para
#: reference_measure.xml:1760
#, no-c-format
msgid ", <xref linkend=\"ST_Distance_Spheroid\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:1766
#, no-c-format
msgid "ST_Distance_Spheroid"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:1768
#, no-c-format
msgid ""
"Returns the minimum distance between two lon/lat geometries given a "
"particular spheroid. PostGIS versions prior to 1.5 only support points."
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:1775
#, no-c-format
msgid ""
"<funcdef>float <function>ST_Distance_Spheroid</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomlonlatA</parameter></"
"paramdef> <paramdef><type>geometry </type> <parameter>geomlonlatB</"
"parameter></paramdef> <paramdef><type>spheroid </type> "
"<parameter>measurement_spheroid</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:1787
#, no-c-format
msgid ""
"Returns minimum distance in meters between two lon/lat geometries given a "
"particular spheroid. See the explanation of spheroids given for <xref "
"linkend=\"ST_Length_Spheroid\"/>. PostGIS version prior to 1.5 only support "
"points."
msgstr ""

#. Tag: para
#: reference_measure.xml:1791
#, no-c-format
msgid ""
"This function currently does not look at the SRID of a geometry and will "
"always assume its represented in the coordinates of the passed in spheroid. "
"Prior versions of this function only support points."
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:1801
#, no-c-format
msgid ""
"SELECT round(CAST(\n"
"                ST_Distance_Spheroid(ST_Centroid(the_geom), "
"ST_GeomFromText('POINT(-118 38)',4326), 'SPHEROID[\"WGS "
"84\",6378137,298.257223563]')\n"
"                        As numeric),2) As dist_meters_spheroid,\n"
"                round(CAST(ST_Distance_Sphere(ST_Centroid(the_geom), "
"ST_GeomFromText('POINT(-118 38)',4326)) As numeric),2) As "
"dist_meters_sphere,\n"
"round(CAST(ST_Distance(ST_Transform(ST_Centroid(the_geom),32611),\n"
"                ST_Transform(ST_GeomFromText('POINT(-118 38)', 4326),32611)) "
"As numeric),2) As dist_utm11_meters\n"
"FROM\n"
"        (SELECT ST_GeomFromText('LINESTRING(-118.584 38.374,-118.583 38.5)', "
"4326) As the_geom) as foo;\n"
" dist_meters_spheroid | dist_meters_sphere | dist_utm11_meters\n"
"----------------------+--------------------+-------------------\n"
"                         70454.92 |           70424.47 |          70438.00"
msgstr ""

#. Tag: para
#: reference_measure.xml:1808
#, no-c-format
msgid ", <xref linkend=\"ST_Distance_Sphere\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:1814
#, no-c-format
msgid "ST_DFullyWithin"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:1816
#, no-c-format
msgid ""
"Returns true if all of the geometries are within the specified distance of "
"one another"
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:1822
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_DFullyWithin</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>g2</parameter></paramdef> "
"<paramdef><type>double precision </type> <parameter>distance</parameter></"
"paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:1840
#, no-c-format
msgid ""
"Returns true if the geometries is fully within the specified distance of one "
"another. The distance is specified in units defined by the spatial reference "
"system of the geometries. For this function to make sense, the source "
"geometries must both be of the same coordinate projection, having the same "
"SRID."
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:1857
#, no-c-format
msgid ""
"postgis=# SELECT ST_DFullyWithin(geom_a, geom_b, 10) as DFullyWithin10, "
"ST_DWithin(geom_a, geom_b, 10) as DWithin10, ST_DFullyWithin(geom_a, geom_b, "
"20) as DFullyWithin20 from \n"
"                (select ST_GeomFromText('POINT(1 1)') as geom_a,"
"ST_GeomFromText('LINESTRING(1 5, 2 7, 1 9, 14 12)') as geom_b) t1;\n"
"   \n"
"-----------------\n"
" DFullyWithin10 | DWithin10 | DFullyWithin20 |\n"
"---------------+----------+---------------+\n"
" f             | t        | t             |"
msgstr ""

#. Tag: para
#: reference_measure.xml:1863
#, no-c-format
msgid ", <xref linkend=\"ST_DWithin\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:1869
#, no-c-format
msgid "ST_DWithin"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:1871
#, no-c-format
msgid ""
"Returns true if the geometries are within the specified distance of one "
"another. For geometry units are in those of spatial reference and For "
"geography units are in meters and measurement is defaulted to "
"use_spheroid=true (measure around spheroid), for faster check, "
"use_spheroid=false to measure along sphere."
msgstr ""

#. Tag: funcsynopsis
#: reference_measure.xml:1877
#, no-c-format
msgid ""
"<funcprototype> <funcdef>boolean <function>ST_DWithin</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>g2</parameter></paramdef> "
"<paramdef><type>double precision </type> <parameter>distance_of_srid</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>boolean "
"<function>ST_DWithin</function></funcdef> <paramdef><type>geography </type> "
"<parameter>gg1</parameter></paramdef> <paramdef><type>geography </type> "
"<parameter>gg2</parameter></paramdef> <paramdef><type>double precision </"
"type> <parameter>distance_meters</parameter></paramdef> </funcprototype> "
"<funcprototype> <funcdef>boolean <function>ST_DWithin</function></funcdef> "
"<paramdef><type>geography </type> <parameter>gg1</parameter></paramdef> "
"<paramdef><type>geography </type> <parameter>gg2</parameter></paramdef> "
"<paramdef><type>double precision </type> <parameter>distance_meters</"
"parameter></paramdef> <paramdef><type>boolean </type> "
"<parameter>use_spheroid</parameter></paramdef> </funcprototype>"
msgstr ""

#. Tag: para
#: reference_measure.xml:1922
#, no-c-format
msgid ""
"Returns true if the geometries are within the specified distance of one "
"another."
msgstr ""

#. Tag: para
#: reference_measure.xml:1924
#, no-c-format
msgid ""
"For Geometries: The distance is specified in units defined by the spatial "
"reference system of the geometries. For this function to make sense, the "
"source geometries must both be of the same coordinate projection, having the "
"same SRID."
msgstr ""

#. Tag: para
#: reference_measure.xml:1929
#, no-c-format
msgid ""
"For geography units are in meters and measurement is defaulted to "
"use_spheroid=true (measure around WGS 84 spheroid), for faster check, "
"use_spheroid=false to measure along sphere."
msgstr ""

#. Tag: para
#: reference_measure.xml:1939
#, no-c-format
msgid ""
"Prior to 1.3, ST_Expand was commonly used in conjunction with &amp;&amp; and "
"ST_Distance to achieve the same effect and in pre-1.3.4 this function was "
"basically short-hand for that construct. From 1.3.4, ST_DWithin uses a more "
"short-circuit distance function which should make it more efficient than "
"prior versions for larger buffer regions."
msgstr ""

#. Tag: para
#: reference_measure.xml:1945
#, no-c-format
msgid "Use ST_3DDWithin if you have 3D geometries."
msgstr ""

#. Tag: para
#: reference_measure.xml:1948
#, no-c-format
msgid "Availability: 1.5.0 support for geography was introduced"
msgstr ""

#. Tag: para
#: reference_measure.xml:1950
#, no-c-format
msgid "Enhanced: 2.1.0 support for curved geometries was introduced."
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:1955
#, no-c-format
msgid ""
"--Find the nearest hospital to each school\n"
"--that is within 3000 units of the school.\n"
"-- We do an ST_DWithin search to utilize indexes to limit our search list\n"
"-- that the non-indexable ST_Distance needs to process\n"
"--If the units of the spatial reference is meters then units would be "
"meters\n"
"SELECT DISTINCT ON (s.gid) s.gid, s.school_name, s.the_geom, h."
"hospital_name\n"
"        FROM schools s\n"
"                LEFT JOIN hospitals h ON ST_DWithin(s.the_geom, h.the_geom, "
"3000)\n"
"        ORDER BY s.gid, ST_Distance(s.the_geom, h.the_geom);\n"
"\n"
"--The schools with no close hospitals\n"
"--Find all schools with no hospital within 3000 units\n"
"--away from the school.  Units is in units of spatial ref (e.g. meters, "
"feet, degrees)\n"
"SELECT s.gid, s.school_name\n"
"        FROM schools s\n"
"                LEFT JOIN hospitals h ON ST_DWithin(s.the_geom, h.the_geom, "
"3000)\n"
"        WHERE h.gid IS NULL;"
msgstr ""

#. Tag: para
#: reference_measure.xml:1961
#, no-c-format
msgid ", <xref linkend=\"ST_Expand\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:1967
#, no-c-format
msgid "ST_Equals"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:1969
#, no-c-format
msgid ""
"Returns true if the given geometries represent the same geometry. "
"Directionality is ignored."
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:1975
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_Equals</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>A</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>B</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:1986
#, no-c-format
msgid ""
"Returns TRUE if the given Geometries are \"spatially equal\". Use this for a "
"'better' answer than '='. Note by spatially equal we mean ST_Within(A,B) = "
"true and ST_Within(B,A) = true and also mean ordering of points can be "
"different but represent the same geometry structure. To verify the order of "
"points is consistent, use ST_OrderingEquals (it must be noted "
"ST_OrderingEquals is a little more stringent than simply verifying order of "
"points are the same)."
msgstr ""

#. Tag: para
#: reference_measure.xml:1995
#, no-c-format
msgid ""
"This function will return false if either geometry is invalid even if they "
"are binary equal."
msgstr ""

#. Tag: para
#: reference_measure.xml:1998
#, no-c-format
msgid "&sfs_compliant; s2.1.1.2"
msgstr ""

#. Tag: para
#: reference_measure.xml:1999
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.24"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:2005
#, no-c-format
msgid ""
"SELECT ST_Equals(ST_GeomFromText('LINESTRING(0 0, 10 10)'),\n"
"                ST_GeomFromText('LINESTRING(0 0, 5 5, 10 10)'));\n"
" st_equals\n"
"-----------\n"
" t\n"
"(1 row)\n"
"\n"
"SELECT ST_Equals(ST_Reverse(ST_GeomFromText('LINESTRING(0 0, 10 10)')),\n"
"                ST_GeomFromText('LINESTRING(0 0, 5 5, 10 10)'));\n"
" st_equals\n"
"-----------\n"
" t\n"
"(1 row)"
msgstr ""

#. Tag: para
#: reference_measure.xml:2011
#, no-c-format
msgid ""
", <xref linkend=\"ST_OrderingEquals\"/>, <xref linkend=\"ST_Reverse\"/>, "
"<xref linkend=\"ST_Within\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:2018
#, no-c-format
msgid "ST_HasArc"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:2020
#, no-c-format
msgid ""
"<refpurpose>Returns true if a geometry or geometry collection contains a "
"circular string</refpurpose>"
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:2025
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_HasArc</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:2035
#, no-c-format
msgid ""
"<para>Returns true if a geometry or geometry collection contains a circular "
"string</para>"
msgstr ""

#. Tag: para
#: reference_measure.xml:2037
#, no-c-format
msgid "Availability: 1.2.3?"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:2046
#, no-c-format
msgid ""
"SELECT ST_HasArc(ST_Collect('LINESTRING(1 2, 3 4, 5 6)', 'CIRCULARSTRING(1 "
"1, 2 3, 4 5, 6 7, 5 6)'));\n"
"                st_hasarc\n"
"                --------\n"
"                t"
msgstr ""

#. Tag: para
#: reference_measure.xml:2053
#, no-c-format
msgid ", <xref linkend=\"ST_LineToCurve\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:2059
#, no-c-format
msgid "<refname>ST_Intersects</refname>"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:2061
#, no-c-format
msgid ""
"Returns TRUE if the Geometries/Geography \"spatially intersect in 2D\" - "
"(share any portion of space) and FALSE if they don't (they are Disjoint). "
"For geography -- tolerance is 0.00001 meters (so any points that close are "
"considered to intersect)"
msgstr ""

#. Tag: funcsynopsis
#: reference_measure.xml:2067
#, no-c-format
msgid ""
"<funcprototype> <funcdef>boolean <function>ST_Intersects</function></"
"funcdef> <paramdef> <type>geometry</type> <parameter>geomA</parameter> </"
"paramdef> <paramdef> <type>geometry</type> <parameter>geomB</parameter> </"
"paramdef> </funcprototype> <funcprototype> <funcdef>boolean "
"<function>ST_Intersects</function></funcdef> <paramdef> <type>geography</"
"type> <parameter>geogA</parameter> </paramdef> <paramdef> <type>geography</"
"type> <parameter>geogB</parameter> </paramdef> </funcprototype>"
msgstr ""

#. Tag: para
#: reference_measure.xml:2094
#, no-c-format
msgid ""
"If a geometry or geography shares any portion of space then they intersect. "
"For geography -- tolerance is 0.00001 meters (so any points that are close "
"are considered to intersect)"
msgstr ""

#. Tag: para
#: reference_measure.xml:2101
#, no-c-format
msgid ""
"Do not call with a <varname>GEOMETRYCOLLECTION</varname> as an argument for "
"geometry version. The geography version supports GEOMETRYCOLLECTION since "
"its a thin wrapper around distance implementation."
msgstr ""

#. Tag: para
#: reference_measure.xml:2105
#, no-c-format
msgid "Performed by the GEOS module (for geometry), geography is native"
msgstr ""

#. Tag: para
#: reference_measure.xml:2106
#, no-c-format
msgid "Availability: 1.5 support for geography was introduced."
msgstr ""

#. Tag: para
#: reference_measure.xml:2113
#, no-c-format
msgid ""
"For geography, this function has a distance tolerance of about 0.00001 "
"meters and uses the sphere rather than spheroid calculation."
msgstr ""

#. Tag: para
#: reference_measure.xml:2120
#, no-c-format
msgid ""
"&sfs_compliant; s2.1.1.2 //s2.1.13.3 - ST_Intersects(g1, g2 ) --&gt; Not "
"(ST_Disjoint(g1, g2 ))"
msgstr ""

#. Tag: para
#: reference_measure.xml:2123
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.27"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:2128
#, no-c-format
msgid ""
"SELECT ST_Intersects('POINT(0 0)'::geometry, 'LINESTRING ( 2 0, 0 2 )'::"
"geometry);\n"
" st_intersects\n"
"---------------\n"
" f\n"
"(1 row)\n"
"SELECT ST_Intersects('POINT(0 0)'::geometry, 'LINESTRING ( 0 0, 0 2 )'::"
"geometry);\n"
" st_intersects\n"
"---------------\n"
" t\n"
"(1 row)"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:2132
#, no-c-format
msgid ""
"SELECT ST_Intersects(\n"
"                ST_GeographyFromText('SRID=4326;LINESTRING(-43.23456 "
"72.4567,-43.23456 72.4568)'),\n"
"                ST_GeographyFromText('SRID=4326;POINT(-43.23456 "
"72.4567772)')\n"
"                );\n"
"\n"
" st_intersects\n"
"---------------\n"
"t"
msgstr ""

#. Tag: para
#: reference_measure.xml:2136
#, no-c-format
msgid ", <xref linkend=\"ST_Disjoint\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:2141
#, no-c-format
msgid "ST_Length"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:2143
#, no-c-format
msgid ""
"Returns the 2d length of the geometry if it is a linestring or "
"multilinestring. geometry are in units of spatial reference and geography "
"are in meters (default spheroid)"
msgstr ""

#. Tag: funcsynopsis
#: reference_measure.xml:2146
#, no-c-format
msgid ""
"<funcprototype> <funcdef>float <function>ST_Length</function></funcdef> "
"<paramdef><type>geometry </type><parameter>a_2dlinestring</parameter></"
"paramdef> </funcprototype> <funcprototype> <funcdef>float "
"<function>ST_Length</function></funcdef> <paramdef><type>geography </"
"type><parameter>geog</parameter></paramdef> <paramdef choice=\"opt"
"\"><type>boolean </type><parameter>use_spheroid=true</parameter></paramdef> "
"</funcprototype>"
msgstr ""

#. Tag: para
#: reference_measure.xml:2161
#, no-c-format
msgid ""
"For geometry: Returns the cartesian 2D length of the geometry if it is a "
"linestring, multilinestring, ST_Curve, ST_MultiCurve. 0 is returned for "
"areal geometries. For areal geometries use ST_Perimeter. Geometry: "
"Measurements are in the units of the spatial reference system of the "
"geometry. Geography: Units are in meters and also acts as a Perimeter "
"function for areal geogs."
msgstr ""

#. Tag: para
#: reference_measure.xml:2165
#, no-c-format
msgid ""
"Currently for geometry this is an alias for ST_Length2D, but this may change "
"to support higher dimensions."
msgstr ""

#. Tag: para
#: reference_measure.xml:2166
#, no-c-format
msgid ""
"Changed: 2.0.0 Breaking change -- in prior versions applying this to a MULTI/"
"POLYGON of type geography would give you the perimeter of the POLYGON/"
"MULTIPOLYGON. In 2.0.0 this was changed to return 0 to be in line with "
"geometry behavior. Please use ST_Perimeter if you want the perimeter of a "
"polygon"
msgstr ""

#. Tag: para
#: reference_measure.xml:2168
#, no-c-format
msgid ""
"For geography measurement defaults spheroid measurement. To use the faster "
"less accurate sphere use ST_Length(gg,false);"
msgstr ""

#. Tag: para
#: reference_measure.xml:2169 reference_measure.xml:2674
#, no-c-format
msgid "&sfs_compliant; s2.1.5.1"
msgstr ""

#. Tag: para
#: reference_measure.xml:2170
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 7.1.2, 9.3.4"
msgstr ""

#. Tag: para
#: reference_measure.xml:2171
#, no-c-format
msgid "Availability: 1.5.0 geography support was introduced in 1.5."
msgstr ""

#. Tag: para
#: reference_measure.xml:2177
#, no-c-format
msgid ""
"Return length in feet for line string. Note this is in feet because 2249 is "
"Mass State Plane Feet"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:2179
#, no-c-format
msgid ""
"SELECT ST_Length(ST_GeomFromText('LINESTRING(743238 2967416,743238 "
"2967450,743265 2967450,\n"
"743265.625 2967416,743238 2967416)',2249));\n"
"st_length\n"
"---------\n"
" 122.630744000095\n"
"\n"
"\n"
"--Transforming WGS 84 linestring to Massachusetts state plane meters\n"
"SELECT ST_Length(\n"
"        ST_Transform(\n"
"                ST_GeomFromEWKT('SRID=4326;LINESTRING(-72.1260 42.45, "
"-72.1240 42.45666, -72.123 42.1546)'),\n"
"                26986\n"
"        )\n"
");\n"
"st_length\n"
"---------\n"
"34309.4563576191"
msgstr ""

#. Tag: para
#: reference_measure.xml:2183
#, no-c-format
msgid "Return length of WGS 84 geography line"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:2184
#, no-c-format
msgid ""
"-- default calculation is using a sphere rather than spheroid\n"
"SELECT ST_Length(the_geog) As length_spheroid,  ST_Length(the_geog,false) As "
"length_sphere\n"
"FROM (SELECT ST_GeographyFromText(\n"
"'SRID=4326;LINESTRING(-72.1260 42.45, -72.1240 42.45666, -72.123 42.1546)') "
"As the_geog)\n"
" As foo;\n"
" length_spheroid  |  length_sphere\n"
"------------------+------------------\n"
" 34310.5703627305 | 34346.2060960742\n"
"(1 row)"
msgstr ""

#. Tag: para
#: reference_measure.xml:2188
#, no-c-format
msgid ""
", <xref linkend=\"ST_GeomFromEWKT\"/>, <xref linkend=\"ST_Length_Spheroid\"/"
">, <xref linkend=\"ST_Perimeter\"/>, <xref linkend=\"ST_Transform\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:2194
#, no-c-format
msgid "ST_Length2D"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:2196
#, no-c-format
msgid ""
"<refpurpose>Returns the 2-dimensional length of the geometry if it is a "
"linestring or multi-linestring. This is an alias for <varname>ST_Length</"
"varname></refpurpose>"
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:2202
#, no-c-format
msgid ""
"<funcdef>float <function>ST_Length2D</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>a_2dlinestring</parameter></"
"paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:2212
#, no-c-format
msgid ""
"<para>Returns the 2-dimensional length of the geometry if it is a linestring "
"or multi-linestring. This is an alias for <varname>ST_Length</varname></para>"
msgstr ""

#. Tag: para
#: reference_measure.xml:2221
#, no-c-format
msgid ", <xref linkend=\"ST_3DLength\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:2227
#, no-c-format
msgid "ST_3DLength"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:2229
#, no-c-format
msgid ""
"Returns the 3-dimensional or 2-dimensional length of the geometry if it is a "
"linestring or multi-linestring."
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:2235
#, no-c-format
msgid ""
"<funcdef>float <function>ST_3DLength</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>a_3dlinestring</parameter></"
"paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:2245
#, no-c-format
msgid ""
"Returns the 3-dimensional or 2-dimensional length of the geometry if it is a "
"linestring or multi-linestring. For 2-d lines it will just return the 2-d "
"length (same as ST_Length and ST_Length2D)"
msgstr ""

#. Tag: para
#: reference_measure.xml:2248
#, no-c-format
msgid "Changed: 2.0.0 In prior versions this used to be called ST_Length3D"
msgstr ""

#. Tag: para
#: reference_measure.xml:2255
#, no-c-format
msgid ""
"Return length in feet for a 3D cable. Note this is in feet because 2249 is "
"Mass State Plane Feet"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:2257
#, no-c-format
msgid ""
"SELECT ST_3DLength(ST_GeomFromText('LINESTRING(743238 2967416 1,743238 "
"2967450 1,743265 2967450 3,\n"
"743265.625 2967416 3,743238 2967416 3)',2249));\n"
"ST_3DLength\n"
"-----------\n"
"122.704716741457"
msgstr ""

#. Tag: para
#: reference_measure.xml:2264
#, no-c-format
msgid ", <xref linkend=\"ST_Length2D\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:2270
#, no-c-format
msgid "ST_Length_Spheroid"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:2272
#, no-c-format
msgid ""
"Calculates the 2D or 3D length of a linestring/multilinestring on an "
"ellipsoid. This is useful if the coordinates of the geometry are in "
"longitude/latitude and a length is desired without reprojection."
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:2279
#, no-c-format
msgid ""
"<funcdef>float <function>ST_Length_Spheroid</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>a_linestring</parameter></"
"paramdef> <paramdef><type>spheroid </type> <parameter>a_spheroid</"
"parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:2290
#, no-c-format
msgid ""
"Calculates the length of a geometry on an ellipsoid. This is useful if the "
"coordinates of the geometry are in longitude/latitude and a length is "
"desired without reprojection. The ellipsoid is a separate database type and "
"can be constructed as follows:"
msgstr ""

#. Tag: literallayout
#: reference_measure.xml:2296 reference_measure.xml:2348
#, no-c-format
msgid ""
"SPHEROID[&lt;NAME&gt;,&lt;SEMI-MAJOR\n"
"                  AXIS&gt;,&lt;INVERSE FLATTENING&gt;]"
msgstr ""

#. Tag: literallayout
#: reference_measure.xml:2299 reference_measure.xml:2351
#, no-c-format
msgid "SPHEROID[\"GRS_1980\",6378137,298.257222101]"
msgstr ""

#. Tag: para
#: reference_measure.xml:2300 reference_measure.xml:2352
#, no-c-format
msgid "Will return 0 for anything that is not a MULTILINESTRING or LINESTRING"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:2309
#, no-c-format
msgid ""
"SELECT ST_Length_Spheroid( geometry_column,\n"
"                          'SPHEROID[\"GRS_1980\",6378137,298.257222101]' )\n"
"                          FROM geometry_table;\n"
"\n"
"SELECT ST_Length_Spheroid( the_geom, sph_m ) As tot_len,\n"
"ST_Length_Spheroid(ST_GeometryN(the_geom,1), sph_m) As len_line1,\n"
"ST_Length_Spheroid(ST_GeometryN(the_geom,2), sph_m) As len_line2\n"
"                          FROM (SELECT "
"ST_GeomFromText('MULTILINESTRING((-118.584 38.374,-118.583 38.5),\n"
"        (-71.05957 42.3589 , -71.061 43))') As the_geom,\n"
"CAST('SPHEROID[\"GRS_1980\",6378137,298.257222101]' As spheroid) As sph_m)  "
"as foo;\n"
"        tot_len      |    len_line1     |    len_line2\n"
"------------------+------------------+------------------\n"
" 85204.5207562955 | 13986.8725229309 | 71217.6482333646\n"
"\n"
" --3D\n"
"SELECT ST_Length_Spheroid( the_geom, sph_m ) As tot_len,\n"
"ST_Length_Spheroid(ST_GeometryN(the_geom,1), sph_m) As len_line1,\n"
"ST_Length_Spheroid(ST_GeometryN(the_geom,2), sph_m) As len_line2\n"
"                          FROM (SELECT "
"ST_GeomFromEWKT('MULTILINESTRING((-118.584 38.374 20,-118.583 38.5 30),\n"
"        (-71.05957 42.3589 75, -71.061 43 90))') As the_geom,\n"
"CAST('SPHEROID[\"GRS_1980\",6378137,298.257222101]' As spheroid) As sph_m)  "
"as foo;\n"
"\n"
"         tot_len      |    len_line1    |    len_line2\n"
"------------------+-----------------+------------------\n"
" 85204.5259107402 | 13986.876097711 | 71217.6498130292"
msgstr ""

#. Tag: para
#: reference_measure.xml:2316
#, no-c-format
msgid ""
", <xref linkend=\"ST_Length\"/>, <xref linkend=\"ST_3DLength_Spheroid\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:2322
#, no-c-format
msgid "ST_Length2D_Spheroid"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:2324
#, no-c-format
msgid ""
"Calculates the 2D length of a linestring/multilinestring on an ellipsoid. "
"This is useful if the coordinates of the geometry are in longitude/latitude "
"and a length is desired without reprojection."
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:2331
#, no-c-format
msgid ""
"<funcdef>float <function>ST_Length2D_Spheroid</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>a_linestring</parameter></"
"paramdef> <paramdef><type>spheroid </type> <parameter>a_spheroid</"
"parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:2342
#, no-c-format
msgid ""
"Calculates the 2D length of a geometry on an ellipsoid. This is useful if "
"the coordinates of the geometry are in longitude/latitude and a length is "
"desired without reprojection. The ellipsoid is a separate database type and "
"can be constructed as follows:"
msgstr ""

#. Tag: para
#: reference_measure.xml:2353
#, no-c-format
msgid ""
"This is much like <xref linkend=\"ST_Length_Spheroid\"/> and <xref linkend="
"\"ST_3DLength_Spheroid\"/> except it will throw away the Z coordinate in "
"calculations."
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:2361
#, no-c-format
msgid ""
"SELECT ST_Length2D_Spheroid( geometry_column,\n"
"                          'SPHEROID[\"GRS_1980\",6378137,298.257222101]' )\n"
"                          FROM geometry_table;\n"
"\n"
"SELECT ST_Length2D_Spheroid( the_geom, sph_m ) As tot_len,\n"
"ST_Length2D_Spheroid(ST_GeometryN(the_geom,1), sph_m) As len_line1,\n"
"ST_Length2D_Spheroid(ST_GeometryN(the_geom,2), sph_m) As len_line2\n"
"                          FROM (SELECT "
"ST_GeomFromText('MULTILINESTRING((-118.584 38.374,-118.583 38.5),\n"
"        (-71.05957 42.3589 , -71.061 43))') As the_geom,\n"
"CAST('SPHEROID[\"GRS_1980\",6378137,298.257222101]' As spheroid) As sph_m)  "
"as foo;\n"
"        tot_len      |    len_line1     |    len_line2\n"
"------------------+------------------+------------------\n"
" 85204.5207562955 | 13986.8725229309 | 71217.6482333646\n"
"\n"
" --3D Observe same answer\n"
"SELECT ST_Length2D_Spheroid( the_geom, sph_m ) As tot_len,\n"
"ST_Length2D_Spheroid(ST_GeometryN(the_geom,1), sph_m) As len_line1,\n"
"ST_Length2D_Spheroid(ST_GeometryN(the_geom,2), sph_m) As len_line2\n"
"                          FROM (SELECT "
"ST_GeomFromEWKT('MULTILINESTRING((-118.584 38.374 20,-118.583 38.5 30),\n"
"        (-71.05957 42.3589 75, -71.061 43 90))') As the_geom,\n"
"CAST('SPHEROID[\"GRS_1980\",6378137,298.257222101]' As spheroid) As sph_m)  "
"as foo;\n"
"\n"
"        tot_len      |    len_line1     |    len_line2\n"
"------------------+------------------+------------------\n"
" 85204.5207562955 | 13986.8725229309 | 71217.6482333646"
msgstr ""

#. Tag: para
#: reference_measure.xml:2368
#, no-c-format
msgid ""
", <xref linkend=\"ST_Length_Spheroid\"/>, <xref linkend="
"\"ST_3DLength_Spheroid\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:2374
#, no-c-format
msgid "ST_3DLength_Spheroid"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:2376
#, no-c-format
msgid ""
"<refpurpose>Calculates the length of a geometry on an ellipsoid, taking the "
"elevation into account. This is just an alias for ST_Length_Spheroid.</"
"refpurpose>"
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:2382
#, no-c-format
msgid ""
"<funcdef>float <function>ST_3DLength_Spheroid</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>a_linestring</parameter></"
"paramdef> <paramdef><type>spheroid </type> <parameter>a_spheroid</"
"parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:2393
#, no-c-format
msgid ""
"<para>Calculates the length of a geometry on an ellipsoid, taking the "
"elevation into account. This is just an alias for ST_Length_Spheroid.</para>"
msgstr ""

#. Tag: para
#: reference_measure.xml:2397
#, no-c-format
msgid ""
"Changed: 2.0.0 In prior versions this used to return 0 for anything that is "
"not a MULTILINESTRING or LINESTRING and in 2.0.0 on returns the perimeter of "
"if given a polgon."
msgstr ""

#. Tag: para
#: reference_measure.xml:2398
#, no-c-format
msgid "This function is just an alias for ST_Length_Spheroid."
msgstr ""

#. Tag: para
#: reference_measure.xml:2400
#, no-c-format
msgid ""
"Changed: 2.0.0 In prior versions this used to be called ST_Length3d_Spheroid"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:2407
#, no-c-format
msgid "See ST_Length_Spheroid"
msgstr ""

#. Tag: para
#: reference_measure.xml:2414
#, no-c-format
msgid ", <xref linkend=\"ST_Length\"/>, <xref linkend=\"ST_Length_Spheroid\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:2420
#, no-c-format
msgid "ST_LongestLine"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:2422
#, no-c-format
msgid ""
"Returns the 2-dimensional longest line points of two geometries. The "
"function will only return the first longest line if more than one, that the "
"function finds. The line returned will always start in g1 and end in g2. The "
"length of the line this function returns will always be the same as "
"st_maxdistance returns for g1 and g2."
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:2430
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_LongestLine</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>g2</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:2445
#, no-c-format
msgid ""
"Returns the 2-dimensional longest line between the points of two geometries."
msgstr ""

#. Tag: para
#: reference_measure.xml:2463
#, no-c-format
msgid "Longest line between point and line"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:2466
#, no-c-format
msgid ""
"SELECT ST_AsText(\n"
"        ST_LongestLine('POINT(100 100)'::geometry, \n"
"                'LINESTRING (20 80, 98 190, 110 180, 50 75 )'::geometry)\n"
"        ) As lline;\n"
"\n"
"        \n"
"   lline\n"
"-----------------\n"
"LINESTRING(100 100,98 190)"
msgstr ""

#. Tag: para
#: reference_measure.xml:2474
#, no-c-format
msgid "longest line between polygon and polygon"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:2477
#, no-c-format
msgid ""
"SELECT ST_AsText(\n"
"        ST_LongestLine(\n"
"                ST_GeomFromText('POLYGON((175 150, 20 40, \n"
"                        50 60, 125 100, 175 150))'),\n"
"                ST_Buffer(ST_GeomFromText('POINT(110 170)'), 20)\n"
"                ) \n"
"        ) As llinewkt;\n"
"                \n"
"   lline\n"
"-----------------\n"
"LINESTRING(20 40,121.111404660392 186.629392246051)"
msgstr ""

#. Tag: para
#: reference_measure.xml:2493
#, no-c-format
msgid ""
"longest straight distance to travel from one part of an elegant city to the "
"other Note the max distance = to the length of the line."
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:2497
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_LongestLine(c.the_geom, c.the_geom)) As llinewkt, \n"
"        ST_MaxDistance(c.the_geom,c.the_geom) As max_dist, \n"
"        ST_Length(ST_LongestLine(c.the_geom, c.the_geom)) As lenll \n"
"FROM (SELECT ST_BuildArea(ST_Collect(the_geom)) As the_geom\n"
"        FROM (SELECT ST_Translate(ST_SnapToGrid(ST_Buffer(ST_Point(50 ,"
"generate_series(50,190, 50) \n"
"                        ),40, 'quad_segs=2'),1), x, 0)  As the_geom \n"
"                        FROM generate_series(1,100,50) As x)  AS foo\n"
") As c;\n"
"                \n"
"          llinewkt          |     max_dist     |      lenll\n"
"---------------------------+------------------+------------------\n"
" LINESTRING(23 22,129 178) | 188.605408193933 | 188.605408193933"
msgstr ""

#. Tag: para
#: reference_measure.xml:2508
#, no-c-format
msgid ""
", <xref linkend=\"ST_ShortestLine\"/>, <xref linkend=\"ST_LongestLine\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:2514
#, no-c-format
msgid "ST_OrderingEquals"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:2516
#, no-c-format
msgid ""
"Returns true if the given geometries represent the same geometry and points "
"are in the same directional order."
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:2522
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_OrderingEquals</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>A</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>B</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:2533
#, no-c-format
msgid ""
"ST_OrderingEquals compares two geometries and returns t (TRUE) if the "
"geometries are equal and the coordinates are in the same order; otherwise it "
"returns f (FALSE)."
msgstr ""

#. Tag: para
#: reference_measure.xml:2538
#, no-c-format
msgid ""
"This function is implemented as per the ArcSDE SQL specification rather than "
"SQL-MM. http://edndoc.esri.com/arcsde/9.1/sql_api/sqlapi3."
"htm#ST_OrderingEquals"
msgstr ""

#. Tag: para
#: reference_measure.xml:2542
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.43"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:2548
#, no-c-format
msgid ""
"SELECT ST_OrderingEquals(ST_GeomFromText('LINESTRING(0 0, 10 10)'),\n"
"                ST_GeomFromText('LINESTRING(0 0, 5 5, 10 10)'));\n"
" st_orderingequals\n"
"-----------\n"
" f\n"
"(1 row)\n"
"\n"
"SELECT ST_OrderingEquals(ST_GeomFromText('LINESTRING(0 0, 10 10)'),\n"
"                ST_GeomFromText('LINESTRING(0 0, 0 0, 10 10)'));\n"
" st_orderingequals\n"
"-----------\n"
" t\n"
"(1 row)\n"
"\n"
"SELECT ST_OrderingEquals(ST_Reverse(ST_GeomFromText('LINESTRING(0 0, 10 "
"10)')),\n"
"                ST_GeomFromText('LINESTRING(0 0, 0 0, 10 10)'));\n"
" st_orderingequals\n"
"-----------\n"
" f\n"
"(1 row)"
msgstr ""

#. Tag: para
#: reference_measure.xml:2552
#, no-c-format
msgid ", <xref linkend=\"ST_Reverse\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:2558
#, no-c-format
msgid "ST_Overlaps"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:2560
#, no-c-format
msgid ""
"Returns TRUE if the Geometries share space, are of the same dimension, but "
"are not completely contained by each other."
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:2565
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_Overlaps</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>A</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>B</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:2576
#, no-c-format
msgid ""
"Returns TRUE if the Geometries \"spatially overlap\". By that we mean they "
"intersect, but one does not completely contain another."
msgstr ""

#. Tag: para
#: reference_measure.xml:2581 reference_measure.xml:2914
#: reference_measure.xml:2928
#, no-c-format
msgid "Do not call with a GeometryCollection as an argument"
msgstr ""

#. Tag: para
#: reference_measure.xml:2583
#, no-c-format
msgid ""
"This function call will automatically include a bounding box comparison that "
"will make use of any indexes that are available on the geometries. To avoid "
"index use, use the function _ST_Overlaps."
msgstr ""

#. Tag: para
#: reference_measure.xml:2591 reference_measure.xml:2934
#: reference_measure.xml:3139
#, no-c-format
msgid "&sfs_compliant; s2.1.1.2 // s2.1.13.3"
msgstr ""

#. Tag: para
#: reference_measure.xml:2592
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.32"
msgstr ""

#. Tag: para
#: reference_measure.xml:2608
#, no-c-format
msgid "<varname>MULTIPOINT</varname> / <varname>MULTIPOINT</varname>"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:2632
#, no-c-format
msgid ""
"--a point on a line is contained by the line and is of a lower dimension, "
"and therefore does not overlap the line\n"
"                        nor crosses\n"
"\n"
"SELECT ST_Overlaps(a,b) As a_overlap_b,\n"
"        ST_Crosses(a,b) As a_crosses_b,\n"
"                ST_Intersects(a, b) As a_intersects_b, ST_Contains(b,a) As "
"b_contains_a\n"
"FROM (SELECT ST_GeomFromText('POINT(1 0.5)') As a, "
"ST_GeomFromText('LINESTRING(1 0, 1 1, 3 5)')  As b)\n"
"        As foo\n"
"\n"
"a_overlap_b | a_crosses_b | a_intersects_b | b_contains_a\n"
"------------+-------------+----------------+--------------\n"
"f           | f           | t              | t\n"
"\n"
"--a line that is partly contained by circle, but not fully is defined as "
"intersecting and crossing,\n"
"-- but since of different dimension it does not overlap\n"
"SELECT ST_Overlaps(a,b) As a_overlap_b, ST_Crosses(a,b) As a_crosses_b,\n"
"        ST_Intersects(a, b) As a_intersects_b,\n"
"        ST_Contains(a,b) As a_contains_b\n"
"FROM (SELECT ST_Buffer(ST_GeomFromText('POINT(1 0.5)'), 3)  As a, "
"ST_GeomFromText('LINESTRING(1 0, 1 1, 3 5)')  As b)\n"
"        As foo;\n"
"\n"
" a_overlap_b | a_crosses_b | a_intersects_b | a_contains_b\n"
"-------------+-------------+----------------+--------------\n"
" f           | t           | t              | f\n"
"\n"
" -- a 2-dimensional bent hot dog (aka buffered line string) that intersects "
"a circle,\n"
" --        but is not fully contained by the circle is defined as "
"overlapping since they are of the same dimension,\n"
"--        but it does not cross, because the intersection of the 2 is of the "
"same dimension\n"
"--        as the maximum dimension of the 2\n"
"\n"
"SELECT ST_Overlaps(a,b) As a_overlap_b, ST_Crosses(a,b) As a_crosses_b, "
"ST_Intersects(a, b) As a_intersects_b,\n"
"ST_Contains(b,a) As b_contains_a,\n"
"ST_Dimension(a) As dim_a, ST_Dimension(b) as dim_b, "
"ST_Dimension(ST_Intersection(a,b)) As dima_intersection_b\n"
"FROM (SELECT ST_Buffer(ST_GeomFromText('POINT(1 0.5)'), 3)  As a,\n"
"        ST_Buffer(ST_GeomFromText('LINESTRING(1 0, 1 1, 3 5)'),0.5)  As b)\n"
"        As foo;\n"
"\n"
" a_overlap_b | a_crosses_b | a_intersects_b | b_contains_a | dim_a | dim_b | "
"dima_intersection_b\n"
"-------------+-------------+----------------+--------------+-------+-------"
"+---------------------\n"
" t           | f           | t              | f            |     2 |     2 "
"|              2"
msgstr ""

#. Tag: para
#: reference_measure.xml:2640
#, no-c-format
msgid ""
", <xref linkend=\"ST_Crosses\"/>, <xref linkend=\"ST_Dimension\"/>, <xref "
"linkend=\"ST_Intersects\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:2645
#, no-c-format
msgid "ST_Perimeter"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:2647
#, no-c-format
msgid ""
"Return the length measurement of the boundary of an ST_Surface or "
"ST_MultiSurface geometry or geography. (Polygon, Multipolygon). geometry "
"measurement is in units of spatial reference and geography is in meters."
msgstr ""

#. Tag: funcsynopsis
#: reference_measure.xml:2651
#, no-c-format
msgid ""
"<funcprototype> <funcdef>float <function>ST_Perimeter</function></funcdef> "
"<paramdef><type>geometry </type><parameter>g1</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>float <function>ST_Perimeter</"
"function></funcdef> <paramdef><type>geography </type><parameter>geog</"
"parameter></paramdef> <paramdef choice=\"opt\"><type>boolean </"
"type><parameter>use_spheroid=true</parameter></paramdef> </funcprototype>"
msgstr ""

#. Tag: para
#: reference_measure.xml:2667
#, no-c-format
msgid ""
"Returns the 2D perimeter of the geometry/geography if it is a ST_Surface, "
"ST_MultiSurface (Polygon, Multipolygon). 0 is returned for non-areal "
"geometries. For linestrings use ST_Length. Measurements for geometry are in "
"the units of the spatial reference system of the geometry. Measurements for "
"geography are in meters. If <varname>use_spheroid</varname> is set to false, "
"then will model earth as a sphere instead of a spheroid."
msgstr ""

#. Tag: para
#: reference_measure.xml:2672
#, no-c-format
msgid ""
"Currently this is an alias for ST_Perimeter2D, but this may change to "
"support higher dimensions."
msgstr ""

#. Tag: para
#: reference_measure.xml:2675
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 8.1.3, 9.5.4"
msgstr ""

#. Tag: para
#: reference_measure.xml:2676
#, no-c-format
msgid "Availability 2.0.0: Support for geography was introduced"
msgstr ""

#. Tag: title
#: reference_measure.xml:2680
#, no-c-format
msgid "Examples: Geometry"
msgstr ""

#. Tag: para
#: reference_measure.xml:2681
#, no-c-format
msgid ""
"Return perimeter in feet for polygon and multipolygon. Note this is in feet "
"because 2249 is Mass State Plane Feet"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:2683
#, no-c-format
msgid ""
"SELECT ST_Perimeter(ST_GeomFromText('POLYGON((743238 2967416,743238 "
"2967450,743265 2967450,\n"
"743265.625 2967416,743238 2967416))', 2249));\n"
"st_perimeter\n"
"---------\n"
" 122.630744000095\n"
"(1 row)\n"
"\n"
"SELECT ST_Perimeter(ST_GeomFromText('MULTIPOLYGON(((763104.471273676 "
"2949418.44119003,\n"
"763104.477769673 2949418.42538203,\n"
"763104.189609677 2949418.22343004,763104.471273676 2949418.44119003)),\n"
"((763104.471273676 2949418.44119003,763095.804579742 2949436.33850239,\n"
"763086.132105649 2949451.46730207,763078.452329651 2949462.11549407,\n"
"763075.354136904 2949466.17407812,763064.362142565 2949477.64291974,\n"
"763059.953961626 2949481.28983009,762994.637609571 2949532.04103014,\n"
"762990.568508415 2949535.06640477,762986.710889563 2949539.61421415,\n"
"763117.237897679 2949709.50493431,763235.236617789 2949617.95619822,\n"
"763287.718121842 2949562.20592617,763111.553321674 2949423.91664605,\n"
"763104.471273676 2949418.44119003)))', 2249));\n"
"st_perimeter\n"
"---------\n"
" 845.227713366825\n"
"(1 row)"
msgstr ""

#. Tag: title
#: reference_measure.xml:2686
#, no-c-format
msgid "Examples: Geography"
msgstr ""

#. Tag: para
#: reference_measure.xml:2687
#, no-c-format
msgid ""
"Return perimeter in meters and feet for polygon and multipolygon. Note this "
"is geography (WGS 84 long lat)"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:2688
#, no-c-format
msgid ""
"SELECT  ST_Perimeter(geog) As per_meters, ST_Perimeter(geog)/0.3048 As "
"per_ft \n"
"FROM ST_GeogFromText('POLYGON((-71.1776848522251 "
"42.3902896512902,-71.1776843766326 42.3903829478009,\n"
"-71.1775844305465 42.3903826677917,-71.1775825927231 "
"42.3902893647987,-71.1776848522251 42.3902896512902))') As geog;\n"
"\n"
"   per_meters    |      per_ft\n"
"-----------------+------------------\n"
"37.3790462565251 | 122.634666195949\n"
"\n"
"\n"
"-- Multipolygon example --\n"
"SELECT  ST_Perimeter(geog) As per_meters, ST_Perimeter(geog,false) As "
"per_sphere_meters,  ST_Perimeter(geog)/0.3048 As per_ft \n"
"FROM ST_GeogFromText('MULTIPOLYGON(((-71.1044543107478 "
"42.340674480411,-71.1044542869917 42.3406744369506,\n"
"-71.1044553562977 42.340673886454,-71.1044543107478 42.340674480411)),\n"
"((-71.1044543107478 42.340674480411,-71.1044860600303 "
"42.3407237015564,-71.1045215770124 42.3407653385914,\n"
"-71.1045498002983 42.3407946553165,-71.1045611902745 "
"42.3408058316308,-71.1046016507427 42.340837442371,\n"
"-71.104617893173 42.3408475056957,-71.1048586153981 "
"42.3409875993595,-71.1048736143677 42.3409959528211,\n"
"-71.1048878050242 42.3410084812078,-71.1044020965803 42.3414730072048,\n"
"-71.1039672113619 42.3412202916693,-71.1037740497748 42.3410666421308,\n"
"-71.1044280218456 42.3406894151355,-71.1044543107478 42.340674480411)))') As "
"geog;\n"
"\n"
"    per_meters    | per_sphere_meters |      per_ft\n"
"------------------+-------------------+------------------\n"
" 257.634283683311 |  257.412311446337 | 845.256836231335"
msgstr ""

#. Tag: para
#: reference_measure.xml:2692
#, no-c-format
msgid ", <xref linkend=\"ST_GeomFromText\"/>, <xref linkend=\"ST_Length\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:2698
#, no-c-format
msgid "ST_Perimeter2D"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:2700
#, no-c-format
msgid ""
"Returns the 2-dimensional perimeter of the geometry, if it is a polygon or "
"multi-polygon. This is currently an alias for ST_Perimeter."
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:2706
#, no-c-format
msgid ""
"<funcdef>float <function>ST_Perimeter2D</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:2716
#, no-c-format
msgid ""
"Returns the 2-dimensional perimeter of the geometry, if it is a polygon or "
"multi-polygon."
msgstr ""

#. Tag: para
#: reference_measure.xml:2721
#, no-c-format
msgid ""
"This is currently an alias for ST_Perimeter. In future versions ST_Perimeter "
"may return the highest dimension perimeter for a geometry. This is still "
"under consideration"
msgstr ""

#. Tag: refname
#: reference_measure.xml:2735
#, no-c-format
msgid "ST_3DPerimeter"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:2737
#, no-c-format
msgid ""
"Returns the 3-dimensional perimeter of the geometry, if it is a polygon or "
"multi-polygon."
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:2743
#, no-c-format
msgid ""
"<funcdef>float <function>ST_3DPerimeter</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:2753
#, no-c-format
msgid ""
"Returns the 3-dimensional perimeter of the geometry, if it is a polygon or "
"multi-polygon. If the geometry is 2-dimensional, then the 2-dimensional "
"perimeter is returned."
msgstr ""

#. Tag: para
#: reference_measure.xml:2756
#, no-c-format
msgid "Changed: 2.0.0 In prior versions this used to be called ST_Perimeter3D"
msgstr ""

#. Tag: para
#: reference_measure.xml:2762
#, no-c-format
msgid ""
"Perimeter of a slightly elevated polygon in the air in Massachusetts state "
"plane feet"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:2763
#, no-c-format
msgid ""
"SELECT ST_3DPerimeter(the_geom), ST_Perimeter2d(the_geom), "
"ST_Perimeter(the_geom) FROM\n"
"                        (SELECT ST_GeomFromEWKT('SRID=2249;POLYGON((743238 "
"2967416 2,743238 2967450 1,\n"
"743265.625 2967416 1,743238 2967416 2))') As the_geom) As foo;\n"
"\n"
"  ST_3DPerimeter  |  st_perimeter2d  |   st_perimeter\n"
"------------------+------------------+------------------\n"
" 105.465793597674 | 105.432997272188 | 105.432997272188"
msgstr ""

#. Tag: para
#: reference_measure.xml:2770
#, no-c-format
msgid ", <xref linkend=\"ST_Perimeter\"/>, <xref linkend=\"ST_Perimeter2D\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:2776
#, no-c-format
msgid "ST_PointOnSurface"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:2778
#, no-c-format
msgid "Returns a <varname>POINT</varname> guaranteed to lie on the surface."
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:2783
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_PointOnSurface</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:2795
#, no-c-format
msgid "Returns a <varname>POINT</varname> guaranteed to intersect a surface."
msgstr ""

#. Tag: para
#: reference_measure.xml:2797
#, no-c-format
msgid "&sfs_compliant; s3.2.14.2 // s3.2.18.2"
msgstr ""

#. Tag: para
#: reference_measure.xml:2798
#, no-c-format
msgid ""
"&sqlmm_compliant; SQL-MM 3: 8.1.5, 9.5.6. According to the specs, "
"ST_PointOnSurface works for surface geometries (POLYGONs, MULTIPOLYGONS, "
"CURVED POLYGONS). So PostGIS seems to be extending what the spec allows "
"here. Most databases Oracle,DB II, ESRI SDE seem to only support this "
"function for surfaces. SQL Server 2008 like PostGIS supports for all common "
"geometries."
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:2807
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_PointOnSurface('POINT(0 5)'::geometry));\n"
" st_astext\n"
"------------\n"
" POINT(0 5)\n"
"(1 row)\n"
"\n"
"SELECT ST_AsText(ST_PointOnSurface('LINESTRING(0 5, 0 10)'::geometry));\n"
" st_astext\n"
"------------\n"
" POINT(0 5)\n"
"(1 row)\n"
"\n"
"SELECT ST_AsText(ST_PointOnSurface('POLYGON((0 0, 0 5, 5 5, 5 0, 0 0))'::"
"geometry));\n"
"   st_astext\n"
"----------------\n"
" POINT(2.5 2.5)\n"
"(1 row)\n"
"\n"
"SELECT ST_AsEWKT(ST_PointOnSurface(ST_GeomFromEWKT('LINESTRING(0 5 1, 0 0 1, "
"0 10 2)')));\n"
"   st_asewkt\n"
"----------------\n"
" POINT(0 0 1)\n"
"(1 row)"
msgstr ""

#. Tag: para
#: reference_measure.xml:2813
#, no-c-format
msgid ", <xref linkend=\"ST_Point_Inside_Circle\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:2819
#, no-c-format
msgid "ST_Project"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:2821
#, no-c-format
msgid ""
"Returns a <varname>POINT</varname> projected from a start point using a "
"distance in meters and bearing (azimuth) in radians."
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:2826
#, no-c-format
msgid ""
"<funcdef>geography <function>ST_Project</function></funcdef> "
"<paramdef><type>geography </type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>float </type> <parameter>distance</parameter></paramdef> "
"<paramdef><type>float </type> <parameter>azimuth</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:2842
#, no-c-format
msgid ""
"Returns a <varname>POINT</varname> projected from a start point using an "
"azimuth (bearing) measured in radians and distance measured in meters."
msgstr ""

#. Tag: para
#: reference_measure.xml:2843
#, no-c-format
msgid ""
"Distance, azimuth and projection are all aspects of the same operation, "
"describing (or in the case of projection, constructing) the relationship "
"between two points on the world."
msgstr ""

#. Tag: para
#: reference_measure.xml:2844
#, no-c-format
msgid ""
"The azimuth is sometimes called the heading or the bearing in navigation. It "
"is measured relative to true north (azimuth zero). East is azimuth 90 "
"(<varname>pi/2</varname>), south is azimuth 180 (<varname>pi</varname>), "
"west is azimuth 270 (<varname>pi*1.5</varname>)."
msgstr ""

#. Tag: para
#: reference_measure.xml:2845
#, no-c-format
msgid "The distance is given in meters."
msgstr ""

#. Tag: title
#: reference_measure.xml:2852
#, no-c-format
msgid ""
"Example: Using degrees - projected point 100,000 meters and bearing 45 "
"degrees"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:2854
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_Project('POINT(0 0)'::geography, 100000, "
"radians(45.0)));\n"
"                          st_astext\n"
"------------------------------------------\n"
" POINT(0.63523102912532 0.63947233472882)\n"
"(1 row)"
msgstr ""

#. Tag: title
#: reference_measure.xml:2858
#, no-c-format
msgid ""
"Example: Using radians - projected point 100,000 meters and bearing pi/4 (45 "
"degrees)"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:2860
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_Project('POINT(0 0)'::geography, 100000, pi()/4));\n"
"                          st_astext\n"
"------------------------------------------\n"
" POINT(0.63523102912532 0.63947233472882)\n"
"(1 row)"
msgstr ""

#. Tag: para
#: reference_measure.xml:2866
#, no-c-format
msgid ""
", <xref linkend=\"ST_Distance\"/>, <ulink url=\"http://www.postgresql.org/"
"docs/current/interactive/functions-math.html\">PostgreSQL Math Functions</"
"ulink>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:2872
#, no-c-format
msgid "ST_Relate"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:2874
#, no-c-format
msgid ""
"Returns true if this Geometry is spatially related to anotherGeometry, by "
"testing for intersections between the Interior, Boundary and Exterior of the "
"two geometries as specified by the values in the intersectionMatrixPattern. "
"If no intersectionMatrixPattern is passed in, then returns the maximum "
"intersectionMatrixPattern that relates the 2 geometries."
msgstr ""

#. Tag: funcsynopsis
#: reference_measure.xml:2882
#, no-c-format
msgid ""
"<funcprototype> <funcdef>boolean <function>ST_Relate</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>geomB</parameter></paramdef> "
"<paramdef><type>text </type> <parameter>intersectionMatrixPattern</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>text "
"<function>ST_Relate</function></funcdef> <paramdef><type>geometry </type> "
"<parameter>geomA</parameter></paramdef> <paramdef><type>geometry </type> "
"<parameter>geomB</parameter></paramdef> </funcprototype> <funcprototype> "
"<funcdef>text <function>ST_Relate</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>geomA</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>geomB</parameter></paramdef> "
"<paramdef><type>int </type> <parameter>BoundaryNodeRule</parameter></"
"paramdef> </funcprototype>"
msgstr ""

#. Tag: para
#: reference_measure.xml:2908
#, no-c-format
msgid ""
"Version 1: Takes geomA, geomB, intersectionMatrix and Returns 1 (TRUE) if "
"this Geometry is spatially related to anotherGeometry, by testing for "
"intersections between the Interior, Boundary and Exterior of the two "
"geometries as specified by the values in the <ulink url=\"http://en."
"wikipedia.org/wiki/DE-9IM\">DE-9IM matrix pattern</ulink>."
msgstr ""

#. Tag: para
#: reference_measure.xml:2913
#, no-c-format
msgid ""
"This is especially useful for testing compound checks of intersection, "
"crosses, etc in one step."
msgstr ""

#. Tag: para
#: reference_measure.xml:2916
#, no-c-format
msgid ""
"This is the \"allowable\" version that returns a boolean, not an integer. "
"This is defined in OGC spec"
msgstr ""

#. Tag: para
#: reference_measure.xml:2919
#, no-c-format
msgid ""
"This DOES NOT automagically include an index call. The reason for that is "
"some relationships are anti e.g. Disjoint. If you are using a relationship "
"pattern that requires intersection, then include the &amp;&amp; index call."
msgstr ""

#. Tag: para
#: reference_measure.xml:2924
#, no-c-format
msgid ""
"Version 2: Takes geomA and geomB and returns the <xref linkend=\"DE-9IM\"/>"
msgstr ""

#. Tag: para
#: reference_measure.xml:2926
#, no-c-format
msgid ""
"Version 3: same as version 2 bu allows to specify a boundary node rule (1:"
"OGC/MOD2, 2:Endpoint, 3:MultivalentEndpoint, 4:MonovalentEndpoint)"
msgstr ""

#. Tag: para
#: reference_measure.xml:2930
#, no-c-format
msgid "not in OGC spec, but implied. see s2.1.13.2"
msgstr ""

#. Tag: para
#: reference_measure.xml:2935
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.25"
msgstr ""

#. Tag: para
#: reference_measure.xml:2936
#, no-c-format
msgid ""
"Enhanced: 2.0.0 - added support for specifying boundary node rule (requires "
"GEOS &gt;= 3.0)."
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:2943
#, no-c-format
msgid ""
"--Find all compounds that intersect and not touch a poly (interior "
"intersects)\n"
"SELECT l.* , b.name As poly_name\n"
"        FROM polys As b\n"
"INNER JOIN compounds As l\n"
"ON (p.the_geom &amp;&amp; b.the_geom\n"
"AND ST_Relate(l.the_geom, b.the_geom,'T********'));\n"
"\n"
"SELECT ST_Relate(ST_GeometryFromText('POINT(1 2)'), "
"ST_Buffer(ST_GeometryFromText('POINT(1 2)'),2));\n"
"st_relate\n"
"-----------\n"
"0FFFFF212\n"
"\n"
"SELECT ST_Relate(ST_GeometryFromText('LINESTRING(1 2, 3 4)'), "
"ST_GeometryFromText('LINESTRING(5 6, 7 8)'));\n"
"st_relate\n"
"-----------\n"
"FF1FF0102\n"
"\n"
"\n"
"SELECT ST_Relate(ST_GeometryFromText('POINT(1 2)'), "
"ST_Buffer(ST_GeometryFromText('POINT(1 2)'),2), '0FFFFF212');\n"
"st_relate\n"
"-----------\n"
"t\n"
"\n"
"SELECT ST_Relate(ST_GeometryFromText('POINT(1 2)'), "
"ST_Buffer(ST_GeometryFromText('POINT(1 2)'),2), '*FF*FF212');\n"
"st_relate\n"
"-----------\n"
"t"
msgstr ""

#. Tag: para
#: reference_measure.xml:2950
#, no-c-format
msgid ""
", <xref linkend=\"DE-9IM\"/>, <xref linkend=\"ST_Disjoint\"/>, <xref linkend="
"\"ST_Intersects\"/>, <xref linkend=\"ST_Touches\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:2956
#, no-c-format
msgid "ST_RelateMatch"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:2958
#, no-c-format
msgid ""
"Returns true if intersectionMattrixPattern1 implies "
"intersectionMatrixPattern2"
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:2963
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_RelateMatch</function></funcdef> "
"<paramdef><type>text </type> <parameter>intersectionMatrix</parameter></"
"paramdef> <paramdef><type>text </type> <parameter>intersectionMatrixPattern</"
"parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:2974
#, no-c-format
msgid ""
"Takes intersectionMatrix and intersectionMatrixPattern and Returns true if "
"the intersectionMatrix satisfies the intersectionMatrixPattern. For more "
"information refer to <xref linkend=\"DE-9IM\"/>."
msgstr ""

#. Tag: para
#: reference_measure.xml:2977
#, no-c-format
msgid "Availability: 2.0.0 - requires GEOS &gt;= 3.3.0."
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:2983
#, no-c-format
msgid ""
"SELECT ST_RelateMatch('101202FFF', 'TTTTTTFFF') ;\n"
"-- result --\n"
"t\n"
"--example of common intersection matrix patterns and example matrices\n"
"-- comparing relationships of involving one invalid geometry and ( a line "
"and polygon that intersect at interior and boundary)\n"
"SELECT mat.name, pat.name, ST_RelateMatch(mat.val, pat.val) As satisfied\n"
"    FROM \n"
"        ( VALUES ('Equality', 'T1FF1FFF1'),\n"
"                ('Overlaps', 'T*T***T**'),\n"
"                ('Within', 'T*F**F***'),\n"
"                ('Disjoint', 'FF*FF****') As pat(name,val)\n"
"        CROSS JOIN \n"
"            (        VALUES ('Self intersections (invalid)', '111111111'),\n"
"                    ('IE2_BI1_BB0_BE1_EI1_EE2', 'FF2101102'),\n"
"                    ('IB1_IE1_BB0_BE0_EI2_EI1_EE2', 'F11F00212')\n"
"            ) As mat(name,val);"
msgstr ""

#. Tag: para
#: reference_measure.xml:2989
#, no-c-format
msgid ", <xref linkend=\"ST_Relate\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:2995
#, no-c-format
msgid "ST_ShortestLine"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:2997
#, no-c-format
msgid "Returns the 2-dimensional shortest line between two geometries"
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:3002
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_ShortestLine</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>g2</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:3017
#, no-c-format
msgid ""
"Returns the 2-dimensional shortest line between two geometries. The function "
"will only return the first shortest line if more than one, that the function "
"finds. If g1 and g2 intersects in just one point the function will return a "
"line with both start and end in that intersection-point. If g1 and g2 are "
"intersecting with more than one point the function will return a line with "
"start and end in the same point but it can be any of the intersecting "
"points. The line returned will always start in g1 and end in g2. The length "
"of the line this function returns will always be the same as st_distance "
"returns for g1 and g2."
msgstr ""

#. Tag: para
#: reference_measure.xml:3041
#, no-c-format
msgid "Shortest line between point and linestring"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:3044
#, no-c-format
msgid ""
"SELECT ST_AsText(\n"
"        ST_ShortestLine('POINT(100 100)'::geometry, \n"
"                'LINESTRING (20 80, 98 190, 110 180, 50 75 )'::geometry)\n"
"        ) As sline;\n"
"\n"
"        \n"
"   sline\n"
"-----------------\n"
"LINESTRING(100 100,73.0769230769231 115.384615384615)"
msgstr ""

#. Tag: para
#: reference_measure.xml:3052
#, no-c-format
msgid "shortest line between polygon and polygon"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:3055
#, no-c-format
msgid ""
"SELECT ST_AsText(\n"
"                ST_ShortestLine(\n"
"                        ST_GeomFromText('POLYGON((175 150, 20 40, 50 60, 125 "
"100, 175 150))'),\n"
"                        ST_Buffer(ST_GeomFromText('POINT(110 170)'), 20)\n"
"                        ) \n"
"                ) As slinewkt;\n"
"                \n"
" LINESTRING(140.752120669087 125.695053378061,121.111404660392 "
"153.370607753949)"
msgstr ""

#. Tag: para
#: reference_measure.xml:3067
#, no-c-format
msgid ""
", <xref linkend=\"ST_Distance\"/>, <xref linkend=\"ST_LongestLine\"/>, <xref "
"linkend=\"ST_MaxDistance\"/>"
msgstr ""

#. Tag: refname
#: reference_measure.xml:3073
#, no-c-format
msgid "ST_Touches"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:3075
#, no-c-format
msgid ""
"Returns <varname>TRUE</varname> if the geometries have at least one point in "
"common, but their interiors do not intersect."
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:3081
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_Touches</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>g2</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:3096
#, no-c-format
msgid ""
"Returns <varname>TRUE</varname> if the only points in common between "
"<parameter>g1</parameter> and <parameter>g2</parameter> lie in the union of "
"the boundaries of <parameter>g1</parameter> and <parameter>g2</parameter>. "
"The <function>ST_Touches</function> relation applies to all Area/Area, Line/"
"Line, Line/Area, Point/Area and Point/Line pairs of relationships, but "
"<emphasis>not</emphasis> to the Point/Point pair."
msgstr ""

#. Tag: para
#: reference_measure.xml:3103
#, no-c-format
msgid "In mathematical terms, this predicate is expressed as:"
msgstr ""

#. Tag: para
#: reference_measure.xml:3113
#, no-c-format
msgid "The allowable DE-9IM Intersection Matrices for the two geometries are:"
msgstr ""

#. Tag: markup
#: reference_measure.xml:3117
#, no-c-format
msgid "FT*******"
msgstr ""

#. Tag: markup
#: reference_measure.xml:3121
#, no-c-format
msgid "F**T*****"
msgstr ""

#. Tag: markup
#: reference_measure.xml:3125
#, no-c-format
msgid "F***T****"
msgstr ""

#. Tag: para
#: reference_measure.xml:3134
#, no-c-format
msgid ""
"This function call will automatically include a bounding box comparison that "
"will make use of any indexes that are available on the geometries. To avoid "
"using an index, use <function>_ST_Touches</function> instead."
msgstr ""

#. Tag: para
#: reference_measure.xml:3140
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.28"
msgstr ""

#. Tag: para
#: reference_measure.xml:3146
#, no-c-format
msgid ""
"The <function>ST_Touches</function> predicate returns <varname>TRUE</"
"varname> in all the following illustrations."
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:3216
#, no-c-format
msgid ""
"SELECT ST_Touches('LINESTRING(0 0, 1 1, 0 2)'::geometry, 'POINT(1 1)'::"
"geometry);\n"
" st_touches\n"
"------------\n"
" f\n"
"(1 row)\n"
"\n"
"SELECT ST_Touches('LINESTRING(0 0, 1 1, 0 2)'::geometry, 'POINT(0 2)'::"
"geometry);\n"
" st_touches\n"
"------------\n"
" t\n"
"(1 row)"
msgstr ""

#. Tag: refname
#: reference_measure.xml:3222
#, no-c-format
msgid "ST_Within"
msgstr ""

#. Tag: refpurpose
#: reference_measure.xml:3224
#, no-c-format
msgid "Returns true if the geometry A is completely inside geometry B"
msgstr ""

#. Tag: funcprototype
#: reference_measure.xml:3229
#, no-c-format
msgid ""
"<funcdef>boolean <function>ST_Within</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>A</parameter></paramdef> "
"<paramdef><type>geometry </type> <parameter>B</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_measure.xml:3244
#, no-c-format
msgid ""
"Returns TRUE if geometry A is completely inside geometry B. For this "
"function to make sense, the source geometries must both be of the same "
"coordinate projection, having the same SRID. It is a given that if "
"ST_Within(A,B) is true and ST_Within(B,A) is true, then the two geometries "
"are considered spatially equal."
msgstr ""

#. Tag: para
#: reference_measure.xml:3259
#, no-c-format
msgid ""
"This function call will automatically include a bounding box comparison that "
"will make use of any indexes that are available on the geometries. To avoid "
"index use, use the function _ST_Within."
msgstr ""

#. Tag: para
#: reference_measure.xml:3267
#, no-c-format
msgid "&sfs_compliant; s2.1.1.2 // s2.1.13.3 - a.Relate(b, 'T*F**F***')"
msgstr ""

#. Tag: para
#: reference_measure.xml:3270
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 5.1.30"
msgstr ""

#. Tag: programlisting
#: reference_measure.xml:3275
#, no-c-format
msgid ""
"--a circle within a circle\n"
"SELECT ST_Within(smallc,smallc) As smallinsmall,\n"
"        ST_Within(smallc, bigc) As smallinbig,\n"
"        ST_Within(bigc,smallc) As biginsmall,\n"
"        ST_Within(ST_Union(smallc, bigc), bigc) as unioninbig,\n"
"        ST_Within(bigc, ST_Union(smallc, bigc)) as biginunion,\n"
"        ST_Equals(bigc, ST_Union(smallc, bigc)) as bigisunion\n"
"FROM\n"
"(\n"
"SELECT ST_Buffer(ST_GeomFromText('POINT(50 50)'), 20) As smallc,\n"
"        ST_Buffer(ST_GeomFromText('POINT(50 50)'), 40) As bigc) As foo;\n"
"--Result\n"
" smallinsmall | smallinbig | biginsmall | unioninbig | biginunion | "
"bigisunion\n"
"--------------+------------+------------+------------+------------"
"+------------\n"
" t            | t          | f          | t          | t          | t\n"
"(1 row)"
msgstr ""

#. Tag: para
#: reference_measure.xml:3286
#, no-c-format
msgid ", <xref linkend=\"ST_Equals\"/>, <xref linkend=\"ST_IsValid\"/>"
msgstr ""
