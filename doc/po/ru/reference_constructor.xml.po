# SOME DESCRIPTIVE TITLE.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: PostGIS\n"
"Report-Msgid-Bugs-To: https://bugs.kde.org\n"
"POT-Creation-Date: 2022-02-13 18:15+0000\n"
"PO-Revision-Date: 2022-01-27 16:52+0000\n"
"Last-Translator: Regina Obe <regina@arrival3d.com>\n"
"Language-Team: Russian <https://weblate.osgeo.org/projects/postgis/"
"reference_constructorxml/ru/>\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || (n"
"%100>=11 && n%100<=14)? 2 : 3);\n"
"X-Generator: Weblate 4.10.1\n"

#. Tag: title
#: reference_constructor.xml:3
#, no-c-format
msgid "Geometry Constructors"
msgstr ""

#. Tag: refname
#: reference_constructor.xml:7
#, no-c-format
msgid "ST_Collect"
msgstr ""

#. Tag: refpurpose
#: reference_constructor.xml:8
#, no-c-format
msgid ""
"Creates a GeometryCollection or Multi* geometry from a set of geometries."
msgstr ""

#. Tag: funcsynopsis
#: reference_constructor.xml:12
#, no-c-format
msgid ""
"<funcprototype> <funcdef>geometry <function>ST_Collect</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>g1</parameter></paramdef> "
"<paramdef><type>geometry</type> <parameter>g2</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>geometry <function>ST_Collect</"
"function></funcdef> <paramdef><type>geometry[]</type> <parameter>g1_array</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>geometry "
"<function>ST_Collect</function></funcdef> <paramdef><type>geometry set</"
"type> <parameter>g1field</parameter></paramdef> </funcprototype>"
msgstr ""

#. Tag: title
#: reference_constructor.xml:30 reference_constructor.xml:109
#: reference_constructor.xml:154 reference_constructor.xml:203
#: reference_constructor.xml:313 reference_constructor.xml:359
#: reference_constructor.xml:413 reference_constructor.xml:506
#: reference_constructor.xml:573 reference_constructor.xml:610
#: reference_constructor.xml:649 reference_constructor.xml:684
#: reference_constructor.xml:743 reference_constructor.xml:782
#: reference_constructor.xml:854 reference_constructor.xml:891
#: reference_constructor.xml:956 reference_constructor.xml:994
#, no-c-format
msgid "Description"
msgstr ""

#. Tag: para
#: reference_constructor.xml:31
#, no-c-format
msgid ""
"Collects geometries into a geometry collection. The result is either a "
"Multi* or a GeometryCollection, depending on whether the input geometries "
"have the same or different types (homogeneous or heterogeneous). The input "
"geometries are left unchanged within the collection."
msgstr ""

#. Tag: para
#: reference_constructor.xml:38 reference_constructor.xml:208
#, no-c-format
msgid ""
"<emphasis role=\"bold\">Variant 1:</emphasis> accepts two input geometries"
msgstr ""

#. Tag: para
#: reference_constructor.xml:39 reference_constructor.xml:209
#, no-c-format
msgid ""
"<emphasis role=\"bold\">Variant 2:</emphasis> accepts an array of geometries"
msgstr ""

#. Tag: para
#: reference_constructor.xml:40
#, no-c-format
msgid ""
"<emphasis role=\"bold\">Variant 3:</emphasis> aggregate function accepting a "
"rowset of geometries."
msgstr ""

#. Tag: para
#: reference_constructor.xml:42
#, no-c-format
msgid ""
"If any of the input geometries are collections (Multi* or "
"GeometryCollection) ST_Collect returns a GeometryCollection (since that is "
"the only type which can contain nested collections). To prevent this, use "
"<xref linkend=\"ST_Dump\"/> in a subquery to expand the input collections to "
"their atomic elements (see example below)."
msgstr ""

#. Tag: para
#: reference_constructor.xml:50
#, no-c-format
msgid ""
"ST_Collect and <xref linkend=\"ST_Union\"/> appear similar, but in fact "
"operate quite differently. ST_Collect aggregates geometries into a "
"collection without changing them in any way. ST_Union geometrically merges "
"geometries where they overlap, and splits linestrings at intersections. It "
"may return single geometries when it dissolves boundaries."
msgstr ""

#. Tag: para
#: reference_constructor.xml:57
#, no-c-format
msgid ""
"Availability: 1.4.0 - ST_Collect(geomarray) was introduced. ST_Collect was "
"enhanced to handle more geometries faster."
msgstr ""

#. Tag: para
#: reference_constructor.xml:58 reference_constructor.xml:115
#: reference_constructor.xml:220 reference_constructor.xml:327
#: reference_constructor.xml:427 reference_constructor.xml:701
#, no-c-format
msgid "&Z_support;"
msgstr ""

#. Tag: para
#: reference_constructor.xml:59
#, no-c-format
msgid "&curve_support;"
msgstr ""

#. Tag: title
#: reference_constructor.xml:63
#, no-c-format
msgid "Examples - Two-input variant"
msgstr ""

#. Tag: para
#: reference_constructor.xml:64
#, no-c-format
msgid "Collect 2D points."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:65
#, no-c-format
msgid ""
"SELECT ST_AsText( ST_Collect( ST_GeomFromText('POINT(1 2)'),\n"
"        ST_GeomFromText('POINT(-2 3)') ));\n"
"\n"
"st_astext\n"
"----------\n"
"MULTIPOINT(1 2,-2 3)"
msgstr ""

#. Tag: para
#: reference_constructor.xml:67
#, no-c-format
msgid "Collect 3D points."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:68
#, no-c-format
msgid ""
"SELECT ST_AsEWKT( ST_Collect( ST_GeomFromEWKT('POINT(1 2 3)'),\n"
"                ST_GeomFromEWKT('POINT(1 2 4)') ) );\n"
"\n"
"                st_asewkt\n"
"-------------------------\n"
" MULTIPOINT(1 2 3,1 2 4)"
msgstr ""

#. Tag: para
#: reference_constructor.xml:70
#, no-c-format
msgid "Collect curves."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:71
#, no-c-format
msgid ""
"SELECT ST_AsText( ST_Collect( 'CIRCULARSTRING(220268 150415,220227 "
"150505,220227 150406)',\n"
"                'CIRCULARSTRING(220227 150406,2220227 150407,220227 "
"150406)'));\n"
"\n"
"                st_astext\n"
"------------------------------------------------------------------------------------\n"
"MULTICURVE(CIRCULARSTRING(220268 150415,220227 150505,220227 150406),\n"
" CIRCULARSTRING(220227 150406,2220227 150407,220227 150406))"
msgstr ""

#. Tag: title
#: reference_constructor.xml:74
#, no-c-format
msgid "Examples - Array variant"
msgstr ""

#. Tag: para
#: reference_constructor.xml:75
#, no-c-format
msgid "Using an array constructor for a subquery."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:76
#, no-c-format
msgid "SELECT ST_Collect( ARRAY( SELECT geom FROM sometable ) );"
msgstr ""

#. Tag: para
#: reference_constructor.xml:77
#, no-c-format
msgid "Using an array constructor for values."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:78
#, no-c-format
msgid ""
"SELECT ST_AsText(  ST_Collect(\n"
"                ARRAY[ ST_GeomFromText('LINESTRING(1 2, 3 4)'),\n"
"                        ST_GeomFromText('LINESTRING(3 4, 4 5)') ] )) As "
"wktcollect;\n"
"\n"
"--wkt collect --\n"
"MULTILINESTRING((1 2,3 4),(3 4,4 5))"
msgstr ""

#. Tag: title
#: reference_constructor.xml:81
#, no-c-format
msgid "Examples - Aggregate variant"
msgstr ""

#. Tag: para
#: reference_constructor.xml:82
#, no-c-format
msgid "Creating multiple collections by grouping geometries in a table."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:83
#, no-c-format
msgid ""
"SELECT stusps, ST_Collect(f.geom) as geom\n"
"         FROM (SELECT stusps, (ST_Dump(geom)).geom As geom\n"
"                                FROM\n"
"                                somestatetable ) As f\n"
"        GROUP BY stusps"
msgstr ""

#. Tag: title
#: reference_constructor.xml:87 reference_constructor.xml:127
#: reference_constructor.xml:170 reference_constructor.xml:266
#: reference_constructor.xml:335 reference_constructor.xml:384
#: reference_constructor.xml:472 reference_constructor.xml:547
#: reference_constructor.xml:586 reference_constructor.xml:623
#: reference_constructor.xml:662 reference_constructor.xml:716
#: reference_constructor.xml:758 reference_constructor.xml:829
#: reference_constructor.xml:869 reference_constructor.xml:929
#: reference_constructor.xml:971 reference_constructor.xml:1021
#, no-c-format
msgid "See Also"
msgstr ""

#. Tag: para
#: reference_constructor.xml:88
#, no-c-format
msgid ", <xref linkend=\"ST_Union\"/>"
msgstr ""

#. Tag: refname
#: reference_constructor.xml:94
#, no-c-format
msgid "ST_LineFromMultiPoint"
msgstr ""

#. Tag: refpurpose
#: reference_constructor.xml:96
#, no-c-format
msgid ""
"<refpurpose>Creates a LineString from a MultiPoint geometry.</refpurpose>"
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:101
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_LineFromMultiPoint</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>aMultiPoint</parameter></"
"paramdef>"
msgstr ""

#. Tag: para
#: reference_constructor.xml:111
#, no-c-format
msgid "<para>Creates a LineString from a MultiPoint geometry.</para>"
msgstr ""

#. Tag: para
#: reference_constructor.xml:113
#, no-c-format
msgid ""
"Use <xref linkend=\"ST_MakeLine\"/> to create lines from Point or LineString "
"inputs."
msgstr ""

#. Tag: title
#: reference_constructor.xml:120 reference_constructor.xml:331
#: reference_constructor.xml:370 reference_constructor.xml:579
#: reference_constructor.xml:616 reference_constructor.xml:655
#: reference_constructor.xml:706
#, no-c-format
msgid "Examples"
msgstr ""

#. Tag: para
#: reference_constructor.xml:121
#, no-c-format
msgid "Create a 3D line string from a 3D MultiPoint"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:122
#, no-c-format
msgid ""
"SELECT ST_AsEWKT(  ST_LineFromMultiPoint('MULTIPOINT(1 2 3, 4 5 6, 7 8 "
"9)')  ));\n"
"\n"
"--result--\n"
"LINESTRING(1 2 3,4 5 6,7 8 9)"
msgstr ""

#. Tag: para
#: reference_constructor.xml:129
#, no-c-format
msgid ", <xref linkend=\"ST_MakeLine\"/>"
msgstr ""

#. Tag: refname
#: reference_constructor.xml:135
#, no-c-format
msgid "ST_MakeEnvelope"
msgstr ""

#. Tag: refpurpose
#: reference_constructor.xml:137
#, no-c-format
msgid "Creates a rectangular Polygon from minimum and maximum coordinates."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:142
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_MakeEnvelope</function></funcdef> "
"<paramdef><type>float</type> <parameter>xmin</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>ymin</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>xmax</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>ymax</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>integer</type> <parameter>srid=unknown</"
"parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_constructor.xml:156
#, no-c-format
msgid ""
"Creates a rectangular Polygon from the minimum and maximum values for X and "
"Y. Input values must be in the spatial reference system specified by the "
"SRID. If no SRID is specified the unknown spatial reference system (SRID 0) "
"is used."
msgstr ""

#. Tag: para
#: reference_constructor.xml:160
#, no-c-format
msgid "Availability: 1.5"
msgstr ""

#. Tag: para
#: reference_constructor.xml:161
#, no-c-format
msgid ""
"Enhanced: 2.0: Ability to specify an envelope without specifying an SRID was "
"introduced."
msgstr ""

#. Tag: title
#: reference_constructor.xml:166
#, no-c-format
msgid "Example: Building a bounding box polygon"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:167
#, no-c-format
msgid ""
"SELECT ST_AsText( ST_MakeEnvelope(10, 10, 11, 11, 4326) );\n"
"\n"
"st_asewkt\n"
"-----------\n"
"POLYGON((10 10, 10 11, 11 11, 11 10, 10 10))"
msgstr ""

#. Tag: para
#: reference_constructor.xml:171
#, no-c-format
msgid ""
", <xref linkend=\"ST_MakeLine\"/>, <xref linkend=\"ST_MakePolygon\"/>, <xref "
"linkend=\"ST_TileEnvelope\"/>"
msgstr ""

#. Tag: refname
#: reference_constructor.xml:177
#, no-c-format
msgid "ST_MakeLine"
msgstr ""

#. Tag: refpurpose
#: reference_constructor.xml:179
#, no-c-format
msgid "Creates a LineString from Point, MultiPoint, or LineString geometries."
msgstr ""

#. Tag: funcsynopsis
#: reference_constructor.xml:183
#, no-c-format
msgid ""
"<funcprototype> <funcdef>geometry <function>ST_MakeLine</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>geom1</parameter></paramdef> "
"<paramdef><type>geometry</type> <parameter>geom2</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>geometry <function>ST_MakeLine</"
"function></funcdef> <paramdef><type>geometry[]</type> "
"<parameter>geoms_array</parameter></paramdef> </funcprototype> "
"<funcprototype> <funcdef>geometry <function>ST_MakeLine</function></funcdef> "
"<paramdef><type>geometry set</type> <parameter>geoms</parameter></paramdef> "
"</funcprototype>"
msgstr ""

#. Tag: para
#: reference_constructor.xml:205
#, no-c-format
msgid ""
"Creates a LineString containing the points of Point, MultiPoint, or "
"LineString geometries. Other geometry types cause an error."
msgstr ""

#. Tag: para
#: reference_constructor.xml:210
#, no-c-format
msgid ""
"<emphasis role=\"bold\">Variant 3:</emphasis> aggregate function accepting a "
"rowset of geometries. To ensure the order of the input geometries use "
"<varname>ORDER BY</varname> in the function call, or a subquery with an "
"<varname>ORDER BY</varname> clause."
msgstr ""

#. Tag: para
#: reference_constructor.xml:214
#, no-c-format
msgid ""
"Repeated nodes at the beginning of input LineStrings are collapsed to a "
"single point. Repeated points in Point and MultiPoint inputs are not "
"collapsed. <xref linkend=\"ST_RemoveRepeatedPoints\"/> can be used to "
"collapse repeated points from the output LineString."
msgstr ""

#. Tag: para
#: reference_constructor.xml:222
#, no-c-format
msgid ""
"Availability: 2.3.0 - Support for MultiPoint input elements was introduced"
msgstr ""

#. Tag: para
#: reference_constructor.xml:223
#, no-c-format
msgid ""
"Availability: 2.0.0 - Support for LineString input elements was introduced"
msgstr ""

#. Tag: para
#: reference_constructor.xml:224
#, no-c-format
msgid ""
"Availability: 1.4.0 - ST_MakeLine(geomarray) was introduced. ST_MakeLine "
"aggregate functions was enhanced to handle more points faster."
msgstr ""

#. Tag: title
#: reference_constructor.xml:229
#, no-c-format
msgid "Examples: Two-input variant"
msgstr ""

#. Tag: para
#: reference_constructor.xml:231
#, no-c-format
msgid "Create a line composed of two points."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:232
#, no-c-format
msgid ""
"SELECT ST_AsText( ST_MakeLine(ST_Point(1,2), ST_Point(3,4)) );\n"
"\n"
"          st_astext\n"
"---------------------\n"
" LINESTRING(1 2,3 4)"
msgstr ""

#. Tag: para
#: reference_constructor.xml:234
#, no-c-format
msgid "Create a 3D line from two 3D points."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:235
#, no-c-format
msgid ""
"SELECT ST_AsEWKT( ST_MakeLine(ST_MakePoint(1,2,3), ST_MakePoint(3,4,5) ));\n"
"\n"
"                st_asewkt\n"
"-------------------------\n"
" LINESTRING(1 2 3,3 4 5)"
msgstr ""

#. Tag: para
#: reference_constructor.xml:237
#, no-c-format
msgid "Create a line from two disjoint LineStrings."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:238
#, no-c-format
msgid ""
"select ST_AsText( ST_MakeLine( 'LINESTRING(0 0, 1 1)', 'LINESTRING(2 2, 3 "
"3)' ) );\n"
"\n"
"          st_astext\n"
"-----------------------------\n"
" LINESTRING(0 0,1 1,2 2,3 3)"
msgstr ""

#. Tag: title
#: reference_constructor.xml:242
#, no-c-format
msgid "Examples: Array variant"
msgstr ""

#. Tag: para
#: reference_constructor.xml:244
#, no-c-format
msgid "Create a line from an array formed by a subquery with ordering."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:245
#, no-c-format
msgid ""
"SELECT ST_MakeLine( ARRAY( SELECT ST_Centroid(geom) FROM visit_locations "
"ORDER BY visit_time) );"
msgstr ""

#. Tag: para
#: reference_constructor.xml:247
#, no-c-format
msgid "Create a 3D line from an array of 3D points"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:248
#, no-c-format
msgid ""
"SELECT ST_AsEWKT( ST_MakeLine(\n"
"          ARRAY[ ST_MakePoint(1,2,3), ST_MakePoint(3,4,5), "
"ST_MakePoint(6,6,6) ]  ));\n"
"\n"
"                st_asewkt\n"
"-------------------------\n"
"LINESTRING(1 2 3,3 4 5,6 6 6)"
msgstr ""

#. Tag: title
#: reference_constructor.xml:252
#, no-c-format
msgid "Examples: Aggregate variant"
msgstr ""

#. Tag: para
#: reference_constructor.xml:253
#, no-c-format
msgid ""
"This example queries time-based sequences of GPS points from a set of tracks "
"and creates one record for each track. The result geometries are LineStrings "
"composed of the GPS track points in the order of travel."
msgstr ""

#. Tag: para
#: reference_constructor.xml:257
#, no-c-format
msgid ""
"Using aggregate <varname>ORDER BY</varname> provides a correctly-ordered "
"LineString."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:258
#, no-c-format
msgid ""
"SELECT gps.track_id, ST_MakeLine(gps.geom ORDER BY gps_time) As geom\n"
"        FROM gps_points As gps\n"
"        GROUP BY track_id;"
msgstr ""

#. Tag: para
#: reference_constructor.xml:260
#, no-c-format
msgid ""
"Prior to PostgreSQL 9, ordering in a subquery can be used. However, "
"sometimes the query plan may not respect the order of the subquery."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:262
#, no-c-format
msgid ""
"SELECT gps.track_id, ST_MakeLine(gps.geom) As geom\n"
"        FROM ( SELECT track_id, gps_time, geom\n"
"                        FROM gps_points ORDER BY track_id, gps_time ) As "
"gps\n"
"        GROUP BY track_id;"
msgstr ""

#. Tag: para
#: reference_constructor.xml:267
#, no-c-format
msgid ""
", <xref linkend=\"ST_AsEWKT\"/>, <xref linkend=\"ST_AsText\"/>, <xref "
"linkend=\"ST_GeomFromText\"/>, <xref linkend=\"ST_MakePoint\"/>, <xref "
"linkend=\"ST_Point\"/>"
msgstr ""

#. Tag: refname
#: reference_constructor.xml:280
#, no-c-format
msgid "ST_MakePoint"
msgstr ""

#. Tag: refpurpose
#: reference_constructor.xml:282
#, no-c-format
msgid "Creates a 2D, 3DZ or 4D Point."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:287
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef>"
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:294
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>z</parameter></paramdef>"
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:302
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_MakePoint</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>z</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>m</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_constructor.xml:315
#, no-c-format
msgid "Creates a 2D, 3D Z or 4D ZM Point geometry."
msgstr ""

#. Tag: para
#: reference_constructor.xml:317
#, no-c-format
msgid ""
"Use <xref linkend=\"ST_MakePointM\"/> to make points with XYM coordinates."
msgstr ""

#. Tag: para
#: reference_constructor.xml:319
#, no-c-format
msgid ""
"While not OGC-compliant, <varname>ST_MakePoint</varname> is faster and more "
"precise than <xref linkend=\"ST_GeomFromText\"/> and <xref linkend="
"\"ST_PointFromText\"/>. It is also easier to use for numeric coordinate "
"values."
msgstr ""

#. Tag: para
#: reference_constructor.xml:325 reference_constructor.xml:365
#: reference_constructor.xml:510
#, no-c-format
msgid ""
"For geodetic coordinates, <varname>X</varname> is longitude and <varname>Y</"
"varname> is latitude"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:332
#, no-c-format
msgid ""
"--Return point with unknown SRID\n"
"SELECT ST_MakePoint(-71.1043443253471, 42.3150676015829);\n"
"\n"
"--Return point marked as WGS 84 long lat\n"
"SELECT ST_SetSRID(ST_MakePoint(-71.1043443253471, 42.3150676015829),4326);\n"
"\n"
"--Return a 3D point (e.g. has altitude)\n"
"SELECT ST_MakePoint(1, 2,1.5);\n"
"\n"
"--Get z of point\n"
"SELECT ST_Z(ST_MakePoint(1, 2,1.5));\n"
"result\n"
"-------\n"
"1.5"
msgstr ""

#. Tag: para
#: reference_constructor.xml:336
#, no-c-format
msgid ""
", <xref linkend=\"ST_PointFromText\"/>, <xref linkend=\"ST_SetSRID\"/>, "
"<xref linkend=\"ST_MakePointM\"/>"
msgstr ""

#. Tag: refname
#: reference_constructor.xml:342
#, no-c-format
msgid "ST_MakePointM"
msgstr ""

#. Tag: refpurpose
#: reference_constructor.xml:344
#, no-c-format
msgid "Creates a Point from X, Y and M values."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:349
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_MakePointM</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>m</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_constructor.xml:361
#, no-c-format
msgid "Creates a point with X, Y and M (measure) coordinates."
msgstr ""

#. Tag: para
#: reference_constructor.xml:363
#, no-c-format
msgid ""
"Use <xref linkend=\"ST_MakePoint\"/> to make points with XY, XYZ, or XYZM "
"coordinates."
msgstr ""

#. Tag: para
#: reference_constructor.xml:371
#, no-c-format
msgid ""
"is used for text output because <xref linkend=\"ST_AsText\"/> does not "
"support M values."
msgstr ""

#. Tag: para
#: reference_constructor.xml:374
#, no-c-format
msgid "Create point with unknown SRID."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:375
#, no-c-format
msgid ""
"SELECT ST_AsEWKT(  ST_MakePointM(-71.1043443253471, 42.3150676015829, "
"10)  );\n"
"\n"
"                                   st_asewkt\n"
"-----------------------------------------------\n"
" POINTM(-71.1043443253471 42.3150676015829 10)"
msgstr ""

#. Tag: para
#: reference_constructor.xml:377
#, no-c-format
msgid "Create point with a measure in the WGS 84 geodetic coordinate system."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:378
#, no-c-format
msgid ""
"SELECT ST_AsEWKT( ST_SetSRID(  ST_MakePointM(-71.104, 42.315, 10),  4326));\n"
"\n"
"                                                st_asewkt\n"
"---------------------------------------------------------\n"
"SRID=4326;POINTM(-71.104 42.315 10)"
msgstr ""

#. Tag: para
#: reference_constructor.xml:380
#, no-c-format
msgid "Get measure of created point."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:381
#, no-c-format
msgid ""
"SELECT ST_M(  ST_MakePointM(-71.104, 42.315, 10)  );\n"
"\n"
"result\n"
"-------\n"
"10"
msgstr ""

#. Tag: para
#: reference_constructor.xml:385
#, no-c-format
msgid ", <xref linkend=\"ST_MakePoint\"/>, <xref linkend=\"ST_SetSRID\"/>"
msgstr ""

#. Tag: refname
#: reference_constructor.xml:391
#, no-c-format
msgid "ST_MakePolygon"
msgstr ""

#. Tag: refpurpose
#: reference_constructor.xml:393
#, no-c-format
msgid "Creates a Polygon from a shell and optional list of holes."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:398
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_MakePolygon</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>linestring</parameter></paramdef>"
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:404
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_MakePolygon</function></funcdef> "
"<paramdef><type>geometry</type> <parameter>outerlinestring</parameter></"
"paramdef> <paramdef><type>geometry[]</type> <parameter>interiorlinestrings</"
"parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_constructor.xml:415
#, no-c-format
msgid ""
"Creates a Polygon formed by the given shell and optional array of holes. "
"Input geometries must be closed LineStrings (rings)."
msgstr ""

#. Tag: para
#: reference_constructor.xml:418
#, no-c-format
msgid ""
"<emphasis role=\"bold\">Variant 1:</emphasis> Accepts one shell LineString."
msgstr ""

#. Tag: para
#: reference_constructor.xml:419
#, no-c-format
msgid ""
"<emphasis role=\"bold\">Variant 2:</emphasis> Accepts a shell LineString and "
"an array of inner (hole) LineStrings. A geometry array can be constructed "
"using the PostgreSQL array_agg(), ARRAY[] or ARRAY() constructs."
msgstr ""

#. Tag: para
#: reference_constructor.xml:423 reference_constructor.xml:695
#, no-c-format
msgid ""
"This function does not accept MultiLineStrings. Use <xref linkend="
"\"ST_LineMerge\"/> to generate a LineString, or <xref linkend=\"ST_Dump\"/> "
"to extract LineStrings."
msgstr ""

#. Tag: title
#: reference_constructor.xml:431
#, no-c-format
msgid "Examples: Single input variant"
msgstr ""

#. Tag: para
#: reference_constructor.xml:432
#, no-c-format
msgid "Create a Polygon from a 2D LineString."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:433
#, no-c-format
msgid ""
"SELECT ST_MakePolygon( ST_GeomFromText('LINESTRING(75 29,77 29,77 29, 75 "
"29)'));"
msgstr ""

#. Tag: para
#: reference_constructor.xml:435
#, no-c-format
msgid ""
"Create a Polygon from an open LineString, using <xref linkend=\"ST_StartPoint"
"\"/> and <xref linkend=\"ST_AddPoint\"/> to close it."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:437
#, no-c-format
msgid ""
"SELECT ST_MakePolygon( ST_AddPoint(foo.open_line, ST_StartPoint(foo."
"open_line)) )\n"
"FROM (\n"
"  SELECT ST_GeomFromText('LINESTRING(75 29,77 29,77 29, 75 29)') As "
"open_line) As foo;"
msgstr ""

#. Tag: para
#: reference_constructor.xml:439
#, no-c-format
msgid "Create a Polygon from a 3D LineString"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:440
#, no-c-format
msgid ""
"SELECT ST_AsEWKT( ST_MakePolygon( 'LINESTRING(75.15 29.53 1,77 29 1,77.6 "
"29.5 1, 75.15 29.53 1)'));\n"
"\n"
"st_asewkt\n"
"-----------\n"
"POLYGON((75.15 29.53 1,77 29 1,77.6 29.5 1,75.15 29.53 1))"
msgstr ""

#. Tag: para
#: reference_constructor.xml:441
#, no-c-format
msgid "Create a Polygon from a LineString with measures"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:442
#, no-c-format
msgid ""
"SELECT ST_AsEWKT( ST_MakePolygon( 'LINESTRINGM(75.15 29.53 1,77 29 1,77.6 "
"29.5 2, 75.15 29.53 2)' ));\n"
"\n"
"st_asewkt\n"
"----------\n"
"POLYGONM((75.15 29.53 1,77 29 1,77.6 29.5 2,75.15 29.53 2))"
msgstr ""

#. Tag: title
#: reference_constructor.xml:445
#, no-c-format
msgid "Examples: Outer shell with inner holes variant"
msgstr ""

#. Tag: para
#: reference_constructor.xml:447
#, no-c-format
msgid "Create a donut Polygon with an extra hole"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:448
#, no-c-format
msgid ""
"SELECT ST_MakePolygon( ST_ExteriorRing( ST_Buffer(ring.line,10)),\n"
"        ARRAY[  ST_Translate(ring.line, 1, 1),\n"
"                ST_ExteriorRing(ST_Buffer(ST_Point(20,20),1)) ]\n"
"        )\n"
"FROM (SELECT ST_ExteriorRing(\n"
"        ST_Buffer(ST_Point(10,10),10,10)) AS line ) AS ring;"
msgstr ""

#. Tag: para
#: reference_constructor.xml:449
#, no-c-format
msgid ""
"Create a set of province boundaries with holes representing lakes. The input "
"is a table of province Polygons/MultiPolygons and a table of water "
"linestrings. Lines forming lakes are determined by using <xref linkend="
"\"ST_IsClosed\"/>. The province linework is extracted by using <xref linkend="
"\"ST_Boundary\"/>. As required by <code>ST_MakePolygon</code>, the boundary "
"is forced to be a single LineString by using <xref linkend=\"ST_LineMerge\"/"
">. (However, note that if a province has more than one region or has islands "
"this will produce an invalid polygon.) Using a LEFT JOIN ensures all "
"provinces are included even if they have no lakes."
msgstr ""

#. Tag: para
#: reference_constructor.xml:462
#, no-c-format
msgid ""
"The CASE construct is used because passing a null array into ST_MakePolygon "
"results in a NULL return value."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:465
#, no-c-format
msgid ""
"SELECT p.gid, p.province_name,\n"
"        CASE WHEN array_agg(w.geom) IS NULL\n"
"        THEN p.geom\n"
"        ELSE  ST_MakePolygon( ST_LineMerge(ST_Boundary(p.geom)),\n"
"                        array_agg(w.geom)) END\n"
"FROM\n"
"        provinces p LEFT JOIN waterlines w\n"
"                ON (ST_Within(w.geom, p.geom) AND ST_IsClosed(w.geom))\n"
"GROUP BY p.gid, p.province_name, p.geom;"
msgstr ""

#. Tag: para
#: reference_constructor.xml:467
#, no-c-format
msgid ""
"Another technique is to utilize a correlated subquery and the ARRAY() "
"constructor that converts a row set to an array."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:469
#, no-c-format
msgid ""
"SELECT p.gid,  p.province_name,\n"
"    CASE WHEN EXISTS( SELECT w.geom\n"
"        FROM waterlines w\n"
"        WHERE ST_Within(w.geom, p.geom)\n"
"        AND ST_IsClosed(w.geom))\n"
"    THEN ST_MakePolygon(\n"
"        ST_LineMerge(ST_Boundary(p.geom)),\n"
"        ARRAY( SELECT w.geom\n"
"            FROM waterlines w\n"
"            WHERE ST_Within(w.geom, p.geom)\n"
"            AND ST_IsClosed(w.geom)))\n"
"    ELSE p.geom\n"
"    END AS geom\n"
"FROM provinces p;"
msgstr ""

#. Tag: refname
#: reference_constructor.xml:482
#, no-c-format
msgid "ST_Point"
msgstr ""

#. Tag: refpurpose
#: reference_constructor.xml:484
#, no-c-format
msgid ""
"Creates a Point with the given coordinate values. Alias for ST_MakePoint."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:489
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_Point</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef>"
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:496
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_Point</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>integer</type> <parameter>srid=unknown</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_constructor.xml:508
#, no-c-format
msgid ""
"Returns an Point with the given X and Y coordinate values. This is the SQL-"
"MM alias for <xref linkend=\"ST_MakePoint\"/> that takes just X and Y."
msgstr ""

#. Tag: para
#: reference_constructor.xml:512 reference_constructor.xml:575
#: reference_constructor.xml:612 reference_constructor.xml:651
#, no-c-format
msgid ""
"Enhanced: 3.2.0 srid as an extra optional argument was added. Older installs "
"require combining with ST_SetSRID to mark the srid on the geometry."
msgstr ""

#. Tag: para
#: reference_constructor.xml:513
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 6.1.2"
msgstr ""

#. Tag: title
#: reference_constructor.xml:519
#, no-c-format
msgid "Examples: Geometry"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:521
#, no-c-format
msgid "SELECT ST_Point( -71.104, 42.315);"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:522
#, no-c-format
msgid "SELECT ST_SetSRID(ST_Point( -71.104, 42.315),4326);"
msgstr ""

#. Tag: para
#: reference_constructor.xml:524
#, no-c-format
msgid "New in 3.2.0: With SRID specified"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:525
#, no-c-format
msgid "SELECT ST_Point( -71.104, 42.315, 4326);"
msgstr ""

#. Tag: title
#: reference_constructor.xml:529
#, no-c-format
msgid "Examples: Geography"
msgstr ""

#. Tag: para
#: reference_constructor.xml:530
#, no-c-format
msgid "Pre-PostGIS 3.2 syntax"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:531
#, no-c-format
msgid ""
"SELECT CAST( ST_SetSRID(ST_Point( -71.104, 42.315), 4326) AS geography);"
msgstr ""

#. Tag: para
#: reference_constructor.xml:532
#, no-c-format
msgid "3.2 and on you can include the srid"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:533
#, no-c-format
msgid "SELECT CAST( ST_Point( -71.104, 42.315, 4326) AS geography);"
msgstr ""

#. Tag: para
#: reference_constructor.xml:535
#, no-c-format
msgid ""
"PostgreSQL also provides the <varname>::</varname> short-hand for casting"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:536
#, no-c-format
msgid "SELECT ST_Point( -71.104, 42.315, 4326)::geography;"
msgstr ""

#. Tag: para
#: reference_constructor.xml:538
#, no-c-format
msgid ""
"If the point coordinates are not in a geodetic coordinate system (such as "
"WGS84), then they must be reprojected before casting to a geography. In this "
"example a point in Pennsylvania State Plane feet (SRID 2273) is projected to "
"WGS84 (SRID 4326)."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:542
#, no-c-format
msgid ""
"SELECT ST_Transform(ST_SetSRID( ST_Point( 3637510, 3014852 ), 2273), 4326)::"
"geography;"
msgstr ""

#. Tag: para
#: reference_constructor.xml:549
#, no-c-format
msgid ""
", <xref linkend=\"ST_MakePoint\"/>, <xref linkend=\"ST_SetSRID\"/>, <xref "
"linkend=\"ST_Transform\"/>, <xref linkend=\"ST_PointZ\"/>, <xref linkend="
"\"ST_PointM\"/>, <xref linkend=\"ST_PointZM\"/>"
msgstr ""

#. Tag: refname
#: reference_constructor.xml:556
#, no-c-format
msgid "ST_PointZ"
msgstr ""

#. Tag: refpurpose
#: reference_constructor.xml:557 reference_constructor.xml:594
#: reference_constructor.xml:632
#, no-c-format
msgid "Creates a Point with the given coordinate and SRID values."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:562
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_PointZ</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>z</parameter></paramdef> <paramdef "
"choice=\"opt\"><type>integer</type> <parameter>srid=unknown</parameter></"
"paramdef>"
msgstr ""

#. Tag: para
#: reference_constructor.xml:574
#, no-c-format
msgid ""
"Returns an Point with the given X, Y and Z coordinate values, and optionally "
"an SRID number."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:580
#, no-c-format
msgid "SELECT ST_PointZ(-71.104, 42.315, 3.4, 4326)"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:581
#, no-c-format
msgid "SELECT ST_PointZ(-71.104, 42.315, 3.4, srid => 4326)"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:582
#, no-c-format
msgid "SELECT ST_PointZ(-71.104, 42.315, 3.4)"
msgstr ""

#. Tag: para
#: reference_constructor.xml:587
#, no-c-format
msgid ""
", <xref linkend=\"ST_Point\"/>, <xref linkend=\"ST_PointM\"/>, <xref linkend="
"\"ST_PointZM\"/>"
msgstr ""

#. Tag: refname
#: reference_constructor.xml:593
#, no-c-format
msgid "ST_PointM"
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:599
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_PointZ</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>m</parameter></paramdef> <paramdef "
"choice=\"opt\"><type>integer</type> <parameter>srid=unknown</parameter></"
"paramdef>"
msgstr ""

#. Tag: para
#: reference_constructor.xml:611
#, no-c-format
msgid ""
"Returns an Point with the given X, Y and M coordinate values, and optionally "
"an SRID number."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:617
#, no-c-format
msgid "SELECT ST_PointM(-71.104, 42.315, 3.4, 4326)"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:618
#, no-c-format
msgid "SELECT ST_PointM(-71.104, 42.315, 3.4, srid => 4326)"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:619
#, no-c-format
msgid "SELECT ST_PointM(-71.104, 42.315, 3.4)"
msgstr ""

#. Tag: para
#: reference_constructor.xml:624
#, no-c-format
msgid ""
", <xref linkend=\"ST_Point\"/>, <xref linkend=\"ST_PointZ\"/>, <xref linkend="
"\"ST_PointZM\"/>"
msgstr ""

#. Tag: refname
#: reference_constructor.xml:631
#, no-c-format
msgid "ST_PointZM"
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:637
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_PointZM</function></funcdef> "
"<paramdef><type>float</type> <parameter>x</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>y</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>z</parameter></paramdef> "
"<paramdef><type>float</type> <parameter>m</parameter></paramdef> <paramdef "
"choice=\"opt\"><type>integer</type> <parameter>srid=unknown</parameter></"
"paramdef>"
msgstr ""

#. Tag: para
#: reference_constructor.xml:650
#, no-c-format
msgid ""
"Returns an Point with the given X, Y, Z and M coordinate values, and "
"optionally an SRID number."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:656
#, no-c-format
msgid "SELECT ST_PointZM(-71.104, 42.315, 3.4, 4.5, 4326)"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:657
#, no-c-format
msgid "SELECT ST_PointZM(-71.104, 42.315, 3.4, 4.5, srid => 4326)"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:658
#, no-c-format
msgid "SELECT ST_PointZM(-71.104, 42.315, 3.4, 4.5)"
msgstr ""

#. Tag: para
#: reference_constructor.xml:663
#, no-c-format
msgid ""
", <xref linkend=\"ST_Point\"/>, <xref linkend=\"ST_PointM\"/>, <xref linkend="
"\"ST_PointZ\"/>, <xref linkend=\"ST_SetSRID\"/>"
msgstr ""

#. Tag: refname
#: reference_constructor.xml:669
#, no-c-format
msgid "ST_Polygon"
msgstr ""

#. Tag: refpurpose
#: reference_constructor.xml:670
#, no-c-format
msgid "Creates a Polygon from a LineString with a specified SRID."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:675
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_Polygon</function></funcdef> "
"<paramdef><type>geometry </type> <parameter>lineString</parameter></"
"paramdef> <paramdef><type>integer </type> <parameter>srid</parameter></"
"paramdef>"
msgstr ""

#. Tag: para
#: reference_constructor.xml:686
#, no-c-format
msgid ""
"Returns a polygon built from the given LineString and sets the spatial "
"reference system from the <varname>srid</varname>."
msgstr ""

#. Tag: para
#: reference_constructor.xml:689
#, no-c-format
msgid ""
"ST_Polygon is similar to <xref linkend=\"ST_MakePolygon\"/> Variant 1 with "
"the addition of setting the SRID."
msgstr ""

#. Tag: para
#: reference_constructor.xml:691
#, no-c-format
msgid ""
"To create polygons with holes use <xref linkend=\"ST_MakePolygon\"/> Variant "
"2 and then <xref linkend=\"ST_SetSRID\"/>."
msgstr ""

#. Tag: para
#: reference_constructor.xml:699
#, no-c-format
msgid "&sfs_compliant;"
msgstr "&sfs_compliant;"

#. Tag: para
#: reference_constructor.xml:700
#, no-c-format
msgid "&sqlmm_compliant; SQL-MM 3: 8.3.2"
msgstr ""

#. Tag: para
#: reference_constructor.xml:708
#, no-c-format
msgid "Create a 2D polygon."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:709
#, no-c-format
msgid ""
"SELECT ST_AsText( ST_Polygon('LINESTRING(75 29, 77 29, 77 29, 75 29)'::"
"geometry, 4326) );\n"
"\n"
"-- result --\n"
"POLYGON((75 29, 77 29, 77 29, 75 29))"
msgstr ""

#. Tag: para
#: reference_constructor.xml:710
#, no-c-format
msgid "Create a 3D polygon."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:711
#, no-c-format
msgid ""
"SELECT ST_AsEWKT( ST_Polygon( ST_GeomFromEWKT('LINESTRING(75 29 1, 77 29 2, "
"77 29 3, 75 29 1)'), 4326) );\n"
"\n"
"-- result --\n"
"SRID=4326;POLYGON((75 29 1, 77 29 2, 77 29 3, 75 29 1))"
msgstr ""

#. Tag: para
#: reference_constructor.xml:718
#, no-c-format
msgid ""
", <xref linkend=\"ST_AsText\"/>, <xref linkend=\"ST_GeomFromEWKT\"/>, <xref "
"linkend=\"ST_GeomFromText\"/>, <xref linkend=\"ST_LineMerge\"/>, <xref "
"linkend=\"ST_MakePolygon\"/>"
msgstr ""

#. Tag: refname
#: reference_constructor.xml:725
#, no-c-format
msgid "ST_TileEnvelope"
msgstr ""

#. Tag: refpurpose
#: reference_constructor.xml:726
#, no-c-format
msgid ""
"Creates a rectangular Polygon in <ulink url=\"https://en.wikipedia.org/wiki/"
"Web_Mercator_projection\">Web Mercator</ulink> (SRID:3857) using the <ulink "
"url=\"https://en.wikipedia.org/wiki/Tiled_web_map\">XYZ tile system</ulink>."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:731
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_TileEnvelope</function></funcdef> "
"<paramdef><type>integer</type> <parameter>tileZoom</parameter></paramdef> "
"<paramdef><type>integer</type> <parameter>tileX</parameter></paramdef> "
"<paramdef><type>integer</type> <parameter>tileY</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>geometry</type> <parameter>bounds=SRID=3857;"
"LINESTRING(-20037508.342789 -20037508.342789,20037508.342789 "
"20037508.342789)</parameter></paramdef> <paramdef choice=\"opt"
"\"><type>float</type> <parameter>margin=0.0</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_constructor.xml:745
#, no-c-format
msgid ""
"Creates a rectangular Polygon in <ulink url=\"https://en.wikipedia.org/wiki/"
"Web_Mercator_projection\">Web Mercator</ulink> (SRID:3857) using the <ulink "
"url=\"https://en.wikipedia.org/wiki/Tiled_web_map\">XYZ tile system</ulink>. "
"By default, the bounds are the in EPSG:3857 using the standard range of the "
"Web Mercator system (-20037508.342789, 20037508.342789). The optional bounds "
"parameter can be used to generate envelopes for any tiling scheme: provide a "
"geometry that has the SRID and extent of the initial \"zoom level zero\" "
"square within which the tile system is to be inscribed."
msgstr ""

#. Tag: para
#: reference_constructor.xml:747
#, no-c-format
msgid ""
"The optional margin parameter can be used to grow a tile by the given "
"percentage, e.g. margin=0.125 grows the tile by 12.5%, which is equivalent "
"to buffer=512 when extent is 4096, as used in <xref linkend=\"ST_AsMVTGeom\"/"
">. This is useful to create a tile buffer -- to include data lying outside "
"of the tile's visible area, but whose existence affects current tile's "
"rendering. For example, a city name (a geopoint) could be near an edge of a "
"tile, but the text would need to render on two tiles, even though the "
"geopoint is located in the visible area of just one tile. Using an expanded "
"tile in a search would include the city geopoint for both tiles. Use "
"negative value to shrink the tile instead. Values less than -0.5 are "
"prohibited because that would eliminate the tile completely. Do not use "
"margin with ST_AsMVTGeom(). See example in <xref linkend=\"ST_AsMVT\"/>."
msgstr ""

#. Tag: para
#: reference_constructor.xml:749
#, no-c-format
msgid "Enhanced: 3.1.0 Added margin parameter."
msgstr ""

#. Tag: para
#: reference_constructor.xml:750
#, no-c-format
msgid "Availability: 3.0.0"
msgstr ""

#. Tag: title
#: reference_constructor.xml:754
#, no-c-format
msgid "Example: Building a tile envelope"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:755
#, no-c-format
msgid ""
"SELECT ST_AsText( ST_TileEnvelope(2, 1, 1) );\n"
"\n"
" st_astext\n"
"------------------------------\n"
" POLYGON((-10018754.1713945 0,-10018754.1713945 10018754.1713945,0 "
"10018754.1713945,0 0,-10018754.1713945 0))\n"
"\n"
"SELECT ST_AsText( ST_TileEnvelope(3, 1, 1, ST_MakeEnvelope(-180, -90, 180, "
"90, 4326) ) );\n"
"\n"
"                      st_astext\n"
"------------------------------------------------------\n"
" POLYGON((-135 45,-135 67.5,-90 67.5,-90 45,-135 45))"
msgstr ""

#. Tag: refname
#: reference_constructor.xml:767
#, no-c-format
msgid "ST_HexagonGrid"
msgstr ""

#. Tag: refpurpose
#: reference_constructor.xml:768
#, no-c-format
msgid ""
"Returns a set of hexagons and cell indices that completely cover the bounds "
"of the geometry argument."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:773
#, no-c-format
msgid ""
"<funcdef>setof record <function>ST_HexagonGrid</function></funcdef> "
"<paramdef><type>float8</type> <parameter>size</parameter></paramdef> "
"<paramdef><type>geometry</type> <parameter>bounds</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_constructor.xml:784
#, no-c-format
msgid ""
"Starts with the concept of a hexagon tiling of the plane. (Not a hexagon "
"tiling of the globe, this is not the <ulink url=\"https://github.com/uber/"
"h3\">H3</ulink> tiling scheme.) For a given planar SRS, and a given edge "
"size, starting at the origin of the SRS, there is one unique hexagonal "
"tiling of the plane, Tiling(SRS, Size). This function answers the question: "
"what hexagons in a given Tiling(SRS, Size) overlap with a given bounds."
msgstr ""

#. Tag: para
#: reference_constructor.xml:796
#, no-c-format
msgid ""
"The SRS for the output hexagons is the SRS provided by the bounds geometry."
msgstr ""

#. Tag: para
#: reference_constructor.xml:797
#, no-c-format
msgid ""
"Doubling or tripling the edge size of the hexagon generates a new parent "
"tiling that fits with the origin tiling. Unfortunately, it is not possible "
"to generate parent hexagon tilings that the child tiles perfectly fit inside."
msgstr ""

#. Tag: para
#: reference_constructor.xml:805 reference_constructor.xml:861
#: reference_constructor.xml:904 reference_constructor.xml:963
#, no-c-format
msgid "Availability: 3.1.0"
msgstr ""

#. Tag: title
#: reference_constructor.xml:810
#, no-c-format
msgid "Example: Counting points in hexagons"
msgstr ""

#. Tag: para
#: reference_constructor.xml:811
#, no-c-format
msgid ""
"To do a point summary against a hexagonal tiling, generate a hexagon grid "
"using the extent of the points as the bounds, then spatially join to that "
"grid."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:813
#, no-c-format
msgid ""
"SELECT COUNT(*), hexes.geom\n"
"FROM\n"
"    ST_HexagonGrid(\n"
"        10000,\n"
"        ST_SetSRID(ST_EstimatedExtent('pointtable', 'geom'), 3857)\n"
"    ) AS hexes\n"
"    INNER JOIN\n"
"    pointtable AS pts\n"
"    ON ST_Intersects(pts.geom, hexes.geom)\n"
"GROUP BY hexes.geom;"
msgstr ""

#. Tag: title
#: reference_constructor.xml:816
#, no-c-format
msgid "Example: Generating hex coverage of polygons"
msgstr ""

#. Tag: para
#: reference_constructor.xml:817
#, no-c-format
msgid ""
"If we generate a set of hexagons for each polygon boundary and filter out "
"those that do not intersect their hexagons, we end up with a tiling for each "
"polygon."
msgstr ""

#. Tag: para
#: reference_constructor.xml:823
#, no-c-format
msgid ""
"Tiling states results in a hexagon coverage of each state, and multiple "
"hexagons overlapping at the borders between states."
msgstr ""

#. Tag: para
#: reference_constructor.xml:825
#, no-c-format
msgid ""
"The LATERAL keyword is implied for set-returning functions when referring to "
"a prior table in the FROM list. So CROSS JOIN LATERAL, CROSS JOIN, or just "
"plain , are equivalent constructs for this example."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:826
#, no-c-format
msgid ""
"SELECT admin1.gid, hex.geom\n"
"FROM\n"
"    admin1\n"
"    CROSS JOIN\n"
"    ST_HexagonGrid(100000, admin1.geom) AS hex\n"
"WHERE\n"
"    adm0_a3 = 'USA'\n"
"    AND\n"
"    ST_Intersects(admin1.geom, hex.geom)"
msgstr ""

#. Tag: para
#: reference_constructor.xml:830
#, no-c-format
msgid ""
", <xref linkend=\"ST_SetSRID\"/>, <xref linkend=\"ST_SquareGrid\"/>, <xref "
"linkend=\"ST_TileEnvelope\"/>"
msgstr ""

#. Tag: refname
#: reference_constructor.xml:836
#, no-c-format
msgid "ST_Hexagon"
msgstr ""

#. Tag: refpurpose
#: reference_constructor.xml:837
#, no-c-format
msgid ""
"Returns a single hexagon, using the provided edge size and cell coordinate "
"within the hexagon grid space."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:843
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_Hexagon</function></funcdef> "
"<paramdef><type>float8</type> <parameter>size</parameter></paramdef> "
"<paramdef><type>integer</type> <parameter>cell_i</parameter></paramdef> "
"<paramdef><type>integer</type> <parameter>cell_j</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>geometry</type> <parameter>origin</"
"parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_constructor.xml:856
#, no-c-format
msgid ""
"Uses the same hexagon tiling concept as <xref linkend=\"ST_HexagonGrid\"/>, "
"but generates just one hexagon at the desired cell coordinate. Optionally, "
"can adjust origin coordinate of the tiling, the default origin is at 0,0."
msgstr ""

#. Tag: para
#: reference_constructor.xml:859
#, no-c-format
msgid ""
"Hexagons are generated with no SRID set, so use <xref linkend=\"ST_SetSRID\"/"
"> to set the SRID to the one you expect."
msgstr ""

#. Tag: title
#: reference_constructor.xml:865
#, no-c-format
msgid "Example: Creating a hexagon at the origin"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:866
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_SetSRID(ST_Hexagon(1.0, 0, 0), 3857));\n"
"\n"
"POLYGON((-1 0,-0.5\n"
"         -0.866025403784439,0.5\n"
"         -0.866025403784439,1\n"
"         0,0.5\n"
"         0.866025403784439,-0.5\n"
"         0.866025403784439,-1 0))"
msgstr ""

#. Tag: para
#: reference_constructor.xml:870
#, no-c-format
msgid ", <xref linkend=\"ST_HexagonGrid\"/>, <xref linkend=\"ST_Square\"/>"
msgstr ""

#. Tag: refname
#: reference_constructor.xml:876
#, no-c-format
msgid "ST_SquareGrid"
msgstr ""

#. Tag: refpurpose
#: reference_constructor.xml:877
#, no-c-format
msgid ""
"Returns a set of grid squares and cell indices that completely cover the "
"bounds of the geometry argument."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:882
#, no-c-format
msgid ""
"<funcdef>setof record <function>ST_SquareGrid</function></funcdef> "
"<paramdef><type>float8</type> <parameter>size</parameter></paramdef> "
"<paramdef><type>geometry</type> <parameter>bounds</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_constructor.xml:893
#, no-c-format
msgid ""
"Starts with the concept of a square tiling of the plane. For a given planar "
"SRS, and a given edge size, starting at the origin of the SRS, there is one "
"unique square tiling of the plane, Tiling(SRS, Size). This function answers "
"the question: what grids in a given Tiling(SRS, Size) overlap with a given "
"bounds."
msgstr ""

#. Tag: para
#: reference_constructor.xml:899
#, no-c-format
msgid ""
"The SRS for the output squares is the SRS provided by the bounds geometry."
msgstr ""

#. Tag: para
#: reference_constructor.xml:900
#, no-c-format
msgid ""
"Doubling or edge size of the square generates a new parent tiling that "
"perfectly fits with the original tiling. Standard web map tilings in "
"mercator are just powers-of-two square grids in the mercator plane."
msgstr ""

#. Tag: title
#: reference_constructor.xml:909
#, no-c-format
msgid "Example: Generating a 1 degree grid for a country"
msgstr ""

#. Tag: para
#: reference_constructor.xml:910
#, no-c-format
msgid ""
"The grid will fill the whole bounds of the country, so if you want just "
"squares that touch the country you will have to filter afterwards with "
"ST_Intersects."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:912
#, no-c-format
msgid ""
"WITH grid AS (\n"
"SELECT (ST_SquareGrid(1, ST_Transform(geom,4326))).*\n"
"FROM admin0 WHERE name = 'Canada'\n"
")\n"
"  SELEcT ST_AsText(geom)\n"
"  FROM grid"
msgstr ""

#. Tag: title
#: reference_constructor.xml:916
#, no-c-format
msgid "Example: Counting points in squares (using single chopped grid)"
msgstr ""

#. Tag: para
#: reference_constructor.xml:917
#, no-c-format
msgid ""
"To do a point summary against a square tiling, generate a square grid using "
"the extent of the points as the bounds, then spatially join to that grid. "
"Note the estimated extent might be off from actual extent, so be cautious "
"and at very least make sure you've analyzed your table."
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:919
#, no-c-format
msgid ""
"SELECT COUNT(*), squares.geom\n"
"    FROM\n"
"    pointtable AS pts\n"
"    INNER JOIN\n"
"    ST_SquareGrid(\n"
"        1000,\n"
"        ST_SetSRID(ST_EstimatedExtent('pointtable', 'geom'), 3857)\n"
"    ) AS squares\n"
"    ON ST_Intersects(pts.geom, squares.geom)\n"
"    GROUP BY squares.geom"
msgstr ""

#. Tag: title
#: reference_constructor.xml:923
#, no-c-format
msgid "Example: Counting points in squares using set of grid per point"
msgstr ""

#. Tag: para
#: reference_constructor.xml:924
#, no-c-format
msgid ""
"This yields the same result as the first example but will be slower for a "
"large number of points"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:925
#, no-c-format
msgid ""
"SELECT COUNT(*), squares.geom\n"
"    FROM\n"
"    pointtable AS pts\n"
"    INNER JOIN\n"
"    ST_SquareGrid(\n"
"        1000,\n"
"       pts.geom\n"
"    ) AS squares\n"
"    ON ST_Intersects(pts.geom, squares.geom)\n"
"    GROUP BY squares.geom"
msgstr ""

#. Tag: para
#: reference_constructor.xml:930
#, no-c-format
msgid ""
", <xref linkend=\"ST_HexagonGrid\"/> , <xref linkend=\"ST_EstimatedExtent\"/"
"> , <xref linkend=\"ST_SetSRID\"/>"
msgstr ""

#. Tag: refname
#: reference_constructor.xml:938
#, no-c-format
msgid "ST_Square"
msgstr ""

#. Tag: refpurpose
#: reference_constructor.xml:939
#, no-c-format
msgid ""
"Returns a single square, using the provided edge size and cell coordinate "
"within the square grid space."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:945
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_Square</function></funcdef> "
"<paramdef><type>float8</type> <parameter>size</parameter></paramdef> "
"<paramdef><type>integer</type> <parameter>cell_i</parameter></paramdef> "
"<paramdef><type>integer</type> <parameter>cell_j</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>geometry</type> <parameter>origin</"
"parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_constructor.xml:958
#, no-c-format
msgid ""
"Uses the same square tiling concept as <xref linkend=\"ST_SquareGrid\"/>, "
"but generates just one square at the desired cell coordinate. Optionally, "
"can adjust origin coordinate of the tiling, the default origin is at 0,0."
msgstr ""

#. Tag: para
#: reference_constructor.xml:961
#, no-c-format
msgid ""
"Squares are generated with no SRID set, so use <xref linkend=\"ST_SetSRID\"/"
"> to set the SRID to the one you expect."
msgstr ""

#. Tag: title
#: reference_constructor.xml:967
#, no-c-format
msgid "Example: Creating a square at the origin"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:968
#, no-c-format
msgid ""
"SELECT ST_AsText(ST_SetSRID(ST_Square(1.0, 0, 0), 3857));\n"
"\n"
" POLYGON((0 0,0 1,1 1,1 0,0 0))"
msgstr ""

#. Tag: para
#: reference_constructor.xml:972
#, no-c-format
msgid ", <xref linkend=\"ST_SquareGrid\"/>, <xref linkend=\"ST_Hexagon\"/>"
msgstr ""

#. Tag: refname
#: reference_constructor.xml:980
#, no-c-format
msgid "ST_Letters"
msgstr ""

#. Tag: refpurpose
#: reference_constructor.xml:981
#, no-c-format
msgid ""
"Returns the input letters rendered as geometry with a default start position "
"at the origin and default text height of 100."
msgstr ""

#. Tag: funcprototype
#: reference_constructor.xml:985
#, no-c-format
msgid ""
"<funcdef>geometry <function>ST_Letters</function></funcdef> "
"<paramdef><type>text</type> <parameter> letters</parameter></paramdef> "
"<paramdef choice=\"opt\"><type>json</type> <parameter> font</parameter></"
"paramdef>"
msgstr ""

#. Tag: para
#: reference_constructor.xml:996
#, no-c-format
msgid ""
"Uses a built-in font to render out a string as a multipolygon geometry. The "
"default text height is 100.0, the distance from the bottom of a descender to "
"the top of a capital. The default start position places the start of the "
"baseline at the origin. Over-riding the font involves passing in a json map, "
"with a character as the key, and base64 encoded TWKB for the font shape, "
"with the fonts having a height of 1000 units from the bottom of the "
"descenders to the tops of the capitals."
msgstr ""

#. Tag: para
#: reference_constructor.xml:999
#, no-c-format
msgid ""
"The text is generated at the origin by default, so to reposition and resize "
"the text, first apply the <code>ST_Scale</code> function and then apply the "
"<code>ST_Translate</code> function."
msgstr ""

#. Tag: para
#: reference_constructor.xml:1001
#, no-c-format
msgid "Availability: 3.3.0"
msgstr ""

#. Tag: title
#: reference_constructor.xml:1005
#, no-c-format
msgid "Example: Generating the word 'Yo'"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:1006
#, no-c-format
msgid "SELECT ST_AsText(ST_Letters('Yo'), 1);"
msgstr ""

#. Tag: para
#: reference_constructor.xml:1012
#, no-c-format
msgid "Letters generated by ST_Letters"
msgstr ""

#. Tag: title
#: reference_constructor.xml:1017
#, no-c-format
msgid "Example: Scaling and moving words"
msgstr ""

#. Tag: programlisting
#: reference_constructor.xml:1018
#, no-c-format
msgid "SELECT ST_Translate(ST_Scale(ST_Letters('Yo'), 10, 10), 100,100);"
msgstr ""

#. Tag: para
#: reference_constructor.xml:1022
#, no-c-format
msgid ", <xref linkend=\"ST_Scale\"/>, <xref linkend=\"ST_Translate\"/>"
msgstr ""
