# SOME DESCRIPTIVE TITLE.
#
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: PostGIS\n"
"Report-Msgid-Bugs-To: https://bugs.kde.org\n"
"POT-Creation-Date: 2021-09-11 01:55+0000\n"
"PO-Revision-Date: 2021-09-11 04:09+0000\n"
"Last-Translator: Regina Obe\n"
"Language-Team: Russian (http://www.transifex.com/postgis/postgis/language/"
"ru/)\n"
"Language: ru\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=4; plural=(n%10==1 && n%100!=11 ? 0 : n%10>=2 && n"
"%10<=4 && (n%100<12 || n%100>14) ? 1 : n%10==0 || (n%10>=5 && n%10<=9) || (n"
"%100>=11 && n%100<=14)? 2 : 3);\n"

#. Tag: para
#: reference_management.xml:5
#, no-c-format
msgid "These functions assist in defining tables containing geometry columns."
msgstr ""

#. Tag: title
#: reference_management.xml:10
#, no-c-format
msgid "Table Management Functions"
msgstr ""

#. Tag: refname
#: reference_management.xml:14
#, no-c-format
msgid "AddGeometryColumn"
msgstr ""

#. Tag: refpurpose
#: reference_management.xml:16
#, no-c-format
msgid "Adds a geometry column to an existing table."
msgstr ""

#. Tag: funcsynopsis
#: reference_management.xml:20
#, no-c-format
msgid ""
"<funcprototype> <funcdef>text <function>AddGeometryColumn</function></"
"funcdef> <paramdef><type>varchar </type> <parameter>table_name</parameter></"
"paramdef> <paramdef><type>varchar </type> <parameter>column_name</"
"parameter></paramdef> <paramdef><type>integer </type> <parameter>srid</"
"parameter></paramdef> <paramdef><type>varchar </type> <parameter>type</"
"parameter></paramdef> <paramdef><type>integer </type> <parameter>dimension</"
"parameter></paramdef> <paramdef choice=\"opt\"><type>boolean </type> "
"<parameter>use_typmod=true</parameter></paramdef> </funcprototype> "
"<funcprototype> <funcdef>text <function>AddGeometryColumn</function></"
"funcdef> <paramdef><type>varchar </type> <parameter>schema_name</parameter></"
"paramdef> <paramdef><type>varchar </type> <parameter>table_name</parameter></"
"paramdef> <paramdef><type>varchar </type> <parameter>column_name</"
"parameter></paramdef> <paramdef><type>integer </type> <parameter>srid</"
"parameter></paramdef> <paramdef><type>varchar </type> <parameter>type</"
"parameter></paramdef> <paramdef><type>integer </type> <parameter>dimension</"
"parameter></paramdef> <paramdef choice=\"opt\"><type>boolean </type> "
"<parameter>use_typmod=true</parameter></paramdef> </funcprototype> "
"<funcprototype> <funcdef>text <function>AddGeometryColumn</function></"
"funcdef> <paramdef><type>varchar </type> <parameter>catalog_name</"
"parameter></paramdef> <paramdef><type>varchar </type> "
"<parameter>schema_name</parameter></paramdef> <paramdef><type>varchar </"
"type> <parameter>table_name</parameter></paramdef> <paramdef><type>varchar </"
"type> <parameter>column_name</parameter></paramdef> <paramdef><type>integer "
"</type> <parameter>srid</parameter></paramdef> <paramdef><type>varchar </"
"type> <parameter>type</parameter></paramdef> <paramdef><type>integer </type> "
"<parameter>dimension</parameter></paramdef> <paramdef choice=\"opt"
"\"><type>boolean </type> <parameter>use_typmod=true</parameter></paramdef> </"
"funcprototype>"
msgstr ""

#. Tag: title
#: reference_management.xml:97 reference_management.xml:193
#: reference_management.xml:259 reference_management.xml:302
#: reference_management.xml:350 reference_management.xml:490
#, no-c-format
msgid "Description"
msgstr ""

#. Tag: para
#: reference_management.xml:99
#, no-c-format
msgid ""
"Adds a geometry column to an existing table of attributes. The "
"<varname>schema_name</varname> is the name of the table schema. The "
"<varname>srid</varname> must be an integer value reference to an entry in "
"the SPATIAL_REF_SYS table. The <varname>type</varname> must be a string "
"corresponding to the geometry type, eg, 'POLYGON' or 'MULTILINESTRING' . An "
"error is thrown if the schemaname doesn't exist (or not visible in the "
"current search_path) or the specified SRID, geometry type, or dimension is "
"invalid."
msgstr ""

#. Tag: para
#: reference_management.xml:109
#, no-c-format
msgid ""
"Changed: 2.0.0 This function no longer updates geometry_columns since "
"geometry_columns is a view that reads from system catalogs. It by default "
"also does not create constraints, but instead uses the built in type "
"modifier behavior of PostgreSQL. So for example building a wgs84 POINT "
"column with this function is now equivalent to: <code>ALTER TABLE some_table "
"ADD COLUMN geom geometry(Point,4326);</code>"
msgstr ""

#. Tag: para
#: reference_management.xml:112
#, no-c-format
msgid ""
"Changed: 2.0.0 If you require the old behavior of constraints use the "
"default <varname>use_typmod</varname>, but set it to false."
msgstr ""

#. Tag: para
#: reference_management.xml:116
#, no-c-format
msgid ""
"Changed: 2.0.0 Views can no longer be manually registered in "
"geometry_columns, however views built against geometry typmod tables "
"geometries and used without wrapper functions will register themselves "
"correctly because they inherit the typmod behavior of their parent table "
"column. Views that use geometry functions that output other geometries will "
"need to be cast to typmod geometries for these view geometry columns to be "
"registered correctly in geometry_columns. Refer to <xref linkend="
"\"Manual_Register_Spatial_Column\"/>."
msgstr ""

#. Tag: para
#: reference_management.xml:122 reference_management.xml:199
#, no-c-format
msgid "&sfs_compliant;"
msgstr ""

#. Tag: para
#: reference_management.xml:123 reference_management.xml:200
#: reference_management.xml:498
#, no-c-format
msgid "&Z_support;"
msgstr ""

#. Tag: para
#: reference_management.xml:124 reference_management.xml:201
#: reference_management.xml:499
#, no-c-format
msgid "&curve_support;"
msgstr ""

#. Tag: para
#: reference_management.xml:125
#, no-c-format
msgid ""
"Enhanced: 2.0.0 use_typmod argument introduced. Defaults to creating typmod "
"geometry column instead of constraint-based."
msgstr ""

#. Tag: title
#: reference_management.xml:129 reference_management.xml:208
#: reference_management.xml:272 reference_management.xml:311
#: reference_management.xml:411 reference_management.xml:502
#, no-c-format
msgid "Examples"
msgstr ""

#. Tag: programlisting
#: reference_management.xml:131
#, no-c-format
msgid ""
"-- Create schema to hold data\n"
"CREATE SCHEMA my_schema;\n"
"-- Create a new simple PostgreSQL table\n"
"CREATE TABLE my_schema.my_spatial_table (id serial);\n"
"\n"
"-- Describing the table shows a simple table with a single \"id\" column.\n"
"postgis=# \\d my_schema.my_spatial_table\n"
"                                                         Table \"my_schema."
"my_spatial_table\"\n"
" Column |  Type   |                                Modifiers\n"
"--------+---------"
"+-------------------------------------------------------------------------\n"
" id     | integer | not null default nextval('my_schema."
"my_spatial_table_id_seq'::regclass)\n"
"\n"
"-- Add a spatial column to the table\n"
"SELECT AddGeometryColumn "
"('my_schema','my_spatial_table','geom',4326,'POINT',2);\n"
"\n"
"-- Add a point using the old constraint based behavior\n"
"SELECT AddGeometryColumn "
"('my_schema','my_spatial_table','geom_c',4326,'POINT',2, false);\n"
"\n"
"--Add a curvepolygon using old constraint behavior\n"
"SELECT AddGeometryColumn "
"('my_schema','my_spatial_table','geomcp_c',4326,'CURVEPOLYGON',2, false);\n"
"\n"
"-- Describe the table again reveals the addition of a new geometry columns.\n"
"\\d my_schema.my_spatial_table\n"
"                            addgeometrycolumn\n"
"-------------------------------------------------------------------------\n"
" my_schema.my_spatial_table.geomcp_c SRID:4326 TYPE:CURVEPOLYGON DIMS:2\n"
"(1 row)\n"
"\n"
"                                    Table \"my_schema.my_spatial_table\"\n"
"  Column  |         Type         |                                Modifiers\n"
"----------+----------------------"
"+-------------------------------------------------------------------------\n"
" id       | integer              | not null default nextval('my_schema."
"my_spatial_table_id_seq'::regclass)\n"
" geom     | geometry(Point,4326) |\n"
" geom_c   | geometry             |\n"
" geomcp_c | geometry             |\n"
"Check constraints:\n"
"    \"enforce_dims_geom_c\" CHECK (st_ndims(geom_c) = 2)\n"
"    \"enforce_dims_geomcp_c\" CHECK (st_ndims(geomcp_c) = 2)\n"
"    \"enforce_geotype_geom_c\" CHECK (geometrytype(geom_c) = 'POINT'::text "
"OR geom_c IS NULL)\n"
"    \"enforce_geotype_geomcp_c\" CHECK (geometrytype(geomcp_c) = "
"'CURVEPOLYGON'::text OR geomcp_c IS NULL)\n"
"    \"enforce_srid_geom_c\" CHECK (st_srid(geom_c) = 4326)\n"
"    \"enforce_srid_geomcp_c\" CHECK (st_srid(geomcp_c) = 4326)\n"
"\n"
"-- geometry_columns view also registers the new columns --\n"
"SELECT f_geometry_column As col_name, type, srid, coord_dimension As ndims\n"
"    FROM geometry_columns\n"
"    WHERE f_table_name = 'my_spatial_table' AND f_table_schema = "
"'my_schema';\n"
"\n"
" col_name |     type     | srid | ndims\n"
"----------+--------------+------+-------\n"
" geom     | Point        | 4326 |     2\n"
" geom_c   | Point        | 4326 |     2\n"
" geomcp_c | CurvePolygon | 4326 |     2"
msgstr ""

#. Tag: title
#: reference_management.xml:135 reference_management.xml:213
#: reference_management.xml:277 reference_management.xml:318
#: reference_management.xml:518
#, no-c-format
msgid "See Also"
msgstr ""

#. Tag: para
#: reference_management.xml:137
#, no-c-format
msgid ""
", <xref linkend=\"DropGeometryTable\"/>, <xref linkend=\"geometry_columns\"/"
">, <xref linkend=\"Manual_Register_Spatial_Column\"/>"
msgstr ""

#. Tag: refname
#: reference_management.xml:143
#, no-c-format
msgid "DropGeometryColumn"
msgstr ""

#. Tag: refpurpose
#: reference_management.xml:145
#, no-c-format
msgid "Removes a geometry column from a spatial table."
msgstr ""

#. Tag: funcsynopsis
#: reference_management.xml:150
#, no-c-format
msgid ""
"<funcprototype> <funcdef>text <function>DropGeometryColumn</function></"
"funcdef> <paramdef><type>varchar </type> <parameter>table_name</parameter></"
"paramdef> <paramdef><type>varchar </type> <parameter>column_name</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>text "
"<function>DropGeometryColumn</function></funcdef> <paramdef><type>varchar </"
"type> <parameter>schema_name</parameter></paramdef> <paramdef><type>varchar "
"</type> <parameter>table_name</parameter></paramdef> <paramdef><type>varchar "
"</type> <parameter>column_name</parameter></paramdef> </funcprototype> "
"<funcprototype> <funcdef>text <function>DropGeometryColumn</function></"
"funcdef> <paramdef><type>varchar </type> <parameter>catalog_name</"
"parameter></paramdef> <paramdef><type>varchar </type> "
"<parameter>schema_name</parameter></paramdef> <paramdef><type>varchar </"
"type> <parameter>table_name</parameter></paramdef> <paramdef><type>varchar </"
"type> <parameter>column_name</parameter></paramdef> </funcprototype>"
msgstr ""

#. Tag: para
#: reference_management.xml:195
#, no-c-format
msgid ""
"Removes a geometry column from a spatial table. Note that schema_name will "
"need to match the f_table_schema field of the table's row in the "
"geometry_columns table."
msgstr ""

#. Tag: para
#: reference_management.xml:203
#, no-c-format
msgid ""
"Changed: 2.0.0 This function is provided for backward compatibility. Now "
"that since geometry_columns is now a view against the system catalogs, you "
"can drop a geometry column like any other table column using <code>ALTER "
"TABLE</code>"
msgstr ""

#. Tag: programlisting
#: reference_management.xml:210
#, no-c-format
msgid ""
"SELECT DropGeometryColumn ('my_schema','my_spatial_table','geom');\n"
"                        ----RESULT output ---\n"
"                                          dropgeometrycolumn\n"
"------------------------------------------------------\n"
" my_schema.my_spatial_table.geom effectively removed.\n"
"\n"
"-- In PostGIS 2.0+ the above is also equivalent to the standard\n"
"-- the standard alter table.  Both will deregister from geometry_columns\n"
"ALTER TABLE my_schema.my_spatial_table DROP column geom;"
msgstr ""

#. Tag: para
#: reference_management.xml:215
#, no-c-format
msgid ""
", <xref linkend=\"DropGeometryTable\"/>, <xref linkend=\"geometry_columns\"/>"
msgstr ""

#. Tag: refname
#: reference_management.xml:221
#, no-c-format
msgid "DropGeometryTable"
msgstr ""

#. Tag: refpurpose
#: reference_management.xml:223
#, no-c-format
msgid "Drops a table and all its references in geometry_columns."
msgstr ""

#. Tag: funcsynopsis
#: reference_management.xml:228
#, no-c-format
msgid ""
"<funcprototype> <funcdef>boolean <function>DropGeometryTable</function></"
"funcdef> <paramdef><type>varchar </type> <parameter>table_name</parameter></"
"paramdef> </funcprototype> <funcprototype> <funcdef>boolean "
"<function>DropGeometryTable</function></funcdef> <paramdef><type>varchar </"
"type> <parameter>schema_name</parameter></paramdef> <paramdef><type>varchar "
"</type> <parameter>table_name</parameter></paramdef> </funcprototype> "
"<funcprototype> <funcdef>boolean <function>DropGeometryTable</function></"
"funcdef> <paramdef><type>varchar </type> <parameter>catalog_name</"
"parameter></paramdef> <paramdef><type>varchar </type> "
"<parameter>schema_name</parameter></paramdef> <paramdef><type>varchar </"
"type> <parameter>table_name</parameter></paramdef> </funcprototype>"
msgstr ""

#. Tag: para
#: reference_management.xml:261
#, no-c-format
msgid ""
"Drops a table and all its references in geometry_columns. Note: uses "
"current_schema() on schema-aware pgsql installations if schema is not "
"provided."
msgstr ""

#. Tag: para
#: reference_management.xml:266
#, no-c-format
msgid ""
"Changed: 2.0.0 This function is provided for backward compatibility. Now "
"that since geometry_columns is now a view against the system catalogs, you "
"can drop a table with geometry columns like any other table using <code>DROP "
"TABLE</code>"
msgstr ""

#. Tag: programlisting
#: reference_management.xml:274
#, no-c-format
msgid ""
"SELECT DropGeometryTable ('my_schema','my_spatial_table');\n"
"----RESULT output ---\n"
"my_schema.my_spatial_table dropped.\n"
"\n"
"-- The above is now equivalent to --\n"
"DROP TABLE my_schema.my_spatial_table;"
msgstr ""

#. Tag: para
#: reference_management.xml:279
#, no-c-format
msgid ""
", <xref linkend=\"DropGeometryColumn\"/>, <xref linkend=\"geometry_columns\"/"
">"
msgstr ""

#. Tag: refname
#: reference_management.xml:285
#, no-c-format
msgid "Find_SRID"
msgstr ""

#. Tag: refpurpose
#: reference_management.xml:287
#, no-c-format
msgid "Returns the SRID defined for a geometry column."
msgstr ""

#. Tag: funcprototype
#: reference_management.xml:292
#, no-c-format
msgid ""
"<funcdef>integer <function>Find_SRID</function></funcdef> "
"<paramdef><type>varchar </type> <parameter>a_schema_name</parameter></"
"paramdef> <paramdef><type>varchar </type> <parameter>a_table_name</"
"parameter></paramdef> <paramdef><type>varchar </type> "
"<parameter>a_geomfield_name</parameter></paramdef>"
msgstr ""

#. Tag: para
#: reference_management.xml:304
#, no-c-format
msgid ""
"Returns the integer SRID of the specified geometry column by searching "
"through the GEOMETRY_COLUMNS table. If the geometry column has not been "
"properly added (e.g. with the <xref linkend=\"AddGeometryColumn\"/> "
"function), this function will not work."
msgstr ""

#. Tag: programlisting
#: reference_management.xml:313
#, no-c-format
msgid ""
"SELECT Find_SRID('public', 'tiger_us_state_2007', 'geom_4269');\n"
"find_srid\n"
"----------\n"
"4269"
msgstr ""

#. Tag: refname
#: reference_management.xml:327
#, no-c-format
msgid "Populate_Geometry_Columns"
msgstr ""

#. Tag: refpurpose
#: reference_management.xml:329
#, no-c-format
msgid ""
"Ensures geometry columns are defined with type modifiers or have appropriate "
"spatial constraints."
msgstr ""

#. Tag: funcsynopsis
#: reference_management.xml:333
#, no-c-format
msgid ""
"<funcprototype> <funcdef>text <function>Populate_Geometry_Columns</"
"function></funcdef> <paramdef><type>boolean </type> "
"<parameter>use_typmod=true</parameter></paramdef> </funcprototype> "
"<funcprototype> <funcdef>int <function>Populate_Geometry_Columns</function></"
"funcdef> <paramdef><type>oid</type> <parameter>relation_oid</parameter></"
"paramdef> <paramdef><type>boolean </type> <parameter>use_typmod=true</"
"parameter></paramdef> </funcprototype>"
msgstr ""

#. Tag: para
#: reference_management.xml:352
#, no-c-format
msgid ""
"Ensures geometry columns have appropriate type modifiers or spatial "
"constraints to ensure they are registered correctly in the "
"<varname>geometry_columns</varname> view. By default will convert all "
"geometry columns with no type modifier to ones with type modifiers."
msgstr ""

#. Tag: para
#: reference_management.xml:357
#, no-c-format
msgid ""
"For backwards compatibility and for spatial needs such as table inheritance "
"where each child table may have different geometry type, the old check "
"constraint behavior is still supported. If you need the old behavior, you "
"need to pass in the new optional argument as false "
"<varname>use_typmod=false</varname>. When this is done geometry columns will "
"be created with no type modifiers but will have 3 constraints defined. In "
"particular, this means that every geometry column belonging to a table has "
"at least three constraints:"
msgstr ""

#. Tag: para
#: reference_management.xml:365
#, no-c-format
msgid ""
"<varname>enforce_dims_geom</varname> - ensures every geometry has the same "
"dimension (see <xref linkend=\"ST_NDims\"/>)"
msgstr ""

#. Tag: para
#: reference_management.xml:371
#, no-c-format
msgid ""
"<varname>enforce_geotype_geom</varname> - ensures every geometry is of the "
"same type (see <xref linkend=\"GeometryType\"/>)"
msgstr ""

#. Tag: para
#: reference_management.xml:377
#, no-c-format
msgid ""
"<varname>enforce_srid_geom</varname> - ensures every geometry is in the same "
"projection (see <xref linkend=\"ST_SRID\"/>)"
msgstr ""

#. Tag: para
#: reference_management.xml:383
#, no-c-format
msgid ""
"If a table <varname>oid</varname> is provided, this function tries to "
"determine the srid, dimension, and geometry type of all geometry columns in "
"the table, adding constraints as necessary. If successful, an appropriate "
"row is inserted into the geometry_columns table, otherwise, the exception is "
"caught and an error notice is raised describing the problem."
msgstr ""

#. Tag: para
#: reference_management.xml:390
#, no-c-format
msgid ""
"If the <varname>oid</varname> of a view is provided, as with a table oid, "
"this function tries to determine the srid, dimension, and type of all the "
"geometries in the view, inserting appropriate entries into the "
"<varname>geometry_columns</varname> table, but nothing is done to enforce "
"constraints."
msgstr ""

#. Tag: para
#: reference_management.xml:396
#, no-c-format
msgid ""
"The parameterless variant is a simple wrapper for the parameterized variant "
"that first truncates and repopulates the geometry_columns table for every "
"spatial table and view in the database, adding spatial constraints to tables "
"where appropriate. It returns a summary of the number of geometry columns "
"detected in the database and the number that were inserted into the "
"<varname>geometry_columns</varname> table. The parameterized version simply "
"returns the number of rows inserted into the <varname>geometry_columns</"
"varname> table."
msgstr ""

#. Tag: para
#: reference_management.xml:404
#, no-c-format
msgid "Availability: 1.4.0"
msgstr ""

#. Tag: para
#: reference_management.xml:405
#, no-c-format
msgid ""
"Changed: 2.0.0 By default, now uses type modifiers instead of check "
"constraints to constrain geometry types. You can still use check constraint "
"behavior instead by using the new <varname>use_typmod</varname> and setting "
"it to false."
msgstr ""

#. Tag: para
#: reference_management.xml:407
#, no-c-format
msgid ""
"Enhanced: 2.0.0 <varname>use_typmod</varname> optional argument was "
"introduced that allows controlling if columns are created with typmodifiers "
"or with check constraints."
msgstr ""

#. Tag: programlisting
#: reference_management.xml:413
#, no-c-format
msgid ""
"CREATE TABLE public.myspatial_table(gid serial, geom geometry);\n"
"INSERT INTO myspatial_table(geom) VALUES(ST_GeomFromText('LINESTRING(1 2, 3 "
"4)',4326) );\n"
"-- This will now use typ modifiers.  For this to work, there must exist "
"data\n"
"SELECT Populate_Geometry_Columns('public.myspatial_table'::regclass);\n"
"\n"
"populate_geometry_columns\n"
"--------------------------\n"
"                        1\n"
"\n"
"\n"
"\\d myspatial_table\n"
"\n"
"                                   Table \"public.myspatial_table\"\n"
" Column |           Type            |                           Modifiers\n"
"--------+---------------------------"
"+---------------------------------------------------------------\n"
" gid    | integer                   | not null default "
"nextval('myspatial_table_gid_seq'::regclass)\n"
" geom   | geometry(LineString,4326) |"
msgstr ""

#. Tag: programlisting
#: reference_management.xml:415
#, no-c-format
msgid ""
"-- This will change the geometry columns to use constraints if they are not "
"typmod or have constraints already.\n"
"--For this to work, there must exist data\n"
"CREATE TABLE public.myspatial_table_cs(gid serial, geom geometry);\n"
"INSERT INTO myspatial_table_cs(geom) VALUES(ST_GeomFromText('LINESTRING(1 2, "
"3 4)',4326) );\n"
"SELECT Populate_Geometry_Columns('public.myspatial_table_cs'::regclass, "
"false);\n"
"populate_geometry_columns\n"
"--------------------------\n"
"                        1\n"
"\\d myspatial_table_cs\n"
"\n"
"                          Table \"public.myspatial_table_cs\"\n"
" Column |   Type   |                            Modifiers\n"
"--------+----------"
"+------------------------------------------------------------------\n"
" gid    | integer  | not null default nextval('myspatial_table_cs_gid_seq'::"
"regclass)\n"
" geom   | geometry |\n"
"Check constraints:\n"
"    \"enforce_dims_geom\" CHECK (st_ndims(geom) = 2)\n"
"    \"enforce_geotype_geom\" CHECK (geometrytype(geom) = 'LINESTRING'::text "
"OR geom IS NULL)\n"
"    \"enforce_srid_geom\" CHECK (st_srid(geom) = 4326)"
msgstr ""

#. Tag: refname
#: reference_management.xml:430
#, no-c-format
msgid "UpdateGeometrySRID"
msgstr ""

#. Tag: refpurpose
#: reference_management.xml:432
#, no-c-format
msgid ""
"Updates the SRID of all features in a geometry column, and the table "
"metadata."
msgstr ""

#. Tag: funcsynopsis
#: reference_management.xml:438
#, no-c-format
msgid ""
"<funcprototype> <funcdef>text <function>UpdateGeometrySRID</function></"
"funcdef> <paramdef><type>varchar </type> <parameter>table_name</parameter></"
"paramdef> <paramdef><type>varchar </type> <parameter>column_name</"
"parameter></paramdef> <paramdef><type>integer </type> <parameter>srid</"
"parameter></paramdef> </funcprototype> <funcprototype> <funcdef>text "
"<function>UpdateGeometrySRID</function></funcdef> <paramdef><type>varchar </"
"type> <parameter>schema_name</parameter></paramdef> <paramdef><type>varchar "
"</type> <parameter>table_name</parameter></paramdef> <paramdef><type>varchar "
"</type> <parameter>column_name</parameter></paramdef> "
"<paramdef><type>integer </type> <parameter>srid</parameter></paramdef> </"
"funcprototype> <funcprototype> <funcdef>text <function>UpdateGeometrySRID</"
"function></funcdef> <paramdef><type>varchar </type> <parameter>catalog_name</"
"parameter></paramdef> <paramdef><type>varchar </type> "
"<parameter>schema_name</parameter></paramdef> <paramdef><type>varchar </"
"type> <parameter>table_name</parameter></paramdef> <paramdef><type>varchar </"
"type> <parameter>column_name</parameter></paramdef> <paramdef><type>integer "
"</type> <parameter>srid</parameter></paramdef> </funcprototype>"
msgstr ""

#. Tag: para
#: reference_management.xml:492
#, no-c-format
msgid ""
"Updates the SRID of all features in a geometry column, updating constraints "
"and reference in geometry_columns. If the column was enforced by a type "
"definition, the type definition will be changed. Note: uses current_schema() "
"on schema-aware pgsql installations if schema is not provided."
msgstr ""

#. Tag: para
#: reference_management.xml:504
#, no-c-format
msgid ""
"Insert geometries into roads table with a SRID set already using <link "
"linkend=\"ST_GeomFromEWKT\">EWKT format</link>:"
msgstr ""

#. Tag: programlisting
#: reference_management.xml:505
#, no-c-format
msgid ""
"COPY roads (geom) FROM STDIN;\n"
"SRID=4326;LINESTRING(0 0, 10 10)\n"
"SRID=4326;LINESTRING(10 10, 15 0)\n"
"\\."
msgstr ""

#. Tag: para
#: reference_management.xml:507
#, no-c-format
msgid ""
"This will change the srid of the roads table to 4326 from whatever it was "
"before:"
msgstr ""

#. Tag: programlisting
#: reference_management.xml:508
#, no-c-format
msgid "SELECT UpdateGeometrySRID('roads','geom',4326);"
msgstr ""

#. Tag: para
#: reference_management.xml:510
#, no-c-format
msgid "The prior example is equivalent to this DDL statement:"
msgstr ""

#. Tag: programlisting
#: reference_management.xml:511
#, no-c-format
msgid ""
"ALTER TABLE roads\n"
"  ALTER COLUMN geom TYPE geometry(MULTILINESTRING, 4326)\n"
"    USING ST_SetSRID(geom,4326);"
msgstr ""

#. Tag: para
#: reference_management.xml:513
#, no-c-format
msgid ""
"If you got the projection wrong (or brought it in as unknown) in load and "
"you wanted to transform to web mercator all in one shot you can do this with "
"DDL but there is no equivalent PostGIS management function to do so in one "
"go."
msgstr ""

#. Tag: programlisting
#: reference_management.xml:515
#, no-c-format
msgid ""
"ALTER TABLE roads\n"
" ALTER COLUMN geom TYPE geometry(MULTILINESTRING, 3857) USING "
"ST_Transform(ST_SetSRID(geom,4326),3857) ;"
msgstr ""

#. Tag: para
#: reference_management.xml:520
#, no-c-format
msgid ""
", <xref linkend=\"ST_SetSRID\"/>, <xref linkend=\"ST_Transform\"/>, <xref "
"linkend=\"ST_GeomFromEWKT\"/>"
msgstr ""
