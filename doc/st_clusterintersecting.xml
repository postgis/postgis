<?xml version="1.0" encoding="UTF-8"?>
<refentry id="ST_ClusterIntersecting">
  <refnamediv>
    <refname>ST_ClusterIntersecting</refname>

    <refpurpose>Aggregate.  Returns an array with the connected components of a set of geometries</refpurpose>
  </refnamediv>

  <refsynopsisdiv>
    <funcsynopsis>
      <funcprototype>
        <funcdef>geometry[] <function>ST_ClusterIntersecting</function></funcdef>
        <paramdef><type>geometry </type> <parameter>g</parameter></paramdef>
      </funcprototype>
    </funcsynopsis>
  </refsynopsisdiv>

  <refsection>
    <title>Description</title>

    <para>ST_ClusterIntersecting is an aggregate function that returns an array of GeometryCollections, where each GeometryCollection represents an interconnected set of geometries.</para>

    <para>Availability: 2.2.0 - requires GEOS </para>
  </refsection>

  <refsection>
    <title>Examples</title>
    <programlisting>
WITH testdata AS
  (SELECT unnest(ARRAY['LINESTRING (0 0, 1 1)'::geometry,
		       'LINESTRING (5 5, 4 4)'::geometry,
		       'LINESTRING (6 6, 7 7)'::geometry,
		       'LINESTRING (0 0, -1 -1)'::geometry,
		       'POLYGON ((0 0, 4 0, 4 4, 0 4, 0 0))'::geometry]) AS geom)

SELECT ST_AsText(unnest(ST_ClusterIntersecting(geom))) FROM testdata;
    
--result

st_astext
---------
GEOMETRYCOLLECTION(LINESTRING(0 0,1 1),LINESTRING(5 5,4 4),LINESTRING(0 0,-1 -1),POLYGON((0 0,4 0,4 4,0 4,0 0)))
GEOMETRYCOLLECTION(LINESTRING(6 6,7 7))
    </programlisting>
  </refsection>

</refentry>
