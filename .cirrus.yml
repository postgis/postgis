task:
  #  only_if: $CIRRUS_BRANCH =~ 'pull/.*'
  name: FreeBSD
  alias: test-freebsd
  env:
    CIRRUS_CLONE_DEPTH: 1
    CCACHE_DIR: "/tmp/ccache_dir"
    NCPU: 8
    MAKEJOBS: "-j${NCPU}"
    CC: "ccache clang"
    CXX: "ccache clang++"
    CCACHE_MAXSIZE: 1
    CCACHE_COMPRESS: 1
    CCACHE_STATIC_PREFIX: "/usr/local"
    CCACHE_NOSTATS: 1
    CCACHE_TEMPDIR: "/tmp"
    BASEFS: "${CIRRUS_WORKING_DIR}/test_bulk"
  freebsd_cache:
    folder: ${CCACHE_DIR}
  pkg_bootstrap_script:
    - |
      sed -i.bak -e 's,pkg+http://pkg.FreeBSD.org/\${ABI}/quarterly,pkg+http://pkg.FreeBSD.org/\${ABI}/latest,' /etc/pkg/FreeBSD.conf
      ASSUME_ALWAYS_YES=yes pkg bootstrap -f
  pkg_cache:
    folder: /var/cache/pkg
    populate_script:
      pkg fetch -udy autoconf automake bison cunit docbook gdal geos gmake iconv json-c libtool libxml2 libxslt pcre2 pkgconf postgresql17-contrib postgresql17-server proj protobuf-c sfcgal
  install_pkgs_script:
    - |
      env IGNORE_OSVERSION=yes pkg update -f
      env IGNORE_OSVERSION=yes pkg install -y autoconf automake bison cunit docbook gdal geos gmake iconv json-c libtool libxml2 libxslt pcre2 pkgconf postgresql17-contrib postgresql17-server proj protobuf-c sfcgal
      projsync --system-directory --source-id us_noaa
      projsync --system-directory --source-id ch_swisstopo
  ccache_setup_script:
    - |
      env IGNORE_OSVERSION=yes pkg install -y ccache-static
      ccache --max-size=${CCACHE_MAXSIZE}
  patch_script:
    - |
      find . -name "*.pl" | xargs sed -i -r 's|/usr/bin/perl|/usr/bin/env perl|'
  build_script:
    - |
      ./autogen.sh
      ./configure PKG_CONFIG=/usr/local/bin/pkgconf CFLAGS="-isystem /usr/local/include -Wall -fno-omit-frame-pointer -Werror" LDFLAGS="-L/usr/local/lib" --with-libiconv-prefix=/usr/local --without-gui --with-topology --without-raster --with-sfcgal=/usr/local/bin/sfcgal-config --with-address-standardizer --with-protobuf
      service postgresql oneinitdb
      service postgresql onestart
      su postgres -c "createuser -s `whoami`"
      gmake ${MAKEJOBS} || { service postgresql onestop; exit 1; }
      gmake ${MAKEJOBS} install || { service postgresql onestop; exit 1; }
      ccache -s
  test_script:
    - |
      gmake ${MAKEJOBS} check RUNTESTFLAGS="-v --extension --dumprestore" || { service postgresql onestop; exit 1; }
      service postgresql onestop
  freebsd_instance:
    cpu: ${NCPU}
    memory: 24G
  matrix:
    - name: 14.2-RELEASE
      freebsd_instance:
        image_family: freebsd-14-2

task:
  name: macOS
  alias: test-macos
  macos_instance:
    image: ghcr.io/cirruslabs/macos-runner:sonoma

  env:
    CC: "ccache clang"
    CXX: "ccache clang++"
    CCACHE_DIR: "$HOME/.ccache"
    CCACHE_MAXSIZE: 1
    PG: "17"
    HOMEBREW_PREFIX: "/opt/homebrew"
    PATH: "${HOMEBREW_PREFIX}/opt/postgresql@${PG}/bin:${HOMEBREW_PREFIX}/bin:${HOMEBREW_PREFIX}/sbin:${HOMEBREW_PREFIX}/opt/ccache/libexec:$PATH"

  setup_script:
    - |
      brew update
      brew install ccache autoconf automake libtool pkg-config gdal geos icu4c json-c libpq libxml2 pcre2 proj protobuf-c sfcgal cunit docbook docbook-xsl postgresql@${PG} gettext
      brew link --force gettext
      ccache --max-size=$CCACHE_MAXSIZE
      sudo ln -sfn ${HOMEBREW_PREFIX}/opt/postgresql@${PG}/bin/postgres /usr/local/bin/postgres

  test_script:
    - |
      export PGCONFIG="${HOMEBREW_PREFIX}/opt/postgresql@${PG}/bin/pg_config"
      export CFLAGS="-I${HOMEBREW_PREFIX}/opt/gettext/include \
                     -I${HOMEBREW_PREFIX}/opt/postgresql@${PG}/include \
                     -I${HOMEBREW_PREFIX}/include -Wno-nullability-completeness"
      export LDFLAGS="-L${HOMEBREW_PREFIX}/opt/gettext/lib \
                      -L${HOMEBREW_PREFIX}/opt/postgresql@${PG}/lib"
      export CXXFLAGS="-std=c++17"

      ./autogen.sh
      ./configure --without-gui \
                  --without-interrupt-tests \
                  --with-topology \
                  --without-raster \
                  --with-sfcgal \
                  --with-address-standardizer \
                  --with-protobuf \
                  --with-pgconfig=${PGCONFIG}

      brew services start postgresql@${PG}
      make -j$(sysctl -n hw.logicalcpu) || { brew services stop postgresql@${PG}; exit 1; }
      make -j$(sysctl -n hw.logicalcpu) check || { brew services stop postgresql@${PG}; exit 1; }
      brew services stop postgresql@${PG}

  macos_cache:
    folders: ${CCACHE_DIR}

  upload_caches: macos
